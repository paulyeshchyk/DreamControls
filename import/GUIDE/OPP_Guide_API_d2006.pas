{*******************************************************}
{                                                       }
{ Import unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

Unit OPP_Guide_API_d2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Variants,
  OPP_Guide_API;
function ConvertTOPPGuideAPIContextStepResultToVariant(var R : TOPPGuideAPIContextStepResult) : OleVariant;
function ConvertVariantToTOPPGuideAPIContextStepResult(const V : OleVariant) : TOPPGuideAPIContextStepResult;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TOPPGuideAPIContextStepResult__Wrapper = class(TDCRecordWrapper)
private
fR : TOPPGuideAPIContextStepResult;
public
function GetRecordPtr : pointer; override;
published
procedure setstate(const val : TOPPGuideAPIContextStepState);
function getstate : TOPPGuideAPIContextStepState;
property state : TOPPGuideAPIContextStepState read getstate write setstate;
procedure setdescription(const val : AnsiString);
function getdescription : AnsiString;
property description : AnsiString read getdescription write setdescription;
procedure setvalue_str(const val : AnsiString);
function getvalue_str : AnsiString;
property value_str : AnsiString read getvalue_str write setvalue_str;
end;
function __TOPPGuideAPIContextStepResult__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TOPPGuideAPIContextStepResult__Wrapper.setstate(const val : TOPPGuideAPIContextStepState);
begin
TOPPGuideAPIContextStepResult(GetRecordPtr^).state := val;
end;
function __TOPPGuideAPIContextStepResult__Wrapper.getstate : TOPPGuideAPIContextStepState;
begin
result := TOPPGuideAPIContextStepResult(GetRecordPtr^).state;
end;
procedure __TOPPGuideAPIContextStepResult__Wrapper.setdescription(const val : AnsiString);
begin
TOPPGuideAPIContextStepResult(GetRecordPtr^).description := val;
end;
function __TOPPGuideAPIContextStepResult__Wrapper.getdescription : AnsiString;
begin
result := TOPPGuideAPIContextStepResult(GetRecordPtr^).description;
end;
procedure __TOPPGuideAPIContextStepResult__Wrapper.setvalue_str(const val : AnsiString);
begin
TOPPGuideAPIContextStepResult(GetRecordPtr^).value_str := val;
end;
function __TOPPGuideAPIContextStepResult__Wrapper.getvalue_str : AnsiString;
begin
result := TOPPGuideAPIContextStepResult(GetRecordPtr^).value_str;
end;
function _TOPPGuideAPIContextStepResult_ : IDispatch;
begin
  result := __TOPPGuideAPIContextStepResult__Wrapper.Create;
end;

type __TOPPGuideAPIContextStepResult__Wrapper__ = class(__TOPPGuideAPIContextStepResult__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TOPPGuideAPIContextStepResult__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTOPPGuideAPIContextStepResultToVariant(var R : TOPPGuideAPIContextStepResult) : OleVariant;
var
__rw : __TOPPGuideAPIContextStepResult__Wrapper__;
begin
__rw := __TOPPGuideAPIContextStepResult__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTOPPGuideAPIContextStepResult(const V : OleVariant) : TOPPGuideAPIContextStepResult;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TOPPGuideAPIContextStepResult((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..2] of string = (
'osIdle'
,'osRunning'
,'osError'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,osIdle));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,osRunning));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,osError));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
for i := 0 to 2 do
UnregisterConst(__ConstNames0[i], __RegisteredConstsList0[i]);
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..0] of string = (
'TOPPGuideAPIContextStepResult'
);

procedure __UnregisterProcs;
var i : integer;
begin
  for i := 0 to 0 do
    UnregisterProcedure(MethodNames[i] ,__RegisteredMethods[i]);
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_TOPPGuideAPIContextStepResult_)));
end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
