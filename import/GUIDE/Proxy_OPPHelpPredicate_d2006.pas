{*******************************************************}
{                                                       }
{ Import unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

Unit Proxy_OPPHelpPredicate_d2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  OPP_Help_API,
  Proxy_OPPHelpPredicate;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : String) of object;

_T1 = function : String of object;

_T2 = function : Integer of object;

_T3 = procedure (const p0 : Integer) of object;

_T4 = procedure (const p0 : String) of object;

_T5 = _T1;

_T6 = function : Boolean of object;

_T7 = function (p0 : TStream;
p1 : Boolean): Boolean of object;

_T8 = function (p0 : TStream): Boolean of object;

procedure __RegisterProps;
begin
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..0] of TClass = (
TProxy_OPPHelpPredicate
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
UnRegisterClassesInScript(ClassList);
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TProxy_OPPHelpPredicate,'SetValue',TypeInfo(_T0),[
TypeInfo(String)],Addr(TProxy_OPPHelpPredicate.SetValue));

RegRegisterMethod(TProxy_OPPHelpPredicate,'GetValue',TypeInfo(_T1),[TypeInfo(String)],Addr(TProxy_OPPHelpPredicate.GetValue));

RegRegisterMethod(TProxy_OPPHelpPredicate,'GetKeywordType',TypeInfo(_T2),[TypeInfo(Integer)],Addr(TProxy_OPPHelpPredicate.GetKeywordType));

RegRegisterMethod(TProxy_OPPHelpPredicate,'SetKeywordType',TypeInfo(_T3),[
TypeInfo(Integer)],Addr(TProxy_OPPHelpPredicate.SetKeywordType));

RegRegisterMethod(TProxy_OPPHelpPredicate,'SetFileName',TypeInfo(_T4),[
TypeInfo(String)],Addr(TProxy_OPPHelpPredicate.SetFileName));

RegRegisterMethod(TProxy_OPPHelpPredicate,'GetFileName',TypeInfo(_T5),[TypeInfo(String)],Addr(TProxy_OPPHelpPredicate.GetFileName));

RegRegisterMethod(TProxy_OPPHelpPredicate,'GetIsRunnable',TypeInfo(_T6),[TypeInfo(Boolean)],Addr(TProxy_OPPHelpPredicate.GetIsRunnable));

RegRegisterMethod(TProxy_OPPHelpPredicate,'ReadFromStream',TypeInfo(_T7),[
TypeInfo(TStream),
TypeInfo(Boolean),TypeInfo(Boolean)],Addr(TProxy_OPPHelpPredicate.ReadFromStream));

RegRegisterMethod(TProxy_OPPHelpPredicate,'WriteToStream',TypeInfo(_T8),[
TypeInfo(TStream),TypeInfo(Boolean)],Addr(TProxy_OPPHelpPredicate.WriteToStream));

end;
initialization
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
