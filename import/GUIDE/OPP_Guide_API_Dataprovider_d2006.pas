{ ******************************************************* }
{ }
{ Import unit generated by UNITIMPORTER program }
{ }
{ ******************************************************* }

Unit OPP_Guide_API_Dataprovider_d2006;

interface

{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}

uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  Controls,
  DBClient,
  OPP_Guide_API,
  OPP_Guide_API_Dataprovider;

implementation

{$IFDEF D3}
{$ELSE}

uses ole2;

type
  OleVariant = Variant;
{$ENDIF}

type
  _T0 = procedure of object;

  _T1 = function: TClientDataset of object;

function __DC__GetTOPPGuideAPIDataprovider__ClientDataset(Instance: TObject; Params: PVariantArgList): OleVariant;
begin
  result := TOPPGuideAPIDataprovider(Instance).ClientDataset;
end;

procedure __DC__SetTOPPGuideAPIDataprovider__ClientDataset(Instance: TObject; Params: PVariantArgList);
begin
  TOPPGuideAPIDataprovider(Instance).ClientDataset := OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
  RegisterProperty(TOPPGuideAPIDataprovider, 'ClientDataset', __DC__GetTOPPGuideAPIDataprovider__ClientDataset, __DC__SetTOPPGuideAPIDataprovider__ClientDataset);
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const
  ClassList: array [0 .. 0] of TClass = (TOPPGuideAPIDataprovider);

procedure __RegisterClasses;
begin
  RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
  UnRegisterClassesInScript(ClassList);
end;

var
  __RegisteredMethods: TList;

const
  MethodNames: array [0 .. 0] of string = ('Register');

procedure __UnregisterProcs;
var
  i: integer;
begin
  for i := 0 to 0 do
    UnregisterProcedure(MethodNames[i], __RegisteredMethods[i]);
  __RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
  RegisterProc(nil, MethodNames[0], mtProc, TypeInfo(_T0), NoParams, Addr(Register), cRegister);

  RegRegisterMethod(TOPPGuideAPIDataprovider, 'GetDataset', TypeInfo(_T1), [TypeInfo(TClientDataset)], Addr(TOPPGuideAPIDataprovider.GetDataset));

end;

initialization

__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization

__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;

end.
