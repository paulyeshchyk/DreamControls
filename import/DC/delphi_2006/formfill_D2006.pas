{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit formfill_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  Types,
  activex,
  dcscript,
  SysUtils,
  Windows,
  Controls,
  Graphics,
  Classes,
  Forms,
  Messages,
  dcsystem,
  dcconsts,
  dcdreamlib,
  FormFill;
function ConvertTRectToVariant(var R : TRect) : OleVariant;
function ConvertVariantToTRect(const V : OleVariant) : TRect;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TRect__Wrapper = class(TDCRecordWrapper)
private
fR : TRect;
public
function GetRecordPtr : pointer; override;
published
procedure setLeft(const val : Longint);
function getLeft : Longint;
property Left : Longint read getLeft write setLeft;
procedure setTop(const val : Longint);
function getTop : Longint;
property Top : Longint read getTop write setTop;
procedure setRight(const val : Longint);
function getRight : Longint;
property Right : Longint read getRight write setRight;
procedure setBottom(const val : Longint);
function getBottom : Longint;
property Bottom : Longint read getBottom write setBottom;
end;
type
_T0 = procedure (p0 : TDCFormFill) of object;

{_T1 = procedure (const p0 : String;
p1 : TFillTypeEvent) of object;}

_T2 = procedure (p0 : THandle;
p1 : THandle;
p2 : Integer;
const p3 : IDispatch) of object;

_T3 = procedure (p0 : TDCFormFill;
p1 : TColor;
p2 : TColor) of object;

function __TRect__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRect__Wrapper.setLeft(const val : Longint);
begin
TRect(GetRecordPtr^).Left := val;
end;
function __TRect__Wrapper.getLeft : Longint;
begin
result := TRect(GetRecordPtr^).Left;
end;
procedure __TRect__Wrapper.setTop(const val : Longint);
begin
TRect(GetRecordPtr^).Top := val;
end;
function __TRect__Wrapper.getTop : Longint;
begin
result := TRect(GetRecordPtr^).Top;
end;
procedure __TRect__Wrapper.setRight(const val : Longint);
begin
TRect(GetRecordPtr^).Right := val;
end;
function __TRect__Wrapper.getRight : Longint;
begin
result := TRect(GetRecordPtr^).Right;
end;
procedure __TRect__Wrapper.setBottom(const val : Longint);
begin
TRect(GetRecordPtr^).Bottom := val;
end;
function __TRect__Wrapper.getBottom : Longint;
begin
result := TRect(GetRecordPtr^).Bottom;
end;
procedure ____DoCloningFill__Wrapper(p0 : THandle;
p1 : THandle;
p2 : Integer;
const p3 : IDispatch);
var
__p3 : ^TRect;
__i3 : IDispatch;
begin
if p3 = nil then exit;
__p3 := (p3 as IDCRecordWrapper).GetRecordPtr;
DoCloningFill(p0,p1,p2,__p3^);
end;


type __TRect__Wrapper__ = class(__TRect__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRect__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRectToVariant(var R : TRect) : OleVariant;
var
__rw : __TRect__Wrapper__;
begin
__rw := __TRect__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRect(const V : OleVariant) : TRect;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRect((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

function __DC__GetFormFill__FillTypeList(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(FormFill.FillTypeList);
end;

procedure __DC__SetFormFill__FillTypeList(Instance : TObject; Params : PVariantArgList);
begin
TObject(FormFill.FillTypeList):=(VarToObject(OleVariant(Params^[0])));
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('FillTypeList',__DC__GetFormFill__FillTypeList,__DC__SetFormFill__FillTypeList));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

const __ConstNames0 : array[0..2] of string = (
'cOther'
,'cFront'
,'cBack'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,cOther));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,cFront));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,cBack));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..0] of TClass = (
TDCFormFill
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..2] of string = (
'FillBorders'
,'DoCloningFill'
,'PElPasoSub'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TDCFormFill)],Addr(FillBorders),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T2),[
TypeInfo(THandle),
TypeInfo(THandle),
TypeInfo(Integer),
TypeInfo(IDispatch)],Addr(____DoCloningFill__Wrapper),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T3),[
TypeInfo(TDCFormFill),
TypeInfo(TColor),
TypeInfo(TColor)],Addr(PElPasoSub),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'RegisterFillType',mtProc,TypeInfo(_T1),[
TypeInfo(String),
TypeInfo(TFillTypeEvent)],Addr(RegisterFillType),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
