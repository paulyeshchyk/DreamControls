{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IDSMTPSERVER_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  IdTCPClient,
  IdTCPServer,
  IdMessage,
  IdEMailAddress,
  IdCoderMIME,
  IdMessageClient,
  IdIOHandlerSocket,
  IdStack,
  IdSMTPServer;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure  of object;

_T1 = _T0;

_T2 = _T0;

_T3 = _T0;

_T4 = procedure (p0 : TIdSMTPMessages) of object;

procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..9] of string = (
'rmRaw'
,'rmMessage'
,'rmMessageParsed'
,'stFileStream'
,'stMemoryStream'
,'idSMTPNone'
,'idSMTPHelo'
,'idSMTPMail'
,'idSMTPRcpt'
,'idSMTPData'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,rmRaw));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,rmMessage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,rmMessageParsed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,stFileStream));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,stMemoryStream));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,idSMTPNone));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,idSMTPHelo));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,idSMTPMail));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,idSMTPRcpt));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,idSMTPData));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..5] of TClass = (
TIdSMTPDataReplies,
TIdSMTPGreeting,
TIdSMTPMessages,
TIdSMTPRcpReplies,
TIdSMTPServer,
TIdSMTPServerThread
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegisterProc(TIdSMTPDataReplies,'Create',mtConstructor,TypeInfo(_T0),NoParams,Addr(TIdSMTPDataReplies.Create),cRegister);

RegisterProc(TIdSMTPGreeting,'Create',mtConstructor,TypeInfo(_T1),NoParams,Addr(TIdSMTPGreeting.Create),cRegister);

RegisterProc(TIdSMTPMessages,'Create',mtConstructor,TypeInfo(_T2),NoParams,Addr(TIdSMTPMessages.Create),cRegister);

RegisterProc(TIdSMTPRcpReplies,'Create',mtConstructor,TypeInfo(_T3),NoParams,Addr(TIdSMTPRcpReplies.Create),cRegister);

RegRegisterMethod(TIdSMTPServer,'SetMessages',TypeInfo(_T4),[
TypeInfo(TIdSMTPMessages)],Addr(TIdSMTPServer.SetMessages));

end;
initialization
_mreg_0;
RegisterEvent(TypeInfo(TBasicHandler),[
TypeInfo(TIdCommand)]);

RegisterEvent(TypeInfo(THasAddress),[
TypeInfo(TIdCommand),
TypeInfo(Boolean),
TypeInfo(Boolean),
TypeInfo(string),
TypeInfo(string)]);

RegisterEvent(TypeInfo(THasAddress2),[
TypeInfo(TIdCommand),
TypeInfo(Boolean),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TOnReceiveMessage),[
TypeInfo(TIdCommand),
TypeInfo(TIdMessage),
TypeInfo(TIdEMailAddressList),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TOnReceiveRaw),[
TypeInfo(TIdCommand),
TypeInfo(TStream),
TypeInfo(TIdEMailAddressList),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TUserHandler),[
TypeInfo(TIdCommand),
TypeInfo(Boolean),
TypeInfo(string),
TypeInfo(string)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
