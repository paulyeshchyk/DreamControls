{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit SOCKAPPNOTIFY_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  SysUtils,
  IdTCPClient,
  idTCPConnection,
  SockTransport,
  IndySockTransport,
  HTTPApp,
  IdUDPServer,
  IdSocketHandle,
  IdUDPClient,
  SyncObjs,
  Contnrs,
  SockAppNotify;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : Integer) of object;

_T1 = function (p0 : string): Integer of object;

_T2 = procedure  of object;

_T3 = procedure (p0 : Integer;
const p1 : string;
const p2 : string) of object;

_T4 = _T2;

_T5 = _T2;

function __DC__GetTRunningWebAppListener__Connection(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TRunningWebAppListener(Instance).Connection);
end;

function __DC__GetTRunningWebAppListener__Active(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TRunningWebAppListener(Instance).Active;
end;

procedure __DC__SetTRunningWebAppListener__Active(Instance : TObject; Params : PVariantArgList);
begin
TRunningWebAppListener(Instance).Active:=OleVariant(Params^[0]);
end;

function __DC__GetTRunningWebAppListener__Port(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TRunningWebAppListener(Instance).Port;
end;

procedure __DC__SetTRunningWebAppListener__Port(Instance : TObject; Params : PVariantArgList);
begin
TRunningWebAppListener(Instance).Port:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TRunningWebAppListener,'Connection',__DC__GetTRunningWebAppListener__Connection,nil);
RegisterProperty(TRunningWebAppListener,'Active',__DC__GetTRunningWebAppListener__Active,__DC__SetTRunningWebAppListener__Active);
RegisterProperty(TRunningWebAppListener,'Port',__DC__GetTRunningWebAppListener__Port,__DC__SetTRunningWebAppListener__Port);
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..2] of TClass = (
TRunningWebAppListener,
TRunningWebAppNotifier,
TWebAppInfo
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TRunningWebAppListener,'RemovePort',TypeInfo(_T0),[
TypeInfo(Integer)],Addr(TRunningWebAppListener.RemovePort));

RegRegisterMethod(TRunningWebAppListener,'GetPortOfFileName',TypeInfo(_T1),[
TypeInfo(string),TypeInfo(Integer)],Addr(TRunningWebAppListener.GetPortOfFileName));

RegisterProc(TRunningWebAppListener,'Create',mtConstructor,TypeInfo(_T2),NoParams,Addr(TRunningWebAppListener.Create),cRegister);

RegisterProc(TRunningWebAppNotifier,'Create',mtConstructor,TypeInfo(_T3),[
TypeInfo(Integer),
TypeInfo(string),
TypeInfo(string)],Addr(TRunningWebAppNotifier.Create),cRegister);

RegRegisterMethod(TRunningWebAppNotifier,'Register',TypeInfo(_T4),NoParams,Addr(TRunningWebAppNotifier.Register));

RegRegisterMethod(TRunningWebAppNotifier,'Unregister',TypeInfo(_T5),NoParams,Addr(TRunningWebAppNotifier.Unregister));

end;
initialization
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
