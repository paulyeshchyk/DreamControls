{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit SOCKAPPREG_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Registry,
  IniFiles,
  Contnrs,
  SockAppReg;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : TWebAppRegList) of object;

_T1 = procedure (const p0 : string;
const p1 : string) of object;

_T2 = procedure (const p0 : string) of object;

_T3 = function (const p0 : string): string of object;

_T4 = function (p0 : Boolean): TCustomIniFile of object;

function ____CreateRegistry__Wrapper(cArgs : integer; pArgs : PArgList) : OleVariant;
begin
case cArgs of
0:
begin
result := VarFromObject(CreateRegistry);
end;
1:
begin
result := VarFromObject(CreateRegistry(OleVariant(pargs^[0])));
end;
end
end;

function __DC__GetTWebAppRegInfo__FileName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebAppRegInfo(Instance).FileName;
end;

function __DC__GetTWebAppRegInfo__ProgID(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebAppRegInfo(Instance).ProgID;
end;

function __DC__GetTWebAppRegList__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebAppRegList(Instance).Items[OleVariant(Params^[0])]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TWebAppRegInfo,'FileName',__DC__GetTWebAppRegInfo__FileName,nil);
RegisterProperty(TWebAppRegInfo,'ProgID',__DC__GetTWebAppRegInfo__ProgID,nil);
RegisterIndexedProperty(TWebAppRegList,'Items',1,True,__DC__GetTWebAppRegList__Items,nil);
end;

const __ConstNames0 : array[0..0] of string = (
'sUDPPort'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,sUDPPort));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..1] of TClass = (
TWebAppRegInfo,
TWebAppRegList
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..4] of string = (
'GetRegisteredWebApps'
,'RegisterWebApp'
,'UnregisterWebApp'
,'FindRegisteredWebApp'
,'CreateRegistry'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TWebAppRegList)],Addr(GetRegisteredWebApps),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(string),
TypeInfo(string)],Addr(RegisterWebApp),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(string)],Addr(UnregisterWebApp),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),[
TypeInfo(string),TypeInfo(string)],Addr(FindRegisteredWebApp),cRegister);

RegisterProc(nil,MethodNames[4],mtScriptProc,TypeInfo(_T4),[
TypeInfo(Boolean),TypeInfo(TCustomIniFile)],Addr(____CreateRegistry__Wrapper),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
