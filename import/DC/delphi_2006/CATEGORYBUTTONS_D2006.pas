{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit CATEGORYBUTTONS_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  Types,
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  SysUtils,
  Classes,
  Controls,
  ImgList,
  Forms,
  Messages,
  Graphics,
  StdCtrls,
  GraphUtil,
  ActnList,
  CategoryButtons;
function ConvertTRectToVariant(var R : TRect) : OleVariant;
function ConvertVariantToTRect(const V : OleVariant) : TRect;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TRect__Wrapper = class(TDCRecordWrapper)
private
fR : TRect;
public
function GetRecordPtr : pointer; override;
published
procedure setLeft(const val : Longint);
function getLeft : Longint;
property Left : Longint read getLeft write setLeft;
procedure setTop(const val : Longint);
function getTop : Longint;
property Top : Longint read getTop write setTop;
procedure setRight(const val : Longint);
function getRight : Longint;
property Right : Longint read getRight write setRight;
procedure setBottom(const val : Longint);
function getBottom : Longint;
property Bottom : Longint read getBottom write setBottom;
end;
type __TCategoryButtons__ = class(TCategoryButtons);
type
_T0 = procedure (p0 : TObject;
p1 : Boolean) of object;

_T1 = function : TComponent of object;

{_T2 = function : TButtonItemActionLinkClass of object;}

_T3 = procedure  of object;

_T4 = procedure (const p0 : TCategoryButtons) of object;

_T5 = function : TButtonCategory of object;

_T6 = function (p0 : TButtonCategory;
p1 : Integer): TButtonCategory of object;

_T7 = function (p0 : Integer): TButtonCategory of object;

_T8 = function (const p0 : string): Integer of object;

_T9 = _T3;

_T10 = _T8;

_T11 = procedure (const p0 : TButtonCategory) of object;

_T12 = function : TButtonItem of object;

_T13 = function (p0 : TButtonItem;
p1 : Integer): TButtonItem of object;

_T14 = function (p0 : Integer): TButtonItem of object;

_T15 = function (var p0 : string): Boolean of object;

_T16 = procedure (p0 : Boolean;
p1 : Integer) of object;

_T17 = procedure (const p0 : TButtonItem;
const p1 : TButtonCategory;
const p2 : TButtonItem) of object;

_T18 = _T3;

_T19 = _T17;

_T20 = procedure (const p0 : TButtonCategory;
const p1 : TButtonCategory) of object;

_T21 = procedure (const p0 : TButtonItem;
p1 : TCanvas;
const p2 : IDispatch;
p3 : TButtonDrawState) of object;

_T22 = procedure (const p0 : TButtonItem) of object;

_T23 = _T22;

_T24 = function : Boolean of object;

{_T25 = function : TButtonCategoriesClass of object;}

{_T26 = function : TButtonCategoryClass of object;}

{_T27 = function : TButtonItemClass of object;}

_T28 = _T3;

_T29 = function (const p0 : TButtonItem): IDispatch of object;

_T30 = function (const p0 : TButtonCategory): IDispatch of object;

_T31 = function (p0 : Integer;
p1 : Integer;
p2 : TButtonCategory): TButtonItem of object;

_T32 = function (p0 : Integer;
p1 : Integer): TButtonCategory of object;

_T33 = _T3;

_T34 = _T22;

_T35 = procedure (p0 : TButtonItem;
p1 : TButtonCategory) of object;

_T36 = procedure (p0 : Integer;
p1 : Integer;
var p2 : TButtonItem;
var p3 : TButtonCategory) of object;

_T37 = _T22;

_T38 = _T3;

function __TRect__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRect__Wrapper.setLeft(const val : Longint);
begin
TRect(GetRecordPtr^).Left := val;
end;
function __TRect__Wrapper.getLeft : Longint;
begin
result := TRect(GetRecordPtr^).Left;
end;
procedure __TRect__Wrapper.setTop(const val : Longint);
begin
TRect(GetRecordPtr^).Top := val;
end;
function __TRect__Wrapper.getTop : Longint;
begin
result := TRect(GetRecordPtr^).Top;
end;
procedure __TRect__Wrapper.setRight(const val : Longint);
begin
TRect(GetRecordPtr^).Right := val;
end;
function __TRect__Wrapper.getRight : Longint;
begin
result := TRect(GetRecordPtr^).Right;
end;
procedure __TRect__Wrapper.setBottom(const val : Longint);
begin
TRect(GetRecordPtr^).Bottom := val;
end;
function __TRect__Wrapper.getBottom : Longint;
begin
result := TRect(GetRecordPtr^).Bottom;
end;
procedure __TCategoryButtons__DrawButton__Wrapper(__Instance : TCategoryButtons;
const p0 : TButtonItem;
p1 : TCanvas;
const p2 : IDispatch;
p3 : TButtonDrawState);
var
__p2 : ^TRect;
__i2 : IDispatch;
begin
if p2 = nil then exit;
__p2 := (p2 as IDCRecordWrapper).GetRecordPtr;
__TCategoryButtons__(__Instance).DrawButton(p0,p1,__p2^,p3);
end;

function __TCategoryButtons__GetButtonRect__Wrapper(__Instance : TCategoryButtons;
const p0 : TButtonItem): IDispatch;
var
__result : TRect;
__wrapper : __TRect__Wrapper;
begin
__result := TCategoryButtons(__Instance).GetButtonRect(p0);
__wrapper := __TRect__Wrapper.Create;
__wrapper.fR := __result;
result := IDispatch(__wrapper);
end;

function __TCategoryButtons__GetCategoryRect__Wrapper(__Instance : TCategoryButtons;
const p0 : TButtonCategory): IDispatch;
var
__result : TRect;
__wrapper : __TRect__Wrapper;
begin
__result := TCategoryButtons(__Instance).GetCategoryRect(p0);
__wrapper := __TRect__Wrapper.Create;
__wrapper.fR := __result;
result := IDispatch(__wrapper);
end;

function __TCategoryButtons__GetButtonAt__Wrapper(__Instance : TObject; cArgs : integer; pArgs : PArgList) : OleVariant;
begin
case cArgs of
2:
begin
result := VarFromObject(TCategoryButtons(__Instance).GetButtonAt(OleVariant(pargs^[1]),OleVariant(pargs^[0])));
end;
3:
begin
result := VarFromObject(TCategoryButtons(__Instance).GetButtonAt(OleVariant(pargs^[2]),OleVariant(pargs^[1]),TButtonCategory(VarToObject(OleVariant(pargs^[0])))));
end;
end
end;


type __TRect__Wrapper__ = class(__TRect__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRect__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRectToVariant(var R : TRect) : OleVariant;
var
__rw : __TRect__Wrapper__;
begin
__rw := __TRect__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRect(const V : OleVariant) : TRect;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRect((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
function __DC__GetTBaseButtonItem__Data(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := PointerToVariant(TBaseButtonItem(Instance).Data);
end;

procedure __DC__SetTBaseButtonItem__Data(Instance : TObject; Params : PVariantArgList);
begin
TBaseButtonItem(Instance).Data:=VarToPointer(OleVariant(Params^[0]));
end;

function __DC__GetTButtonCategories__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TButtonCategories(Instance).Items[OleVariant(Params^[0])]);
end;

procedure __DC__SetTButtonCategories__Items(Instance : TObject; Params : PVariantArgList);
begin
TButtonCategories(Instance).Items[OleVariant(Params^[1])]:=TButtonCategory(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTButtonCategories__ButtonGroup(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TButtonCategories(Instance).ButtonGroup);
end;

function __DC__GetTButtonCategory__Categories(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TButtonCategory(Instance).Categories);
end;

function __DC__GetTButtonCategory__Data(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := PointerToVariant(TButtonCategory(Instance).Data);
end;

procedure __DC__SetTButtonCategory__Data(Instance : TObject; Params : PVariantArgList);
begin
TButtonCategory(Instance).Data:=VarToPointer(OleVariant(Params^[0]));
end;

function __DC__GetTButtonCollection__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TButtonCollection(Instance).Items[OleVariant(Params^[0])]);
end;

procedure __DC__SetTButtonCollection__Items(Instance : TObject; Params : PVariantArgList);
begin
TButtonCollection(Instance).Items[OleVariant(Params^[1])]:=TButtonItem(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTButtonCollection__Category(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TButtonCollection(Instance).Category);
end;

function __DC__GetTButtonItem__Category(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TButtonItem(Instance).Category);
end;

function __DC__GetTCategoryButtons__DragButton(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCategoryButtons(Instance).DragButton);
end;

procedure __DC__SetTCategoryButtons__DragButton(Instance : TObject; Params : PVariantArgList);
begin
TCategoryButtons(Instance).DragButton:=TButtonItem(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCategoryButtons__DragCategory(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCategoryButtons(Instance).DragCategory);
end;

procedure __DC__SetTCategoryButtons__DragCategory(Instance : TObject; Params : PVariantArgList);
begin
TCategoryButtons(Instance).DragCategory:=TButtonCategory(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCategoryButtons__DragImageList(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCategoryButtons(Instance).DragImageList);
end;

function __DC__GetTCategoryButtons__SelectedItem(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCategoryButtons(Instance).SelectedItem);
end;

procedure __DC__SetTCategoryButtons__SelectedItem(Instance : TObject; Params : PVariantArgList);
begin
TCategoryButtons(Instance).SelectedItem:=TButtonItem(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCategoryButtons__FocusedItem(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCategoryButtons(Instance).FocusedItem);
end;

procedure __DC__SetTCategoryButtons__FocusedItem(Instance : TObject; Params : PVariantArgList);
begin
TCategoryButtons(Instance).FocusedItem:=TButtonItem(VarToObject(OleVariant(Params^[0])));
end;

procedure __RegisterProps;
begin
RegisterProperty(TBaseButtonItem,'Data',__DC__GetTBaseButtonItem__Data,__DC__SetTBaseButtonItem__Data);
RegisterIndexedProperty(TButtonCategories,'Items',1,True,__DC__GetTButtonCategories__Items,__DC__SetTButtonCategories__Items);
RegisterProperty(TButtonCategories,'ButtonGroup',__DC__GetTButtonCategories__ButtonGroup,nil);
RegisterProperty(TButtonCategory,'Categories',__DC__GetTButtonCategory__Categories,nil);
RegisterProperty(TButtonCategory,'Data',__DC__GetTButtonCategory__Data,__DC__SetTButtonCategory__Data);
RegisterIndexedProperty(TButtonCollection,'Items',1,True,__DC__GetTButtonCollection__Items,__DC__SetTButtonCollection__Items);
RegisterProperty(TButtonCollection,'Category',__DC__GetTButtonCollection__Category,nil);
RegisterProperty(TButtonItem,'Category',__DC__GetTButtonItem__Category,nil);
RegisterProperty(TCategoryButtons,'DragButton',__DC__GetTCategoryButtons__DragButton,__DC__SetTCategoryButtons__DragButton);
RegisterProperty(TCategoryButtons,'DragCategory',__DC__GetTCategoryButtons__DragCategory,__DC__SetTCategoryButtons__DragCategory);
RegisterProperty(TCategoryButtons,'DragImageList',__DC__GetTCategoryButtons__DragImageList,nil);
RegisterProperty(TCategoryButtons,'SelectedItem',__DC__GetTCategoryButtons__SelectedItem,__DC__SetTCategoryButtons__SelectedItem);
RegisterProperty(TCategoryButtons,'FocusedItem',__DC__GetTCategoryButtons__FocusedItem,__DC__SetTCategoryButtons__FocusedItem);
end;

const __ConstNames0 : array[0..20] of string = (
'crDragCopy'
,'bdsSelected'
,'bdsHot'
,'bdsFocused'
,'bdsDown'
,'bdsDragged'
,'bdsInsertLeft'
,'bdsInsertTop'
,'bdsInsertRight'
,'bdsInsertBottom'
,'boAllowReorder'
,'boAllowCopyingButtons'
,'boFullSize'
,'boGradientFill'
,'boShowCaptions'
,'boVerticalCategoryCaptions'
,'boBoldCaptions'
,'boUsePlusMinus'
,'boCaptionOnlyBorder'
,'cbfVertical'
,'cbfHorizontal'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,crDragCopy));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,bdsSelected));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,bdsHot));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,bdsFocused));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,bdsDown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,bdsDragged));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,bdsInsertLeft));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,bdsInsertTop));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,bdsInsertRight));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,bdsInsertBottom));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,boAllowReorder));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,boAllowCopyingButtons));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,boFullSize));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,boGradientFill));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,boShowCaptions));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,boVerticalCategoryCaptions));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,boBoldCaptions));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,boUsePlusMinus));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,boCaptionOnlyBorder));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,cbfVertical));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,cbfHorizontal));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..6] of TClass = (
TBaseButtonItem,
TButtonCategories,
TButtonCategory,
TButtonCollection,
TButtonItem,
TButtonItemActionLink,
TCategoryButtons
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
//RegRegisterMethod(TBaseButtonItem,'ActionChange',TypeInfo(_T0),[TypeInfo(TObject),TypeInfo(Boolean)], pointer(32));
RegRegisterMethod(TBaseButtonItem,'ActionChange',TypeInfo(_T0),[TypeInfo(TObject),TypeInfo(Boolean)],  getVMTProcAddr('TBaseButtonItem','ActionChange',32));


//RegRegisterMethod(TBaseButtonItem,'GetNotifyTarget',TypeInfo(_T1),[TypeInfo(TComponent)], pointer(36));
RegRegisterMethod(TBaseButtonItem,'GetNotifyTarget',TypeInfo(_T1),[TypeInfo(TComponent)],  getVMTProcAddr('TBaseButtonItem','GetNotifyTarget',36));


//RegRegisterMethod(TBaseButtonItem,'ScrollIntoView',TypeInfo(_T3),NoParams, pointer(44));
RegRegisterMethod(TBaseButtonItem,'ScrollIntoView',TypeInfo(_T3),NoParams,  getVMTProcAddr('TBaseButtonItem','ScrollIntoView',44));


RegisterProc(TButtonCategories,'Create',mtConstructor,TypeInfo(_T4),[
TypeInfo(TCategoryButtons)],Addr(TButtonCategories.Create),cRegister);

RegRegisterMethod(TButtonCategories,'Add',TypeInfo(_T5),[TypeInfo(TButtonCategory)],Addr(TButtonCategories.Add));

RegRegisterMethod(TButtonCategories,'AddItem',TypeInfo(_T6),[
TypeInfo(TButtonCategory),
TypeInfo(Integer),TypeInfo(TButtonCategory)],Addr(TButtonCategories.AddItem));

RegRegisterMethod(TButtonCategories,'Insert',TypeInfo(_T7),[
TypeInfo(Integer),TypeInfo(TButtonCategory)],Addr(TButtonCategories.Insert));

RegRegisterMethod(TButtonCategories,'IndexOf',TypeInfo(_T8),[
TypeInfo(string),TypeInfo(Integer)],Addr(TButtonCategories.IndexOf));

RegRegisterMethod(TButtonCategory,'ScrollIntoView',TypeInfo(_T9),NoParams,Addr(TButtonCategory.ScrollIntoView));

RegRegisterMethod(TButtonCategory,'IndexOf',TypeInfo(_T10),[
TypeInfo(string),TypeInfo(Integer)],Addr(TButtonCategory.IndexOf));

RegisterProc(TButtonCollection,'Create',mtConstructor,TypeInfo(_T11),[
TypeInfo(TButtonCategory)],Addr(TButtonCollection.Create),cRegister);

RegRegisterMethod(TButtonCollection,'Add',TypeInfo(_T12),[TypeInfo(TButtonItem)],Addr(TButtonCollection.Add));

RegRegisterMethod(TButtonCollection,'AddItem',TypeInfo(_T13),[
TypeInfo(TButtonItem),
TypeInfo(Integer),TypeInfo(TButtonItem)],Addr(TButtonCollection.AddItem));

RegRegisterMethod(TButtonCollection,'Insert',TypeInfo(_T14),[
TypeInfo(Integer),TypeInfo(TButtonItem)],Addr(TButtonCollection.Insert));

//RegRegisterMethod(TButtonItemActionLink,'DoShowHint',TypeInfo(_T15),[TypeInfo(string),TypeInfo(Boolean)], pointer(120));
RegRegisterMethod(TButtonItemActionLink,'DoShowHint',TypeInfo(_T15),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TButtonItemActionLink','DoShowHint',120));


//RegRegisterMethod(TCategoryButtons,'DoBeginDrag',TypeInfo(_T16),[TypeInfo(Boolean),TypeInfo(Integer)], pointer(220));
RegRegisterMethod(TCategoryButtons,'DoBeginDrag',TypeInfo(_T16),[TypeInfo(Boolean),TypeInfo(Integer)],  getVMTProcAddr('TCategoryButtons','DoBeginDrag',220));


RegRegisterMethod(TCategoryButtons,'DoCopyButton',TypeInfo(_T17),[
TypeInfo(TButtonItem),
TypeInfo(TButtonCategory),
TypeInfo(TButtonItem)], pointer(MinVMTOffset - 79));

RegRegisterMethod(TCategoryButtons,'DoHotButton',TypeInfo(_T18),NoParams, pointer(MinVMTOffset - 80));

RegRegisterMethod(TCategoryButtons,'DoReorderButton',TypeInfo(_T19),[
TypeInfo(TButtonItem),
TypeInfo(TButtonCategory),
TypeInfo(TButtonItem)], pointer(MinVMTOffset - 81));

RegRegisterMethod(TCategoryButtons,'DoReorderCategory',TypeInfo(_T20),[
TypeInfo(TButtonCategory),
TypeInfo(TButtonCategory)], pointer(MinVMTOffset - 82));

//RegRegisterMethod(TCategoryButtons,'DrawButton',TypeInfo(_T21),[TypeInfo(TButtonItem),TypeInfo(TCanvas),TypeInfo(IDispatch),TypeInfo(TButtonDrawState)], pointer(224));
RegRegisterMethod(TCategoryButtons,'DrawButton',TypeInfo(_T21),[TypeInfo(TButtonItem),TypeInfo(TCanvas),TypeInfo(IDispatch),TypeInfo(TButtonDrawState)],  getVMTProcAddr('TCategoryButtons','DrawButton',224));


RegRegisterMethod(TCategoryButtons,'DoItemClicked',TypeInfo(_T22),[
TypeInfo(TButtonItem)], pointer(MinVMTOffset - 83));

RegRegisterMethod(TCategoryButtons,'DoSelectedItemChanged',TypeInfo(_T23),[
TypeInfo(TButtonItem)], pointer(MinVMTOffset - 84));

RegRegisterMethod(TCategoryButtons,'GetAllowReorder',TypeInfo(_T24),[TypeInfo(Boolean)], pointer(MinVMTOffset - 85));

RegRegisterMethod(TCategoryButtons,'GenerateDragImage',TypeInfo(_T28),NoParams,Addr(TCategoryButtons.GenerateDragImage));

RegRegisterMethod(TCategoryButtons,'GetButtonRect',TypeInfo(_T29),[
TypeInfo(TButtonItem),TypeInfo(IDispatch)],Addr(__TCategoryButtons__GetButtonRect__Wrapper));

RegRegisterMethod(TCategoryButtons,'GetCategoryRect',TypeInfo(_T30),[
TypeInfo(TButtonCategory),TypeInfo(IDispatch)],Addr(__TCategoryButtons__GetCategoryRect__Wrapper));

RegisterProc(TCategoryButtons,'GetButtonAt',mtScriptMethod,TypeInfo(_T31),[
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(TButtonCategory),TypeInfo(TButtonItem)],Addr(__TCategoryButtons__GetButtonAt__Wrapper),cRegister);

RegRegisterMethod(TCategoryButtons,'GetCategoryAt',TypeInfo(_T32),[
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(TButtonCategory)],Addr(TCategoryButtons.GetCategoryAt));

RegRegisterMethod(TCategoryButtons,'RemoveInsertionPoints',TypeInfo(_T33),NoParams,Addr(TCategoryButtons.RemoveInsertionPoints));

RegRegisterMethod(TCategoryButtons,'ScrollIntoView',TypeInfo(_T34),[
TypeInfo(TButtonItem)],Addr(TCategoryButtons.ScrollIntoView));

RegRegisterMethod(TCategoryButtons,'SetInsertionButton',TypeInfo(_T35),[
TypeInfo(TButtonItem),
TypeInfo(TButtonCategory)],Addr(TCategoryButtons.SetInsertionButton));

RegRegisterMethod(TCategoryButtons,'GetTargetAt',TypeInfo(_T36),[
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(TButtonItem),
TypeInfo(TButtonCategory)],Addr(TCategoryButtons.GetTargetAt));

RegRegisterMethod(TCategoryButtons,'UpdateButton',TypeInfo(_T37),[
TypeInfo(TButtonItem)],Addr(TCategoryButtons.UpdateButton));

RegRegisterMethod(TCategoryButtons,'UpdateAllButtons',TypeInfo(_T38),NoParams,Addr(TCategoryButtons.UpdateAllButtons));

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
_mreg_0;
{RegRegisterMethod(TBaseButtonItem,'GetActionLinkClass',TypeInfo(_T2),[TypeInfo(TButtonItemActionLinkClass)], pointer(40))}

{RegRegisterMethod(TCategoryButtons,'GetButtonCategoriesClass',TypeInfo(_T25),[TypeInfo(TButtonCategoriesClass)], pointer(228))}

{RegRegisterMethod(TCategoryButtons,'GetButtonCategoryClass',TypeInfo(_T26),[TypeInfo(TButtonCategoryClass)], pointer(232))}

{RegRegisterMethod(TCategoryButtons,'GetButtonItemClass',TypeInfo(_T27),[TypeInfo(TButtonItemClass)], pointer(236))}

RegisterEvent(TypeInfo(TCatButtonCopyEvent),[
TypeInfo(TObject),
TypeInfo(TButtonItem),
TypeInfo(TButtonItem)]);

{RegisterEvent(TypeInfo(TCatButtonDrawEvent),[
TypeInfo(TObject),
TypeInfo(TButtonItem),
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(TButtonDrawState)]);}

{RegisterEvent(TypeInfo(TCatButtonDrawIconEvent),[
TypeInfo(TObject),
TypeInfo(TButtonItem),
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(TButtonDrawState),
TypeInfo(Integer)]);}

RegisterEvent(TypeInfo(TCatButtonEvent),[
TypeInfo(TObject),
TypeInfo(TButtonItem)]);

RegisterEvent(TypeInfo(TCatButtonGetHint),[
TypeInfo(TObject),
TypeInfo(TButtonItem),
TypeInfo(TButtonCategory),
TypeInfo(string),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TCatButtonReorderEvent),[
TypeInfo(TObject),
TypeInfo(TButtonItem),
TypeInfo(TButtonCategory),
TypeInfo(TButtonCategory)]);

RegisterEvent(TypeInfo(TCategoryCollapseEvent),[
TypeInfo(TObject),
TypeInfo(TButtonCategory)]);

RegisterEvent(TypeInfo(TCategoryReorderEvent),[
TypeInfo(TObject),
TypeInfo(TButtonCategory),
TypeInfo(TButtonCategory)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
