{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit CPL_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  Types,
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Messages,
  Windows,
  Cpl;
function ConvertCPLINFOToVariant(var R : CPLINFO) : OleVariant;
function ConvertVariantToCPLINFO(const V : OleVariant) : CPLINFO;
function ConvertNEWCPLINFOToVariant(var R : NEWCPLINFO) : OleVariant;
function ConvertVariantToNEWCPLINFO(const V : OleVariant) : NEWCPLINFO;
function ConvertNEWCPLINFOAToVariant(var R : NEWCPLINFOA) : OleVariant;
function ConvertVariantToNEWCPLINFOA(const V : OleVariant) : NEWCPLINFOA;
function ConvertNEWCPLINFOWToVariant(var R : NEWCPLINFOW) : OleVariant;
function ConvertVariantToNEWCPLINFOW(const V : OleVariant) : NEWCPLINFOW;
function ConverttagCPLINFOToVariant(var R : tagCPLINFO) : OleVariant;
function ConvertVariantTotagCPLINFO(const V : OleVariant) : tagCPLINFO;
function ConverttagNEWCPLINFOToVariant(var R : tagNEWCPLINFO) : OleVariant;
function ConvertVariantTotagNEWCPLINFO(const V : OleVariant) : tagNEWCPLINFO;
function ConverttagNEWCPLINFOAToVariant(var R : tagNEWCPLINFOA) : OleVariant;
function ConvertVariantTotagNEWCPLINFOA(const V : OleVariant) : tagNEWCPLINFOA;
function ConverttagNEWCPLINFOWToVariant(var R : tagNEWCPLINFOW) : OleVariant;
function ConvertVariantTotagNEWCPLINFOW(const V : OleVariant) : tagNEWCPLINFOW;
function ConvertTCPLInfoToVariant(var R : TCPLInfo) : OleVariant;
function ConvertVariantToTCPLInfo(const V : OleVariant) : TCPLInfo;
function ConvertTNewCPLInfoToVariant(var R : TNewCPLInfo) : OleVariant;
function ConvertVariantToTNewCPLInfo(const V : OleVariant) : TNewCPLInfo;
function ConvertTNewCPLInfoAToVariant(var R : TNewCPLInfoA) : OleVariant;
function ConvertVariantToTNewCPLInfoA(const V : OleVariant) : TNewCPLInfoA;
function ConvertTNewCPLInfoWToVariant(var R : TNewCPLInfoW) : OleVariant;
function ConvertVariantToTNewCPLInfoW(const V : OleVariant) : TNewCPLInfoW;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __CPLINFO__Wrapper = class(TDCRecordWrapper)
private
fR : CPLINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setidIcon(const val : Integer);
function getidIcon : Integer;
property idIcon : Integer read getidIcon write setidIcon;
procedure setidName(const val : Integer);
function getidName : Integer;
property idName : Integer read getidName write setidName;
procedure setidInfo(const val : Integer);
function getidInfo : Integer;
property idInfo : Integer read getidInfo write setidInfo;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __NEWCPLINFO__Wrapper = class(TDCRecordWrapper)
private
fR : NEWCPLINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwHelpContext(const val : DWORD);
function getdwHelpContext : DWORD;
property dwHelpContext : DWORD read getdwHelpContext write setdwHelpContext;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __NEWCPLINFOA__Wrapper = class(TDCRecordWrapper)
private
fR : NEWCPLINFOA;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwHelpContext(const val : DWORD);
function getdwHelpContext : DWORD;
property dwHelpContext : DWORD read getdwHelpContext write setdwHelpContext;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __NEWCPLINFOW__Wrapper = class(TDCRecordWrapper)
private
fR : NEWCPLINFOW;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwHelpContext(const val : DWORD);
function getdwHelpContext : DWORD;
property dwHelpContext : DWORD read getdwHelpContext write setdwHelpContext;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __tagCPLINFO__Wrapper = class(TDCRecordWrapper)
private
fR : tagCPLINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setidIcon(const val : Integer);
function getidIcon : Integer;
property idIcon : Integer read getidIcon write setidIcon;
procedure setidName(const val : Integer);
function getidName : Integer;
property idName : Integer read getidName write setidName;
procedure setidInfo(const val : Integer);
function getidInfo : Integer;
property idInfo : Integer read getidInfo write setidInfo;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __tagNEWCPLINFO__Wrapper = class(TDCRecordWrapper)
private
fR : tagNEWCPLINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwHelpContext(const val : DWORD);
function getdwHelpContext : DWORD;
property dwHelpContext : DWORD read getdwHelpContext write setdwHelpContext;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __tagNEWCPLINFOA__Wrapper = class(TDCRecordWrapper)
private
fR : tagNEWCPLINFOA;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwHelpContext(const val : DWORD);
function getdwHelpContext : DWORD;
property dwHelpContext : DWORD read getdwHelpContext write setdwHelpContext;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __tagNEWCPLINFOW__Wrapper = class(TDCRecordWrapper)
private
fR : tagNEWCPLINFOW;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwHelpContext(const val : DWORD);
function getdwHelpContext : DWORD;
property dwHelpContext : DWORD read getdwHelpContext write setdwHelpContext;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __TCPLInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TCPLInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setidIcon(const val : Integer);
function getidIcon : Integer;
property idIcon : Integer read getidIcon write setidIcon;
procedure setidName(const val : Integer);
function getidName : Integer;
property idName : Integer read getidName write setidName;
procedure setidInfo(const val : Integer);
function getidInfo : Integer;
property idInfo : Integer read getidInfo write setidInfo;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __TNewCPLInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TNewCPLInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwHelpContext(const val : DWORD);
function getdwHelpContext : DWORD;
property dwHelpContext : DWORD read getdwHelpContext write setdwHelpContext;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __TNewCPLInfoA__Wrapper = class(TDCRecordWrapper)
private
fR : TNewCPLInfoA;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwHelpContext(const val : DWORD);
function getdwHelpContext : DWORD;
property dwHelpContext : DWORD read getdwHelpContext write setdwHelpContext;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
type __TNewCPLInfoW__Wrapper = class(TDCRecordWrapper)
private
fR : TNewCPLInfoW;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwHelpContext(const val : DWORD);
function getdwHelpContext : DWORD;
property dwHelpContext : DWORD read getdwHelpContext write setdwHelpContext;
procedure setlData(const val : Longint);
function getlData : Longint;
property lData : Longint read getlData write setlData;
end;
function __CPLINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CPLINFO__Wrapper.setidIcon(const val : Integer);
begin
CPLINFO(GetRecordPtr^).idIcon := val;
end;
function __CPLINFO__Wrapper.getidIcon : Integer;
begin
result := CPLINFO(GetRecordPtr^).idIcon;
end;
procedure __CPLINFO__Wrapper.setidName(const val : Integer);
begin
CPLINFO(GetRecordPtr^).idName := val;
end;
function __CPLINFO__Wrapper.getidName : Integer;
begin
result := CPLINFO(GetRecordPtr^).idName;
end;
procedure __CPLINFO__Wrapper.setidInfo(const val : Integer);
begin
CPLINFO(GetRecordPtr^).idInfo := val;
end;
function __CPLINFO__Wrapper.getidInfo : Integer;
begin
result := CPLINFO(GetRecordPtr^).idInfo;
end;
procedure __CPLINFO__Wrapper.setlData(const val : Longint);
begin
CPLINFO(GetRecordPtr^).lData := val;
end;
function __CPLINFO__Wrapper.getlData : Longint;
begin
result := CPLINFO(GetRecordPtr^).lData;
end;
function __NEWCPLINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __NEWCPLINFO__Wrapper.setdwSize(const val : DWORD);
begin
NEWCPLINFO(GetRecordPtr^).dwSize := val;
end;
function __NEWCPLINFO__Wrapper.getdwSize : DWORD;
begin
result := NEWCPLINFO(GetRecordPtr^).dwSize;
end;
procedure __NEWCPLINFO__Wrapper.setdwFlags(const val : DWORD);
begin
NEWCPLINFO(GetRecordPtr^).dwFlags := val;
end;
function __NEWCPLINFO__Wrapper.getdwFlags : DWORD;
begin
result := NEWCPLINFO(GetRecordPtr^).dwFlags;
end;
procedure __NEWCPLINFO__Wrapper.setdwHelpContext(const val : DWORD);
begin
NEWCPLINFO(GetRecordPtr^).dwHelpContext := val;
end;
function __NEWCPLINFO__Wrapper.getdwHelpContext : DWORD;
begin
result := NEWCPLINFO(GetRecordPtr^).dwHelpContext;
end;
procedure __NEWCPLINFO__Wrapper.setlData(const val : Longint);
begin
NEWCPLINFO(GetRecordPtr^).lData := val;
end;
function __NEWCPLINFO__Wrapper.getlData : Longint;
begin
result := NEWCPLINFO(GetRecordPtr^).lData;
end;
function __NEWCPLINFOA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __NEWCPLINFOA__Wrapper.setdwSize(const val : DWORD);
begin
NEWCPLINFOA(GetRecordPtr^).dwSize := val;
end;
function __NEWCPLINFOA__Wrapper.getdwSize : DWORD;
begin
result := NEWCPLINFOA(GetRecordPtr^).dwSize;
end;
procedure __NEWCPLINFOA__Wrapper.setdwFlags(const val : DWORD);
begin
NEWCPLINFOA(GetRecordPtr^).dwFlags := val;
end;
function __NEWCPLINFOA__Wrapper.getdwFlags : DWORD;
begin
result := NEWCPLINFOA(GetRecordPtr^).dwFlags;
end;
procedure __NEWCPLINFOA__Wrapper.setdwHelpContext(const val : DWORD);
begin
NEWCPLINFOA(GetRecordPtr^).dwHelpContext := val;
end;
function __NEWCPLINFOA__Wrapper.getdwHelpContext : DWORD;
begin
result := NEWCPLINFOA(GetRecordPtr^).dwHelpContext;
end;
procedure __NEWCPLINFOA__Wrapper.setlData(const val : Longint);
begin
NEWCPLINFOA(GetRecordPtr^).lData := val;
end;
function __NEWCPLINFOA__Wrapper.getlData : Longint;
begin
result := NEWCPLINFOA(GetRecordPtr^).lData;
end;
function __NEWCPLINFOW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __NEWCPLINFOW__Wrapper.setdwSize(const val : DWORD);
begin
NEWCPLINFOW(GetRecordPtr^).dwSize := val;
end;
function __NEWCPLINFOW__Wrapper.getdwSize : DWORD;
begin
result := NEWCPLINFOW(GetRecordPtr^).dwSize;
end;
procedure __NEWCPLINFOW__Wrapper.setdwFlags(const val : DWORD);
begin
NEWCPLINFOW(GetRecordPtr^).dwFlags := val;
end;
function __NEWCPLINFOW__Wrapper.getdwFlags : DWORD;
begin
result := NEWCPLINFOW(GetRecordPtr^).dwFlags;
end;
procedure __NEWCPLINFOW__Wrapper.setdwHelpContext(const val : DWORD);
begin
NEWCPLINFOW(GetRecordPtr^).dwHelpContext := val;
end;
function __NEWCPLINFOW__Wrapper.getdwHelpContext : DWORD;
begin
result := NEWCPLINFOW(GetRecordPtr^).dwHelpContext;
end;
procedure __NEWCPLINFOW__Wrapper.setlData(const val : Longint);
begin
NEWCPLINFOW(GetRecordPtr^).lData := val;
end;
function __NEWCPLINFOW__Wrapper.getlData : Longint;
begin
result := NEWCPLINFOW(GetRecordPtr^).lData;
end;
function __tagCPLINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCPLINFO__Wrapper.setidIcon(const val : Integer);
begin
tagCPLINFO(GetRecordPtr^).idIcon := val;
end;
function __tagCPLINFO__Wrapper.getidIcon : Integer;
begin
result := tagCPLINFO(GetRecordPtr^).idIcon;
end;
procedure __tagCPLINFO__Wrapper.setidName(const val : Integer);
begin
tagCPLINFO(GetRecordPtr^).idName := val;
end;
function __tagCPLINFO__Wrapper.getidName : Integer;
begin
result := tagCPLINFO(GetRecordPtr^).idName;
end;
procedure __tagCPLINFO__Wrapper.setidInfo(const val : Integer);
begin
tagCPLINFO(GetRecordPtr^).idInfo := val;
end;
function __tagCPLINFO__Wrapper.getidInfo : Integer;
begin
result := tagCPLINFO(GetRecordPtr^).idInfo;
end;
procedure __tagCPLINFO__Wrapper.setlData(const val : Longint);
begin
tagCPLINFO(GetRecordPtr^).lData := val;
end;
function __tagCPLINFO__Wrapper.getlData : Longint;
begin
result := tagCPLINFO(GetRecordPtr^).lData;
end;
function __tagNEWCPLINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagNEWCPLINFO__Wrapper.setdwSize(const val : DWORD);
begin
tagNEWCPLINFO(GetRecordPtr^).dwSize := val;
end;
function __tagNEWCPLINFO__Wrapper.getdwSize : DWORD;
begin
result := tagNEWCPLINFO(GetRecordPtr^).dwSize;
end;
procedure __tagNEWCPLINFO__Wrapper.setdwFlags(const val : DWORD);
begin
tagNEWCPLINFO(GetRecordPtr^).dwFlags := val;
end;
function __tagNEWCPLINFO__Wrapper.getdwFlags : DWORD;
begin
result := tagNEWCPLINFO(GetRecordPtr^).dwFlags;
end;
procedure __tagNEWCPLINFO__Wrapper.setdwHelpContext(const val : DWORD);
begin
tagNEWCPLINFO(GetRecordPtr^).dwHelpContext := val;
end;
function __tagNEWCPLINFO__Wrapper.getdwHelpContext : DWORD;
begin
result := tagNEWCPLINFO(GetRecordPtr^).dwHelpContext;
end;
procedure __tagNEWCPLINFO__Wrapper.setlData(const val : Longint);
begin
tagNEWCPLINFO(GetRecordPtr^).lData := val;
end;
function __tagNEWCPLINFO__Wrapper.getlData : Longint;
begin
result := tagNEWCPLINFO(GetRecordPtr^).lData;
end;
function __tagNEWCPLINFOA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagNEWCPLINFOA__Wrapper.setdwSize(const val : DWORD);
begin
tagNEWCPLINFOA(GetRecordPtr^).dwSize := val;
end;
function __tagNEWCPLINFOA__Wrapper.getdwSize : DWORD;
begin
result := tagNEWCPLINFOA(GetRecordPtr^).dwSize;
end;
procedure __tagNEWCPLINFOA__Wrapper.setdwFlags(const val : DWORD);
begin
tagNEWCPLINFOA(GetRecordPtr^).dwFlags := val;
end;
function __tagNEWCPLINFOA__Wrapper.getdwFlags : DWORD;
begin
result := tagNEWCPLINFOA(GetRecordPtr^).dwFlags;
end;
procedure __tagNEWCPLINFOA__Wrapper.setdwHelpContext(const val : DWORD);
begin
tagNEWCPLINFOA(GetRecordPtr^).dwHelpContext := val;
end;
function __tagNEWCPLINFOA__Wrapper.getdwHelpContext : DWORD;
begin
result := tagNEWCPLINFOA(GetRecordPtr^).dwHelpContext;
end;
procedure __tagNEWCPLINFOA__Wrapper.setlData(const val : Longint);
begin
tagNEWCPLINFOA(GetRecordPtr^).lData := val;
end;
function __tagNEWCPLINFOA__Wrapper.getlData : Longint;
begin
result := tagNEWCPLINFOA(GetRecordPtr^).lData;
end;
function __tagNEWCPLINFOW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagNEWCPLINFOW__Wrapper.setdwSize(const val : DWORD);
begin
tagNEWCPLINFOW(GetRecordPtr^).dwSize := val;
end;
function __tagNEWCPLINFOW__Wrapper.getdwSize : DWORD;
begin
result := tagNEWCPLINFOW(GetRecordPtr^).dwSize;
end;
procedure __tagNEWCPLINFOW__Wrapper.setdwFlags(const val : DWORD);
begin
tagNEWCPLINFOW(GetRecordPtr^).dwFlags := val;
end;
function __tagNEWCPLINFOW__Wrapper.getdwFlags : DWORD;
begin
result := tagNEWCPLINFOW(GetRecordPtr^).dwFlags;
end;
procedure __tagNEWCPLINFOW__Wrapper.setdwHelpContext(const val : DWORD);
begin
tagNEWCPLINFOW(GetRecordPtr^).dwHelpContext := val;
end;
function __tagNEWCPLINFOW__Wrapper.getdwHelpContext : DWORD;
begin
result := tagNEWCPLINFOW(GetRecordPtr^).dwHelpContext;
end;
procedure __tagNEWCPLINFOW__Wrapper.setlData(const val : Longint);
begin
tagNEWCPLINFOW(GetRecordPtr^).lData := val;
end;
function __tagNEWCPLINFOW__Wrapper.getlData : Longint;
begin
result := tagNEWCPLINFOW(GetRecordPtr^).lData;
end;
function __TCPLInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCPLInfo__Wrapper.setidIcon(const val : Integer);
begin
TCPLInfo(GetRecordPtr^).idIcon := val;
end;
function __TCPLInfo__Wrapper.getidIcon : Integer;
begin
result := TCPLInfo(GetRecordPtr^).idIcon;
end;
procedure __TCPLInfo__Wrapper.setidName(const val : Integer);
begin
TCPLInfo(GetRecordPtr^).idName := val;
end;
function __TCPLInfo__Wrapper.getidName : Integer;
begin
result := TCPLInfo(GetRecordPtr^).idName;
end;
procedure __TCPLInfo__Wrapper.setidInfo(const val : Integer);
begin
TCPLInfo(GetRecordPtr^).idInfo := val;
end;
function __TCPLInfo__Wrapper.getidInfo : Integer;
begin
result := TCPLInfo(GetRecordPtr^).idInfo;
end;
procedure __TCPLInfo__Wrapper.setlData(const val : Longint);
begin
TCPLInfo(GetRecordPtr^).lData := val;
end;
function __TCPLInfo__Wrapper.getlData : Longint;
begin
result := TCPLInfo(GetRecordPtr^).lData;
end;
function __TNewCPLInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TNewCPLInfo__Wrapper.setdwSize(const val : DWORD);
begin
TNewCPLInfo(GetRecordPtr^).dwSize := val;
end;
function __TNewCPLInfo__Wrapper.getdwSize : DWORD;
begin
result := TNewCPLInfo(GetRecordPtr^).dwSize;
end;
procedure __TNewCPLInfo__Wrapper.setdwFlags(const val : DWORD);
begin
TNewCPLInfo(GetRecordPtr^).dwFlags := val;
end;
function __TNewCPLInfo__Wrapper.getdwFlags : DWORD;
begin
result := TNewCPLInfo(GetRecordPtr^).dwFlags;
end;
procedure __TNewCPLInfo__Wrapper.setdwHelpContext(const val : DWORD);
begin
TNewCPLInfo(GetRecordPtr^).dwHelpContext := val;
end;
function __TNewCPLInfo__Wrapper.getdwHelpContext : DWORD;
begin
result := TNewCPLInfo(GetRecordPtr^).dwHelpContext;
end;
procedure __TNewCPLInfo__Wrapper.setlData(const val : Longint);
begin
TNewCPLInfo(GetRecordPtr^).lData := val;
end;
function __TNewCPLInfo__Wrapper.getlData : Longint;
begin
result := TNewCPLInfo(GetRecordPtr^).lData;
end;
function __TNewCPLInfoA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TNewCPLInfoA__Wrapper.setdwSize(const val : DWORD);
begin
TNewCPLInfoA(GetRecordPtr^).dwSize := val;
end;
function __TNewCPLInfoA__Wrapper.getdwSize : DWORD;
begin
result := TNewCPLInfoA(GetRecordPtr^).dwSize;
end;
procedure __TNewCPLInfoA__Wrapper.setdwFlags(const val : DWORD);
begin
TNewCPLInfoA(GetRecordPtr^).dwFlags := val;
end;
function __TNewCPLInfoA__Wrapper.getdwFlags : DWORD;
begin
result := TNewCPLInfoA(GetRecordPtr^).dwFlags;
end;
procedure __TNewCPLInfoA__Wrapper.setdwHelpContext(const val : DWORD);
begin
TNewCPLInfoA(GetRecordPtr^).dwHelpContext := val;
end;
function __TNewCPLInfoA__Wrapper.getdwHelpContext : DWORD;
begin
result := TNewCPLInfoA(GetRecordPtr^).dwHelpContext;
end;
procedure __TNewCPLInfoA__Wrapper.setlData(const val : Longint);
begin
TNewCPLInfoA(GetRecordPtr^).lData := val;
end;
function __TNewCPLInfoA__Wrapper.getlData : Longint;
begin
result := TNewCPLInfoA(GetRecordPtr^).lData;
end;
function __TNewCPLInfoW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TNewCPLInfoW__Wrapper.setdwSize(const val : DWORD);
begin
TNewCPLInfoW(GetRecordPtr^).dwSize := val;
end;
function __TNewCPLInfoW__Wrapper.getdwSize : DWORD;
begin
result := TNewCPLInfoW(GetRecordPtr^).dwSize;
end;
procedure __TNewCPLInfoW__Wrapper.setdwFlags(const val : DWORD);
begin
TNewCPLInfoW(GetRecordPtr^).dwFlags := val;
end;
function __TNewCPLInfoW__Wrapper.getdwFlags : DWORD;
begin
result := TNewCPLInfoW(GetRecordPtr^).dwFlags;
end;
procedure __TNewCPLInfoW__Wrapper.setdwHelpContext(const val : DWORD);
begin
TNewCPLInfoW(GetRecordPtr^).dwHelpContext := val;
end;
function __TNewCPLInfoW__Wrapper.getdwHelpContext : DWORD;
begin
result := TNewCPLInfoW(GetRecordPtr^).dwHelpContext;
end;
procedure __TNewCPLInfoW__Wrapper.setlData(const val : Longint);
begin
TNewCPLInfoW(GetRecordPtr^).lData := val;
end;
function __TNewCPLInfoW__Wrapper.getlData : Longint;
begin
result := TNewCPLInfoW(GetRecordPtr^).lData;
end;
function _CPLINFO_ : IDispatch;
begin
  result := __CPLINFO__Wrapper.Create;
end;
function _NEWCPLINFO_ : IDispatch;
begin
  result := __NEWCPLINFO__Wrapper.Create;
end;
function _NEWCPLINFOA_ : IDispatch;
begin
  result := __NEWCPLINFOA__Wrapper.Create;
end;
function _NEWCPLINFOW_ : IDispatch;
begin
  result := __NEWCPLINFOW__Wrapper.Create;
end;
function _tagCPLINFO_ : IDispatch;
begin
  result := __tagCPLINFO__Wrapper.Create;
end;
function _tagNEWCPLINFO_ : IDispatch;
begin
  result := __tagNEWCPLINFO__Wrapper.Create;
end;
function _tagNEWCPLINFOA_ : IDispatch;
begin
  result := __tagNEWCPLINFOA__Wrapper.Create;
end;
function _tagNEWCPLINFOW_ : IDispatch;
begin
  result := __tagNEWCPLINFOW__Wrapper.Create;
end;
function _TCPLInfo_ : IDispatch;
begin
  result := __TCPLInfo__Wrapper.Create;
end;
function _TNewCPLInfo_ : IDispatch;
begin
  result := __TNewCPLInfo__Wrapper.Create;
end;
function _TNewCPLInfoA_ : IDispatch;
begin
  result := __TNewCPLInfoA__Wrapper.Create;
end;
function _TNewCPLInfoW_ : IDispatch;
begin
  result := __TNewCPLInfoW__Wrapper.Create;
end;

type __CPLINFO__Wrapper__ = class(__CPLINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CPLINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCPLINFOToVariant(var R : CPLINFO) : OleVariant;
var
__rw : __CPLINFO__Wrapper__;
begin
__rw := __CPLINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCPLINFO(const V : OleVariant) : CPLINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CPLINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __NEWCPLINFO__Wrapper__ = class(__NEWCPLINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __NEWCPLINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertNEWCPLINFOToVariant(var R : NEWCPLINFO) : OleVariant;
var
__rw : __NEWCPLINFO__Wrapper__;
begin
__rw := __NEWCPLINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToNEWCPLINFO(const V : OleVariant) : NEWCPLINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := NEWCPLINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __NEWCPLINFOA__Wrapper__ = class(__NEWCPLINFOA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __NEWCPLINFOA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertNEWCPLINFOAToVariant(var R : NEWCPLINFOA) : OleVariant;
var
__rw : __NEWCPLINFOA__Wrapper__;
begin
__rw := __NEWCPLINFOA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToNEWCPLINFOA(const V : OleVariant) : NEWCPLINFOA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := NEWCPLINFOA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __NEWCPLINFOW__Wrapper__ = class(__NEWCPLINFOW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __NEWCPLINFOW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertNEWCPLINFOWToVariant(var R : NEWCPLINFOW) : OleVariant;
var
__rw : __NEWCPLINFOW__Wrapper__;
begin
__rw := __NEWCPLINFOW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToNEWCPLINFOW(const V : OleVariant) : NEWCPLINFOW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := NEWCPLINFOW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCPLINFO__Wrapper__ = class(__tagCPLINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCPLINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCPLINFOToVariant(var R : tagCPLINFO) : OleVariant;
var
__rw : __tagCPLINFO__Wrapper__;
begin
__rw := __tagCPLINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCPLINFO(const V : OleVariant) : tagCPLINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCPLINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagNEWCPLINFO__Wrapper__ = class(__tagNEWCPLINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagNEWCPLINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagNEWCPLINFOToVariant(var R : tagNEWCPLINFO) : OleVariant;
var
__rw : __tagNEWCPLINFO__Wrapper__;
begin
__rw := __tagNEWCPLINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagNEWCPLINFO(const V : OleVariant) : tagNEWCPLINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagNEWCPLINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagNEWCPLINFOA__Wrapper__ = class(__tagNEWCPLINFOA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagNEWCPLINFOA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagNEWCPLINFOAToVariant(var R : tagNEWCPLINFOA) : OleVariant;
var
__rw : __tagNEWCPLINFOA__Wrapper__;
begin
__rw := __tagNEWCPLINFOA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagNEWCPLINFOA(const V : OleVariant) : tagNEWCPLINFOA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagNEWCPLINFOA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagNEWCPLINFOW__Wrapper__ = class(__tagNEWCPLINFOW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagNEWCPLINFOW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagNEWCPLINFOWToVariant(var R : tagNEWCPLINFOW) : OleVariant;
var
__rw : __tagNEWCPLINFOW__Wrapper__;
begin
__rw := __tagNEWCPLINFOW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagNEWCPLINFOW(const V : OleVariant) : tagNEWCPLINFOW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagNEWCPLINFOW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCPLInfo__Wrapper__ = class(__TCPLInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCPLInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCPLInfoToVariant(var R : TCPLInfo) : OleVariant;
var
__rw : __TCPLInfo__Wrapper__;
begin
__rw := __TCPLInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCPLInfo(const V : OleVariant) : TCPLInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCPLInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TNewCPLInfo__Wrapper__ = class(__TNewCPLInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TNewCPLInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTNewCPLInfoToVariant(var R : TNewCPLInfo) : OleVariant;
var
__rw : __TNewCPLInfo__Wrapper__;
begin
__rw := __TNewCPLInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTNewCPLInfo(const V : OleVariant) : TNewCPLInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TNewCPLInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TNewCPLInfoA__Wrapper__ = class(__TNewCPLInfoA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TNewCPLInfoA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTNewCPLInfoAToVariant(var R : TNewCPLInfoA) : OleVariant;
var
__rw : __TNewCPLInfoA__Wrapper__;
begin
__rw := __TNewCPLInfoA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTNewCPLInfoA(const V : OleVariant) : TNewCPLInfoA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TNewCPLInfoA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TNewCPLInfoW__Wrapper__ = class(__TNewCPLInfoW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TNewCPLInfoW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTNewCPLInfoWToVariant(var R : TNewCPLInfoW) : OleVariant;
var
__rw : __TNewCPLInfoW__Wrapper__;
begin
__rw := __TNewCPLInfoW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTNewCPLInfoW(const V : OleVariant) : TNewCPLInfoW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TNewCPLInfoW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..12] of string = (
'WM_CPL_LAUNCH'
,'WM_CPL_LAUNCHED'
,'CPL_DYNAMIC_RES'
,'CPL_INIT'
,'CPL_GETCOUNT'
,'CPL_INQUIRE'
,'CPL_SELECT'
,'CPL_DBLCLK'
,'CPL_STOP'
,'CPL_EXIT'
,'CPL_NEWINQUIRE'
,'CPL_STARTWPARMS'
,'CPL_SETUP'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,WM_CPL_LAUNCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,WM_CPL_LAUNCHED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,CPL_DYNAMIC_RES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,CPL_INIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,CPL_GETCOUNT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,CPL_INQUIRE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,CPL_SELECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,CPL_DBLCLK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,CPL_STOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,CPL_EXIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,CPL_NEWINQUIRE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,CPL_STARTWPARMS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,CPL_SETUP));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..11] of string = (
'CPLINFO'
,'NEWCPLINFO'
,'NEWCPLINFOA'
,'NEWCPLINFOW'
,'tagCPLINFO'
,'tagNEWCPLINFO'
,'tagNEWCPLINFOA'
,'tagNEWCPLINFOW'
,'TCPLInfo'
,'TNewCPLInfo'
,'TNewCPLInfoA'
,'TNewCPLInfoW'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_CPLINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_NEWCPLINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(_NEWCPLINFOA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[3],Addr(_NEWCPLINFOW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[4],Addr(_tagCPLINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[5],Addr(_tagNEWCPLINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[6],Addr(_tagNEWCPLINFOA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[7],Addr(_tagNEWCPLINFOW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[8],Addr(_TCPLInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[9],Addr(_TNewCPLInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[10],Addr(_TNewCPLInfoA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[11],Addr(_TNewCPLInfoW_)));
end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
