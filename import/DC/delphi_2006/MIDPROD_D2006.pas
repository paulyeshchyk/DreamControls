{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit MIDPROD_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  HTTPApp,
  HTTPProd,
  PagItems,
  XMLBrokr,
  CompProd,
  WebComp,
  SysUtils,
  MidComp,
  MidProd;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
{_T0 = procedure (p0 : TStdIncludes;
p1 : IAddScriptElements) of object;}

_T1 = function (const p0 : string): string of object;

{_T2 = function (p0 : TComponent;
p1 : TClass): Boolean of object;}

_T3 = procedure  of object;

_T4 = function : Boolean of object;

_T5 = function : string of object;

_T6 = _T5;

_T7 = _T5;

_T8 = _T5;

_T9 = _T5;

_T10 = _T5;

_T11 = function (p0 : TStrings): string of object;

_T12 = function (p0 : Boolean): string of object;

_T13 = _T3;

_T14 = _T3;

_T15 = function (p0 : TWebContentOptions): TObject of object;

_T16 = function : TInetXPageElements of object;

_T17 = _T5;

_T18 = function (p0 : TStrings): TXMLBroker of object;

_T19 = _T11;

_T20 = function (p0 : TXMLBroker;
p1 : TXMLOptions): string of object;

_T21 = _T5;

_T22 = procedure (const p0 : string) of object;

_T23 = procedure (p0 : TStrings) of object;

_T24 = procedure (const p0 : TFileName) of object;

_T25 = _T5;

function __DC__GetTBaseInetXPageProducer__IncludePathURL(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TBaseInetXPageProducer(Instance).IncludePathURL;
end;

procedure __DC__SetTBaseInetXPageProducer__IncludePathURL(Instance : TObject; Params : PVariantArgList);
begin
TBaseInetXPageProducer(Instance).IncludePathURL:=OleVariant(Params^[0]);
end;

function __DC__GetTBaseInetXPageProducer__Styles(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TBaseInetXPageProducer(Instance).Styles);
end;

procedure __DC__SetTBaseInetXPageProducer__Styles(Instance : TObject; Params : PVariantArgList);
begin
TBaseInetXPageProducer(Instance).Styles:=TStrings(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTBaseInetXPageProducer__StylesFile(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TBaseInetXPageProducer(Instance).StylesFile;
end;

procedure __DC__SetTBaseInetXPageProducer__StylesFile(Instance : TObject; Params : PVariantArgList);
begin
TBaseInetXPageProducer(Instance).StylesFile:=OleVariant(Params^[0]);
end;

function __DC__GetTBaseInetXPageProducer__EnableXMLIslands(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TBaseInetXPageProducer(Instance).EnableXMLIslands;
end;

procedure __DC__SetTBaseInetXPageProducer__EnableXMLIslands(Instance : TObject; Params : PVariantArgList);
begin
TBaseInetXPageProducer(Instance).EnableXMLIslands:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomInetXPageProducer__HTMLDoc(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomInetXPageProducer(Instance).HTMLDoc);
end;

procedure __DC__SetTCustomInetXPageProducer__HTMLDoc(Instance : TObject; Params : PVariantArgList);
begin
TCustomInetXPageProducer(Instance).HTMLDoc:=TStrings(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomInetXPageProducer__HTMLFile(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomInetXPageProducer(Instance).HTMLFile;
end;

procedure __DC__SetTCustomInetXPageProducer__HTMLFile(Instance : TObject; Params : PVariantArgList);
begin
TCustomInetXPageProducer(Instance).HTMLFile:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TBaseInetXPageProducer,'IncludePathURL',__DC__GetTBaseInetXPageProducer__IncludePathURL,__DC__SetTBaseInetXPageProducer__IncludePathURL);
RegisterProperty(TBaseInetXPageProducer,'Styles',__DC__GetTBaseInetXPageProducer__Styles,__DC__SetTBaseInetXPageProducer__Styles);
RegisterProperty(TBaseInetXPageProducer,'StylesFile',__DC__GetTBaseInetXPageProducer__StylesFile,__DC__SetTBaseInetXPageProducer__StylesFile);
RegisterProperty(TBaseInetXPageProducer,'EnableXMLIslands',__DC__GetTBaseInetXPageProducer__EnableXMLIslands,__DC__SetTBaseInetXPageProducer__EnableXMLIslands);
RegisterProperty(TCustomInetXPageProducer,'HTMLDoc',__DC__GetTCustomInetXPageProducer__HTMLDoc,__DC__SetTCustomInetXPageProducer__HTMLDoc);
RegisterProperty(TCustomInetXPageProducer,'HTMLFile',__DC__GetTCustomInetXPageProducer__HTMLFile,__DC__SetTCustomInetXPageProducer__HTMLFile);
end;

const __ConstNames0 : array[0..7] of string = (
'jsDom'
,'jsDB'
,'jsDisp'
,'jsBind'
,'jsErrDisp'
,'jsShow'
,'sXMLBroker'
,'sXMLReadyVar'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,jsDom));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,jsDB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,jsDisp));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,jsBind));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,jsErrDisp));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,jsShow));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,sXMLBroker));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,sXMLReadyVar));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..7] of TClass = (
TBaseInetXPageProducer,
TBaseMidasPageProducer,
TCustomInetXPageProducer,
TCustomMidasPageProducer,
TInetXPageElements,
TInetXPageProducer,
TMidasPageElements,
TMidasPageProducer
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..0] of string = (
'PathInfoToRelativePath'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T1),[
TypeInfo(string),TypeInfo(string)],Addr(PathInfoToRelativePath),cRegister);

//RegRegisterMethod(TBaseInetXPageProducer,'GeneratePageElements',TypeInfo(_T3),NoParams, pointer(100));
RegRegisterMethod(TBaseInetXPageProducer,'GeneratePageElements',TypeInfo(_T3),NoParams,  getVMTProcAddr('TBaseInetXPageProducer','GeneratePageElements',100));


//RegRegisterMethod(TBaseInetXPageProducer,'GetUseXMLIslands',TypeInfo(_T4),[TypeInfo(Boolean)], pointer(104));
RegRegisterMethod(TBaseInetXPageProducer,'GetUseXMLIslands',TypeInfo(_T4),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseInetXPageProducer','GetUseXMLIslands',104));


//RegRegisterMethod(TBaseInetXPageProducer,'DeclareRowSets',TypeInfo(_T5),[TypeInfo(string)], pointer(108));
RegRegisterMethod(TBaseInetXPageProducer,'DeclareRowSets',TypeInfo(_T5),[TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','DeclareRowSets',108));


//RegRegisterMethod(TBaseInetXPageProducer,'DeclareXMLDocuments',TypeInfo(_T6),[TypeInfo(string)], pointer(112));
RegRegisterMethod(TBaseInetXPageProducer,'DeclareXMLDocuments',TypeInfo(_T6),[TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','DeclareXMLDocuments',112));


//RegRegisterMethod(TBaseInetXPageProducer,'DeclareXMLIslands',TypeInfo(_T7),[TypeInfo(string)], pointer(116));
RegRegisterMethod(TBaseInetXPageProducer,'DeclareXMLIslands',TypeInfo(_T7),[TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','DeclareXMLIslands',116));


//RegRegisterMethod(TBaseInetXPageProducer,'DeclareIncludes',TypeInfo(_T8),[TypeInfo(string)], pointer(120));
RegRegisterMethod(TBaseInetXPageProducer,'DeclareIncludes',TypeInfo(_T8),[TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','DeclareIncludes',120));


//RegRegisterMethod(TBaseInetXPageProducer,'DeclareStyles',TypeInfo(_T9),[TypeInfo(string)], pointer(124));
RegRegisterMethod(TBaseInetXPageProducer,'DeclareStyles',TypeInfo(_T9),[TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','DeclareStyles',124));


//RegRegisterMethod(TBaseInetXPageProducer,'DeclareFunctions',TypeInfo(_T10),[TypeInfo(string)], pointer(128));
RegRegisterMethod(TBaseInetXPageProducer,'DeclareFunctions',TypeInfo(_T10),[TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','DeclareFunctions',128));


//RegRegisterMethod(TBaseInetXPageProducer,'DeclareWarnings',TypeInfo(_T11),[TypeInfo(TStrings),TypeInfo(string)], pointer(132));
RegRegisterMethod(TBaseInetXPageProducer,'DeclareWarnings',TypeInfo(_T11),[TypeInfo(TStrings),TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','DeclareWarnings',132));


//RegRegisterMethod(TBaseInetXPageProducer,'DeclareScript',TypeInfo(_T12),[TypeInfo(Boolean),TypeInfo(string)], pointer(136));
RegRegisterMethod(TBaseInetXPageProducer,'DeclareScript',TypeInfo(_T12),[TypeInfo(Boolean),TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','DeclareScript',136));


//RegRegisterMethod(TBaseInetXPageProducer,'AddScriptComponents',TypeInfo(_T13),NoParams, pointer(140));
RegRegisterMethod(TBaseInetXPageProducer,'AddScriptComponents',TypeInfo(_T13),NoParams,  getVMTProcAddr('TBaseInetXPageProducer','AddScriptComponents',140));


//RegRegisterMethod(TBaseInetXPageProducer,'AddIncludes',TypeInfo(_T14),NoParams, pointer(144));
RegRegisterMethod(TBaseInetXPageProducer,'AddIncludes',TypeInfo(_T14),NoParams,  getVMTProcAddr('TBaseInetXPageProducer','AddIncludes',144));


//RegRegisterMethod(TBaseInetXPageProducer,'CreateScriptManager',TypeInfo(_T15),[TypeInfo(TWebContentOptions),TypeInfo(TObject)], pointer(148));
RegRegisterMethod(TBaseInetXPageProducer,'CreateScriptManager',TypeInfo(_T15),[TypeInfo(TWebContentOptions),TypeInfo(TObject)],  getVMTProcAddr('TBaseInetXPageProducer','CreateScriptManager',148));


//RegRegisterMethod(TBaseInetXPageProducer,'CreatePageElements',TypeInfo(_T16),[TypeInfo(TInetXPageElements)], pointer(152));
RegRegisterMethod(TBaseInetXPageProducer,'CreatePageElements',TypeInfo(_T16),[TypeInfo(TInetXPageElements)],  getVMTProcAddr('TBaseInetXPageProducer','CreatePageElements',152));


//RegRegisterMethod(TBaseInetXPageProducer,'GetDefaultTemplate',TypeInfo(_T17),[TypeInfo(string)], pointer(156));
RegRegisterMethod(TBaseInetXPageProducer,'GetDefaultTemplate',TypeInfo(_T17),[TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','GetDefaultTemplate',156));


//RegRegisterMethod(TBaseInetXPageProducer,'FindXMLBroker',TypeInfo(_T18),[TypeInfo(TStrings),TypeInfo(TXMLBroker)], pointer(160));
RegRegisterMethod(TBaseInetXPageProducer,'FindXMLBroker',TypeInfo(_T18),[TypeInfo(TStrings),TypeInfo(TXMLBroker)],  getVMTProcAddr('TBaseInetXPageProducer','FindXMLBroker',160));


//RegRegisterMethod(TBaseInetXPageProducer,'FindXMLBrokerName',TypeInfo(_T19),[TypeInfo(TStrings),TypeInfo(string)], pointer(164));
RegRegisterMethod(TBaseInetXPageProducer,'FindXMLBrokerName',TypeInfo(_T19),[TypeInfo(TStrings),TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','FindXMLBrokerName',164));


//RegRegisterMethod(TBaseInetXPageProducer,'GetXMLData',TypeInfo(_T20),[TypeInfo(TXMLBroker),TypeInfo(TXMLOptions),TypeInfo(string)], pointer(168));
RegRegisterMethod(TBaseInetXPageProducer,'GetXMLData',TypeInfo(_T20),[TypeInfo(TXMLBroker),TypeInfo(TXMLOptions),TypeInfo(string)],  getVMTProcAddr('TBaseInetXPageProducer','GetXMLData',168));


RegisterProc(TBaseInetXPageProducer,'GetRequiredTags',mtClassMethod,TypeInfo(_T21),[TypeInfo(string)], pointer(172),cRegister);

RegRegisterMethod(TBaseInetXPageProducer,'SetIncludePathURL',TypeInfo(_T22),[
TypeInfo(string)],Addr(TBaseInetXPageProducer.SetIncludePathURL));

RegRegisterMethod(TBaseInetXPageProducer,'SetStyles',TypeInfo(_T23),[
TypeInfo(TStrings)],Addr(TBaseInetXPageProducer.SetStyles));

RegRegisterMethod(TBaseInetXPageProducer,'SetStylesFile',TypeInfo(_T24),[
TypeInfo(TFileName)],Addr(TBaseInetXPageProducer.SetStylesFile));

//RegRegisterMethod(TInetXPageElements,'BodyContent',TypeInfo(_T25),[TypeInfo(string)], pointer(0));
RegRegisterMethod(TInetXPageElements,'BodyContent',TypeInfo(_T25),[TypeInfo(string)],  getVMTProcAddr('TInetXPageElements','BodyContent',0));


end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'AddStdIncludes',mtProc,TypeInfo(_T0),[
TypeInfo(TStdIncludes),
TypeInfo(IAddScriptElements)],Addr(AddStdIncludes),cRegister)}

{RegRegisterMethod(TBaseInetXPageProducer,'ImplCanAddClass',TypeInfo(_T2),[
TypeInfo(TComponent),
TypeInfo(TClass),TypeInfo(Boolean)], pointer(96))}

RegisterEvent(TypeInfo(TXMLDataEvent),[
TypeInfo(TObject),
TypeInfo(TWebRequest),
TypeInfo(TXMLBroker),
TypeInfo(OleVariant)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
