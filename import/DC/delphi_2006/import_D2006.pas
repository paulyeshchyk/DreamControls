{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit import_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  Classes,
  Typinfo,
  Sysutils,
  windows,
  dcsystem,
  dcdreamlib,
  unitpars,
  dcapi,
  import;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
{_T0 = procedure (const p0 : String;
const p1 : String;
const p2 : String;
const p3 : String;
const p4 : String;
p5 : Boolean;
p6 : Boolean;
p7 : Boolean;
p8 : TDCMsgHandler) of object;}

{_T1 = procedure (p0 : TModuleInfo;
const p1 : String;
p2 : Boolean;
p3 : Boolean;
p4 : Boolean;
p5 : TDCMsgHandler) of object;}

_T2 = procedure  of object;

_T3 = procedure (const p0 : String) of object;

_T4 = procedure (const p0 : TStrings) of object;

{_T5 = procedure (p0 : PTypeDeclInfo;
var p1 : Boolean;
var p2 : Boolean;
var p3 : Boolean;
var p4 : Boolean) of object;}

{_T6 = function (p0 : PTypeDeclInfo): Boolean of object;}

{_T7 = function (p0 : PTypeDeclInfo): Boolean of object;}

{_T8 = function (p0 : TModuleInfo;
const p1 : String): PTypeDeclInfo of object;}

_T9 = function (p0 : TModuleInfo;
const p1 : String): Boolean of object;

_T10 = _T9;

_T11 = function (p0 : TModuleInfo;
p1 : Integer): String of object;

{_T12 = function (p0 : Integer;
p1 : PPropertyInfo;
p2 : TModuleInfo): String of object;}

{_T13 = procedure (const p0 : String;
const p1 : String;
const p2 : String;
p3 : PTypeDeclInfo;
p4 : PPropertyInfo;
p5 : TModuleInfo;
p6 : TStrings) of object;}

{_T14 = procedure (const p0 : String;
const p1 : String;
const p2 : String;
p3 : PTypeDeclInfo;
p4 : PPropertyInfo;
p5 : TModuleInfo;
p6 : TStrings) of object;}

_T15 = function (p0 : Boolean;
const p1 : String;
const p2 : String;
p3 : Boolean): String of object;

procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..1] of string = (
'MAXCONSTSINSECTION'
,'MAXCALLSINSECTION'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,MAXCONSTSINSECTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,MAXCALLSINSECTION));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..6] of string = (
'InitializeBadLists'
,'AddBadProc'
,'AddBadProcs'
,'IsRecType'
,'IsSetType'
,'DCGetPropParamTemplate'
,'GetPropGetSetName'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T2),NoParams,Addr(InitializeBadLists),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T3),[
TypeInfo(String)],Addr(AddBadProc),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T4),[
TypeInfo(TStrings)],Addr(AddBadProcs),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T9),[
TypeInfo(TModuleInfo),
TypeInfo(String),TypeInfo(Boolean)],Addr(IsRecType),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T10),[
TypeInfo(TModuleInfo),
TypeInfo(String),TypeInfo(Boolean)],Addr(IsSetType),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T11),[
TypeInfo(TModuleInfo),
TypeInfo(Integer),TypeInfo(String)],Addr(DCGetPropParamTemplate),cRegister);

RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T15),[
TypeInfo(Boolean),
TypeInfo(String),
TypeInfo(String),
TypeInfo(Boolean),TypeInfo(String)],Addr(GetPropGetSetName),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'GenerateImportUnit',mtProc,TypeInfo(_T0),[
TypeInfo(String),
TypeInfo(String),
TypeInfo(String),
TypeInfo(String),
TypeInfo(String),
TypeInfo(Boolean),
TypeInfo(Boolean),
TypeInfo(Boolean),
TypeInfo(TDCMsgHandler)],Addr(GenerateImportUnit),cRegister)}

{RegisterProc(nil,'GenerateImportCode',mtProc,TypeInfo(_T1),[
TypeInfo(TModuleInfo),
TypeInfo(String),
TypeInfo(Boolean),
TypeInfo(Boolean),
TypeInfo(Boolean),
TypeInfo(TDCMsgHandler)],Addr(GenerateImportCode),cRegister)}

{RegisterProc(nil,'CheckDecl',mtProc,TypeInfo(_T5),[
TypeInfoPointer,
TypeInfo(Boolean),
TypeInfo(Boolean),
TypeInfo(Boolean),
TypeInfo(Boolean)],Addr(CheckDecl),cRegister)}

{RegisterProc(nil,'TDeclIsNoTypeInfoType',mtProc,TypeInfo(_T6),[
TypeInfoPointer,TypeInfo(Boolean)],Addr(TDeclIsNoTypeInfoType),cRegister)}

{RegisterProc(nil,'TDeclIsRec',mtProc,TypeInfo(_T7),[
TypeInfoPointer,TypeInfo(Boolean)],Addr(TDeclIsRec),cRegister)}

{RegisterProc(nil,'GetRecTypeDecl',mtProc,TypeInfo(_T8),[
TypeInfo(TModuleInfo),
TypeInfo(String),TypeInfoPointer],Addr(GetRecTypeDecl),cRegister)}

{RegisterProc(nil,'GetPropParams',mtProc,TypeInfo(_T12),[
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(TModuleInfo),TypeInfo(String)],Addr(GetPropParams),cRegister)}

{RegisterProc(nil,'AddSetFunction',mtProc,TypeInfo(_T13),[
TypeInfo(String),
TypeInfo(String),
TypeInfo(String),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(TModuleInfo),
TypeInfo(TStrings)],Addr(AddSetFunction),cRegister)}

{RegisterProc(nil,'AddGetFunction',mtProc,TypeInfo(_T14),[
TypeInfo(String),
TypeInfo(String),
TypeInfo(String),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(TModuleInfo),
TypeInfo(TStrings)],Addr(AddGetFunction),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
