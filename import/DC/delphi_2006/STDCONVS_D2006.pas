{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit STDCONVS_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  SysUtils,
  ConvUtils,
  StdConvs;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (const p0 : Double): Double of object;

_T1 = _T0;

_T2 = procedure  of object;

procedure __RegisterProps;
begin
end;

function __DC__GetStdConvs__cbDistance(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.cbDistance;
end;

procedure __DC__SetStdConvs__cbDistance(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.cbDistance:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duMicromicrons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duMicromicrons;
end;

procedure __DC__SetStdConvs__duMicromicrons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duMicromicrons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duAngstroms(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duAngstroms;
end;

procedure __DC__SetStdConvs__duAngstroms(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duAngstroms:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duMillimicrons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duMillimicrons;
end;

procedure __DC__SetStdConvs__duMillimicrons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duMillimicrons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duMicrons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duMicrons;
end;

procedure __DC__SetStdConvs__duMicrons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duMicrons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duMillimeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duMillimeters;
end;

procedure __DC__SetStdConvs__duMillimeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duMillimeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duCentimeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duCentimeters;
end;

procedure __DC__SetStdConvs__duCentimeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duCentimeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duDecimeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duDecimeters;
end;

procedure __DC__SetStdConvs__duDecimeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duDecimeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duMeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duMeters;
end;

procedure __DC__SetStdConvs__duMeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duMeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duDecameters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duDecameters;
end;

procedure __DC__SetStdConvs__duDecameters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duDecameters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duHectometers(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duHectometers;
end;

procedure __DC__SetStdConvs__duHectometers(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duHectometers:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duKilometers(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duKilometers;
end;

procedure __DC__SetStdConvs__duKilometers(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duKilometers:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duMegameters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duMegameters;
end;

procedure __DC__SetStdConvs__duMegameters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duMegameters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duGigameters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duGigameters;
end;

procedure __DC__SetStdConvs__duGigameters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duGigameters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duInches(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duInches;
end;

procedure __DC__SetStdConvs__duInches(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duInches:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duFeet(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duFeet;
end;

procedure __DC__SetStdConvs__duFeet(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duFeet:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duYards(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duYards;
end;

procedure __DC__SetStdConvs__duYards(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duYards:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duMiles(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duMiles;
end;

procedure __DC__SetStdConvs__duMiles(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duMiles:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duNauticalMiles(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duNauticalMiles;
end;

procedure __DC__SetStdConvs__duNauticalMiles(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duNauticalMiles:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duAstronomicalUnits(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duAstronomicalUnits;
end;

procedure __DC__SetStdConvs__duAstronomicalUnits(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duAstronomicalUnits:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duLightYears(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duLightYears;
end;

procedure __DC__SetStdConvs__duLightYears(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duLightYears:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duParsecs(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duParsecs;
end;

procedure __DC__SetStdConvs__duParsecs(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duParsecs:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duCubits(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duCubits;
end;

procedure __DC__SetStdConvs__duCubits(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duCubits:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duFathoms(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duFathoms;
end;

procedure __DC__SetStdConvs__duFathoms(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duFathoms:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duFurlongs(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duFurlongs;
end;

procedure __DC__SetStdConvs__duFurlongs(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duFurlongs:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duHands(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duHands;
end;

procedure __DC__SetStdConvs__duHands(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duHands:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duPaces(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duPaces;
end;

procedure __DC__SetStdConvs__duPaces(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duPaces:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duRods(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duRods;
end;

procedure __DC__SetStdConvs__duRods(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duRods:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duChains(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duChains;
end;

procedure __DC__SetStdConvs__duChains(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duChains:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duLinks(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duLinks;
end;

procedure __DC__SetStdConvs__duLinks(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duLinks:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duPicas(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duPicas;
end;

procedure __DC__SetStdConvs__duPicas(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duPicas:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__duPoints(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.duPoints;
end;

procedure __DC__SetStdConvs__duPoints(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.duPoints:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__cbArea(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.cbArea;
end;

procedure __DC__SetStdConvs__cbArea(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.cbArea:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareMillimeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareMillimeters;
end;

procedure __DC__SetStdConvs__auSquareMillimeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareMillimeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareCentimeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareCentimeters;
end;

procedure __DC__SetStdConvs__auSquareCentimeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareCentimeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareDecimeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareDecimeters;
end;

procedure __DC__SetStdConvs__auSquareDecimeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareDecimeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareMeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareMeters;
end;

procedure __DC__SetStdConvs__auSquareMeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareMeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareDecameters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareDecameters;
end;

procedure __DC__SetStdConvs__auSquareDecameters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareDecameters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareHectometers(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareHectometers;
end;

procedure __DC__SetStdConvs__auSquareHectometers(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareHectometers:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareKilometers(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareKilometers;
end;

procedure __DC__SetStdConvs__auSquareKilometers(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareKilometers:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareInches(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareInches;
end;

procedure __DC__SetStdConvs__auSquareInches(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareInches:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareFeet(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareFeet;
end;

procedure __DC__SetStdConvs__auSquareFeet(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareFeet:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareYards(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareYards;
end;

procedure __DC__SetStdConvs__auSquareYards(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareYards:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareMiles(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareMiles;
end;

procedure __DC__SetStdConvs__auSquareMiles(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareMiles:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auAcres(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auAcres;
end;

procedure __DC__SetStdConvs__auAcres(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auAcres:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auCentares(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auCentares;
end;

procedure __DC__SetStdConvs__auCentares(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auCentares:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auAres(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auAres;
end;

procedure __DC__SetStdConvs__auAres(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auAres:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auHectares(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auHectares;
end;

procedure __DC__SetStdConvs__auHectares(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auHectares:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__auSquareRods(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.auSquareRods;
end;

procedure __DC__SetStdConvs__auSquareRods(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.auSquareRods:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__cbVolume(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.cbVolume;
end;

procedure __DC__SetStdConvs__cbVolume(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.cbVolume:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicMillimeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicMillimeters;
end;

procedure __DC__SetStdConvs__vuCubicMillimeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicMillimeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicCentimeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicCentimeters;
end;

procedure __DC__SetStdConvs__vuCubicCentimeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicCentimeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicDecimeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicDecimeters;
end;

procedure __DC__SetStdConvs__vuCubicDecimeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicDecimeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicMeters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicMeters;
end;

procedure __DC__SetStdConvs__vuCubicMeters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicMeters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicDecameters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicDecameters;
end;

procedure __DC__SetStdConvs__vuCubicDecameters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicDecameters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicHectometers(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicHectometers;
end;

procedure __DC__SetStdConvs__vuCubicHectometers(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicHectometers:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicKilometers(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicKilometers;
end;

procedure __DC__SetStdConvs__vuCubicKilometers(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicKilometers:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicInches(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicInches;
end;

procedure __DC__SetStdConvs__vuCubicInches(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicInches:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicFeet(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicFeet;
end;

procedure __DC__SetStdConvs__vuCubicFeet(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicFeet:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicYards(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicYards;
end;

procedure __DC__SetStdConvs__vuCubicYards(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicYards:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCubicMiles(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCubicMiles;
end;

procedure __DC__SetStdConvs__vuCubicMiles(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCubicMiles:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuMilliLiters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuMilliLiters;
end;

procedure __DC__SetStdConvs__vuMilliLiters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuMilliLiters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCentiLiters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCentiLiters;
end;

procedure __DC__SetStdConvs__vuCentiLiters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCentiLiters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuDeciLiters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuDeciLiters;
end;

procedure __DC__SetStdConvs__vuDeciLiters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuDeciLiters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuLiters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuLiters;
end;

procedure __DC__SetStdConvs__vuLiters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuLiters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuDecaLiters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuDecaLiters;
end;

procedure __DC__SetStdConvs__vuDecaLiters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuDecaLiters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuHectoLiters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuHectoLiters;
end;

procedure __DC__SetStdConvs__vuHectoLiters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuHectoLiters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuKiloLiters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuKiloLiters;
end;

procedure __DC__SetStdConvs__vuKiloLiters(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuKiloLiters:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuAcreFeet(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuAcreFeet;
end;

procedure __DC__SetStdConvs__vuAcreFeet(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuAcreFeet:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuAcreInches(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuAcreInches;
end;

procedure __DC__SetStdConvs__vuAcreInches(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuAcreInches:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCords(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCords;
end;

procedure __DC__SetStdConvs__vuCords(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCords:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuCordFeet(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuCordFeet;
end;

procedure __DC__SetStdConvs__vuCordFeet(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuCordFeet:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuDecisteres(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuDecisteres;
end;

procedure __DC__SetStdConvs__vuDecisteres(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuDecisteres:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuSteres(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuSteres;
end;

procedure __DC__SetStdConvs__vuSteres(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuSteres:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuDecasteres(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuDecasteres;
end;

procedure __DC__SetStdConvs__vuDecasteres(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuDecasteres:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuFluidGallons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuFluidGallons;
end;

procedure __DC__SetStdConvs__vuFluidGallons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuFluidGallons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuFluidQuarts(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuFluidQuarts;
end;

procedure __DC__SetStdConvs__vuFluidQuarts(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuFluidQuarts:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuFluidPints(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuFluidPints;
end;

procedure __DC__SetStdConvs__vuFluidPints(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuFluidPints:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuFluidCups(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuFluidCups;
end;

procedure __DC__SetStdConvs__vuFluidCups(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuFluidCups:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuFluidGills(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuFluidGills;
end;

procedure __DC__SetStdConvs__vuFluidGills(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuFluidGills:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuFluidOunces(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuFluidOunces;
end;

procedure __DC__SetStdConvs__vuFluidOunces(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuFluidOunces:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuFluidTablespoons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuFluidTablespoons;
end;

procedure __DC__SetStdConvs__vuFluidTablespoons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuFluidTablespoons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuFluidTeaspoons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuFluidTeaspoons;
end;

procedure __DC__SetStdConvs__vuFluidTeaspoons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuFluidTeaspoons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuDryGallons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuDryGallons;
end;

procedure __DC__SetStdConvs__vuDryGallons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuDryGallons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuDryQuarts(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuDryQuarts;
end;

procedure __DC__SetStdConvs__vuDryQuarts(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuDryQuarts:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuDryPints(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuDryPints;
end;

procedure __DC__SetStdConvs__vuDryPints(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuDryPints:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuDryPecks(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuDryPecks;
end;

procedure __DC__SetStdConvs__vuDryPecks(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuDryPecks:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuDryBuckets(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuDryBuckets;
end;

procedure __DC__SetStdConvs__vuDryBuckets(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuDryBuckets:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuDryBushels(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuDryBushels;
end;

procedure __DC__SetStdConvs__vuDryBushels(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuDryBushels:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuUKGallons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuUKGallons;
end;

procedure __DC__SetStdConvs__vuUKGallons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuUKGallons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuUKPottles(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuUKPottles;
end;

procedure __DC__SetStdConvs__vuUKPottles(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuUKPottles:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuUKQuarts(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuUKQuarts;
end;

procedure __DC__SetStdConvs__vuUKQuarts(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuUKQuarts:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuUKPints(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuUKPints;
end;

procedure __DC__SetStdConvs__vuUKPints(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuUKPints:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuUKGills(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuUKGills;
end;

procedure __DC__SetStdConvs__vuUKGills(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuUKGills:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuUKOunces(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuUKOunces;
end;

procedure __DC__SetStdConvs__vuUKOunces(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuUKOunces:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuUKPecks(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuUKPecks;
end;

procedure __DC__SetStdConvs__vuUKPecks(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuUKPecks:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuUKBuckets(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuUKBuckets;
end;

procedure __DC__SetStdConvs__vuUKBuckets(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuUKBuckets:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__vuUKBushels(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.vuUKBushels;
end;

procedure __DC__SetStdConvs__vuUKBushels(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.vuUKBushels:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__cbMass(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.cbMass;
end;

procedure __DC__SetStdConvs__cbMass(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.cbMass:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muNanograms(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muNanograms;
end;

procedure __DC__SetStdConvs__muNanograms(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muNanograms:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muMicrograms(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muMicrograms;
end;

procedure __DC__SetStdConvs__muMicrograms(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muMicrograms:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muMilligrams(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muMilligrams;
end;

procedure __DC__SetStdConvs__muMilligrams(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muMilligrams:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muCentigrams(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muCentigrams;
end;

procedure __DC__SetStdConvs__muCentigrams(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muCentigrams:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muDecigrams(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muDecigrams;
end;

procedure __DC__SetStdConvs__muDecigrams(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muDecigrams:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muGrams(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muGrams;
end;

procedure __DC__SetStdConvs__muGrams(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muGrams:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muDecagrams(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muDecagrams;
end;

procedure __DC__SetStdConvs__muDecagrams(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muDecagrams:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muHectograms(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muHectograms;
end;

procedure __DC__SetStdConvs__muHectograms(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muHectograms:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muKilograms(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muKilograms;
end;

procedure __DC__SetStdConvs__muKilograms(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muKilograms:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muMetricTons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muMetricTons;
end;

procedure __DC__SetStdConvs__muMetricTons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muMetricTons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muDrams(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muDrams;
end;

procedure __DC__SetStdConvs__muDrams(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muDrams:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muGrains(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muGrains;
end;

procedure __DC__SetStdConvs__muGrains(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muGrains:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muLongTons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muLongTons;
end;

procedure __DC__SetStdConvs__muLongTons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muLongTons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muTons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muTons;
end;

procedure __DC__SetStdConvs__muTons(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muTons:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muOunces(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muOunces;
end;

procedure __DC__SetStdConvs__muOunces(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muOunces:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muPounds(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muPounds;
end;

procedure __DC__SetStdConvs__muPounds(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muPounds:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__muStones(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.muStones;
end;

procedure __DC__SetStdConvs__muStones(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.muStones:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__cbTemperature(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.cbTemperature;
end;

procedure __DC__SetStdConvs__cbTemperature(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.cbTemperature:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuCelsius(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuCelsius;
end;

procedure __DC__SetStdConvs__tuCelsius(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuCelsius:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuKelvin(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuKelvin;
end;

procedure __DC__SetStdConvs__tuKelvin(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuKelvin:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuFahrenheit(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuFahrenheit;
end;

procedure __DC__SetStdConvs__tuFahrenheit(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuFahrenheit:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuRankine(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuRankine;
end;

procedure __DC__SetStdConvs__tuRankine(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuRankine:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuReaumur(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuReaumur;
end;

procedure __DC__SetStdConvs__tuReaumur(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuReaumur:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__cbTime(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.cbTime;
end;

procedure __DC__SetStdConvs__cbTime(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.cbTime:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuMilliSeconds(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuMilliSeconds;
end;

procedure __DC__SetStdConvs__tuMilliSeconds(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuMilliSeconds:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuSeconds(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuSeconds;
end;

procedure __DC__SetStdConvs__tuSeconds(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuSeconds:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuMinutes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuMinutes;
end;

procedure __DC__SetStdConvs__tuMinutes(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuMinutes:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuHours(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuHours;
end;

procedure __DC__SetStdConvs__tuHours(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuHours:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuDays(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuDays;
end;

procedure __DC__SetStdConvs__tuDays(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuDays:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuWeeks(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuWeeks;
end;

procedure __DC__SetStdConvs__tuWeeks(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuWeeks:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuFortnights(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuFortnights;
end;

procedure __DC__SetStdConvs__tuFortnights(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuFortnights:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuMonths(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuMonths;
end;

procedure __DC__SetStdConvs__tuMonths(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuMonths:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuYears(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuYears;
end;

procedure __DC__SetStdConvs__tuYears(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuYears:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuDecades(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuDecades;
end;

procedure __DC__SetStdConvs__tuDecades(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuDecades:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuCenturies(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuCenturies;
end;

procedure __DC__SetStdConvs__tuCenturies(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuCenturies:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuMillennia(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuMillennia;
end;

procedure __DC__SetStdConvs__tuMillennia(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuMillennia:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuDateTime(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuDateTime;
end;

procedure __DC__SetStdConvs__tuDateTime(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuDateTime:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuJulianDate(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuJulianDate;
end;

procedure __DC__SetStdConvs__tuJulianDate(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuJulianDate:=OleVariant(Params^[0]);
end;

function __DC__GetStdConvs__tuModifiedJulianDate(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StdConvs.tuModifiedJulianDate;
end;

procedure __DC__SetStdConvs__tuModifiedJulianDate(Instance : TObject; Params : PVariantArgList);
begin
StdConvs.tuModifiedJulianDate:=OleVariant(Params^[0]);
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('cbDistance',__DC__GetStdConvs__cbDistance,__DC__SetStdConvs__cbDistance));
__RegisteredVars.Add(RegisterVar('duMicromicrons',__DC__GetStdConvs__duMicromicrons,__DC__SetStdConvs__duMicromicrons));
__RegisteredVars.Add(RegisterVar('duAngstroms',__DC__GetStdConvs__duAngstroms,__DC__SetStdConvs__duAngstroms));
__RegisteredVars.Add(RegisterVar('duMillimicrons',__DC__GetStdConvs__duMillimicrons,__DC__SetStdConvs__duMillimicrons));
__RegisteredVars.Add(RegisterVar('duMicrons',__DC__GetStdConvs__duMicrons,__DC__SetStdConvs__duMicrons));
__RegisteredVars.Add(RegisterVar('duMillimeters',__DC__GetStdConvs__duMillimeters,__DC__SetStdConvs__duMillimeters));
__RegisteredVars.Add(RegisterVar('duCentimeters',__DC__GetStdConvs__duCentimeters,__DC__SetStdConvs__duCentimeters));
__RegisteredVars.Add(RegisterVar('duDecimeters',__DC__GetStdConvs__duDecimeters,__DC__SetStdConvs__duDecimeters));
__RegisteredVars.Add(RegisterVar('duMeters',__DC__GetStdConvs__duMeters,__DC__SetStdConvs__duMeters));
__RegisteredVars.Add(RegisterVar('duDecameters',__DC__GetStdConvs__duDecameters,__DC__SetStdConvs__duDecameters));
__RegisteredVars.Add(RegisterVar('duHectometers',__DC__GetStdConvs__duHectometers,__DC__SetStdConvs__duHectometers));
__RegisteredVars.Add(RegisterVar('duKilometers',__DC__GetStdConvs__duKilometers,__DC__SetStdConvs__duKilometers));
__RegisteredVars.Add(RegisterVar('duMegameters',__DC__GetStdConvs__duMegameters,__DC__SetStdConvs__duMegameters));
__RegisteredVars.Add(RegisterVar('duGigameters',__DC__GetStdConvs__duGigameters,__DC__SetStdConvs__duGigameters));
__RegisteredVars.Add(RegisterVar('duInches',__DC__GetStdConvs__duInches,__DC__SetStdConvs__duInches));
__RegisteredVars.Add(RegisterVar('duFeet',__DC__GetStdConvs__duFeet,__DC__SetStdConvs__duFeet));
__RegisteredVars.Add(RegisterVar('duYards',__DC__GetStdConvs__duYards,__DC__SetStdConvs__duYards));
__RegisteredVars.Add(RegisterVar('duMiles',__DC__GetStdConvs__duMiles,__DC__SetStdConvs__duMiles));
__RegisteredVars.Add(RegisterVar('duNauticalMiles',__DC__GetStdConvs__duNauticalMiles,__DC__SetStdConvs__duNauticalMiles));
__RegisteredVars.Add(RegisterVar('duAstronomicalUnits',__DC__GetStdConvs__duAstronomicalUnits,__DC__SetStdConvs__duAstronomicalUnits));
__RegisteredVars.Add(RegisterVar('duLightYears',__DC__GetStdConvs__duLightYears,__DC__SetStdConvs__duLightYears));
__RegisteredVars.Add(RegisterVar('duParsecs',__DC__GetStdConvs__duParsecs,__DC__SetStdConvs__duParsecs));
__RegisteredVars.Add(RegisterVar('duCubits',__DC__GetStdConvs__duCubits,__DC__SetStdConvs__duCubits));
__RegisteredVars.Add(RegisterVar('duFathoms',__DC__GetStdConvs__duFathoms,__DC__SetStdConvs__duFathoms));
__RegisteredVars.Add(RegisterVar('duFurlongs',__DC__GetStdConvs__duFurlongs,__DC__SetStdConvs__duFurlongs));
__RegisteredVars.Add(RegisterVar('duHands',__DC__GetStdConvs__duHands,__DC__SetStdConvs__duHands));
__RegisteredVars.Add(RegisterVar('duPaces',__DC__GetStdConvs__duPaces,__DC__SetStdConvs__duPaces));
__RegisteredVars.Add(RegisterVar('duRods',__DC__GetStdConvs__duRods,__DC__SetStdConvs__duRods));
__RegisteredVars.Add(RegisterVar('duChains',__DC__GetStdConvs__duChains,__DC__SetStdConvs__duChains));
__RegisteredVars.Add(RegisterVar('duLinks',__DC__GetStdConvs__duLinks,__DC__SetStdConvs__duLinks));
__RegisteredVars.Add(RegisterVar('duPicas',__DC__GetStdConvs__duPicas,__DC__SetStdConvs__duPicas));
__RegisteredVars.Add(RegisterVar('duPoints',__DC__GetStdConvs__duPoints,__DC__SetStdConvs__duPoints));
__RegisteredVars.Add(RegisterVar('cbArea',__DC__GetStdConvs__cbArea,__DC__SetStdConvs__cbArea));
__RegisteredVars.Add(RegisterVar('auSquareMillimeters',__DC__GetStdConvs__auSquareMillimeters,__DC__SetStdConvs__auSquareMillimeters));
__RegisteredVars.Add(RegisterVar('auSquareCentimeters',__DC__GetStdConvs__auSquareCentimeters,__DC__SetStdConvs__auSquareCentimeters));
__RegisteredVars.Add(RegisterVar('auSquareDecimeters',__DC__GetStdConvs__auSquareDecimeters,__DC__SetStdConvs__auSquareDecimeters));
__RegisteredVars.Add(RegisterVar('auSquareMeters',__DC__GetStdConvs__auSquareMeters,__DC__SetStdConvs__auSquareMeters));
__RegisteredVars.Add(RegisterVar('auSquareDecameters',__DC__GetStdConvs__auSquareDecameters,__DC__SetStdConvs__auSquareDecameters));
__RegisteredVars.Add(RegisterVar('auSquareHectometers',__DC__GetStdConvs__auSquareHectometers,__DC__SetStdConvs__auSquareHectometers));
__RegisteredVars.Add(RegisterVar('auSquareKilometers',__DC__GetStdConvs__auSquareKilometers,__DC__SetStdConvs__auSquareKilometers));
__RegisteredVars.Add(RegisterVar('auSquareInches',__DC__GetStdConvs__auSquareInches,__DC__SetStdConvs__auSquareInches));
__RegisteredVars.Add(RegisterVar('auSquareFeet',__DC__GetStdConvs__auSquareFeet,__DC__SetStdConvs__auSquareFeet));
__RegisteredVars.Add(RegisterVar('auSquareYards',__DC__GetStdConvs__auSquareYards,__DC__SetStdConvs__auSquareYards));
__RegisteredVars.Add(RegisterVar('auSquareMiles',__DC__GetStdConvs__auSquareMiles,__DC__SetStdConvs__auSquareMiles));
__RegisteredVars.Add(RegisterVar('auAcres',__DC__GetStdConvs__auAcres,__DC__SetStdConvs__auAcres));
__RegisteredVars.Add(RegisterVar('auCentares',__DC__GetStdConvs__auCentares,__DC__SetStdConvs__auCentares));
__RegisteredVars.Add(RegisterVar('auAres',__DC__GetStdConvs__auAres,__DC__SetStdConvs__auAres));
__RegisteredVars.Add(RegisterVar('auHectares',__DC__GetStdConvs__auHectares,__DC__SetStdConvs__auHectares));
__RegisteredVars.Add(RegisterVar('auSquareRods',__DC__GetStdConvs__auSquareRods,__DC__SetStdConvs__auSquareRods));
__RegisteredVars.Add(RegisterVar('cbVolume',__DC__GetStdConvs__cbVolume,__DC__SetStdConvs__cbVolume));
__RegisteredVars.Add(RegisterVar('vuCubicMillimeters',__DC__GetStdConvs__vuCubicMillimeters,__DC__SetStdConvs__vuCubicMillimeters));
__RegisteredVars.Add(RegisterVar('vuCubicCentimeters',__DC__GetStdConvs__vuCubicCentimeters,__DC__SetStdConvs__vuCubicCentimeters));
__RegisteredVars.Add(RegisterVar('vuCubicDecimeters',__DC__GetStdConvs__vuCubicDecimeters,__DC__SetStdConvs__vuCubicDecimeters));
__RegisteredVars.Add(RegisterVar('vuCubicMeters',__DC__GetStdConvs__vuCubicMeters,__DC__SetStdConvs__vuCubicMeters));
__RegisteredVars.Add(RegisterVar('vuCubicDecameters',__DC__GetStdConvs__vuCubicDecameters,__DC__SetStdConvs__vuCubicDecameters));
__RegisteredVars.Add(RegisterVar('vuCubicHectometers',__DC__GetStdConvs__vuCubicHectometers,__DC__SetStdConvs__vuCubicHectometers));
__RegisteredVars.Add(RegisterVar('vuCubicKilometers',__DC__GetStdConvs__vuCubicKilometers,__DC__SetStdConvs__vuCubicKilometers));
__RegisteredVars.Add(RegisterVar('vuCubicInches',__DC__GetStdConvs__vuCubicInches,__DC__SetStdConvs__vuCubicInches));
__RegisteredVars.Add(RegisterVar('vuCubicFeet',__DC__GetStdConvs__vuCubicFeet,__DC__SetStdConvs__vuCubicFeet));
__RegisteredVars.Add(RegisterVar('vuCubicYards',__DC__GetStdConvs__vuCubicYards,__DC__SetStdConvs__vuCubicYards));
__RegisteredVars.Add(RegisterVar('vuCubicMiles',__DC__GetStdConvs__vuCubicMiles,__DC__SetStdConvs__vuCubicMiles));
__RegisteredVars.Add(RegisterVar('vuMilliLiters',__DC__GetStdConvs__vuMilliLiters,__DC__SetStdConvs__vuMilliLiters));
__RegisteredVars.Add(RegisterVar('vuCentiLiters',__DC__GetStdConvs__vuCentiLiters,__DC__SetStdConvs__vuCentiLiters));
__RegisteredVars.Add(RegisterVar('vuDeciLiters',__DC__GetStdConvs__vuDeciLiters,__DC__SetStdConvs__vuDeciLiters));
__RegisteredVars.Add(RegisterVar('vuLiters',__DC__GetStdConvs__vuLiters,__DC__SetStdConvs__vuLiters));
__RegisteredVars.Add(RegisterVar('vuDecaLiters',__DC__GetStdConvs__vuDecaLiters,__DC__SetStdConvs__vuDecaLiters));
__RegisteredVars.Add(RegisterVar('vuHectoLiters',__DC__GetStdConvs__vuHectoLiters,__DC__SetStdConvs__vuHectoLiters));
__RegisteredVars.Add(RegisterVar('vuKiloLiters',__DC__GetStdConvs__vuKiloLiters,__DC__SetStdConvs__vuKiloLiters));
__RegisteredVars.Add(RegisterVar('vuAcreFeet',__DC__GetStdConvs__vuAcreFeet,__DC__SetStdConvs__vuAcreFeet));
__RegisteredVars.Add(RegisterVar('vuAcreInches',__DC__GetStdConvs__vuAcreInches,__DC__SetStdConvs__vuAcreInches));
__RegisteredVars.Add(RegisterVar('vuCords',__DC__GetStdConvs__vuCords,__DC__SetStdConvs__vuCords));
__RegisteredVars.Add(RegisterVar('vuCordFeet',__DC__GetStdConvs__vuCordFeet,__DC__SetStdConvs__vuCordFeet));
__RegisteredVars.Add(RegisterVar('vuDecisteres',__DC__GetStdConvs__vuDecisteres,__DC__SetStdConvs__vuDecisteres));
__RegisteredVars.Add(RegisterVar('vuSteres',__DC__GetStdConvs__vuSteres,__DC__SetStdConvs__vuSteres));
__RegisteredVars.Add(RegisterVar('vuDecasteres',__DC__GetStdConvs__vuDecasteres,__DC__SetStdConvs__vuDecasteres));
__RegisteredVars.Add(RegisterVar('vuFluidGallons',__DC__GetStdConvs__vuFluidGallons,__DC__SetStdConvs__vuFluidGallons));
__RegisteredVars.Add(RegisterVar('vuFluidQuarts',__DC__GetStdConvs__vuFluidQuarts,__DC__SetStdConvs__vuFluidQuarts));
__RegisteredVars.Add(RegisterVar('vuFluidPints',__DC__GetStdConvs__vuFluidPints,__DC__SetStdConvs__vuFluidPints));
__RegisteredVars.Add(RegisterVar('vuFluidCups',__DC__GetStdConvs__vuFluidCups,__DC__SetStdConvs__vuFluidCups));
__RegisteredVars.Add(RegisterVar('vuFluidGills',__DC__GetStdConvs__vuFluidGills,__DC__SetStdConvs__vuFluidGills));
__RegisteredVars.Add(RegisterVar('vuFluidOunces',__DC__GetStdConvs__vuFluidOunces,__DC__SetStdConvs__vuFluidOunces));
__RegisteredVars.Add(RegisterVar('vuFluidTablespoons',__DC__GetStdConvs__vuFluidTablespoons,__DC__SetStdConvs__vuFluidTablespoons));
__RegisteredVars.Add(RegisterVar('vuFluidTeaspoons',__DC__GetStdConvs__vuFluidTeaspoons,__DC__SetStdConvs__vuFluidTeaspoons));
__RegisteredVars.Add(RegisterVar('vuDryGallons',__DC__GetStdConvs__vuDryGallons,__DC__SetStdConvs__vuDryGallons));
__RegisteredVars.Add(RegisterVar('vuDryQuarts',__DC__GetStdConvs__vuDryQuarts,__DC__SetStdConvs__vuDryQuarts));
__RegisteredVars.Add(RegisterVar('vuDryPints',__DC__GetStdConvs__vuDryPints,__DC__SetStdConvs__vuDryPints));
__RegisteredVars.Add(RegisterVar('vuDryPecks',__DC__GetStdConvs__vuDryPecks,__DC__SetStdConvs__vuDryPecks));
__RegisteredVars.Add(RegisterVar('vuDryBuckets',__DC__GetStdConvs__vuDryBuckets,__DC__SetStdConvs__vuDryBuckets));
__RegisteredVars.Add(RegisterVar('vuDryBushels',__DC__GetStdConvs__vuDryBushels,__DC__SetStdConvs__vuDryBushels));
__RegisteredVars.Add(RegisterVar('vuUKGallons',__DC__GetStdConvs__vuUKGallons,__DC__SetStdConvs__vuUKGallons));
__RegisteredVars.Add(RegisterVar('vuUKPottles',__DC__GetStdConvs__vuUKPottles,__DC__SetStdConvs__vuUKPottles));
__RegisteredVars.Add(RegisterVar('vuUKQuarts',__DC__GetStdConvs__vuUKQuarts,__DC__SetStdConvs__vuUKQuarts));
__RegisteredVars.Add(RegisterVar('vuUKPints',__DC__GetStdConvs__vuUKPints,__DC__SetStdConvs__vuUKPints));
__RegisteredVars.Add(RegisterVar('vuUKGills',__DC__GetStdConvs__vuUKGills,__DC__SetStdConvs__vuUKGills));
__RegisteredVars.Add(RegisterVar('vuUKOunces',__DC__GetStdConvs__vuUKOunces,__DC__SetStdConvs__vuUKOunces));
__RegisteredVars.Add(RegisterVar('vuUKPecks',__DC__GetStdConvs__vuUKPecks,__DC__SetStdConvs__vuUKPecks));
__RegisteredVars.Add(RegisterVar('vuUKBuckets',__DC__GetStdConvs__vuUKBuckets,__DC__SetStdConvs__vuUKBuckets));
__RegisteredVars.Add(RegisterVar('vuUKBushels',__DC__GetStdConvs__vuUKBushels,__DC__SetStdConvs__vuUKBushels));
__RegisteredVars.Add(RegisterVar('cbMass',__DC__GetStdConvs__cbMass,__DC__SetStdConvs__cbMass));
__RegisteredVars.Add(RegisterVar('muNanograms',__DC__GetStdConvs__muNanograms,__DC__SetStdConvs__muNanograms));
__RegisteredVars.Add(RegisterVar('muMicrograms',__DC__GetStdConvs__muMicrograms,__DC__SetStdConvs__muMicrograms));
__RegisteredVars.Add(RegisterVar('muMilligrams',__DC__GetStdConvs__muMilligrams,__DC__SetStdConvs__muMilligrams));
__RegisteredVars.Add(RegisterVar('muCentigrams',__DC__GetStdConvs__muCentigrams,__DC__SetStdConvs__muCentigrams));
__RegisteredVars.Add(RegisterVar('muDecigrams',__DC__GetStdConvs__muDecigrams,__DC__SetStdConvs__muDecigrams));
__RegisteredVars.Add(RegisterVar('muGrams',__DC__GetStdConvs__muGrams,__DC__SetStdConvs__muGrams));
__RegisteredVars.Add(RegisterVar('muDecagrams',__DC__GetStdConvs__muDecagrams,__DC__SetStdConvs__muDecagrams));
__RegisteredVars.Add(RegisterVar('muHectograms',__DC__GetStdConvs__muHectograms,__DC__SetStdConvs__muHectograms));
__RegisteredVars.Add(RegisterVar('muKilograms',__DC__GetStdConvs__muKilograms,__DC__SetStdConvs__muKilograms));
__RegisteredVars.Add(RegisterVar('muMetricTons',__DC__GetStdConvs__muMetricTons,__DC__SetStdConvs__muMetricTons));
__RegisteredVars.Add(RegisterVar('muDrams',__DC__GetStdConvs__muDrams,__DC__SetStdConvs__muDrams));
__RegisteredVars.Add(RegisterVar('muGrains',__DC__GetStdConvs__muGrains,__DC__SetStdConvs__muGrains));
__RegisteredVars.Add(RegisterVar('muLongTons',__DC__GetStdConvs__muLongTons,__DC__SetStdConvs__muLongTons));
__RegisteredVars.Add(RegisterVar('muTons',__DC__GetStdConvs__muTons,__DC__SetStdConvs__muTons));
__RegisteredVars.Add(RegisterVar('muOunces',__DC__GetStdConvs__muOunces,__DC__SetStdConvs__muOunces));
__RegisteredVars.Add(RegisterVar('muPounds',__DC__GetStdConvs__muPounds,__DC__SetStdConvs__muPounds));
__RegisteredVars.Add(RegisterVar('muStones',__DC__GetStdConvs__muStones,__DC__SetStdConvs__muStones));
__RegisteredVars.Add(RegisterVar('cbTemperature',__DC__GetStdConvs__cbTemperature,__DC__SetStdConvs__cbTemperature));
__RegisteredVars.Add(RegisterVar('tuCelsius',__DC__GetStdConvs__tuCelsius,__DC__SetStdConvs__tuCelsius));
__RegisteredVars.Add(RegisterVar('tuKelvin',__DC__GetStdConvs__tuKelvin,__DC__SetStdConvs__tuKelvin));
__RegisteredVars.Add(RegisterVar('tuFahrenheit',__DC__GetStdConvs__tuFahrenheit,__DC__SetStdConvs__tuFahrenheit));
__RegisteredVars.Add(RegisterVar('tuRankine',__DC__GetStdConvs__tuRankine,__DC__SetStdConvs__tuRankine));
__RegisteredVars.Add(RegisterVar('tuReaumur',__DC__GetStdConvs__tuReaumur,__DC__SetStdConvs__tuReaumur));
__RegisteredVars.Add(RegisterVar('cbTime',__DC__GetStdConvs__cbTime,__DC__SetStdConvs__cbTime));
__RegisteredVars.Add(RegisterVar('tuMilliSeconds',__DC__GetStdConvs__tuMilliSeconds,__DC__SetStdConvs__tuMilliSeconds));
__RegisteredVars.Add(RegisterVar('tuSeconds',__DC__GetStdConvs__tuSeconds,__DC__SetStdConvs__tuSeconds));
__RegisteredVars.Add(RegisterVar('tuMinutes',__DC__GetStdConvs__tuMinutes,__DC__SetStdConvs__tuMinutes));
__RegisteredVars.Add(RegisterVar('tuHours',__DC__GetStdConvs__tuHours,__DC__SetStdConvs__tuHours));
__RegisteredVars.Add(RegisterVar('tuDays',__DC__GetStdConvs__tuDays,__DC__SetStdConvs__tuDays));
__RegisteredVars.Add(RegisterVar('tuWeeks',__DC__GetStdConvs__tuWeeks,__DC__SetStdConvs__tuWeeks));
__RegisteredVars.Add(RegisterVar('tuFortnights',__DC__GetStdConvs__tuFortnights,__DC__SetStdConvs__tuFortnights));
__RegisteredVars.Add(RegisterVar('tuMonths',__DC__GetStdConvs__tuMonths,__DC__SetStdConvs__tuMonths));
__RegisteredVars.Add(RegisterVar('tuYears',__DC__GetStdConvs__tuYears,__DC__SetStdConvs__tuYears));
__RegisteredVars.Add(RegisterVar('tuDecades',__DC__GetStdConvs__tuDecades,__DC__SetStdConvs__tuDecades));
__RegisteredVars.Add(RegisterVar('tuCenturies',__DC__GetStdConvs__tuCenturies,__DC__SetStdConvs__tuCenturies));
__RegisteredVars.Add(RegisterVar('tuMillennia',__DC__GetStdConvs__tuMillennia,__DC__SetStdConvs__tuMillennia));
__RegisteredVars.Add(RegisterVar('tuDateTime',__DC__GetStdConvs__tuDateTime,__DC__SetStdConvs__tuDateTime));
__RegisteredVars.Add(RegisterVar('tuJulianDate',__DC__GetStdConvs__tuJulianDate,__DC__SetStdConvs__tuJulianDate));
__RegisteredVars.Add(RegisterVar('tuModifiedJulianDate',__DC__GetStdConvs__tuModifiedJulianDate,__DC__SetStdConvs__tuModifiedJulianDate));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

const __ConstNames0 : array[0..62] of string = (
'MetersPerInch'
,'MetersPerFoot'
,'MetersPerYard'
,'MetersPerMile'
,'MetersPerNauticalMiles'
,'MetersPerAstronomicalUnit'
,'MetersPerLightSecond'
,'MetersPerLightYear'
,'MetersPerParsec'
,'MetersPerCubit'
,'MetersPerFathom'
,'MetersPerFurlong'
,'MetersPerHand'
,'MetersPerPace'
,'MetersPerRod'
,'MetersPerChain'
,'MetersPerLink'
,'MetersPerPoint'
,'MetersPerPica'
,'SquareMetersPerSquareInch'
,'SquareMetersPerSquareFoot'
,'SquareMetersPerSquareYard'
,'SquareMetersPerSquareMile'
,'SquareMetersPerAcre'
,'SquareMetersPerSquareRod'
,'CubicMetersPerCubicInch'
,'CubicMetersPerCubicFoot'
,'CubicMetersPerCubicYard'
,'CubicMetersPerCubicMile'
,'CubicMetersPerAcreFoot'
,'CubicMetersPerAcreInch'
,'CubicMetersPerCord'
,'CubicMetersPerCordFoot'
,'CubicMetersPerUSFluidGallon'
,'CubicMetersPerUSFluidQuart'
,'CubicMetersPerUSFluidPint'
,'CubicMetersPerUSFluidCup'
,'CubicMetersPerUSFluidGill'
,'CubicMetersPerUSFluidOunce'
,'CubicMetersPerUSFluidTablespoon'
,'CubicMetersPerUSFluidTeaspoon'
,'CubicMetersPerUSDryGallon'
,'CubicMetersPerUSDryQuart'
,'CubicMetersPerUSDryPint'
,'CubicMetersPerUSDryPeck'
,'CubicMetersPerUSDryBucket'
,'CubicMetersPerUSDryBushel'
,'CubicMetersPerUKGallon'
,'CubicMetersPerUKPottle'
,'CubicMetersPerUKQuart'
,'CubicMetersPerUKPint'
,'CubicMetersPerUKGill'
,'CubicMetersPerUKOunce'
,'CubicMetersPerUKPeck'
,'CubicMetersPerUKBucket'
,'CubicMetersPerUKBushel'
,'GramsPerPound'
,'GramsPerDrams'
,'GramsPerGrains'
,'GramsPerTons'
,'GramsPerLongTons'
,'GramsPerOunces'
,'GramsPerStones'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,MetersPerInch));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,MetersPerFoot));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,MetersPerYard));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,MetersPerMile));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,MetersPerNauticalMiles));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,MetersPerAstronomicalUnit));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,MetersPerLightSecond));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,MetersPerLightYear));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,MetersPerParsec));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,MetersPerCubit));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,MetersPerFathom));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,MetersPerFurlong));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,MetersPerHand));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,MetersPerPace));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,MetersPerRod));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,MetersPerChain));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,MetersPerLink));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,MetersPerPoint));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,MetersPerPica));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,SquareMetersPerSquareInch));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,SquareMetersPerSquareFoot));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,SquareMetersPerSquareYard));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,SquareMetersPerSquareMile));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,SquareMetersPerAcre));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,SquareMetersPerSquareRod));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,CubicMetersPerCubicInch));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,CubicMetersPerCubicFoot));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,CubicMetersPerCubicYard));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,CubicMetersPerCubicMile));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,CubicMetersPerAcreFoot));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,CubicMetersPerAcreInch));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,CubicMetersPerCord));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,CubicMetersPerCordFoot));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,CubicMetersPerUSFluidGallon));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,CubicMetersPerUSFluidQuart));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,CubicMetersPerUSFluidPint));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,CubicMetersPerUSFluidCup));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,CubicMetersPerUSFluidGill));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,CubicMetersPerUSFluidOunce));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,CubicMetersPerUSFluidTablespoon));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,CubicMetersPerUSFluidTeaspoon));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,CubicMetersPerUSDryGallon));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,CubicMetersPerUSDryQuart));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,CubicMetersPerUSDryPint));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,CubicMetersPerUSDryPeck));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,CubicMetersPerUSDryBucket));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,CubicMetersPerUSDryBushel));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,CubicMetersPerUKGallon));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,CubicMetersPerUKPottle));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,CubicMetersPerUKQuart));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,CubicMetersPerUKPint));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,CubicMetersPerUKGill));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,CubicMetersPerUKOunce));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,CubicMetersPerUKPeck));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,CubicMetersPerUKBucket));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,CubicMetersPerUKBushel));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,GramsPerPound));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,GramsPerDrams));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,GramsPerGrains));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,GramsPerTons));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,GramsPerLongTons));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,GramsPerOunces));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,GramsPerStones));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..2] of string = (
'FahrenheitToCelsius'
,'CelsiusToFahrenheit'
,'InitStdConvs'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(Double),TypeInfo(Double)],Addr(FahrenheitToCelsius),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(Double),TypeInfo(Double)],Addr(CelsiusToFahrenheit),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),NoParams,Addr(InitStdConvs),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
