{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit ACTNPOPUP_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  Controls,
  Menus,
  ActnMenus,
  XPActnCtrls,
  ActnMan,
  ActnList,
  ActnPopup;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (p0 : TComponent;
const p1 : string;
p2 : TPopupAlignment;
p3 : Boolean;
const p4 : Array of TMenuItem): TPopupMenu of object;

_T1 = procedure (p0 : TActionClients;
p1 : TMenuItem) of object;

function __DC__GetTPopupActionBar__MenuActive(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TPopupActionBar(Instance).MenuActive;
end;

procedure __RegisterProps;
begin
RegisterProperty(TPopupActionBar,'MenuActive',__DC__GetTPopupActionBar__MenuActive,nil);
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..1] of TClass = (
TCustomActionPopupMenuEx,
TPopupActionBar
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..0] of string = (
'NewPopupMenu'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TComponent),
TypeInfo(string),
TypeInfo(TPopupAlignment),
TypeInfo(Boolean),
ArrayInfo(TypeInfo(TMenuItem)),TypeInfo(TPopupMenu)],Addr(NewPopupMenu),cRegister);

RegRegisterMethod(TCustomActionPopupMenuEx,'LoadMenu',TypeInfo(_T1),[
TypeInfo(TActionClients),
TypeInfo(TMenuItem)],Addr(TCustomActionPopupMenuEx.LoadMenu));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
