{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit EDITINTF_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  Types,
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  SysUtils,
  Windows,
  Classes,
  VirtIntf,
  EditIntf;
function ConvertTCharPosToVariant(var R : TCharPos) : OleVariant;
function ConvertVariantToTCharPos(const V : OleVariant) : TCharPos;
function ConvertTEditPosToVariant(var R : TEditPos) : OleVariant;
function ConvertVariantToTEditPos(const V : OleVariant) : TEditPos;
function ConvertTSizeToVariant(var R : TSize) : OleVariant;
function ConvertVariantToTSize(const V : OleVariant) : TSize;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TCharPos__Wrapper = class(TDCRecordWrapper)
private
fR : TCharPos;
public
function GetRecordPtr : pointer; override;
published
procedure setCharIndex(const val : SmallInt);
function getCharIndex : SmallInt;
property CharIndex : SmallInt read getCharIndex write setCharIndex;
procedure setLine(const val : Longint);
function getLine : Longint;
property Line : Longint read getLine write setLine;
end;
type __TEditPos__Wrapper = class(TDCRecordWrapper)
private
fR : TEditPos;
public
function GetRecordPtr : pointer; override;
published
procedure setCol(const val : SmallInt);
function getCol : SmallInt;
property Col : SmallInt read getCol write setCol;
procedure setLine(const val : Longint);
function getLine : Longint;
property Line : Longint read getLine write setLine;
end;
type __TSize__Wrapper = class(TDCRecordWrapper)
private
fR : TSize;
public
function GetRecordPtr : pointer; override;
published
procedure setcx(const val : Longint);
function getcx : Longint;
property cx : Longint read getcx write setcx;
procedure setcy(const val : Longint);
function getcy : Longint;
property cy : Longint read getcy write setcy;
end;
type
_T0 = function : string of object;

_T1 = function : Pointer of object;

_T2 = function : TIComponentInterface of object;

_T3 = function : Boolean of object;

_T4 = function : Integer of object;

_T5 = function (p0 : Integer): string of object;

_T6 = function (p0 : Integer): TPropertyType of object;

_T7 = function (const p0 : string): TPropertyType of object;

_T8 = function (p0 : Integer;
var p1): Boolean of object;

_T9 = function (const p0 : string;
var p1): Boolean of object;

_T10 = function (p0 : Integer;
const p1): Boolean of object;

_T11 = function (const p0 : string;
const p1): Boolean of object;

{_T12 = function (p0 : Pointer;
p1 : TGetChildCallback): Boolean of object;}

_T13 = _T4;

_T14 = function (p0 : Integer): TIComponentInterface of object;

_T15 = _T4;

_T16 = _T14;

_T17 = _T3;

_T18 = _T3;

_T19 = _T3;

_T20 = function : TIEditReader of object;

_T21 = function : TIEditWriter of object;

_T22 = _T0;

_T23 = function : Longint of object;

_T24 = _T3;

_T25 = _T3;

_T26 = function (p0 : TSyntaxHighlighter): TSyntaxHighlighter of object;

_T27 = _T4;

_T28 = function (p0 : Integer): TIEditView of object;

_T29 = _T21;

_T30 = function : IDispatch of object;

_T31 = _T30;

_T32 = function : TBlockType of object;

_T33 = _T3;

_T34 = procedure (const p0 : IDispatch) of object;

_T35 = _T34;

_T36 = procedure (p0 : TBlockType) of object;

_T37 = procedure (p0 : Boolean) of object;

{_T38 = function (p0 : Longint;
p1 : PChar;
p2 : Longint): Longint of object;}

_T39 = function (p0 : Integer): IDispatch of object;

_T40 = procedure (p0 : Integer;
const p1 : IDispatch) of object;

_T41 = _T30;

_T42 = function (p0 : Longint): IDispatch of object;

_T43 = function (const p0 : IDispatch): Longint of object;

_T44 = procedure (p0 : Boolean;
const p1 : IDispatch;
const p2 : IDispatch) of object;

_T45 = procedure (const p0 : IDispatch;
var p1 : Integer;
var p2 : Integer) of object;

_T46 = function (p0 : Longint): Boolean of object;

_T47 = _T46;

{_T48 = function (p0 : PChar): Boolean of object;}

_T49 = _T23;

_T50 = _T30;

_T51 = _T0;

_T52 = _T3;

_T53 = _T3;

_T54 = _T2;

_T55 = function (const p0 : string): TIComponentInterface of object;

_T56 = function (p0 : Pointer): TIComponentInterface of object;

_T57 = _T4;

_T58 = _T14;

_T59 = _T2;

_T60 = function (p0 : TIComponentInterface;
const p1 : string;
p2 : Integer;
p3 : Integer;
p4 : Integer;
p5 : Integer): TIComponentInterface of object;

_T61 = _T3;

_T62 = _T0;

_T63 = _T0;

_T64 = _T0;

_T65 = _T0;

_T66 = function (const p0 : string;
const p1 : string;
const p2 : string): string of object;

_T67 = procedure (p0 : TIFormInterface) of object;

_T68 = _T0;

_T69 = _T66;

_T70 = function : TIEditorInterface of object;

_T71 = function : TIFormInterface of object;

_T72 = function : TIModuleInterface of object;

_T73 = function : TIResourceFile of object;

_T74 = _T3;

_T75 = _T3;

_T76 = function (p0 : Boolean): Boolean of object;

_T77 = function (const p0 : string): Boolean of object;

_T78 = function (var p0 : string): Boolean of object;

_T79 = _T77;

_T80 = _T3;

_T81 = _T3;

_T82 = function (p0 : TIModuleNotifier): Boolean of object;

_T83 = _T82;

_T84 = _T70;

_T85 = procedure (p0 : TNotifyCode) of object;

_T86 = procedure (const p0 : TComponent;
const p1 : string;
const p2 : string) of object;

_T87 = _T3;

_T88 = _T0;

_T89 = _T0;

_T90 = function (const p0 : string): string of object;

_T91 = procedure  of object;

_T92 = procedure (p0 : TIModuleInterface) of object;

_T93 = _T0;

_T94 = _T90;

_T95 = function : PChar of object;

_T96 = _T95;

{_T97 = function (p0 : PChar;
p1 : PChar): Boolean of object;}

_T98 = function (p0 : TResHeaderValue;
var p1 : Integer): Boolean of object;

_T99 = function (p0 : TResHeaderValue;
p1 : Integer): Boolean of object;

_T100 = _T1;

_T101 = _T4;

_T102 = function (p0 : Integer): Boolean of object;

_T103 = _T1;

_T104 = _T0;

_T105 = _T4;

_T106 = function (p0 : Integer): TIResourceEntry of object;

_T107 = function (p0 : Pointer): TIResourceEntry of object;

{_T108 = function (p0 : PChar;
p1 : PChar): TIResourceEntry of object;}

_T109 = function (p0 : Pointer): Boolean of object;

{_T110 = function (p0 : PChar;
p1 : PChar;
p2 : Word;
p3 : Word;
p4 : Integer;
p5 : Integer;
p6 : Integer): TIResourceEntry of object;}

function __TCharPos__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCharPos__Wrapper.setCharIndex(const val : SmallInt);
begin
TCharPos(GetRecordPtr^).CharIndex := val;
end;
function __TCharPos__Wrapper.getCharIndex : SmallInt;
begin
result := TCharPos(GetRecordPtr^).CharIndex;
end;
procedure __TCharPos__Wrapper.setLine(const val : Longint);
begin
TCharPos(GetRecordPtr^).Line := val;
end;
function __TCharPos__Wrapper.getLine : Longint;
begin
result := TCharPos(GetRecordPtr^).Line;
end;
function __TEditPos__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TEditPos__Wrapper.setCol(const val : SmallInt);
begin
TEditPos(GetRecordPtr^).Col := val;
end;
function __TEditPos__Wrapper.getCol : SmallInt;
begin
result := TEditPos(GetRecordPtr^).Col;
end;
procedure __TEditPos__Wrapper.setLine(const val : Longint);
begin
TEditPos(GetRecordPtr^).Line := val;
end;
function __TEditPos__Wrapper.getLine : Longint;
begin
result := TEditPos(GetRecordPtr^).Line;
end;
function __TSize__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSize__Wrapper.setcx(const val : Longint);
begin
TSize(GetRecordPtr^).cx := val;
end;
function __TSize__Wrapper.getcx : Longint;
begin
result := TSize(GetRecordPtr^).cx;
end;
procedure __TSize__Wrapper.setcy(const val : Longint);
begin
TSize(GetRecordPtr^).cy := val;
end;
function __TSize__Wrapper.getcy : Longint;
begin
result := TSize(GetRecordPtr^).cy;
end;
function _TCharPos_ : IDispatch;
begin
  result := __TCharPos__Wrapper.Create;
end;
function _TEditPos_ : IDispatch;
begin
  result := __TEditPos__Wrapper.Create;
end;
function __TIEditorInterface__GetBlockAfter__Wrapper(__Instance : TIEditorInterface): IDispatch;
var
__result : TCharPos;
__wrapper : __TCharPos__Wrapper;
begin
__result := TIEditorInterface(__Instance).GetBlockAfter;
__wrapper := __TCharPos__Wrapper.Create;
__wrapper.fR := __result;
result := IDispatch(__wrapper);
end;

function __TIEditorInterface__GetBlockStart__Wrapper(__Instance : TIEditorInterface): IDispatch;
var
__result : TCharPos;
__wrapper : __TCharPos__Wrapper;
begin
__result := TIEditorInterface(__Instance).GetBlockStart;
__wrapper := __TCharPos__Wrapper.Create;
__wrapper.fR := __result;
result := IDispatch(__wrapper);
end;

procedure __TIEditorInterface__SetBlockAfter__Wrapper(__Instance : TIEditorInterface;
const p0 : IDispatch);
var
__p0 : ^TCharPos;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
TIEditorInterface(__Instance).SetBlockAfter(__p0^);
end;

procedure __TIEditorInterface__SetBlockStart__Wrapper(__Instance : TIEditorInterface;
const p0 : IDispatch);
var
__p0 : ^TCharPos;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
TIEditorInterface(__Instance).SetBlockStart(__p0^);
end;

function __TIEditView__GetPos__Wrapper(__Instance : TIEditView;
p0 : Integer): IDispatch;
var
__result : TEditPos;
__wrapper : __TEditPos__Wrapper;
begin
__result := TIEditView(__Instance).GetPos(p0);
__wrapper := __TEditPos__Wrapper.Create;
__wrapper.fR := __result;
result := IDispatch(__wrapper);
end;

procedure __TIEditView__SetPos__Wrapper(__Instance : TIEditView;
p0 : Integer;
const p1 : IDispatch);
var
__p1 : ^TEditPos;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
TIEditView(__Instance).SetPos(p0,__p1^);
end;

function __TIEditView__GetViewSize__Wrapper(__Instance : TIEditView): IDispatch;
var
__result : TSize;
__wrapper : __TSize__Wrapper;
begin
__result := TIEditView(__Instance).GetViewSize;
__wrapper := __TSize__Wrapper.Create;
__wrapper.fR := __result;
result := IDispatch(__wrapper);
end;

function __TIEditView__PosToCharPos__Wrapper(__Instance : TIEditView;
p0 : Longint): IDispatch;
var
__result : TCharPos;
__wrapper : __TCharPos__Wrapper;
begin
__result := TIEditView(__Instance).PosToCharPos(p0);
__wrapper := __TCharPos__Wrapper.Create;
__wrapper.fR := __result;
result := IDispatch(__wrapper);
end;

function __TIEditView__CharPosToPos__Wrapper(__Instance : TIEditView;
const p0 : IDispatch): Longint;
var
__p0 : ^TCharPos;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := TIEditView(__Instance).CharPosToPos(__p0^);
end;

procedure __TIEditView__ConvertPos__Wrapper(__Instance : TIEditView;
p0 : Boolean;
const p1 : IDispatch;
const p2 : IDispatch);
var
__p1 : ^TEditPos;
__i1 : IDispatch;
__p2 : ^TCharPos;
__i2 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
if p2 = nil then exit;
__p2 := (p2 as IDCRecordWrapper).GetRecordPtr;
TIEditView(__Instance).ConvertPos(p0,__p1^,__p2^);
end;

procedure __TIEditView__GetAttributeAtPos__Wrapper(__Instance : TIEditView;
const p0 : IDispatch;
var p1 : Integer;
var p2 : Integer);
var
__p0 : ^TEditPos;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
TIEditView(__Instance).GetAttributeAtPos(__p0^,p1,p2);
end;

function __TIEditWriter__GetCurrentPos__Wrapper(__Instance : TIEditWriter): IDispatch;
var
__result : TCharPos;
__wrapper : __TCharPos__Wrapper;
begin
__result := TIEditWriter(__Instance).GetCurrentPos;
__wrapper := __TCharPos__Wrapper.Create;
__wrapper.fR := __result;
result := IDispatch(__wrapper);
end;


type __TCharPos__Wrapper__ = class(__TCharPos__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCharPos__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCharPosToVariant(var R : TCharPos) : OleVariant;
var
__rw : __TCharPos__Wrapper__;
begin
__rw := __TCharPos__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCharPos(const V : OleVariant) : TCharPos;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCharPos((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TEditPos__Wrapper__ = class(__TEditPos__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TEditPos__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTEditPosToVariant(var R : TEditPos) : OleVariant;
var
__rw : __TEditPos__Wrapper__;
begin
__rw := __TEditPos__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTEditPos(const V : OleVariant) : TEditPos;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TEditPos((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSize__Wrapper__ = class(__TSize__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSize__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSizeToVariant(var R : TSize) : OleVariant;
var
__rw : __TSize__Wrapper__;
begin
__rw := __TSize__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSize(const V : OleVariant) : TSize;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSize((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
function __DC__GetTIEditorInterface__BlockStart(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
__wrapper : __TCharPos__Wrapper;
begin
__wrapper := __TCharPos__Wrapper.Create;
__wrapper.fR := TIEditorInterface(Instance).BlockStart;
result := IUnknown(__wrapper) as IDispatch;
end;

procedure __DC__SetTIEditorInterface__BlockStart(Instance : TObject; Params : PVariantArgList);
var
__idisp:IDispatch;
__iwrapper:IDCRecordWrapper;
begin
__idisp:=DCVarToInterface(OleVariant(Params^[0]));
if __idisp=nil then exit;
__idisp.QueryInterface(IDCRecordWrapper, __iwrapper);
TIEditorInterface(Instance).BlockStart:=TCharPos(__iwrapper.GetRecordPtr^);
end;

function __DC__GetTIEditorInterface__BlockAfter(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
__wrapper : __TCharPos__Wrapper;
begin
__wrapper := __TCharPos__Wrapper.Create;
__wrapper.fR := TIEditorInterface(Instance).BlockAfter;
result := IUnknown(__wrapper) as IDispatch;
end;

procedure __DC__SetTIEditorInterface__BlockAfter(Instance : TObject; Params : PVariantArgList);
var
__idisp:IDispatch;
__iwrapper:IDCRecordWrapper;
begin
__idisp:=DCVarToInterface(OleVariant(Params^[0]));
if __idisp=nil then exit;
__idisp.QueryInterface(IDCRecordWrapper, __iwrapper);
TIEditorInterface(Instance).BlockAfter:=TCharPos(__iwrapper.GetRecordPtr^);
end;

function __DC__GetTIEditorInterface__BlockType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIEditorInterface(Instance).BlockType;
end;

procedure __DC__SetTIEditorInterface__BlockType(Instance : TObject; Params : PVariantArgList);
begin
TIEditorInterface(Instance).BlockType:=OleVariant(Params^[0]);
end;

function __DC__GetTIEditorInterface__BlockVisible(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIEditorInterface(Instance).BlockVisible;
end;

procedure __DC__SetTIEditorInterface__BlockVisible(Instance : TObject; Params : PVariantArgList);
begin
TIEditorInterface(Instance).BlockVisible:=OleVariant(Params^[0]);
end;

function __DC__GetTIEditView__cursorPos(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
__wrapper : __TEditPos__Wrapper;
begin
__wrapper := __TEditPos__Wrapper.Create;
__wrapper.fR := TIEditView(Instance).cursorPos;
result := IUnknown(__wrapper) as IDispatch;
end;

procedure __DC__SetTIEditView__cursorPos(Instance : TObject; Params : PVariantArgList);
var
__idisp:IDispatch;
__iwrapper:IDCRecordWrapper;
begin
__idisp:=DCVarToInterface(OleVariant(Params^[0]));
if __idisp=nil then exit;
__idisp.QueryInterface(IDCRecordWrapper, __iwrapper);
TIEditView(Instance).cursorPos:=TEditPos(__iwrapper.GetRecordPtr^);
end;

function __DC__GetTIEditView__TopPos(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
__wrapper : __TEditPos__Wrapper;
begin
__wrapper := __TEditPos__Wrapper.Create;
__wrapper.fR := TIEditView(Instance).TopPos;
result := IUnknown(__wrapper) as IDispatch;
end;

procedure __DC__SetTIEditView__TopPos(Instance : TObject; Params : PVariantArgList);
var
__idisp:IDispatch;
__iwrapper:IDCRecordWrapper;
begin
__idisp:=DCVarToInterface(OleVariant(Params^[0]));
if __idisp=nil then exit;
__idisp.QueryInterface(IDCRecordWrapper, __iwrapper);
TIEditView(Instance).TopPos:=TEditPos(__iwrapper.GetRecordPtr^);
end;

function __DC__GetTIEditView__ViewSize(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
__wrapper : __TSize__Wrapper;
begin
__wrapper := __TSize__Wrapper.Create;
__wrapper.fR := TIEditView(Instance).ViewSize;
result := IUnknown(__wrapper) as IDispatch;
end;

function __DC__GetTIEditWriter__CurrentPos(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
__wrapper : __TCharPos__Wrapper;
begin
__wrapper := __TCharPos__Wrapper.Create;
__wrapper.fR := TIEditWriter(Instance).CurrentPos;
result := IUnknown(__wrapper) as IDispatch;
end;

procedure __RegisterProps;
begin
RegisterProperty(TIEditorInterface,'BlockStart',__DC__GetTIEditorInterface__BlockStart,__DC__SetTIEditorInterface__BlockStart);
RegisterProperty(TIEditorInterface,'BlockAfter',__DC__GetTIEditorInterface__BlockAfter,__DC__SetTIEditorInterface__BlockAfter);
RegisterProperty(TIEditorInterface,'BlockType',__DC__GetTIEditorInterface__BlockType,__DC__SetTIEditorInterface__BlockType);
RegisterProperty(TIEditorInterface,'BlockVisible',__DC__GetTIEditorInterface__BlockVisible,__DC__SetTIEditorInterface__BlockVisible);
RegisterProperty(TIEditView,'cursorPos',__DC__GetTIEditView__cursorPos,__DC__SetTIEditView__cursorPos);
RegisterProperty(TIEditView,'TopPos',__DC__GetTIEditView__TopPos,__DC__SetTIEditView__TopPos);
RegisterProperty(TIEditView,'ViewSize',__DC__GetTIEditView__ViewSize,nil);
RegisterProperty(TIEditWriter,'CurrentPos',__DC__GetTIEditWriter__CurrentPos,nil);
end;

const __ConstNames0 : array[0..62] of string = (
'cursorPos'
,'ViewTopPos'
,'atWhiteSpace'
,'atComment'
,'atReservedWord'
,'atIdentifier'
,'atSymbol'
,'atString'
,'atNumber'
,'atFloat'
,'atOctal'
,'atHex'
,'atCharacter'
,'atPreproc'
,'atIllegal'
,'atAssembler'
,'SyntaxOff'
,'MarkedBlock'
,'SearchMatch'
,'lfCurrentCSIP'
,'lfBreakpointEnabled'
,'lfBreakpointDisabled'
,'lfBreakpointInvalid'
,'lfErrorLine'
,'lfBreakpointVerified'
,'shNone'
,'shPascal'
,'shC'
,'shSQL'
,'shQuery'
,'btInclusive'
,'btLine'
,'btColumn'
,'btNonInclusive'
,'btUnknown'
,'ptUnknown'
,'ptInteger'
,'ptChar'
,'ptEnumeration'
,'ptFloat'
,'ptString'
,'ptSet'
,'ptClass'
,'ptMethod'
,'ptWChar'
,'ptLString'
,'ptLWString'
,'ptVariant'
,'hvFlags'
,'hvLanguage'
,'hvDataVersion'
,'hvVersion'
,'hvCharacteristics'
,'ncModuleDeleted'
,'ncModuleRenamed'
,'ncEditorModified'
,'ncFormModified'
,'ncEditorSelected'
,'ncFormSelected'
,'ncBeforeSave'
,'ncAfterSave'
,'ncFormSaving'
,'ncProjResModified'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,cursorPos));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,ViewTopPos));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,atWhiteSpace));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,atComment));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,atReservedWord));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,atIdentifier));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,atSymbol));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,atString));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,atNumber));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,atFloat));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,atOctal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,atHex));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,atCharacter));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,atPreproc));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,atIllegal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,atAssembler));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,SyntaxOff));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,MarkedBlock));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,SearchMatch));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,lfCurrentCSIP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,lfBreakpointEnabled));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,lfBreakpointDisabled));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,lfBreakpointInvalid));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,lfErrorLine));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,lfBreakpointVerified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,shNone));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,shPascal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,shC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,shSQL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,shQuery));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,btInclusive));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,btLine));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,btColumn));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,btNonInclusive));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,btUnknown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,ptUnknown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,ptInteger));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,ptChar));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,ptEnumeration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,ptFloat));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,ptString));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,ptSet));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,ptClass));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,ptMethod));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,ptWChar));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,ptLString));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,ptLWString));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,ptVariant));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,hvFlags));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,hvLanguage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,hvDataVersion));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,hvVersion));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,hvCharacteristics));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,ncModuleDeleted));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,ncModuleRenamed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,ncEditorModified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,ncFormModified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,ncEditorSelected));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,ncFormSelected));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,ncBeforeSave));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,ncAfterSave));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,ncFormSaving));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,ncProjResModified));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..13] of TClass = (
TIComponentInterface,
TIEditorInterface,
TIEditReader,
TIEditView,
TIEditWriter,
TIFormInterface,
TIModuleCreator,
TIModuleCreatorEx,
TIModuleInterface,
TIModuleNotifier,
TIProjectCreator,
TIProjectCreatorEx,
TIResourceEntry,
TIResourceFile
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..1] of string = (
'TCharPos'
,'TEditPos'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_TCharPos_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_TEditPos_)));
//RegisterProc(TIComponentInterface,'GetComponentType',mtMethod,TypeInfo(_T0),[TypeInfo(string)], pointer(12),cStdCall);
RegisterProc(TIComponentInterface,'GetComponentType',mtMethod,TypeInfo(_T0),[TypeInfo(string)],  getVMTProcAddr('TIComponentInterface','GetComponentType',12),cStdCall);


//RegisterProc(TIComponentInterface,'GetComponentHandle',mtMethod,TypeInfo(_T1),[TypeInfoPointer], pointer(16),cStdCall);
RegisterProc(TIComponentInterface,'GetComponentHandle',mtMethod,TypeInfo(_T1),[TypeInfoPointer],  getVMTProcAddr('TIComponentInterface','GetComponentHandle',16),cStdCall);


//RegisterProc(TIComponentInterface,'GetParent',mtMethod,TypeInfo(_T2),[TypeInfo(TIComponentInterface)], pointer(20),cStdCall);
RegisterProc(TIComponentInterface,'GetParent',mtMethod,TypeInfo(_T2),[TypeInfo(TIComponentInterface)],  getVMTProcAddr('TIComponentInterface','GetParent',20),cStdCall);


//RegisterProc(TIComponentInterface,'IsTControl',mtMethod,TypeInfo(_T3),[TypeInfo(Boolean)], pointer(24),cStdCall);
RegisterProc(TIComponentInterface,'IsTControl',mtMethod,TypeInfo(_T3),[TypeInfo(Boolean)],  getVMTProcAddr('TIComponentInterface','IsTControl',24),cStdCall);


//RegisterProc(TIComponentInterface,'GetPropCount',mtMethod,TypeInfo(_T4),[TypeInfo(Integer)], pointer(28),cStdCall);
RegisterProc(TIComponentInterface,'GetPropCount',mtMethod,TypeInfo(_T4),[TypeInfo(Integer)],  getVMTProcAddr('TIComponentInterface','GetPropCount',28),cStdCall);


//RegisterProc(TIComponentInterface,'GetPropName',mtMethod,TypeInfo(_T5),[TypeInfo(Integer),TypeInfo(string)], pointer(32),cStdCall);
RegisterProc(TIComponentInterface,'GetPropName',mtMethod,TypeInfo(_T5),[TypeInfo(Integer),TypeInfo(string)],  getVMTProcAddr('TIComponentInterface','GetPropName',32),cStdCall);


//RegisterProc(TIComponentInterface,'GetPropType',mtMethod,TypeInfo(_T6),[TypeInfo(Integer),TypeInfo(TPropertyType)], pointer(36),cStdCall);
RegisterProc(TIComponentInterface,'GetPropType',mtMethod,TypeInfo(_T6),[TypeInfo(Integer),TypeInfo(TPropertyType)],  getVMTProcAddr('TIComponentInterface','GetPropType',36),cStdCall);


//RegisterProc(TIComponentInterface,'GetPropTypeByName',mtMethod,TypeInfo(_T7),[TypeInfo(string),TypeInfo(TPropertyType)], pointer(40),cStdCall);
RegisterProc(TIComponentInterface,'GetPropTypeByName',mtMethod,TypeInfo(_T7),[TypeInfo(string),TypeInfo(TPropertyType)],  getVMTProcAddr('TIComponentInterface','GetPropTypeByName',40),cStdCall);


//RegisterProc(TIComponentInterface,'GetPropValue',mtMethod,TypeInfo(_T8),[TypeInfo(Integer),TypeInfoUntyped,TypeInfo(Boolean)], pointer(44),cStdCall);
RegisterProc(TIComponentInterface,'GetPropValue',mtMethod,TypeInfo(_T8),[TypeInfo(Integer),TypeInfoUntyped,TypeInfo(Boolean)],  getVMTProcAddr('TIComponentInterface','GetPropValue',44),cStdCall);


//RegisterProc(TIComponentInterface,'GetPropValueByName',mtMethod,TypeInfo(_T9),[TypeInfo(string),TypeInfoUntyped,TypeInfo(Boolean)], pointer(48),cStdCall);
RegisterProc(TIComponentInterface,'GetPropValueByName',mtMethod,TypeInfo(_T9),[TypeInfo(string),TypeInfoUntyped,TypeInfo(Boolean)],  getVMTProcAddr('TIComponentInterface','GetPropValueByName',48),cStdCall);


//RegisterProc(TIComponentInterface,'SetProp',mtMethod,TypeInfo(_T10),[TypeInfo(Integer),TypeInfoUntyped,TypeInfo(Boolean)], pointer(52),cStdCall);
RegisterProc(TIComponentInterface,'SetProp',mtMethod,TypeInfo(_T10),[TypeInfo(Integer),TypeInfoUntyped,TypeInfo(Boolean)],  getVMTProcAddr('TIComponentInterface','SetProp',52),cStdCall);


//RegisterProc(TIComponentInterface,'SetPropByName',mtMethod,TypeInfo(_T11),[TypeInfo(string),TypeInfoUntyped,TypeInfo(Boolean)], pointer(56),cStdCall);
RegisterProc(TIComponentInterface,'SetPropByName',mtMethod,TypeInfo(_T11),[TypeInfo(string),TypeInfoUntyped,TypeInfo(Boolean)],  getVMTProcAddr('TIComponentInterface','SetPropByName',56),cStdCall);


//RegisterProc(TIComponentInterface,'GetControlCount',mtMethod,TypeInfo(_T13),[TypeInfo(Integer)], pointer(64),cStdCall);
RegisterProc(TIComponentInterface,'GetControlCount',mtMethod,TypeInfo(_T13),[TypeInfo(Integer)],  getVMTProcAddr('TIComponentInterface','GetControlCount',64),cStdCall);


//RegisterProc(TIComponentInterface,'GetControl',mtMethod,TypeInfo(_T14),[TypeInfo(Integer),TypeInfo(TIComponentInterface)], pointer(68),cStdCall);
RegisterProc(TIComponentInterface,'GetControl',mtMethod,TypeInfo(_T14),[TypeInfo(Integer),TypeInfo(TIComponentInterface)],  getVMTProcAddr('TIComponentInterface','GetControl',68),cStdCall);


//RegisterProc(TIComponentInterface,'GetComponentCount',mtMethod,TypeInfo(_T15),[TypeInfo(Integer)], pointer(72),cStdCall);
RegisterProc(TIComponentInterface,'GetComponentCount',mtMethod,TypeInfo(_T15),[TypeInfo(Integer)],  getVMTProcAddr('TIComponentInterface','GetComponentCount',72),cStdCall);


//RegisterProc(TIComponentInterface,'GetComponent',mtMethod,TypeInfo(_T16),[TypeInfo(Integer),TypeInfo(TIComponentInterface)], pointer(76),cStdCall);
RegisterProc(TIComponentInterface,'GetComponent',mtMethod,TypeInfo(_T16),[TypeInfo(Integer),TypeInfo(TIComponentInterface)],  getVMTProcAddr('TIComponentInterface','GetComponent',76),cStdCall);


//RegisterProc(TIComponentInterface,'Select',mtMethod,TypeInfo(_T17),[TypeInfo(Boolean)], pointer(80),cStdCall);
RegisterProc(TIComponentInterface,'Select',mtMethod,TypeInfo(_T17),[TypeInfo(Boolean)],  getVMTProcAddr('TIComponentInterface','Select',80),cStdCall);


//RegisterProc(TIComponentInterface,'Focus',mtMethod,TypeInfo(_T18),[TypeInfo(Boolean)], pointer(84),cStdCall);
RegisterProc(TIComponentInterface,'Focus',mtMethod,TypeInfo(_T18),[TypeInfo(Boolean)],  getVMTProcAddr('TIComponentInterface','Focus',84),cStdCall);


//RegisterProc(TIComponentInterface,'Delete',mtMethod,TypeInfo(_T19),[TypeInfo(Boolean)], pointer(88),cStdCall);
RegisterProc(TIComponentInterface,'Delete',mtMethod,TypeInfo(_T19),[TypeInfo(Boolean)],  getVMTProcAddr('TIComponentInterface','Delete',88),cStdCall);


//RegisterProc(TIEditorInterface,'CreateReader',mtMethod,TypeInfo(_T20),[TypeInfo(TIEditReader)], pointer(12),cStdCall);
RegisterProc(TIEditorInterface,'CreateReader',mtMethod,TypeInfo(_T20),[TypeInfo(TIEditReader)],  getVMTProcAddr('TIEditorInterface','CreateReader',12),cStdCall);


//RegisterProc(TIEditorInterface,'CreateWriter',mtMethod,TypeInfo(_T21),[TypeInfo(TIEditWriter)], pointer(16),cStdCall);
RegisterProc(TIEditorInterface,'CreateWriter',mtMethod,TypeInfo(_T21),[TypeInfo(TIEditWriter)],  getVMTProcAddr('TIEditorInterface','CreateWriter',16),cStdCall);


//RegisterProc(TIEditorInterface,'FileName',mtMethod,TypeInfo(_T22),[TypeInfo(string)], pointer(20),cStdCall);
RegisterProc(TIEditorInterface,'FileName',mtMethod,TypeInfo(_T22),[TypeInfo(string)],  getVMTProcAddr('TIEditorInterface','FileName',20),cStdCall);


//RegisterProc(TIEditorInterface,'LinesInBuffer',mtMethod,TypeInfo(_T23),[TypeInfo(Longint)], pointer(24),cStdCall);
RegisterProc(TIEditorInterface,'LinesInBuffer',mtMethod,TypeInfo(_T23),[TypeInfo(Longint)],  getVMTProcAddr('TIEditorInterface','LinesInBuffer',24),cStdCall);


//RegisterProc(TIEditorInterface,'BufferModified',mtMethod,TypeInfo(_T24),[TypeInfo(Boolean)], pointer(28),cStdCall);
RegisterProc(TIEditorInterface,'BufferModified',mtMethod,TypeInfo(_T24),[TypeInfo(Boolean)],  getVMTProcAddr('TIEditorInterface','BufferModified',28),cStdCall);


//RegisterProc(TIEditorInterface,'MarkModified',mtMethod,TypeInfo(_T25),[TypeInfo(Boolean)], pointer(32),cStdCall);
RegisterProc(TIEditorInterface,'MarkModified',mtMethod,TypeInfo(_T25),[TypeInfo(Boolean)],  getVMTProcAddr('TIEditorInterface','MarkModified',32),cStdCall);


//RegisterProc(TIEditorInterface,'SetSyntaxHighlighter',mtMethod,TypeInfo(_T26),[TypeInfo(TSyntaxHighlighter),TypeInfo(TSyntaxHighlighter)], pointer(36),cStdCall);
RegisterProc(TIEditorInterface,'SetSyntaxHighlighter',mtMethod,TypeInfo(_T26),[TypeInfo(TSyntaxHighlighter),TypeInfo(TSyntaxHighlighter)],  getVMTProcAddr('TIEditorInterface','SetSyntaxHighlighter',36),cStdCall);


//RegisterProc(TIEditorInterface,'GetViewCount',mtMethod,TypeInfo(_T27),[TypeInfo(Integer)], pointer(40),cStdCall);
RegisterProc(TIEditorInterface,'GetViewCount',mtMethod,TypeInfo(_T27),[TypeInfo(Integer)],  getVMTProcAddr('TIEditorInterface','GetViewCount',40),cStdCall);


//RegisterProc(TIEditorInterface,'GetView',mtMethod,TypeInfo(_T28),[TypeInfo(Integer),TypeInfo(TIEditView)], pointer(44),cStdCall);
RegisterProc(TIEditorInterface,'GetView',mtMethod,TypeInfo(_T28),[TypeInfo(Integer),TypeInfo(TIEditView)],  getVMTProcAddr('TIEditorInterface','GetView',44),cStdCall);


//RegisterProc(TIEditorInterface,'CreateUndoableWriter',mtMethod,TypeInfo(_T29),[TypeInfo(TIEditWriter)], pointer(48),cStdCall);
RegisterProc(TIEditorInterface,'CreateUndoableWriter',mtMethod,TypeInfo(_T29),[TypeInfo(TIEditWriter)],  getVMTProcAddr('TIEditorInterface','CreateUndoableWriter',48),cStdCall);


//RegisterProc(TIEditorInterface,'GetBlockAfter',mtMethod,TypeInfo(_T30),[TypeInfo(IDispatch)], pointer(52),cRegister);
RegisterProc(TIEditorInterface,'GetBlockAfter',mtMethod,TypeInfo(_T30),[TypeInfo(IDispatch)],  getVMTProcAddr('TIEditorInterface','GetBlockAfter',52),cRegister);


//RegisterProc(TIEditorInterface,'GetBlockStart',mtMethod,TypeInfo(_T31),[TypeInfo(IDispatch)], pointer(56),cRegister);
RegisterProc(TIEditorInterface,'GetBlockStart',mtMethod,TypeInfo(_T31),[TypeInfo(IDispatch)],  getVMTProcAddr('TIEditorInterface','GetBlockStart',56),cRegister);


//RegisterProc(TIEditorInterface,'GetBlockType',mtMethod,TypeInfo(_T32),[TypeInfo(TBlockType)], pointer(60),cStdCall);
RegisterProc(TIEditorInterface,'GetBlockType',mtMethod,TypeInfo(_T32),[TypeInfo(TBlockType)],  getVMTProcAddr('TIEditorInterface','GetBlockType',60),cStdCall);


//RegisterProc(TIEditorInterface,'GetBlockVisible',mtMethod,TypeInfo(_T33),[TypeInfo(Boolean)], pointer(64),cStdCall);
RegisterProc(TIEditorInterface,'GetBlockVisible',mtMethod,TypeInfo(_T33),[TypeInfo(Boolean)],  getVMTProcAddr('TIEditorInterface','GetBlockVisible',64),cStdCall);


//RegisterProc(TIEditorInterface,'SetBlockAfter',mtMethod,TypeInfo(_T34),[TypeInfo(IDispatch)], pointer(68),cRegister);
RegisterProc(TIEditorInterface,'SetBlockAfter',mtMethod,TypeInfo(_T34),[TypeInfo(IDispatch)],  getVMTProcAddr('TIEditorInterface','SetBlockAfter',68),cRegister);


//RegisterProc(TIEditorInterface,'SetBlockStart',mtMethod,TypeInfo(_T35),[TypeInfo(IDispatch)], pointer(72),cRegister);
RegisterProc(TIEditorInterface,'SetBlockStart',mtMethod,TypeInfo(_T35),[TypeInfo(IDispatch)],  getVMTProcAddr('TIEditorInterface','SetBlockStart',72),cRegister);


//RegisterProc(TIEditorInterface,'SetBlockType',mtMethod,TypeInfo(_T36),[TypeInfo(TBlockType)], pointer(76),cStdCall);
RegisterProc(TIEditorInterface,'SetBlockType',mtMethod,TypeInfo(_T36),[TypeInfo(TBlockType)],  getVMTProcAddr('TIEditorInterface','SetBlockType',76),cStdCall);


//RegisterProc(TIEditorInterface,'SetBlockVisible',mtMethod,TypeInfo(_T37),[TypeInfo(Boolean)], pointer(80),cStdCall);
RegisterProc(TIEditorInterface,'SetBlockVisible',mtMethod,TypeInfo(_T37),[TypeInfo(Boolean)],  getVMTProcAddr('TIEditorInterface','SetBlockVisible',80),cStdCall);


//RegisterProc(TIEditView,'GetPos',mtMethod,TypeInfo(_T39),[TypeInfo(Integer),TypeInfo(IDispatch)], pointer(12),cRegister);
RegisterProc(TIEditView,'GetPos',mtMethod,TypeInfo(_T39),[TypeInfo(Integer),TypeInfo(IDispatch)],  getVMTProcAddr('TIEditView','GetPos',12),cRegister);


//RegisterProc(TIEditView,'SetPos',mtMethod,TypeInfo(_T40),[TypeInfo(Integer),TypeInfo(IDispatch)], pointer(16),cRegister);
RegisterProc(TIEditView,'SetPos',mtMethod,TypeInfo(_T40),[TypeInfo(Integer),TypeInfo(IDispatch)],  getVMTProcAddr('TIEditView','SetPos',16),cRegister);


//RegisterProc(TIEditView,'GetViewSize',mtMethod,TypeInfo(_T41),[TypeInfo(IDispatch)], pointer(20),cRegister);
RegisterProc(TIEditView,'GetViewSize',mtMethod,TypeInfo(_T41),[TypeInfo(IDispatch)],  getVMTProcAddr('TIEditView','GetViewSize',20),cRegister);


//RegisterProc(TIEditView,'PosToCharPos',mtMethod,TypeInfo(_T42),[TypeInfo(Longint),TypeInfo(IDispatch)], pointer(24),cRegister);
RegisterProc(TIEditView,'PosToCharPos',mtMethod,TypeInfo(_T42),[TypeInfo(Longint),TypeInfo(IDispatch)],  getVMTProcAddr('TIEditView','PosToCharPos',24),cRegister);


//RegisterProc(TIEditView,'CharPosToPos',mtMethod,TypeInfo(_T43),[TypeInfo(IDispatch),TypeInfo(Longint)], pointer(28),cRegister);
RegisterProc(TIEditView,'CharPosToPos',mtMethod,TypeInfo(_T43),[TypeInfo(IDispatch),TypeInfo(Longint)],  getVMTProcAddr('TIEditView','CharPosToPos',28),cRegister);


//RegisterProc(TIEditView,'ConvertPos',mtMethod,TypeInfo(_T44),[TypeInfo(Boolean),TypeInfo(IDispatch),TypeInfo(IDispatch)], pointer(32),cRegister);
RegisterProc(TIEditView,'ConvertPos',mtMethod,TypeInfo(_T44),[TypeInfo(Boolean),TypeInfo(IDispatch),TypeInfo(IDispatch)],  getVMTProcAddr('TIEditView','ConvertPos',32),cRegister);


//RegisterProc(TIEditView,'GetAttributeAtPos',mtMethod,TypeInfo(_T45),[TypeInfo(IDispatch),TypeInfo(Integer),TypeInfo(Integer)], pointer(36),cRegister);
RegisterProc(TIEditView,'GetAttributeAtPos',mtMethod,TypeInfo(_T45),[TypeInfo(IDispatch),TypeInfo(Integer),TypeInfo(Integer)],  getVMTProcAddr('TIEditView','GetAttributeAtPos',36),cRegister);


//RegisterProc(TIEditWriter,'CopyTo',mtMethod,TypeInfo(_T46),[TypeInfo(Longint),TypeInfo(Boolean)], pointer(12),cStdCall);
RegisterProc(TIEditWriter,'CopyTo',mtMethod,TypeInfo(_T46),[TypeInfo(Longint),TypeInfo(Boolean)],  getVMTProcAddr('TIEditWriter','CopyTo',12),cStdCall);


//RegisterProc(TIEditWriter,'DeleteTo',mtMethod,TypeInfo(_T47),[TypeInfo(Longint),TypeInfo(Boolean)], pointer(16),cStdCall);
RegisterProc(TIEditWriter,'DeleteTo',mtMethod,TypeInfo(_T47),[TypeInfo(Longint),TypeInfo(Boolean)],  getVMTProcAddr('TIEditWriter','DeleteTo',16),cStdCall);


//RegisterProc(TIEditWriter,'Position',mtMethod,TypeInfo(_T49),[TypeInfo(Longint)], pointer(24),cStdCall);
RegisterProc(TIEditWriter,'Position',mtMethod,TypeInfo(_T49),[TypeInfo(Longint)],  getVMTProcAddr('TIEditWriter','Position',24),cStdCall);


//RegisterProc(TIEditWriter,'GetCurrentPos',mtMethod,TypeInfo(_T50),[TypeInfo(IDispatch)], pointer(28),cRegister);
RegisterProc(TIEditWriter,'GetCurrentPos',mtMethod,TypeInfo(_T50),[TypeInfo(IDispatch)],  getVMTProcAddr('TIEditWriter','GetCurrentPos',28),cRegister);


//RegisterProc(TIFormInterface,'FileName',mtMethod,TypeInfo(_T51),[TypeInfo(string)], pointer(12),cStdCall);
RegisterProc(TIFormInterface,'FileName',mtMethod,TypeInfo(_T51),[TypeInfo(string)],  getVMTProcAddr('TIFormInterface','FileName',12),cStdCall);


//RegisterProc(TIFormInterface,'FormModified',mtMethod,TypeInfo(_T52),[TypeInfo(Boolean)], pointer(16),cStdCall);
RegisterProc(TIFormInterface,'FormModified',mtMethod,TypeInfo(_T52),[TypeInfo(Boolean)],  getVMTProcAddr('TIFormInterface','FormModified',16),cStdCall);


//RegisterProc(TIFormInterface,'MarkModified',mtMethod,TypeInfo(_T53),[TypeInfo(Boolean)], pointer(20),cStdCall);
RegisterProc(TIFormInterface,'MarkModified',mtMethod,TypeInfo(_T53),[TypeInfo(Boolean)],  getVMTProcAddr('TIFormInterface','MarkModified',20),cStdCall);


//RegisterProc(TIFormInterface,'GetFormComponent',mtMethod,TypeInfo(_T54),[TypeInfo(TIComponentInterface)], pointer(24),cStdCall);
RegisterProc(TIFormInterface,'GetFormComponent',mtMethod,TypeInfo(_T54),[TypeInfo(TIComponentInterface)],  getVMTProcAddr('TIFormInterface','GetFormComponent',24),cStdCall);


//RegisterProc(TIFormInterface,'FindComponent',mtMethod,TypeInfo(_T55),[TypeInfo(string),TypeInfo(TIComponentInterface)], pointer(28),cStdCall);
RegisterProc(TIFormInterface,'FindComponent',mtMethod,TypeInfo(_T55),[TypeInfo(string),TypeInfo(TIComponentInterface)],  getVMTProcAddr('TIFormInterface','FindComponent',28),cStdCall);


//RegisterProc(TIFormInterface,'GetComponentFromHandle',mtMethod,TypeInfo(_T56),[TypeInfoPointer,TypeInfo(TIComponentInterface)], pointer(32),cStdCall);
RegisterProc(TIFormInterface,'GetComponentFromHandle',mtMethod,TypeInfo(_T56),[TypeInfoPointer,TypeInfo(TIComponentInterface)],  getVMTProcAddr('TIFormInterface','GetComponentFromHandle',32),cStdCall);


//RegisterProc(TIFormInterface,'GetSelCount',mtMethod,TypeInfo(_T57),[TypeInfo(Integer)], pointer(36),cStdCall);
RegisterProc(TIFormInterface,'GetSelCount',mtMethod,TypeInfo(_T57),[TypeInfo(Integer)],  getVMTProcAddr('TIFormInterface','GetSelCount',36),cStdCall);


//RegisterProc(TIFormInterface,'GetSelComponent',mtMethod,TypeInfo(_T58),[TypeInfo(Integer),TypeInfo(TIComponentInterface)], pointer(40),cStdCall);
RegisterProc(TIFormInterface,'GetSelComponent',mtMethod,TypeInfo(_T58),[TypeInfo(Integer),TypeInfo(TIComponentInterface)],  getVMTProcAddr('TIFormInterface','GetSelComponent',40),cStdCall);


//RegisterProc(TIFormInterface,'GetCreateParent',mtMethod,TypeInfo(_T59),[TypeInfo(TIComponentInterface)], pointer(44),cStdCall);
RegisterProc(TIFormInterface,'GetCreateParent',mtMethod,TypeInfo(_T59),[TypeInfo(TIComponentInterface)],  getVMTProcAddr('TIFormInterface','GetCreateParent',44),cStdCall);


//RegisterProc(TIFormInterface,'CreateComponent',mtMethod,TypeInfo(_T60),[TypeInfo(TIComponentInterface),TypeInfo(string),TypeInfo(Integer),TypeInfo(Integer),TypeInfo(Integer),TypeInfo(Integer),TypeInfo(TIComponentInterface)], pointer(48),cStdCall);
RegisterProc(TIFormInterface,'CreateComponent',mtMethod,TypeInfo(_T60),[TypeInfo(TIComponentInterface),TypeInfo(string),TypeInfo(Integer),TypeInfo(Integer),TypeInfo(Integer),TypeInfo(Integer),TypeInfo(TIComponentInterface)],  getVMTProcAddr('TIFormInterface','CreateComponent',48),cStdCall);


//RegisterProc(TIModuleCreator,'Existing',mtMethod,TypeInfo(_T61),[TypeInfo(Boolean)], pointer(12),cStdCall);
RegisterProc(TIModuleCreator,'Existing',mtMethod,TypeInfo(_T61),[TypeInfo(Boolean)],  getVMTProcAddr('TIModuleCreator','Existing',12),cStdCall);


//RegisterProc(TIModuleCreator,'GetAncestorName',mtMethod,TypeInfo(_T62),[TypeInfo(string)], pointer(16),cStdCall);
RegisterProc(TIModuleCreator,'GetAncestorName',mtMethod,TypeInfo(_T62),[TypeInfo(string)],  getVMTProcAddr('TIModuleCreator','GetAncestorName',16),cStdCall);


//RegisterProc(TIModuleCreator,'GetFileName',mtMethod,TypeInfo(_T63),[TypeInfo(string)], pointer(20),cStdCall);
RegisterProc(TIModuleCreator,'GetFileName',mtMethod,TypeInfo(_T63),[TypeInfo(string)],  getVMTProcAddr('TIModuleCreator','GetFileName',20),cStdCall);


//RegisterProc(TIModuleCreator,'GetFileSystem',mtMethod,TypeInfo(_T64),[TypeInfo(string)], pointer(24),cStdCall);
RegisterProc(TIModuleCreator,'GetFileSystem',mtMethod,TypeInfo(_T64),[TypeInfo(string)],  getVMTProcAddr('TIModuleCreator','GetFileSystem',24),cStdCall);


//RegisterProc(TIModuleCreator,'GetFormName',mtMethod,TypeInfo(_T65),[TypeInfo(string)], pointer(28),cStdCall);
RegisterProc(TIModuleCreator,'GetFormName',mtMethod,TypeInfo(_T65),[TypeInfo(string)],  getVMTProcAddr('TIModuleCreator','GetFormName',28),cStdCall);


//RegisterProc(TIModuleCreator,'NewModuleSource',mtMethod,TypeInfo(_T66),[TypeInfo(string),TypeInfo(string),TypeInfo(string),TypeInfo(string)], pointer(32),cStdCall);
RegisterProc(TIModuleCreator,'NewModuleSource',mtMethod,TypeInfo(_T66),[TypeInfo(string),TypeInfo(string),TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TIModuleCreator','NewModuleSource',32),cStdCall);


//RegisterProc(TIModuleCreator,'FormCreated',mtMethod,TypeInfo(_T67),[TypeInfo(TIFormInterface)], pointer(36),cStdCall);
RegisterProc(TIModuleCreator,'FormCreated',mtMethod,TypeInfo(_T67),[TypeInfo(TIFormInterface)],  getVMTProcAddr('TIModuleCreator','FormCreated',36),cStdCall);


//RegisterProc(TIModuleCreatorEx,'GetIntfName',mtMethod,TypeInfo(_T68),[TypeInfo(string)], pointer(40),cStdCall);
RegisterProc(TIModuleCreatorEx,'GetIntfName',mtMethod,TypeInfo(_T68),[TypeInfo(string)],  getVMTProcAddr('TIModuleCreatorEx','GetIntfName',40),cStdCall);


//RegisterProc(TIModuleCreatorEx,'NewIntfSource',mtMethod,TypeInfo(_T69),[TypeInfo(string),TypeInfo(string),TypeInfo(string),TypeInfo(string)], pointer(44),cStdCall);
RegisterProc(TIModuleCreatorEx,'NewIntfSource',mtMethod,TypeInfo(_T69),[TypeInfo(string),TypeInfo(string),TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TIModuleCreatorEx','NewIntfSource',44),cStdCall);


//RegisterProc(TIModuleInterface,'GetEditorInterface',mtMethod,TypeInfo(_T70),[TypeInfo(TIEditorInterface)], pointer(12),cStdCall);
RegisterProc(TIModuleInterface,'GetEditorInterface',mtMethod,TypeInfo(_T70),[TypeInfo(TIEditorInterface)],  getVMTProcAddr('TIModuleInterface','GetEditorInterface',12),cStdCall);


//RegisterProc(TIModuleInterface,'GetFormInterface',mtMethod,TypeInfo(_T71),[TypeInfo(TIFormInterface)], pointer(16),cStdCall);
RegisterProc(TIModuleInterface,'GetFormInterface',mtMethod,TypeInfo(_T71),[TypeInfo(TIFormInterface)],  getVMTProcAddr('TIModuleInterface','GetFormInterface',16),cStdCall);


//RegisterProc(TIModuleInterface,'GetAncestorModule',mtMethod,TypeInfo(_T72),[TypeInfo(TIModuleInterface)], pointer(20),cStdCall);
RegisterProc(TIModuleInterface,'GetAncestorModule',mtMethod,TypeInfo(_T72),[TypeInfo(TIModuleInterface)],  getVMTProcAddr('TIModuleInterface','GetAncestorModule',20),cStdCall);


//RegisterProc(TIModuleInterface,'GetProjectResource',mtMethod,TypeInfo(_T73),[TypeInfo(TIResourceFile)], pointer(24),cStdCall);
RegisterProc(TIModuleInterface,'GetProjectResource',mtMethod,TypeInfo(_T73),[TypeInfo(TIResourceFile)],  getVMTProcAddr('TIModuleInterface','GetProjectResource',24),cStdCall);


//RegisterProc(TIModuleInterface,'IsProjectModule',mtMethod,TypeInfo(_T74),[TypeInfo(Boolean)], pointer(28),cStdCall);
RegisterProc(TIModuleInterface,'IsProjectModule',mtMethod,TypeInfo(_T74),[TypeInfo(Boolean)],  getVMTProcAddr('TIModuleInterface','IsProjectModule',28),cStdCall);


//RegisterProc(TIModuleInterface,'Close',mtMethod,TypeInfo(_T75),[TypeInfo(Boolean)], pointer(32),cStdCall);
RegisterProc(TIModuleInterface,'Close',mtMethod,TypeInfo(_T75),[TypeInfo(Boolean)],  getVMTProcAddr('TIModuleInterface','Close',32),cStdCall);


//RegisterProc(TIModuleInterface,'Save',mtMethod,TypeInfo(_T76),[TypeInfo(Boolean),TypeInfo(Boolean)], pointer(36),cStdCall);
RegisterProc(TIModuleInterface,'Save',mtMethod,TypeInfo(_T76),[TypeInfo(Boolean),TypeInfo(Boolean)],  getVMTProcAddr('TIModuleInterface','Save',36),cStdCall);


//RegisterProc(TIModuleInterface,'Rename',mtMethod,TypeInfo(_T77),[TypeInfo(string),TypeInfo(Boolean)], pointer(40),cStdCall);
RegisterProc(TIModuleInterface,'Rename',mtMethod,TypeInfo(_T77),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TIModuleInterface','Rename',40),cStdCall);


//RegisterProc(TIModuleInterface,'GetFileSystem',mtMethod,TypeInfo(_T78),[TypeInfo(string),TypeInfo(Boolean)], pointer(44),cStdCall);
RegisterProc(TIModuleInterface,'GetFileSystem',mtMethod,TypeInfo(_T78),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TIModuleInterface','GetFileSystem',44),cStdCall);


//RegisterProc(TIModuleInterface,'SetFileSystem',mtMethod,TypeInfo(_T79),[TypeInfo(string),TypeInfo(Boolean)], pointer(48),cStdCall);
RegisterProc(TIModuleInterface,'SetFileSystem',mtMethod,TypeInfo(_T79),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TIModuleInterface','SetFileSystem',48),cStdCall);


//RegisterProc(TIModuleInterface,'ShowSource',mtMethod,TypeInfo(_T80),[TypeInfo(Boolean)], pointer(52),cStdCall);
RegisterProc(TIModuleInterface,'ShowSource',mtMethod,TypeInfo(_T80),[TypeInfo(Boolean)],  getVMTProcAddr('TIModuleInterface','ShowSource',52),cStdCall);


//RegisterProc(TIModuleInterface,'ShowForm',mtMethod,TypeInfo(_T81),[TypeInfo(Boolean)], pointer(56),cStdCall);
RegisterProc(TIModuleInterface,'ShowForm',mtMethod,TypeInfo(_T81),[TypeInfo(Boolean)],  getVMTProcAddr('TIModuleInterface','ShowForm',56),cStdCall);


//RegisterProc(TIModuleInterface,'AddNotifier',mtMethod,TypeInfo(_T82),[TypeInfo(TIModuleNotifier),TypeInfo(Boolean)], pointer(60),cStdCall);
RegisterProc(TIModuleInterface,'AddNotifier',mtMethod,TypeInfo(_T82),[TypeInfo(TIModuleNotifier),TypeInfo(Boolean)],  getVMTProcAddr('TIModuleInterface','AddNotifier',60),cStdCall);


//RegisterProc(TIModuleInterface,'RemoveNotifier',mtMethod,TypeInfo(_T83),[TypeInfo(TIModuleNotifier),TypeInfo(Boolean)], pointer(64),cStdCall);
RegisterProc(TIModuleInterface,'RemoveNotifier',mtMethod,TypeInfo(_T83),[TypeInfo(TIModuleNotifier),TypeInfo(Boolean)],  getVMTProcAddr('TIModuleInterface','RemoveNotifier',64),cStdCall);


//RegisterProc(TIModuleInterface,'GetAuxEditorInterface',mtMethod,TypeInfo(_T84),[TypeInfo(TIEditorInterface)], pointer(68),cStdCall);
RegisterProc(TIModuleInterface,'GetAuxEditorInterface',mtMethod,TypeInfo(_T84),[TypeInfo(TIEditorInterface)],  getVMTProcAddr('TIModuleInterface','GetAuxEditorInterface',68),cStdCall);


//RegisterProc(TIModuleNotifier,'Notify',mtMethod,TypeInfo(_T85),[TypeInfo(TNotifyCode)], pointer(12),cStdCall);
RegisterProc(TIModuleNotifier,'Notify',mtMethod,TypeInfo(_T85),[TypeInfo(TNotifyCode)],  getVMTProcAddr('TIModuleNotifier','Notify',12),cStdCall);


//RegisterProc(TIModuleNotifier,'ComponentRenamed',mtMethod,TypeInfo(_T86),[TypeInfo(TComponent),TypeInfo(string),TypeInfo(string)], pointer(16),cStdCall);
RegisterProc(TIModuleNotifier,'ComponentRenamed',mtMethod,TypeInfo(_T86),[TypeInfo(TComponent),TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TIModuleNotifier','ComponentRenamed',16),cStdCall);


//RegisterProc(TIProjectCreator,'Existing',mtMethod,TypeInfo(_T87),[TypeInfo(Boolean)], pointer(12),cStdCall);
RegisterProc(TIProjectCreator,'Existing',mtMethod,TypeInfo(_T87),[TypeInfo(Boolean)],  getVMTProcAddr('TIProjectCreator','Existing',12),cStdCall);


//RegisterProc(TIProjectCreator,'GetFileName',mtMethod,TypeInfo(_T88),[TypeInfo(string)], pointer(16),cStdCall);
RegisterProc(TIProjectCreator,'GetFileName',mtMethod,TypeInfo(_T88),[TypeInfo(string)],  getVMTProcAddr('TIProjectCreator','GetFileName',16),cStdCall);


//RegisterProc(TIProjectCreator,'GetFileSystem',mtMethod,TypeInfo(_T89),[TypeInfo(string)], pointer(20),cStdCall);
RegisterProc(TIProjectCreator,'GetFileSystem',mtMethod,TypeInfo(_T89),[TypeInfo(string)],  getVMTProcAddr('TIProjectCreator','GetFileSystem',20),cStdCall);


//RegisterProc(TIProjectCreator,'NewProjectSource',mtMethod,TypeInfo(_T90),[TypeInfo(string),TypeInfo(string)], pointer(24),cStdCall);
RegisterProc(TIProjectCreator,'NewProjectSource',mtMethod,TypeInfo(_T90),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TIProjectCreator','NewProjectSource',24),cStdCall);


//RegisterProc(TIProjectCreator,'NewDefaultModule',mtMethod,TypeInfo(_T91),NoParams, pointer(28),cStdCall);
RegisterProc(TIProjectCreator,'NewDefaultModule',mtMethod,TypeInfo(_T91),NoParams,  getVMTProcAddr('TIProjectCreator','NewDefaultModule',28),cStdCall);


//RegisterProc(TIProjectCreator,'NewProjectResource',mtMethod,TypeInfo(_T92),[TypeInfo(TIModuleInterface)], pointer(32),cStdCall);
RegisterProc(TIProjectCreator,'NewProjectResource',mtMethod,TypeInfo(_T92),[TypeInfo(TIModuleInterface)],  getVMTProcAddr('TIProjectCreator','NewProjectResource',32),cStdCall);


//RegisterProc(TIProjectCreatorEx,'GetOptionName',mtMethod,TypeInfo(_T93),[TypeInfo(string)], pointer(36),cStdCall);
RegisterProc(TIProjectCreatorEx,'GetOptionName',mtMethod,TypeInfo(_T93),[TypeInfo(string)],  getVMTProcAddr('TIProjectCreatorEx','GetOptionName',36),cStdCall);


//RegisterProc(TIProjectCreatorEx,'NewOptionSource',mtMethod,TypeInfo(_T94),[TypeInfo(string),TypeInfo(string)], pointer(40),cStdCall);
RegisterProc(TIProjectCreatorEx,'NewOptionSource',mtMethod,TypeInfo(_T94),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TIProjectCreatorEx','NewOptionSource',40),cStdCall);


//RegisterProc(TIResourceEntry,'GetResourceType',mtMethod,TypeInfo(_T95),[TypeInfoPChar], pointer(12),cStdCall);
RegisterProc(TIResourceEntry,'GetResourceType',mtMethod,TypeInfo(_T95),[TypeInfoPChar],  getVMTProcAddr('TIResourceEntry','GetResourceType',12),cStdCall);


//RegisterProc(TIResourceEntry,'GetResourceName',mtMethod,TypeInfo(_T96),[TypeInfoPChar], pointer(16),cStdCall);
RegisterProc(TIResourceEntry,'GetResourceName',mtMethod,TypeInfo(_T96),[TypeInfoPChar],  getVMTProcAddr('TIResourceEntry','GetResourceName',16),cStdCall);


//RegisterProc(TIResourceEntry,'GetHeaderValue',mtMethod,TypeInfo(_T98),[TypeInfo(TResHeaderValue),TypeInfo(Integer),TypeInfo(Boolean)], pointer(24),cStdCall);
RegisterProc(TIResourceEntry,'GetHeaderValue',mtMethod,TypeInfo(_T98),[TypeInfo(TResHeaderValue),TypeInfo(Integer),TypeInfo(Boolean)],  getVMTProcAddr('TIResourceEntry','GetHeaderValue',24),cStdCall);


//RegisterProc(TIResourceEntry,'SetHeaderValue',mtMethod,TypeInfo(_T99),[TypeInfo(TResHeaderValue),TypeInfo(Integer),TypeInfo(Boolean)], pointer(28),cStdCall);
RegisterProc(TIResourceEntry,'SetHeaderValue',mtMethod,TypeInfo(_T99),[TypeInfo(TResHeaderValue),TypeInfo(Integer),TypeInfo(Boolean)],  getVMTProcAddr('TIResourceEntry','SetHeaderValue',28),cStdCall);


//RegisterProc(TIResourceEntry,'GetData',mtMethod,TypeInfo(_T100),[TypeInfoPointer], pointer(32),cStdCall);
RegisterProc(TIResourceEntry,'GetData',mtMethod,TypeInfo(_T100),[TypeInfoPointer],  getVMTProcAddr('TIResourceEntry','GetData',32),cStdCall);


//RegisterProc(TIResourceEntry,'GetDataSize',mtMethod,TypeInfo(_T101),[TypeInfo(Integer)], pointer(36),cStdCall);
RegisterProc(TIResourceEntry,'GetDataSize',mtMethod,TypeInfo(_T101),[TypeInfo(Integer)],  getVMTProcAddr('TIResourceEntry','GetDataSize',36),cStdCall);


//RegisterProc(TIResourceEntry,'SetDataSize',mtMethod,TypeInfo(_T102),[TypeInfo(Integer),TypeInfo(Boolean)], pointer(40),cStdCall);
RegisterProc(TIResourceEntry,'SetDataSize',mtMethod,TypeInfo(_T102),[TypeInfo(Integer),TypeInfo(Boolean)],  getVMTProcAddr('TIResourceEntry','SetDataSize',40),cStdCall);


//RegisterProc(TIResourceEntry,'GetEntryHandle',mtMethod,TypeInfo(_T103),[TypeInfoPointer], pointer(44),cStdCall);
RegisterProc(TIResourceEntry,'GetEntryHandle',mtMethod,TypeInfo(_T103),[TypeInfoPointer],  getVMTProcAddr('TIResourceEntry','GetEntryHandle',44),cStdCall);


//RegisterProc(TIResourceFile,'FileName',mtMethod,TypeInfo(_T104),[TypeInfo(string)], pointer(12),cStdCall);
RegisterProc(TIResourceFile,'FileName',mtMethod,TypeInfo(_T104),[TypeInfo(string)],  getVMTProcAddr('TIResourceFile','FileName',12),cStdCall);


//RegisterProc(TIResourceFile,'GetEntryCount',mtMethod,TypeInfo(_T105),[TypeInfo(Integer)], pointer(16),cStdCall);
RegisterProc(TIResourceFile,'GetEntryCount',mtMethod,TypeInfo(_T105),[TypeInfo(Integer)],  getVMTProcAddr('TIResourceFile','GetEntryCount',16),cStdCall);


//RegisterProc(TIResourceFile,'GetEntry',mtMethod,TypeInfo(_T106),[TypeInfo(Integer),TypeInfo(TIResourceEntry)], pointer(20),cStdCall);
RegisterProc(TIResourceFile,'GetEntry',mtMethod,TypeInfo(_T106),[TypeInfo(Integer),TypeInfo(TIResourceEntry)],  getVMTProcAddr('TIResourceFile','GetEntry',20),cStdCall);


//RegisterProc(TIResourceFile,'GetEntryFromHandle',mtMethod,TypeInfo(_T107),[TypeInfoPointer,TypeInfo(TIResourceEntry)], pointer(24),cStdCall);
RegisterProc(TIResourceFile,'GetEntryFromHandle',mtMethod,TypeInfo(_T107),[TypeInfoPointer,TypeInfo(TIResourceEntry)],  getVMTProcAddr('TIResourceFile','GetEntryFromHandle',24),cStdCall);


//RegisterProc(TIResourceFile,'DeleteEntry',mtMethod,TypeInfo(_T109),[TypeInfoPointer,TypeInfo(Boolean)], pointer(32),cStdCall);
RegisterProc(TIResourceFile,'DeleteEntry',mtMethod,TypeInfo(_T109),[TypeInfoPointer,TypeInfo(Boolean)],  getVMTProcAddr('TIResourceFile','DeleteEntry',32),cStdCall);


end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(TIComponentInterface,'GetChildren',mtMethod,TypeInfo(_T12),[
TypeInfoPointer,
TypeInfo(TGetChildCallback),TypeInfo(Boolean)], pointer(60),cStdCall)}

{RegisterProc(TIEditReader,'GetText',mtMethod,TypeInfo(_T38),[
TypeInfo(Longint),
TypeInfoPChar,
TypeInfo(Longint),TypeInfo(Longint)], pointer(12),cStdCall)}

{RegisterProc(TIEditWriter,'Insert',mtMethod,TypeInfo(_T48),[
TypeInfoPChar,TypeInfo(Boolean)], pointer(20),cStdCall)}

{RegisterProc(TIResourceEntry,'Change',mtMethod,TypeInfo(_T97),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Boolean)], pointer(20),cStdCall)}

{RegisterProc(TIResourceFile,'FindEntry',mtMethod,TypeInfo(_T108),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(TIResourceEntry)], pointer(28),cStdCall)}

{RegisterProc(TIResourceFile,'CreateEntry',mtMethod,TypeInfo(_T110),[
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(Word),
TypeInfo(Word),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(TIResourceEntry)], pointer(36),cStdCall)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
