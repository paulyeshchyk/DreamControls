{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IBCONNECTIONBROKER_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  SysUtils,
  Classes,
  DB,
  IBDatabase,
  IBHeader,
  IBConnectionBroker;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function : TIBDatabase of object;

_T1 = procedure  of object;

_T2 = procedure (p0 : TIBDatabase) of object;

function __DC__GetTIBConnectionBroker__AllocatedConnections(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIBConnectionBroker(Instance).AllocatedConnections;
end;

function __DC__GetTIBConnectionBroker__AvailableConnections(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIBConnectionBroker(Instance).AvailableConnections;
end;

function __DC__GetTIBPooledConnection__Database(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TIBPooledConnection(Instance).Database);
end;

function __DC__GetTIBPooledConnection__ConnStatus(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIBPooledConnection(Instance).ConnStatus;
end;

procedure __DC__SetTIBPooledConnection__ConnStatus(Instance : TObject; Params : PVariantArgList);
begin
TIBPooledConnection(Instance).ConnStatus:=OleVariant(Params^[0]);
end;

function __DC__GetTIBPooledConnection__ConnLockTime(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIBPooledConnection(Instance).ConnLockTime;
end;

procedure __DC__SetTIBPooledConnection__ConnLockTime(Instance : TObject; Params : PVariantArgList);
begin
TIBPooledConnection(Instance).ConnLockTime:=OleVariant(Params^[0]);
end;

function __DC__GetTIBPooledConnection__ConnCreateDate(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIBPooledConnection(Instance).ConnCreateDate;
end;

procedure __DC__SetTIBPooledConnection__ConnCreateDate(Instance : TObject; Params : PVariantArgList);
begin
TIBPooledConnection(Instance).ConnCreateDate:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TIBConnectionBroker,'AllocatedConnections',__DC__GetTIBConnectionBroker__AllocatedConnections,nil);
RegisterProperty(TIBConnectionBroker,'AvailableConnections',__DC__GetTIBConnectionBroker__AvailableConnections,nil);
RegisterProperty(TIBPooledConnection,'Database',__DC__GetTIBPooledConnection__Database,nil);
RegisterProperty(TIBPooledConnection,'ConnStatus',__DC__GetTIBPooledConnection__ConnStatus,__DC__SetTIBPooledConnection__ConnStatus);
RegisterProperty(TIBPooledConnection,'ConnLockTime',__DC__GetTIBPooledConnection__ConnLockTime,__DC__SetTIBPooledConnection__ConnLockTime);
RegisterProperty(TIBPooledConnection,'ConnCreateDate',__DC__GetTIBPooledConnection__ConnCreateDate,__DC__SetTIBPooledConnection__ConnCreateDate);
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..1] of TClass = (
TIBConnectionBroker,
TIBPooledConnection
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TIBConnectionBroker,'GetConnection',TypeInfo(_T0),[TypeInfo(TIBDatabase)],Addr(TIBConnectionBroker.GetConnection));

RegRegisterMethod(TIBConnectionBroker,'Init',TypeInfo(_T1),NoParams,Addr(TIBConnectionBroker.Init));

RegRegisterMethod(TIBConnectionBroker,'ReleaseConnection',TypeInfo(_T2),[
TypeInfo(TIBDatabase)],Addr(TIBConnectionBroker.ReleaseConnection));

end;
initialization
_mreg_0;
RegisterEvent(TypeInfo(TIBConnectionBrokerLogEvent),[
TypeInfo(TObject),
TypeInfo(String)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
