{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit SVRLOGDETAILFRAME_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  Messages,
  SysUtils,
  Classes,
  Graphics,
  Controls,
  Forms,
  StdCtrls,
  IniFiles,
  Menus,
  ActnList,
  StdActns,
  ImgList,
  Registry,
  SvrLogDetailFrame;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : TObject) of object;

_T1 = _T0;

_T2 = _T0;

_T3 = procedure (p0 : TRegIniFile;
const p1 : string) of object;

_T4 = _T3;

_T5 = procedure  of object;

procedure __DC__SetTLogDetailFrame__Text(Instance : TObject; Params : PVariantArgList);
begin
TLogDetailFrame(Instance).Text:=OleVariant(Params^[0]);
end;

function __DC__GetTLogDetailFrame__TranslateText(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TLogDetailFrame(Instance).TranslateText;
end;

procedure __DC__SetTLogDetailFrame__TranslateText(Instance : TObject; Params : PVariantArgList);
begin
TLogDetailFrame(Instance).TranslateText:=OleVariant(Params^[0]);
end;

function __DC__GetTLogDetailFrame__WrapText(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TLogDetailFrame(Instance).WrapText;
end;

procedure __DC__SetTLogDetailFrame__WrapText(Instance : TObject; Params : PVariantArgList);
begin
TLogDetailFrame(Instance).WrapText:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TLogDetailFrame,'Text',nil,__DC__SetTLogDetailFrame__Text);
RegisterProperty(TLogDetailFrame,'TranslateText',__DC__GetTLogDetailFrame__TranslateText,__DC__SetTLogDetailFrame__TranslateText);
RegisterProperty(TLogDetailFrame,'WrapText',__DC__GetTLogDetailFrame__WrapText,__DC__SetTLogDetailFrame__WrapText);
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..0] of TClass = (
TLogDetailFrame
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TLogDetailFrame,'cbTranslateTextClick',TypeInfo(_T0),[
TypeInfo(TObject)],Addr(TLogDetailFrame.cbTranslateTextClick));

RegRegisterMethod(TLogDetailFrame,'cbWrapTextClick',TypeInfo(_T1),[
TypeInfo(TObject)],Addr(TLogDetailFrame.cbWrapTextClick));

RegRegisterMethod(TLogDetailFrame,'FontEdit1Accept',TypeInfo(_T2),[
TypeInfo(TObject)],Addr(TLogDetailFrame.FontEdit1Accept));

RegRegisterMethod(TLogDetailFrame,'Load',TypeInfo(_T3),[
TypeInfo(TRegIniFile),
TypeInfo(string)],Addr(TLogDetailFrame.Load));

RegRegisterMethod(TLogDetailFrame,'Save',TypeInfo(_T4),[
TypeInfo(TRegIniFile),
TypeInfo(string)],Addr(TLogDetailFrame.Save));

RegRegisterMethod(TLogDetailFrame,'Clear',TypeInfo(_T5),NoParams,Addr(TLogDetailFrame.Clear));

end;
initialization
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
