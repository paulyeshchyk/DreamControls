{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IDPOP3_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  IdAssignedNumbers,
  IdGlobal,
  IdMessage,
  IdMessageClient,
  IdPOP3;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function : Longint of object;

_T1 = function (const p0 : Integer): Boolean of object;

_T2 = procedure  of object;

_T3 = function : Boolean of object;

_T4 = function (const p0 : Integer;
p1 : TIdMessage): Boolean of object;

_T5 = _T4;

_T6 = function (const p0 : Integer): Integer of object;

_T7 = function : Integer of object;

_T8 = function (const p0 : Integer;
const p1 : TStrings): Boolean of object;

_T9 = function (const p0 : TStrings;
const p1 : Integer): Boolean of object;

function __TIdPOP3__UIDL__Wrapper(__Instance : TObject; cArgs : integer; pArgs : PArgList) : OleVariant;
begin
case cArgs of
1:
begin
result := TIdPOP3(__Instance).UIDL(TStrings(VarToObject(OleVariant(pargs^[0]))));
end;
2:
begin
result := TIdPOP3(__Instance).UIDL(TStrings(VarToObject(OleVariant(pargs^[1]))),OleVariant(pargs^[0]));
end;
end
end;

procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..2] of string = (
'DEF_APOP'
,'wsOk'
,'wsErr'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,DEF_APOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,wsOk));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,wsErr));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..0] of TClass = (
TIdPOP3
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TIdPOP3,'CheckMessages',TypeInfo(_T0),[TypeInfo(Longint)],Addr(TIdPOP3.CheckMessages));

RegRegisterMethod(TIdPOP3,'Delete',TypeInfo(_T1),[
TypeInfo(Integer),TypeInfo(Boolean)],Addr(TIdPOP3.Delete));

RegRegisterMethod(TIdPOP3,'KeepAlive',TypeInfo(_T2),NoParams,Addr(TIdPOP3.KeepAlive));

RegRegisterMethod(TIdPOP3,'Reset',TypeInfo(_T3),[TypeInfo(Boolean)],Addr(TIdPOP3.Reset));

RegRegisterMethod(TIdPOP3,'Retrieve',TypeInfo(_T4),[
TypeInfo(Integer),
TypeInfo(TIdMessage),TypeInfo(Boolean)],Addr(TIdPOP3.Retrieve));

RegRegisterMethod(TIdPOP3,'RetrieveHeader',TypeInfo(_T5),[
TypeInfo(Integer),
TypeInfo(TIdMessage),TypeInfo(Boolean)],Addr(TIdPOP3.RetrieveHeader));

RegRegisterMethod(TIdPOP3,'RetrieveMsgSize',TypeInfo(_T6),[
TypeInfo(Integer),TypeInfo(Integer)],Addr(TIdPOP3.RetrieveMsgSize));

RegRegisterMethod(TIdPOP3,'RetrieveMailBoxSize',TypeInfo(_T7),[TypeInfo(Integer)],Addr(TIdPOP3.RetrieveMailBoxSize));

RegRegisterMethod(TIdPOP3,'RetrieveRaw',TypeInfo(_T8),[
TypeInfo(Integer),
TypeInfo(TStrings),TypeInfo(Boolean)],Addr(TIdPOP3.RetrieveRaw));

RegisterProc(TIdPOP3,'UIDL',mtScriptMethod,TypeInfo(_T9),[
TypeInfo(TStrings),
TypeInfo(Integer),TypeInfo(Boolean)],Addr(__TIdPOP3__UIDL__Wrapper),cRegister);

end;
initialization
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
