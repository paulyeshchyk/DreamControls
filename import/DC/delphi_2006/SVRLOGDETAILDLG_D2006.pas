{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit SVRLOGDETAILDLG_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Registry,
  SysUtils,
  Classes,
  Controls,
  Forms,
  Dialogs,
  StdCtrls,
  ActnList,
  SvrLogFrame,
  SvrLogDetailFrame,
  IniFiles,
  SvrLogDetailDlg;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : TObject) of object;

_T1 = _T0;

_T2 = _T0;

_T3 = _T0;

_T4 = _T0;

_T5 = _T0;

_T6 = procedure (p0 : TRegIniFile;
const p1 : string) of object;

_T7 = _T6;

function __DC__GetTLogDetail__LogFrame(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TLogDetail(Instance).LogFrame);
end;

procedure __DC__SetTLogDetail__LogFrame(Instance : TObject; Params : PVariantArgList);
begin
TLogDetail(Instance).LogFrame:=TLogFrame(VarToObject(OleVariant(Params^[0])));
end;

procedure __RegisterProps;
begin
RegisterProperty(TLogDetail,'LogFrame',__DC__GetTLogDetail__LogFrame,__DC__SetTLogDetail__LogFrame);
end;

function __DC__GetSvrLogDetailDlg__FLogDetail(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(SvrLogDetailDlg.FLogDetail);
end;

procedure __DC__SetSvrLogDetailDlg__FLogDetail(Instance : TObject; Params : PVariantArgList);
begin
TObject(SvrLogDetailDlg.FLogDetail):=(VarToObject(OleVariant(Params^[0])));
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('FLogDetail',__DC__GetSvrLogDetailDlg__FLogDetail,__DC__SetSvrLogDetailDlg__FLogDetail));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..0] of TClass = (
TLogDetail
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TLogDetail,'PrevActionExecute',TypeInfo(_T0),[
TypeInfo(TObject)],Addr(TLogDetail.PrevActionExecute));

RegRegisterMethod(TLogDetail,'PrevActionUpdate',TypeInfo(_T1),[
TypeInfo(TObject)],Addr(TLogDetail.PrevActionUpdate));

RegRegisterMethod(TLogDetail,'NextActionExecute',TypeInfo(_T2),[
TypeInfo(TObject)],Addr(TLogDetail.NextActionExecute));

RegRegisterMethod(TLogDetail,'NextActionUpdate',TypeInfo(_T3),[
TypeInfo(TObject)],Addr(TLogDetail.NextActionUpdate));

RegRegisterMethod(TLogDetail,'CloseActionExecute',TypeInfo(_T4),[
TypeInfo(TObject)],Addr(TLogDetail.CloseActionExecute));

RegRegisterMethod(TLogDetail,'FormShow',TypeInfo(_T5),[
TypeInfo(TObject)],Addr(TLogDetail.FormShow));

RegRegisterMethod(TLogDetail,'Load',TypeInfo(_T6),[
TypeInfo(TRegIniFile),
TypeInfo(string)],Addr(TLogDetail.Load));

RegRegisterMethod(TLogDetail,'Save',TypeInfo(_T7),[
TypeInfo(TRegIniFile),
TypeInfo(string)],Addr(TLogDetail.Save));

end;
initialization
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
end.
