{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit DSINTF_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  VarUtils,
  Variants,
  ActiveX,
  DB,
  DBCommon,
  DSIntf;
function ConvertAGGVALUEToVariant(var R : AGGVALUE) : OleVariant;
function ConvertVariantToAGGVALUE(const V : OleVariant) : AGGVALUE;
function ConvertDSBOOKMRKToVariant(var R : DSBOOKMRK) : OleVariant;
function ConvertVariantToDSBOOKMRK(const V : OleVariant) : DSBOOKMRK;
function ConvertDSFLDDescToVariant(var R : DSFLDDesc) : OleVariant;
function ConvertVariantToDSFLDDesc(const V : OleVariant) : DSFLDDesc;
function ConvertDSIDXDescToVariant(var R : DSIDXDesc) : OleVariant;
function ConvertVariantToDSIDXDesc(const V : OleVariant) : DSIDXDesc;
function ConvertDSPropsToVariant(var R : DSProps) : OleVariant;
function ConvertVariantToDSProps(const V : OleVariant) : DSProps;
function ConvertTDSDataPacketFldDescToVariant(var R : TDSDataPacketFldDesc) : OleVariant;
function ConvertVariantToTDSDataPacketFldDesc(const V : OleVariant) : TDSDataPacketFldDesc;
function ConvertTGUIDToVariant(var R : TGUID) : OleVariant;
function ConvertVariantToTGUID(const V : OleVariant) : TGUID;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __AGGVALUE__Wrapper = class(TDCRecordWrapper)
private
fR : AGGVALUE;
public
function GetRecordPtr : pointer; override;
published
procedure setiCnt(const val : Integer);
function getiCnt : Integer;
property iCnt : Integer read getiCnt write setiCnt;
procedure seteAggState(const val : AGGSTATE);
function geteAggState : AGGSTATE;
property eAggState : AGGSTATE read geteAggState write seteAggState;
end;
type __DSBOOKMRK__Wrapper = class(TDCRecordWrapper)
private
fR : DSBOOKMRK;
public
function GetRecordPtr : pointer; override;
published
procedure setiPos(const val : Integer);
function getiPos : Integer;
property iPos : Integer read getiPos write setiPos;
procedure setiState(const val : Integer);
function getiState : Integer;
property iState : Integer read getiState write setiState;
procedure setiRecNo(const val : Integer);
function getiRecNo : Integer;
property iRecNo : Integer read getiRecNo write setiRecNo;
procedure setiSeqNo(const val : Integer);
function getiSeqNo : Integer;
property iSeqNo : Integer read getiSeqNo write setiSeqNo;
procedure setiOrderID(const val : Integer);
function getiOrderID : Integer;
property iOrderID : Integer read getiOrderID write setiOrderID;
end;
type __DSFLDDesc__Wrapper = class(TDCRecordWrapper)
private
fR : DSFLDDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setiFldType(const val : Integer);
function getiFldType : Integer;
property iFldType : Integer read getiFldType write setiFldType;
procedure setiFldSubType(const val : Integer);
function getiFldSubType : Integer;
property iFldSubType : Integer read getiFldSubType write setiFldSubType;
procedure setiUnits1(const val : Integer);
function getiUnits1 : Integer;
property iUnits1 : Integer read getiUnits1 write setiUnits1;
procedure setiUnits2(const val : Integer);
function getiUnits2 : Integer;
property iUnits2 : Integer read getiUnits2 write setiUnits2;
procedure setiFldLen(const val : Integer);
function getiFldLen : Integer;
property iFldLen : Integer read getiFldLen write setiFldLen;
procedure setiFldOffsInRec(const val : Integer);
function getiFldOffsInRec : Integer;
property iFldOffsInRec : Integer read getiFldOffsInRec write setiFldOffsInRec;
procedure setiNullOffsInRec(const val : Integer);
function getiNullOffsInRec : Integer;
property iNullOffsInRec : Integer read getiNullOffsInRec write setiNullOffsInRec;
procedure setiFieldID(const val : Word);
function getiFieldID : Word;
property iFieldID : Word read getiFieldID write setiFieldID;
procedure setiFieldIDParent(const val : Word);
function getiFieldIDParent : Word;
property iFieldIDParent : Word read getiFieldIDParent write setiFieldIDParent;
procedure setbCalculated(const val : LongBool);
function getbCalculated : LongBool;
property bCalculated : LongBool read getbCalculated write setbCalculated;
procedure setiFldAttr(const val : Integer);
function getiFldAttr : Integer;
property iFldAttr : Integer read getiFldAttr write setiFldAttr;
procedure setiOptParameters(const val : Integer);
function getiOptParameters : Integer;
property iOptParameters : Integer read getiOptParameters write setiOptParameters;
end;
type __DSIDXDesc__Wrapper = class(TDCRecordWrapper)
private
fR : DSIDXDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setiFields(const val : Integer);
function getiFields : Integer;
property iFields : Integer read getiFields write setiFields;
procedure setiKeyLen(const val : Integer);
function getiKeyLen : Integer;
property iKeyLen : Integer read getiKeyLen write setiKeyLen;
procedure setbUnique(const val : LongBool);
function getbUnique : LongBool;
property bUnique : LongBool read getbUnique write setbUnique;
end;
type __DSProps__Wrapper = class(TDCRecordWrapper)
private
fR : DSProps;
public
function GetRecordPtr : pointer; override;
published
procedure setiFields(const val : Integer);
function getiFields : Integer;
property iFields : Integer read getiFields write setiFields;
procedure setiRecBufSize(const val : Integer);
function getiRecBufSize : Integer;
property iRecBufSize : Integer read getiRecBufSize write setiRecBufSize;
procedure setiBookMarkSize(const val : Integer);
function getiBookMarkSize : Integer;
property iBookMarkSize : Integer read getiBookMarkSize write setiBookMarkSize;
procedure setbReadOnly(const val : LongBool);
function getbReadOnly : LongBool;
property bReadOnly : LongBool read getbReadOnly write setbReadOnly;
procedure setiIndexes(const val : Integer);
function getiIndexes : Integer;
property iIndexes : Integer read getiIndexes write setiIndexes;
procedure setiOptParams(const val : Integer);
function getiOptParams : Integer;
property iOptParams : Integer read getiOptParams write setiOptParams;
procedure setbDelta(const val : LongBool);
function getbDelta : LongBool;
property bDelta : LongBool read getbDelta write setbDelta;
procedure setiLCID(const val : Integer);
function getiLCID : Integer;
property iLCID : Integer read getiLCID write setiLCID;
end;
type __TDSDataPacketFldDesc__Wrapper = class(TDCRecordWrapper)
private
fR : TDSDataPacketFldDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setiFieldType(const val : Integer);
function getiFieldType : Integer;
property iFieldType : Integer read getiFieldType write setiFieldType;
procedure setiAttributes(const val : Word);
function getiAttributes : Word;
property iAttributes : Word read getiAttributes write setiAttributes;
end;
type __TGUID__Wrapper = class(TDCRecordWrapper)
private
fR : TGUID;
public
function GetRecordPtr : pointer; override;
published
procedure setD1(const val : LongWord);
function getD1 : LongWord;
property D1 : LongWord read getD1 write setD1;
procedure setD2(const val : Word);
function getD2 : Word;
property D2 : Word read getD2 write setD2;
procedure setD3(const val : Word);
function getD3 : Word;
property D3 : Word read getD3 write setD3;
end;
type
{_T0 = procedure (var p0 : TDataPacket) of object;}

{_T1 = function (const p0 : OleVariant): TDataPacket of object;}

{_T2 = function (const p0 : TDataPacket): Integer of object;}

{_T3 = procedure (const p0 : TDataPacket;
var p1 : OleVariant) of object;}

_T4 = procedure (const p0 : IDispatch;
const p1 : IDispatch;
var p2) of object;

_T5 = function (const p0 : OleVariant): string of object;

_T6 = function (const p0 : string): OleVariant of object;

_T7 = procedure (p0 : Pointer) of object;

function __AGGVALUE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __AGGVALUE__Wrapper.setiCnt(const val : Integer);
begin
AGGVALUE(GetRecordPtr^).iCnt := val;
end;
function __AGGVALUE__Wrapper.getiCnt : Integer;
begin
result := AGGVALUE(GetRecordPtr^).iCnt;
end;
procedure __AGGVALUE__Wrapper.seteAggState(const val : AGGSTATE);
begin
AGGVALUE(GetRecordPtr^).eAggState := val;
end;
function __AGGVALUE__Wrapper.geteAggState : AGGSTATE;
begin
result := AGGVALUE(GetRecordPtr^).eAggState;
end;
function __DSBOOKMRK__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __DSBOOKMRK__Wrapper.setiPos(const val : Integer);
begin
DSBOOKMRK(GetRecordPtr^).iPos := val;
end;
function __DSBOOKMRK__Wrapper.getiPos : Integer;
begin
result := DSBOOKMRK(GetRecordPtr^).iPos;
end;
procedure __DSBOOKMRK__Wrapper.setiState(const val : Integer);
begin
DSBOOKMRK(GetRecordPtr^).iState := val;
end;
function __DSBOOKMRK__Wrapper.getiState : Integer;
begin
result := DSBOOKMRK(GetRecordPtr^).iState;
end;
procedure __DSBOOKMRK__Wrapper.setiRecNo(const val : Integer);
begin
DSBOOKMRK(GetRecordPtr^).iRecNo := val;
end;
function __DSBOOKMRK__Wrapper.getiRecNo : Integer;
begin
result := DSBOOKMRK(GetRecordPtr^).iRecNo;
end;
procedure __DSBOOKMRK__Wrapper.setiSeqNo(const val : Integer);
begin
DSBOOKMRK(GetRecordPtr^).iSeqNo := val;
end;
function __DSBOOKMRK__Wrapper.getiSeqNo : Integer;
begin
result := DSBOOKMRK(GetRecordPtr^).iSeqNo;
end;
procedure __DSBOOKMRK__Wrapper.setiOrderID(const val : Integer);
begin
DSBOOKMRK(GetRecordPtr^).iOrderID := val;
end;
function __DSBOOKMRK__Wrapper.getiOrderID : Integer;
begin
result := DSBOOKMRK(GetRecordPtr^).iOrderID;
end;
function __DSFLDDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __DSFLDDesc__Wrapper.setiFldType(const val : Integer);
begin
DSFLDDesc(GetRecordPtr^).iFldType := val;
end;
function __DSFLDDesc__Wrapper.getiFldType : Integer;
begin
result := DSFLDDesc(GetRecordPtr^).iFldType;
end;
procedure __DSFLDDesc__Wrapper.setiFldSubType(const val : Integer);
begin
DSFLDDesc(GetRecordPtr^).iFldSubType := val;
end;
function __DSFLDDesc__Wrapper.getiFldSubType : Integer;
begin
result := DSFLDDesc(GetRecordPtr^).iFldSubType;
end;
procedure __DSFLDDesc__Wrapper.setiUnits1(const val : Integer);
begin
DSFLDDesc(GetRecordPtr^).iUnits1 := val;
end;
function __DSFLDDesc__Wrapper.getiUnits1 : Integer;
begin
result := DSFLDDesc(GetRecordPtr^).iUnits1;
end;
procedure __DSFLDDesc__Wrapper.setiUnits2(const val : Integer);
begin
DSFLDDesc(GetRecordPtr^).iUnits2 := val;
end;
function __DSFLDDesc__Wrapper.getiUnits2 : Integer;
begin
result := DSFLDDesc(GetRecordPtr^).iUnits2;
end;
procedure __DSFLDDesc__Wrapper.setiFldLen(const val : Integer);
begin
DSFLDDesc(GetRecordPtr^).iFldLen := val;
end;
function __DSFLDDesc__Wrapper.getiFldLen : Integer;
begin
result := DSFLDDesc(GetRecordPtr^).iFldLen;
end;
procedure __DSFLDDesc__Wrapper.setiFldOffsInRec(const val : Integer);
begin
DSFLDDesc(GetRecordPtr^).iFldOffsInRec := val;
end;
function __DSFLDDesc__Wrapper.getiFldOffsInRec : Integer;
begin
result := DSFLDDesc(GetRecordPtr^).iFldOffsInRec;
end;
procedure __DSFLDDesc__Wrapper.setiNullOffsInRec(const val : Integer);
begin
DSFLDDesc(GetRecordPtr^).iNullOffsInRec := val;
end;
function __DSFLDDesc__Wrapper.getiNullOffsInRec : Integer;
begin
result := DSFLDDesc(GetRecordPtr^).iNullOffsInRec;
end;
procedure __DSFLDDesc__Wrapper.setiFieldID(const val : Word);
begin
DSFLDDesc(GetRecordPtr^).iFieldID := val;
end;
function __DSFLDDesc__Wrapper.getiFieldID : Word;
begin
result := DSFLDDesc(GetRecordPtr^).iFieldID;
end;
procedure __DSFLDDesc__Wrapper.setiFieldIDParent(const val : Word);
begin
DSFLDDesc(GetRecordPtr^).iFieldIDParent := val;
end;
function __DSFLDDesc__Wrapper.getiFieldIDParent : Word;
begin
result := DSFLDDesc(GetRecordPtr^).iFieldIDParent;
end;
procedure __DSFLDDesc__Wrapper.setbCalculated(const val : LongBool);
begin
DSFLDDesc(GetRecordPtr^).bCalculated := val;
end;
function __DSFLDDesc__Wrapper.getbCalculated : LongBool;
begin
result := DSFLDDesc(GetRecordPtr^).bCalculated;
end;
procedure __DSFLDDesc__Wrapper.setiFldAttr(const val : Integer);
begin
DSFLDDesc(GetRecordPtr^).iFldAttr := val;
end;
function __DSFLDDesc__Wrapper.getiFldAttr : Integer;
begin
result := DSFLDDesc(GetRecordPtr^).iFldAttr;
end;
procedure __DSFLDDesc__Wrapper.setiOptParameters(const val : Integer);
begin
DSFLDDesc(GetRecordPtr^).iOptParameters := val;
end;
function __DSFLDDesc__Wrapper.getiOptParameters : Integer;
begin
result := DSFLDDesc(GetRecordPtr^).iOptParameters;
end;
function __DSIDXDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __DSIDXDesc__Wrapper.setiFields(const val : Integer);
begin
DSIDXDesc(GetRecordPtr^).iFields := val;
end;
function __DSIDXDesc__Wrapper.getiFields : Integer;
begin
result := DSIDXDesc(GetRecordPtr^).iFields;
end;
procedure __DSIDXDesc__Wrapper.setiKeyLen(const val : Integer);
begin
DSIDXDesc(GetRecordPtr^).iKeyLen := val;
end;
function __DSIDXDesc__Wrapper.getiKeyLen : Integer;
begin
result := DSIDXDesc(GetRecordPtr^).iKeyLen;
end;
procedure __DSIDXDesc__Wrapper.setbUnique(const val : LongBool);
begin
DSIDXDesc(GetRecordPtr^).bUnique := val;
end;
function __DSIDXDesc__Wrapper.getbUnique : LongBool;
begin
result := DSIDXDesc(GetRecordPtr^).bUnique;
end;
function __DSProps__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __DSProps__Wrapper.setiFields(const val : Integer);
begin
DSProps(GetRecordPtr^).iFields := val;
end;
function __DSProps__Wrapper.getiFields : Integer;
begin
result := DSProps(GetRecordPtr^).iFields;
end;
procedure __DSProps__Wrapper.setiRecBufSize(const val : Integer);
begin
DSProps(GetRecordPtr^).iRecBufSize := val;
end;
function __DSProps__Wrapper.getiRecBufSize : Integer;
begin
result := DSProps(GetRecordPtr^).iRecBufSize;
end;
procedure __DSProps__Wrapper.setiBookMarkSize(const val : Integer);
begin
DSProps(GetRecordPtr^).iBookMarkSize := val;
end;
function __DSProps__Wrapper.getiBookMarkSize : Integer;
begin
result := DSProps(GetRecordPtr^).iBookMarkSize;
end;
procedure __DSProps__Wrapper.setbReadOnly(const val : LongBool);
begin
DSProps(GetRecordPtr^).bReadOnly := val;
end;
function __DSProps__Wrapper.getbReadOnly : LongBool;
begin
result := DSProps(GetRecordPtr^).bReadOnly;
end;
procedure __DSProps__Wrapper.setiIndexes(const val : Integer);
begin
DSProps(GetRecordPtr^).iIndexes := val;
end;
function __DSProps__Wrapper.getiIndexes : Integer;
begin
result := DSProps(GetRecordPtr^).iIndexes;
end;
procedure __DSProps__Wrapper.setiOptParams(const val : Integer);
begin
DSProps(GetRecordPtr^).iOptParams := val;
end;
function __DSProps__Wrapper.getiOptParams : Integer;
begin
result := DSProps(GetRecordPtr^).iOptParams;
end;
procedure __DSProps__Wrapper.setbDelta(const val : LongBool);
begin
DSProps(GetRecordPtr^).bDelta := val;
end;
function __DSProps__Wrapper.getbDelta : LongBool;
begin
result := DSProps(GetRecordPtr^).bDelta;
end;
procedure __DSProps__Wrapper.setiLCID(const val : Integer);
begin
DSProps(GetRecordPtr^).iLCID := val;
end;
function __DSProps__Wrapper.getiLCID : Integer;
begin
result := DSProps(GetRecordPtr^).iLCID;
end;
function __TDSDataPacketFldDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDSDataPacketFldDesc__Wrapper.setiFieldType(const val : Integer);
begin
TDSDataPacketFldDesc(GetRecordPtr^).iFieldType := val;
end;
function __TDSDataPacketFldDesc__Wrapper.getiFieldType : Integer;
begin
result := TDSDataPacketFldDesc(GetRecordPtr^).iFieldType;
end;
procedure __TDSDataPacketFldDesc__Wrapper.setiAttributes(const val : Word);
begin
TDSDataPacketFldDesc(GetRecordPtr^).iAttributes := val;
end;
function __TDSDataPacketFldDesc__Wrapper.getiAttributes : Word;
begin
result := TDSDataPacketFldDesc(GetRecordPtr^).iAttributes;
end;
function _AGGVALUE_ : IDispatch;
begin
  result := __AGGVALUE__Wrapper.Create;
end;
function _DSBOOKMRK_ : IDispatch;
begin
  result := __DSBOOKMRK__Wrapper.Create;
end;
function _DSFLDDesc_ : IDispatch;
begin
  result := __DSFLDDesc__Wrapper.Create;
end;
function _DSIDXDesc_ : IDispatch;
begin
  result := __DSIDXDesc__Wrapper.Create;
end;
function _DSProps_ : IDispatch;
begin
  result := __DSProps__Wrapper.Create;
end;
function _TDSDataPacketFldDesc_ : IDispatch;
begin
  result := __TDSDataPacketFldDesc__Wrapper.Create;
end;
function __TGUID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TGUID__Wrapper.setD1(const val : LongWord);
begin
TGUID(GetRecordPtr^).D1 := val;
end;
function __TGUID__Wrapper.getD1 : LongWord;
begin
result := TGUID(GetRecordPtr^).D1;
end;
procedure __TGUID__Wrapper.setD2(const val : Word);
begin
TGUID(GetRecordPtr^).D2 := val;
end;
function __TGUID__Wrapper.getD2 : Word;
begin
result := TGUID(GetRecordPtr^).D2;
end;
procedure __TGUID__Wrapper.setD3(const val : Word);
begin
TGUID(GetRecordPtr^).D3 := val;
end;
function __TGUID__Wrapper.getD3 : Word;
begin
result := TGUID(GetRecordPtr^).D3;
end;
procedure ____CreateDbClientObject__Wrapper(const p0 : IDispatch;
const p1 : IDispatch;
var p2);
var
__p0 : ^TGUID;
__i0 : IDispatch;
__p1 : ^TGUID;
__i1 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
CreateDbClientObject(__p0^,__p1^,p2);
end;


type __AGGVALUE__Wrapper__ = class(__AGGVALUE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __AGGVALUE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertAGGVALUEToVariant(var R : AGGVALUE) : OleVariant;
var
__rw : __AGGVALUE__Wrapper__;
begin
__rw := __AGGVALUE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToAGGVALUE(const V : OleVariant) : AGGVALUE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := AGGVALUE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __DSBOOKMRK__Wrapper__ = class(__DSBOOKMRK__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __DSBOOKMRK__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertDSBOOKMRKToVariant(var R : DSBOOKMRK) : OleVariant;
var
__rw : __DSBOOKMRK__Wrapper__;
begin
__rw := __DSBOOKMRK__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToDSBOOKMRK(const V : OleVariant) : DSBOOKMRK;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := DSBOOKMRK((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __DSFLDDesc__Wrapper__ = class(__DSFLDDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __DSFLDDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertDSFLDDescToVariant(var R : DSFLDDesc) : OleVariant;
var
__rw : __DSFLDDesc__Wrapper__;
begin
__rw := __DSFLDDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToDSFLDDesc(const V : OleVariant) : DSFLDDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := DSFLDDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __DSIDXDesc__Wrapper__ = class(__DSIDXDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __DSIDXDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertDSIDXDescToVariant(var R : DSIDXDesc) : OleVariant;
var
__rw : __DSIDXDesc__Wrapper__;
begin
__rw := __DSIDXDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToDSIDXDesc(const V : OleVariant) : DSIDXDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := DSIDXDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __DSProps__Wrapper__ = class(__DSProps__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __DSProps__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertDSPropsToVariant(var R : DSProps) : OleVariant;
var
__rw : __DSProps__Wrapper__;
begin
__rw := __DSProps__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToDSProps(const V : OleVariant) : DSProps;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := DSProps((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDSDataPacketFldDesc__Wrapper__ = class(__TDSDataPacketFldDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDSDataPacketFldDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDSDataPacketFldDescToVariant(var R : TDSDataPacketFldDesc) : OleVariant;
var
__rw : __TDSDataPacketFldDesc__Wrapper__;
begin
__rw := __TDSDataPacketFldDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDSDataPacketFldDesc(const V : OleVariant) : TDSDataPacketFldDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDSDataPacketFldDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TGUID__Wrapper__ = class(__TGUID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TGUID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTGUIDToVariant(var R : TGUID) : OleVariant;
var
__rw : __TGUID__Wrapper__;
begin
__rw := __TGUID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTGUID(const V : OleVariant) : TGUID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TGUID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..247] of string = (
'dsRecUnmodified'
,'dsRecOrg'
,'dsRecDeleted'
,'dsRecNew'
,'dsRecModified'
,'dsUnused'
,'dsDetUpd'
,'dsIsNotVisible'
,'dsIsVisible'
,'fldAttrHIDDEN'
,'fldAttrREADONLY'
,'fldAttrREQUIRED'
,'fldAttrLINK'
,'BLANK_NULL'
,'BLANK_NOTCHANGED'
,'MAXKEYFIELDS'
,'mdCASCADEDEL'
,'mdCASCADEMOD'
,'mdALLOWLINKCHANGE'
,'keySEARCHEQ'
,'keySEARCHGT'
,'keySEARCHGEQ'
,'grSTATEMIDDLE'
,'grSTATEFIRST'
,'grSTATELAST'
,'grSTATEFIRSTLAST'
,'aggSTATEUNDEF'
,'aggSTATEOK'
,'aggSTATEBLANK'
,'aggSTATEERROR'
,'dspropLOGCHANGES'
,'dspropREADONLY'
,'dspropNOOFCHANGES'
,'dspropCONSTRAINTS_DISABLED'
,'dspropDSISPARTIAL'
,'dspropRECORDSINDS'
,'dspropAUTOINC_DISABLED'
,'dspropISDELTA'
,'dspropDONTINCLMETADATA'
,'dspropINCLBLOBSINDELTA'
,'dspropGETSAVEPOINT'
,'dspropCOMPRESSARRAYS'
,'dspropMD_SEMANTICS'
,'dspropFIELD_FULLNAME'
,'dspropFIELDID_FORNAME'
,'dspropFIELDID_FORPARENT'
,'dspropCHANGEINDEX_VIEW'
,'dspropGETUNIQUEINDEX'
,'dspropREMOTE_UPDATEMODE'
,'dspropXML_STREAMMODE'
,'dspropDISABLEDELETES'
,'dspropDISABLEINSERTS'
,'dspropDISABLEEDITS'
,'dspropDISABLESTRINGTRIM'
,'dspropDATAHASCHANGED'
,'curpropCONSTRAINT_ERROR_MESSAGE'
,'curpropDSBASE'
,'curpropSETCRACK'
,'curpropGETORG_RECBUF'
,'dscbrSKIP'
,'dscbrABORT'
,'dscbrMERGE'
,'dscbrAPPLY'
,'dscbrIGNORE'
,'dscbrCORRECT'
,'dscbrCANCEL'
,'dscbrREFRESH'
,'xmlUNTYPED'
,'xmlXMLDATATYPED'
,'xmlXMLSCHEMA'
,'xmlXMLUTF8'
,'xmlON'
,'xmlUTF8'
,'xmlOFF'
,'fldAttrArea'
,'pcktAttrArea'
,'fldIsChanged'
,'fldIsNull'
,'fldIsUnChanged'
,'szUNIQUE_KEY'
,'szPRIMARY_KEY'
,'szDEFAULT_ORDER'
,'szCHANGEINDEX'
,'szCHANGE_LOG'
,'szSERVER_COL'
,'szCONSTRAINTS'
,'szDATASET_CONTEXT'
,'szDATASET_DELTA'
,'szREADONLY'
,'szSUBTYPE'
,'szDECIMALS'
,'szWIDTH'
,'szFieldName'
,'szLCID'
,'szBDEDOMX'
,'szBDERECX'
,'szBDEDEFX'
,'szAUTOINCVALUE'
,'szELEMENTS'
,'szMD_FIELDLINKS'
,'szUPDATEMODE'
,'szFIELDPROPS'
,'szPROVFLAGS'
,'szORIGIN'
,'szMD_SEMANTICS'
,'szSERVERCALC'
,'szBDEDOMCL'
,'szBDERECCL'
,'szBDEDEFCL'
,'szDISABLE_INSERTS'
,'szDISABLE_DELETES'
,'szDISABLE_EDITS'
,'szNO_RESET_CALL'
,'szMINVALUE'
,'szMAXVALUE'
,'szstWideMEMO'
,'szstBINARY'
,'szstFMTMEMO'
,'szstOLEOBJ'
,'szstGRAPHIC'
,'szstDBSOLEOBJ'
,'szstMONEY'
,'szstAUTOINC'
,'szstADTNESTEDTABLE'
,'szstFIXEDCHAR'
,'szstREFNESTEDTABLE'
,'szstGUID'
,'szstACCOLEOBJ'
,'szstHMEMO'
,'szstHBINARY'
,'fldstReference'
,'dsfldUNKNOWN'
,'dsfldINT'
,'dsfldUINT'
,'dsfldBOOL'
,'dsfldFLOATIEEE'
,'dsfldBCD'
,'dsfldDATE'
,'dsfldTIME'
,'dsfldTIMESTAMP'
,'dsfldZSTRING'
,'dsfldUNICODE'
,'dsfldBYTES'
,'dsfldADT'
,'dsfldARRAY'
,'dsfldEMBEDDEDTBL'
,'dsfldREF'
,'dsfldDATETIME'
,'dsfldFMTBCD'
,'dsSizeBitsLen'
,'dsSizeBitsMask'
,'dsTypeBitsMask'
,'dsVaryingFldType'
,'dsArrayFldType'
,'dsPseudoFldType'
,'dsCompArrayFldType'
,'dsEmbeddedFldType'
,'dsIncInDelta'
,'dskeyCASEINSENSITIVE'
,'dskeyDESCENDING'
,'dsDELAYEDBIT'
,'PACKETVERSION_1'
,'PACKETVERSION_2'
,'PACKETVERSION_3'
,'dsCASCADEDELETES'
,'dsCASCADEUPDATES'
,'fldUNKNOWN'
,'fldZSTRING'
,'fldDATE'
,'fldBLOB'
,'fldBOOL'
,'fldINT16'
,'fldINT32'
,'fldFLOAT'
,'fldBCD'
,'fldBYTES'
,'fldTIME'
,'fldTIMESTAMP'
,'fldUINT16'
,'fldUINT32'
,'fldFLOATIEEE'
,'fldVARBYTES'
,'fldLOCKINFO'
,'fldCURSOR'
,'fldINT64'
,'fldUINT64'
,'fldADT'
,'fldARRAY'
,'fldREF'
,'fldTABLE'
,'fldDATETIME'
,'fldFMTBCD'
,'fldWIDESTRING'
,'MAXLOGFLDTYPES'
,'fldUNICODE'
,'fldstMONEY'
,'fldstMEMO'
,'fldstBINARY'
,'fldstFMTMEMO'
,'fldstOLEOBJ'
,'fldstGRAPHIC'
,'fldstDBSOLEOBJ'
,'fldstTYPEDBINARY'
,'fldstACCOLEOBJ'
,'fldstWIDEMEMO'
,'fldstHMEMO'
,'fldstHBINARY'
,'fldstBFILE'
,'fldstPASSWORD'
,'fldstFIXED'
,'fldstGUID'
,'fldstORAINTERVAL'
,'fldstORATIMESTAMP'
,'fldstAUTOINC'
,'DBERR_NONE'
,'DBERR_BOF'
,'DBERR_EOF'
,'DBERR_NOSUCHINDEX'
,'ERRCAT_ALC'
,'ERRBASE_ALC'
,'ERRCODE_DELTAISEMPTY'
,'ERRCODE_NOTHINGTOUNDO'
,'ERRCODE_NOMETADATA'
,'ERRCODE_CANNOTAPPEND'
,'ERRCODE_DATAPACKETMISMATCH'
,'ERRCODE_ABORTED'
,'ERRCODE_CANCELLED'
,'ERRCODE_NEWERVERSIONREQ'
,'ERRCODE_BLOBNOTFETCHED'
,'ERRCODE_DETAILSNOTFETCHED'
,'ERRCODE_NOMASTERRECORD'
,'ERRCODE_LINKFIELDSNOTUNIQUE'
,'ERRCODE_FLYAWAY_WRONGORDER'
,'ERRCODE_NOCASCADEDUPDATES'
,'DBERR_DELTAISEMPTY'
,'DBERR_NOTHINGTOUNDO'
,'DBERR_NOMETADATA'
,'DBERR_CANNOTAPPEND'
,'DBERR_DATAPACKETMISMATCH'
,'DBERR_ABORTED'
,'DBERR_CANCELLED'
,'DBERR_NEWERVERSIONREQ'
,'DBERR_BLOBNOTFETCHED'
,'DBERR_DETAILSNOTFETCHED'
,'DBERR_NOMASTERRECORD'
,'DBERR_LINKFIELDSNOTUNIQUE'
,'DBERR_FLYAWAY_WRONGORDER'
,'DBERR_NOCASCADEDUPDATES'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,dsRecUnmodified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,dsRecOrg));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,dsRecDeleted));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,dsRecNew));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,dsRecModified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,dsUnused));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,dsDetUpd));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,dsIsNotVisible));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,dsIsVisible));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,fldAttrHIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,fldAttrREADONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,fldAttrREQUIRED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,fldAttrLINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,BLANK_NULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,BLANK_NOTCHANGED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,MAXKEYFIELDS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,mdCASCADEDEL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,mdCASCADEMOD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,mdALLOWLINKCHANGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,keySEARCHEQ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,keySEARCHGT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,keySEARCHGEQ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,grSTATEMIDDLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,grSTATEFIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,grSTATELAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,grSTATEFIRSTLAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,aggSTATEUNDEF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,aggSTATEOK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,aggSTATEBLANK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,aggSTATEERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,dspropLOGCHANGES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,dspropREADONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,dspropNOOFCHANGES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,dspropCONSTRAINTS_DISABLED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,dspropDSISPARTIAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,dspropRECORDSINDS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,dspropAUTOINC_DISABLED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,dspropISDELTA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,dspropDONTINCLMETADATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,dspropINCLBLOBSINDELTA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,dspropGETSAVEPOINT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,dspropCOMPRESSARRAYS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,dspropMD_SEMANTICS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,dspropFIELD_FULLNAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,dspropFIELDID_FORNAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,dspropFIELDID_FORPARENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,dspropCHANGEINDEX_VIEW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,dspropGETUNIQUEINDEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,dspropREMOTE_UPDATEMODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,dspropXML_STREAMMODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,dspropDISABLEDELETES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,dspropDISABLEINSERTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,dspropDISABLEEDITS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,dspropDISABLESTRINGTRIM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,dspropDATAHASCHANGED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,curpropCONSTRAINT_ERROR_MESSAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,curpropDSBASE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,curpropSETCRACK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,curpropGETORG_RECBUF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,dscbrSKIP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,dscbrABORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,dscbrMERGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,dscbrAPPLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,dscbrIGNORE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,dscbrCORRECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,dscbrCANCEL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,dscbrREFRESH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,xmlUNTYPED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,xmlXMLDATATYPED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,xmlXMLSCHEMA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,xmlXMLUTF8));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,xmlON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,xmlUTF8));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,xmlOFF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,fldAttrArea));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,pcktAttrArea));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,fldIsChanged));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,fldIsNull));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,fldIsUnChanged));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,szUNIQUE_KEY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,szPRIMARY_KEY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,szDEFAULT_ORDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,szCHANGEINDEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,szCHANGE_LOG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,szSERVER_COL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,szCONSTRAINTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,szDATASET_CONTEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,szDATASET_DELTA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,szREADONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,szSUBTYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,szDECIMALS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,szWIDTH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,szFieldName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,szLCID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,szBDEDOMX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,szBDERECX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,szBDEDEFX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,szAUTOINCVALUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,szELEMENTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,szMD_FIELDLINKS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,szUPDATEMODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,szFIELDPROPS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,szPROVFLAGS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,szORIGIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,szMD_SEMANTICS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[105] ,szSERVERCALC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[106] ,szBDEDOMCL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[107] ,szBDERECCL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[108] ,szBDEDEFCL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[109] ,szDISABLE_INSERTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[110] ,szDISABLE_DELETES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[111] ,szDISABLE_EDITS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[112] ,szNO_RESET_CALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[113] ,szMINVALUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[114] ,szMAXVALUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[115] ,szstWideMEMO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[116] ,szstBINARY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[117] ,szstFMTMEMO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[118] ,szstOLEOBJ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[119] ,szstGRAPHIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[120] ,szstDBSOLEOBJ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[121] ,szstMONEY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[122] ,szstAUTOINC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[123] ,szstADTNESTEDTABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[124] ,szstFIXEDCHAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[125] ,szstREFNESTEDTABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[126] ,szstGUID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[127] ,szstACCOLEOBJ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[128] ,szstHMEMO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[129] ,szstHBINARY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[130] ,fldstReference));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[131] ,dsfldUNKNOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[132] ,dsfldINT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[133] ,dsfldUINT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[134] ,dsfldBOOL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[135] ,dsfldFLOATIEEE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[136] ,dsfldBCD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[137] ,dsfldDATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[138] ,dsfldTIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[139] ,dsfldTIMESTAMP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[140] ,dsfldZSTRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[141] ,dsfldUNICODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[142] ,dsfldBYTES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[143] ,dsfldADT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[144] ,dsfldARRAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[145] ,dsfldEMBEDDEDTBL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[146] ,dsfldREF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[147] ,dsfldDATETIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[148] ,dsfldFMTBCD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[149] ,dsSizeBitsLen));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[150] ,dsSizeBitsMask));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[151] ,dsTypeBitsMask));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[152] ,dsVaryingFldType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[153] ,dsArrayFldType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[154] ,dsPseudoFldType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[155] ,dsCompArrayFldType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[156] ,dsEmbeddedFldType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[157] ,dsIncInDelta));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[158] ,dskeyCASEINSENSITIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[159] ,dskeyDESCENDING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[160] ,dsDELAYEDBIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[161] ,PACKETVERSION_1));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[162] ,PACKETVERSION_2));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[163] ,PACKETVERSION_3));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[164] ,dsCASCADEDELETES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[165] ,dsCASCADEUPDATES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[166] ,fldUNKNOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[167] ,fldZSTRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[168] ,fldDATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[169] ,fldBLOB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[170] ,fldBOOL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[171] ,fldINT16));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[172] ,fldINT32));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[173] ,fldFLOAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[174] ,fldBCD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[175] ,fldBYTES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[176] ,fldTIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[177] ,fldTIMESTAMP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[178] ,fldUINT16));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[179] ,fldUINT32));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[180] ,fldFLOATIEEE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[181] ,fldVARBYTES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[182] ,fldLOCKINFO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[183] ,fldCURSOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[184] ,fldINT64));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[185] ,fldUINT64));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[186] ,fldADT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[187] ,fldARRAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[188] ,fldREF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[189] ,fldTABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[190] ,fldDATETIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[191] ,fldFMTBCD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[192] ,fldWIDESTRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[193] ,MAXLOGFLDTYPES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[194] ,fldUNICODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[195] ,fldstMONEY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[196] ,fldstMEMO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[197] ,fldstBINARY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[198] ,fldstFMTMEMO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[199] ,fldstOLEOBJ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[200] ,fldstGRAPHIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[201] ,fldstDBSOLEOBJ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[202] ,fldstTYPEDBINARY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[203] ,fldstACCOLEOBJ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[204] ,fldstWIDEMEMO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[205] ,fldstHMEMO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[206] ,fldstHBINARY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[207] ,fldstBFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[208] ,fldstPASSWORD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[209] ,fldstFIXED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[210] ,fldstGUID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[211] ,fldstORAINTERVAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[212] ,fldstORATIMESTAMP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[213] ,fldstAUTOINC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[214] ,DBERR_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[215] ,DBERR_BOF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[216] ,DBERR_EOF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[217] ,DBERR_NOSUCHINDEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[218] ,ERRCAT_ALC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[219] ,ERRBASE_ALC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[220] ,ERRCODE_DELTAISEMPTY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[221] ,ERRCODE_NOTHINGTOUNDO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[222] ,ERRCODE_NOMETADATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[223] ,ERRCODE_CANNOTAPPEND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[224] ,ERRCODE_DATAPACKETMISMATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[225] ,ERRCODE_ABORTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[226] ,ERRCODE_CANCELLED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[227] ,ERRCODE_NEWERVERSIONREQ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[228] ,ERRCODE_BLOBNOTFETCHED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[229] ,ERRCODE_DETAILSNOTFETCHED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[230] ,ERRCODE_NOMASTERRECORD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[231] ,ERRCODE_LINKFIELDSNOTUNIQUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[232] ,ERRCODE_FLYAWAY_WRONGORDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[233] ,ERRCODE_NOCASCADEDUPDATES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[234] ,DBERR_DELTAISEMPTY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[235] ,DBERR_NOTHINGTOUNDO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[236] ,DBERR_NOMETADATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[237] ,DBERR_CANNOTAPPEND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[238] ,DBERR_DATAPACKETMISMATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[239] ,DBERR_ABORTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[240] ,DBERR_CANCELLED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[241] ,DBERR_NEWERVERSIONREQ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[242] ,DBERR_BLOBNOTFETCHED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[243] ,DBERR_DETAILSNOTFETCHED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[244] ,DBERR_NOMASTERRECORD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[245] ,DBERR_LINKFIELDSNOTUNIQUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[246] ,DBERR_FLYAWAY_WRONGORDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[247] ,DBERR_NOCASCADEDUPDATES));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..9] of string = (
'AGGVALUE'
,'DSBOOKMRK'
,'DSFLDDesc'
,'DSIDXDesc'
,'DSProps'
,'TDSDataPacketFldDesc'
,'CreateDbClientObject'
,'VariantArrayToString'
,'StringToVariantArray'
,'RegisterMidasLib'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_AGGVALUE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_DSBOOKMRK_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(_DSFLDDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[3],Addr(_DSIDXDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[4],Addr(_DSProps_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[5],Addr(_TDSDataPacketFldDesc_)));
RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T4),[
TypeInfo(IDispatch),
TypeInfo(IDispatch),
TypeInfoUntyped],Addr(____CreateDbClientObject__Wrapper),cRegister);

RegisterProc(nil,MethodNames[7],mtProc,TypeInfo(_T5),[
TypeInfo(OleVariant),TypeInfo(string)],Addr(VariantArrayToString),cRegister);

RegisterProc(nil,MethodNames[8],mtProc,TypeInfo(_T6),[
TypeInfo(string),TypeInfo(OleVariant)],Addr(StringToVariantArray),cRegister);

RegisterProc(nil,MethodNames[9],mtProc,TypeInfo(_T7),[
TypeInfoPointer],Addr(RegisterMidasLib),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'FreeDataPacket',mtProc,TypeInfo(_T0),[
TypeInfoPointer],Addr(FreeDataPacket),cRegister)}

{RegisterProc(nil,'VarToDataPacket',mtProc,TypeInfo(_T1),[
TypeInfo(OleVariant),TypeInfoPointer],Addr(VarToDataPacket),cRegister)}

{RegisterProc(nil,'DataPacketSize',mtProc,TypeInfo(_T2),[
TypeInfoPointer,TypeInfo(Integer)],Addr(DataPacketSize),cRegister)}

{RegisterProc(nil,'DataPacketToVariant',mtProc,TypeInfo(_T3),[
TypeInfoPointer,
TypeInfo(OleVariant)],Addr(DataPacketToVariant),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
