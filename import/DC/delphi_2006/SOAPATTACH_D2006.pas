{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit SOAPATTACH_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  SysUtils,
  Types,
  Classes,
  InvokeRegistry,
  HTTPApp,
  SOAPAttachIntf,
  WSDLIntf,
  SOAPAttach;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (var p0 : string): THandle of object;

_T1 = function : string of object;

_T2 = function (const p0 : string): string of object;

_T3 = _T1;

{_T4 = function (const p0 : string): IMimeAttachmentHandler of object;}

_T5 = procedure (const p0 : string) of object;

_T6 = procedure (p0 : TWebRequest) of object;

_T7 = _T1;

function __DC__GetTSOAPAttachmentData__ID(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TSOAPAttachmentData(Instance).ID;
end;

procedure __DC__SetTSOAPAttachmentData__ID(Instance : TObject; Params : PVariantArgList);
begin
TSOAPAttachmentData(Instance).ID:=OleVariant(Params^[0]);
end;

function __DC__GetTWebRequestStream__MaxLine(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequestStream(Instance).MaxLine;
end;

procedure __DC__SetTWebRequestStream__MaxLine(Instance : TObject; Params : PVariantArgList);
begin
TWebRequestStream(Instance).MaxLine:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TSOAPAttachmentData,'ID',__DC__GetTSOAPAttachmentData__ID,__DC__SetTSOAPAttachmentData__ID);
RegisterProperty(TWebRequestStream,'MaxLine',__DC__GetTWebRequestStream__MaxLine,__DC__SetTWebRequestStream__MaxLine);
end;

const __ConstNames0 : array[0..1] of string = (
'EOL'
,'BlockReadSize'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,EOL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,BlockReadSize));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..1] of TClass = (
TSOAPAttachmentData,
TWebRequestStream
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..3] of string = (
'GetTempHandle'
,'GetTempDir'
,'GetMimeBoundaryFromType'
,'GetBorlandMimeContentType'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(string),TypeInfo(THandle)],Addr(GetTempHandle),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[TypeInfo(string)],Addr(GetTempDir),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(string),TypeInfo(string)],Addr(GetMimeBoundaryFromType),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),[TypeInfo(string)],Addr(GetBorlandMimeContentType),cRegister);

RegRegisterMethod(TSOAPAttachmentData,'SetCacheFile',TypeInfo(_T5),[
TypeInfo(string)],Addr(TSOAPAttachmentData.SetCacheFile));

RegisterProc(TWebRequestStream,'Create',mtConstructor,TypeInfo(_T6),[
TypeInfo(TWebRequest)],Addr(TWebRequestStream.Create),cRegister);

RegRegisterMethod(TWebRequestStream,'ReadLn',TypeInfo(_T7),[TypeInfo(string)],Addr(TWebRequestStream.ReadLn));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'GetMimeAttachmentHandler',mtProc,TypeInfo(_T4),[
TypeInfo(string),TypeInfo(IMimeAttachmentHandler)],Addr(GetMimeAttachmentHandler),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
