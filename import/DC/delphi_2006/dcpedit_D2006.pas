{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit dcpedit_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  activex,
  dcscript,
  windows,
  messages,
  classes,
  dcgen,
  dcdsgnstuff,
  controls,
  dcsystem,
  dcdreamlib,
  graphics,
  forms,
  sysutils,
  dcconsts,
  dccommon,
  typinfo,
  dcedit,
  dcpedit;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : TCustomForm) of object;

_T1 = _T0;

{_T2 = function (p0 : TDCDsgnProp;
p1 : TPersistent): TWinControlClass of object;}

{_T3 = function (p0 : TDCDsgnProp;
p1 : TPersistent): TControlClass of object;}

{_T4 = function (p0 : PTypeInfo;
p1 : TPersistent;
const p2 : string): TControlClass of object;}

{_T5 = function (p0 : PTypeInfo;
p1 : TPersistent;
const p2 : string): TWinControlClass of object;}

{_T6 = function (const p0 : string): TDCDsgnProp of object;}

{_T7 = function : TControlClass of object;}

{_T8 = function : TWinControlClass of object;}

_T9 = function : Boolean of object;

_T10 = procedure  of object;

_T11 = _T10;

_T12 = _T10;

_T13 = _T10;

_T14 = _T10;

_T15 = function : string of object;

_T16 = function : TObject of object;

{_T17 = function : PTypeInfo of object;}

function __DC__GetTCompList__SelectedComponents(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCompList(Instance).SelectedComponents);
end;

procedure __DC__SetTCompList__SelectedComponents(Instance : TObject; Params : PVariantArgList);
begin
TCompList(Instance).SelectedComponents:=TList(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCompList__OwnerComponent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCompList(Instance).OwnerComponent);
end;

procedure __DC__SetTCompList__OwnerComponent(Instance : TObject; Params : PVariantArgList);
begin
TCompList(Instance).OwnerComponent:=TPersistent(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTDCCustomPropEditor__Button1Kind(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCCustomPropEditor(Instance).Button1Kind;
end;

procedure __DC__SetTDCCustomPropEditor__Button1Kind(Instance : TObject; Params : PVariantArgList);
begin
TDCCustomPropEditor(Instance).Button1Kind:=OleVariant(Params^[0]);
end;

function __DC__GetTDCCustomPropEditor__ComponentList(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDCCustomPropEditor(Instance).ComponentList);
end;

procedure __DC__SetTDCCustomPropEditor__ComponentList(Instance : TObject; Params : PVariantArgList);
begin
TDCCustomPropEditor(Instance).ComponentList:=TList(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTDCCustomPropEditor__Component(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDCCustomPropEditor(Instance).Component);
end;

procedure __DC__SetTDCCustomPropEditor__Component(Instance : TObject; Params : PVariantArgList);
begin
TDCCustomPropEditor(Instance).Component:=TPersistent(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTDCCustomPropEditor__LinkedEditor(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDCCustomPropEditor(Instance).LinkedEditor);
end;

procedure __DC__SetTDCCustomPropEditor__LinkedEditor(Instance : TObject; Params : PVariantArgList);
begin
TDCCustomPropEditor(Instance).LinkedEditor:=TDCCustomPropEditor(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTDCCustomPropEditor__propname(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCCustomPropEditor(Instance).propname;
end;

procedure __DC__SetTDCCustomPropEditor__propname(Instance : TObject; Params : PVariantArgList);
begin
TDCCustomPropEditor(Instance).propname:=OleVariant(Params^[0]);
end;

function __DC__GetTHistoryStringEdit__List(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(THistoryStringEdit(Instance).List);
end;

procedure __RegisterProps;
begin
RegisterProperty(TCompList,'SelectedComponents',__DC__GetTCompList__SelectedComponents,__DC__SetTCompList__SelectedComponents);
RegisterProperty(TCompList,'OwnerComponent',__DC__GetTCompList__OwnerComponent,__DC__SetTCompList__OwnerComponent);
RegisterProperty(TDCCustomPropEditor,'Button1Kind',__DC__GetTDCCustomPropEditor__Button1Kind,__DC__SetTDCCustomPropEditor__Button1Kind);
RegisterProperty(TDCCustomPropEditor,'ComponentList',__DC__GetTDCCustomPropEditor__ComponentList,__DC__SetTDCCustomPropEditor__ComponentList);
RegisterProperty(TDCCustomPropEditor,'Component',__DC__GetTDCCustomPropEditor__Component,__DC__SetTDCCustomPropEditor__Component);
RegisterProperty(TDCCustomPropEditor,'LinkedEditor',__DC__GetTDCCustomPropEditor__LinkedEditor,__DC__SetTDCCustomPropEditor__LinkedEditor);
RegisterProperty(TDCCustomPropEditor,'propname',__DC__GetTDCCustomPropEditor__propname,__DC__SetTDCCustomPropEditor__propname);
RegisterProperty(THistoryStringEdit,'List',__DC__GetTHistoryStringEdit__List,nil);
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..10] of TClass = (
TCompList,
TDCCustomPropEditor,
TDCHistoryEdit,
TDCPropCheckBox,
TDCPropEditor,
TDCPropRadioButton,
TGraphEdit2,
THistoryStringEdit,
TImageEdit,
TMultiSelectPropEdit,
TPictureEdit
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..1] of string = (
'UpdatePropeditEnabled'
,'UpdateEditorsState'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TCustomForm)],Addr(UpdatePropeditEnabled),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(TCustomForm)],Addr(UpdateEditorsState),cRegister);

//RegRegisterMethod(TDCCustomPropEditor,'UpDownSelect',TypeInfo(_T9),[TypeInfo(Boolean)], pointer(296));
RegRegisterMethod(TDCCustomPropEditor,'UpDownSelect',TypeInfo(_T9),[TypeInfo(Boolean)],  getVMTProcAddr('TDCCustomPropEditor','UpDownSelect',296));


//RegRegisterMethod(TDCCustomPropEditor,'ResetAfterCreateHandle',TypeInfo(_T10),NoParams, pointer(300));
RegRegisterMethod(TDCCustomPropEditor,'ResetAfterCreateHandle',TypeInfo(_T10),NoParams,  getVMTProcAddr('TDCCustomPropEditor','ResetAfterCreateHandle',300));


//RegRegisterMethod(TDCCustomPropEditor,'DoAutoUpdate',TypeInfo(_T11),NoParams, pointer(304));
RegRegisterMethod(TDCCustomPropEditor,'DoAutoUpdate',TypeInfo(_T11),NoParams,  getVMTProcAddr('TDCCustomPropEditor','DoAutoUpdate',304));


//RegRegisterMethod(TDCCustomPropEditor,'UpdateEditorState',TypeInfo(_T12),NoParams, pointer(308));
RegRegisterMethod(TDCCustomPropEditor,'UpdateEditorState',TypeInfo(_T12),NoParams,  getVMTProcAddr('TDCCustomPropEditor','UpdateEditorState',308));


//RegRegisterMethod(THistoryStringEdit,'SaveHistory',TypeInfo(_T13),NoParams, pointer(60));
RegRegisterMethod(THistoryStringEdit,'SaveHistory',TypeInfo(_T13),NoParams,  getVMTProcAddr('THistoryStringEdit','SaveHistory',60));


//RegRegisterMethod(THistoryStringEdit,'LoadHistory',TypeInfo(_T14),NoParams, pointer(64));
RegRegisterMethod(THistoryStringEdit,'LoadHistory',TypeInfo(_T14),NoParams,  getVMTProcAddr('THistoryStringEdit','LoadHistory',64));


//RegRegisterMethod(THistoryStringEdit,'GetRegName',TypeInfo(_T15),[TypeInfo(string)], pointer(68));
RegRegisterMethod(THistoryStringEdit,'GetRegName',TypeInfo(_T15),[TypeInfo(string)],  getVMTProcAddr('THistoryStringEdit','GetRegName',68));


RegRegisterMethod(TMultiSelectPropEdit,'GetIntfImplementer',TypeInfo(_T16),[TypeInfo(TObject)],Addr(TMultiSelectPropEdit.GetIntfImplementer));

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'GetPopupClass',mtProc,TypeInfo(_T2),[
TypeInfo(TDCDsgnProp),
TypeInfo(TPersistent),TypeInfo(TWinControlClass)],Addr(GetPopupClass),cRegister)}

{RegisterProc(nil,'GetEditClass',mtProc,TypeInfo(_T3),[
TypeInfo(TDCDsgnProp),
TypeInfo(TPersistent),TypeInfo(TControlClass)],Addr(GetEditClass),cRegister)}

{RegisterProc(nil,'_GetEditClass',mtProc,TypeInfo(_T4),[
TypeInfoPointer,
TypeInfo(TPersistent),
TypeInfo(string),TypeInfo(TControlClass)],Addr(_GetEditClass),cRegister)}

{RegisterProc(nil,'_GetPopupClass',mtProc,TypeInfo(_T5),[
TypeInfoPointer,
TypeInfo(TPersistent),
TypeInfo(string),TypeInfo(TWinControlClass)],Addr(_GetPopupClass),cRegister)}

{RegRegisterMethod(TDCCustomPropEditor,'GetPropertyEditor',TypeInfo(_T6),[
TypeInfo(string),TypeInfo(TDCDsgnProp)], pointer(284))}

{RegRegisterMethod(TDCCustomPropEditor,'GetEditType',TypeInfo(_T7),[TypeInfo(TControlClass)], pointer(288))}

{RegRegisterMethod(TDCCustomPropEditor,'GetPopupType',TypeInfo(_T8),[TypeInfo(TWinControlClass)], pointer(292))}

{RegRegisterMethod(TMultiSelectPropEdit,'GetRealPropType',TypeInfo(_T17),[TypeInfoPointer], pointer(60))}

RegisterEvent(TypeInfo(THistoryStoreEvent),[
TypeInfo(TObject),
TypeInfo(TStrings)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
