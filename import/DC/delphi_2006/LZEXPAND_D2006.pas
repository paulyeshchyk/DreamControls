{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit LZEXPAND_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  LZExpand;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (p0 : Integer;
p1 : Integer): Longint of object;

_T1 = function (p0 : Integer): Integer of object;

{_T2 = function (p0 : PChar;
p1 : PChar): Integer of object;}

{_T3 = function (p0 : PAnsiChar;
p1 : PAnsiChar): Integer of object;}

{_T4 = function (p0 : PWideChar;
p1 : PWideChar): Integer of object;}

_T8 = function (p0 : Integer;
p1 : Longint;
p2 : Integer): Longint of object;

{_T9 = function (p0 : Integer;
p1 : LPSTR;
p2 : Integer): Integer of object;}

_T10 = procedure (p0 : Integer) of object;

procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..7] of string = (
'LZERROR_BADINHANDLE'
,'LZERROR_BADOUTHANDLE'
,'LZERROR_READ'
,'LZERROR_WRITE'
,'LZERROR_GLOBALLOC'
,'LZERROR_GLOBLOCK'
,'LZERROR_BADVALUE'
,'LZERROR_UNKNOWNALG'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,LZERROR_BADINHANDLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,LZERROR_BADOUTHANDLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,LZERROR_READ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,LZERROR_WRITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,LZERROR_GLOBALLOC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,LZERROR_GLOBLOCK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,LZERROR_BADVALUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,LZERROR_UNKNOWNALG));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..3] of string = (
'LZCopy'
,'LZInit'
,'LZSeek'
,'LZClose'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(Longint)],Addr(LZCopy),cStdCall);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(Integer),TypeInfo(Integer)],Addr(LZInit),cStdCall);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T8),[
TypeInfo(Integer),
TypeInfo(Longint),
TypeInfo(Integer),TypeInfo(Longint)],Addr(LZSeek),cStdCall);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T10),[
TypeInfo(Integer)],Addr(LZClose),cStdCall);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'GetExpandedName',mtProc,TypeInfo(_T2),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Integer)],Addr(GetExpandedName),cStdCall)}

{RegisterProc(nil,'GetExpandedNameA',mtProc,TypeInfo(_T3),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Integer)],Addr(GetExpandedNameA),cStdCall)}

{RegisterProc(nil,'GetExpandedNameW',mtProc,TypeInfo(_T4),[
TypeInfoPWideChar,
TypeInfoPWideChar,TypeInfo(Integer)],Addr(GetExpandedNameW),cStdCall)}

{RegisterProc(nil,'LZRead',mtProc,TypeInfo(_T9),[
TypeInfo(Integer),
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(Integer)],Addr(LZRead),cStdCall)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
