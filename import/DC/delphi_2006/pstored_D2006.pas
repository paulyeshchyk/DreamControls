{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit pstored_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  Windows,
  Messages,
  SysUtils,
  Classes,
  Graphics,
  Controls,
  Forms,
  dcdsgnstuff,
  Dialogs,
  DcTree,
  dctsrc,
  ComCtrls,
  typinfo,
  dcgen,
  dccommon,
  StdCtrls,
  ExtCtrls,
  dcdreamlib,
  dcstdctl,
  dcconsts,
  consts,
  treemod,
  checklst,
  dctslite,
  dcdtree,
  dcactlst,
  pstored;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : TDCPropStore) of object;

_T1 = procedure (p0 : TObject;
p1 : TTreeNode) of object;

_T2 = procedure (p0 : TObject) of object;

_T3 = _T2;

_T4 = _T2;

_T5 = _T2;

_T6 = _T2;

function __DC__GetTPropertySelect__OwnerComp(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TPropertySelect(Instance).OwnerComp);
end;

procedure __DC__SetTPropertySelect__OwnerComp(Instance : TObject; Params : PVariantArgList);
begin
TPropertySelect(Instance).OwnerComp:=TComponent(VarToObject(OleVariant(Params^[0])));
end;

procedure __RegisterProps;
begin
RegisterProperty(TPropertySelect,'OwnerComp',__DC__GetTPropertySelect__OwnerComp,__DC__SetTPropertySelect__OwnerComp);
end;

function __DC__Getpstored__PropertySelect(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(pstored.PropertySelect);
end;

procedure __DC__Setpstored__PropertySelect(Instance : TObject; Params : PVariantArgList);
begin
TObject(pstored.PropertySelect):=(VarToObject(OleVariant(Params^[0])));
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('PropertySelect',__DC__Getpstored__PropertySelect,__DC__Setpstored__PropertySelect));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..0] of TClass = (
TPropertySelect
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..0] of string = (
'EditPropStore'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TDCPropStore)],Addr(EditPropStore),cRegister);

RegRegisterMethod(TPropertySelect,'DCTreeView1Change',TypeInfo(_T1),[
TypeInfo(TObject),
TypeInfo(TTreeNode)],Addr(TPropertySelect.DCTreeView1Change));

RegRegisterMethod(TPropertySelect,'DCCheckListBox1ClickCheck',TypeInfo(_T2),[
TypeInfo(TObject)],Addr(TPropertySelect.DCCheckListBox1ClickCheck));

RegRegisterMethod(TPropertySelect,'SelectAllClick',TypeInfo(_T3),[
TypeInfo(TObject)],Addr(TPropertySelect.SelectAllClick));

RegRegisterMethod(TPropertySelect,'UnSelectAllClick',TypeInfo(_T4),[
TypeInfo(TObject)],Addr(TPropertySelect.UnSelectAllClick));

RegRegisterMethod(TPropertySelect,'FormCreate',TypeInfo(_T5),[
TypeInfo(TObject)],Addr(TPropertySelect.FormCreate));

RegRegisterMethod(TPropertySelect,'FormShow',TypeInfo(_T6),[
TypeInfo(TObject)],Addr(TPropertySelect.FormShow));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
