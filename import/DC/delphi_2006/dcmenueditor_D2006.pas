{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit dcmenueditor_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  Types,
  activex,
  dcscript,
  Controls,
  Menus,
  Classes,
  Windows,
  Graphics,
  Messages,
  Forms,
  StdCtrls,
  CommCtrl,
  SysUtils,
  ImgList,
  DCdreamLib,
  DCSystem,
  DCGen,
  DCCommon,
  DCConsts,
  DCGraphFunc,
  DCMenuEditor;
function ConvertTRectToVariant(var R : TRect) : OleVariant;
function ConvertVariantToTRect(const V : OleVariant) : TRect;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TRect__Wrapper = class(TDCRecordWrapper)
private
fR : TRect;
public
function GetRecordPtr : pointer; override;
published
procedure setLeft(const val : Longint);
function getLeft : Longint;
property Left : Longint read getLeft write setLeft;
procedure setTop(const val : Longint);
function getTop : Longint;
property Top : Longint read getTop write setTop;
procedure setRight(const val : Longint);
function getRight : Longint;
property Right : Longint read getRight write setRight;
procedure setBottom(const val : Longint);
function getBottom : Longint;
property Bottom : Longint read getBottom write setBottom;
end;
type __TDCMenuFolder__ = class(TDCMenuFolder);
type __TDCMenuItem__ = class(TDCMenuItem);
type
_T0 = procedure (p0 : TMenuItem) of object;

_T1 = procedure  of object;

_T2 = procedure (p0 : TDCMenuItem;
p1 : TDCMenuItem) of object;

_T3 = _T1;

{_T4 = function : TDCMenuItemClass of object;}

_T5 = procedure (p0 : Integer) of object;

_T6 = _T1;

_T7 = _T1;

_T8 = _T1;

_T9 = _T1;

_T10 = _T1;

_T11 = _T1;

_T12 = _T1;

_T13 = function (p0 : Integer): IDispatch of object;

_T14 = function : Integer of object;

_T15 = _T14;

_T16 = _T2;

_T17 = _T1;

_T18 = _T1;

_T19 = procedure (const p0 : IDispatch) of object;

_T20 = procedure (const p0 : IDispatch;
p1 : Integer) of object;

_T21 = procedure (p0 : TComponent;
p1 : TDCMenuItem;
p2 : TMenuItem) of object;

_T22 = _T1;

_T23 = _T1;

_T24 = procedure (p0 : TCanvas) of object;

_T25 = function (p0 : Integer;
p1 : Integer): Integer of object;

_T26 = _T5;

_T27 = procedure (p0 : Integer;
p1 : Boolean) of object;

_T28 = _T5;

_T29 = _T1;

_T30 = _T14;

_T31 = _T19;

_T32 = procedure (p0 : TCanvas;
const p1 : IDispatch;
p2 : Boolean) of object;

_T33 = _T32;

_T34 = procedure (p0 : TDCMenuFolder;
p1 : TMenuItem) of object;

_T35 = _T32;

_T36 = _T19;

_T37 = _T1;

_T38 = _T1;

function __TRect__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRect__Wrapper.setLeft(const val : Longint);
begin
TRect(GetRecordPtr^).Left := val;
end;
function __TRect__Wrapper.getLeft : Longint;
begin
result := TRect(GetRecordPtr^).Left;
end;
procedure __TRect__Wrapper.setTop(const val : Longint);
begin
TRect(GetRecordPtr^).Top := val;
end;
function __TRect__Wrapper.getTop : Longint;
begin
result := TRect(GetRecordPtr^).Top;
end;
procedure __TRect__Wrapper.setRight(const val : Longint);
begin
TRect(GetRecordPtr^).Right := val;
end;
function __TRect__Wrapper.getRight : Longint;
begin
result := TRect(GetRecordPtr^).Right;
end;
procedure __TRect__Wrapper.setBottom(const val : Longint);
begin
TRect(GetRecordPtr^).Bottom := val;
end;
function __TRect__Wrapper.getBottom : Longint;
begin
result := TRect(GetRecordPtr^).Bottom;
end;
function __TDCMenuFolder__GetItemRect__Wrapper(__Instance : TDCMenuFolder;
p0 : Integer): IDispatch;
var
__result : TRect;
__wrapper : __TRect__Wrapper;
begin
__result := __TDCMenuFolder__(__Instance).GetItemRect(p0);
__wrapper := __TRect__Wrapper.Create;
__wrapper.fR := __result;
result := IDispatch(__wrapper);
end;

procedure __TDCMenuFolder__InitItemRect__Wrapper(__Instance : TDCMenuFolder;
const p0 : IDispatch);
var
__p0 : ^TRect;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
__TDCMenuFolder__(__Instance).InitItemRect(__p0^);
end;

procedure __TDCMenuFolder__ShiftRectOnNextItem__Wrapper(__Instance : TDCMenuFolder;
const p0 : IDispatch;
p1 : Integer);
var
__p0 : ^TRect;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
__TDCMenuFolder__(__Instance).ShiftRectOnNextItem(__p0^,p1);
end;

procedure __TDCMenuItem__InitSubMenu__Wrapper(__Instance : TDCMenuItem;
const p0 : IDispatch);
var
__p0 : ^TRect;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
__TDCMenuItem__(__Instance).InitSubMenu(__p0^);
end;

procedure __TDCMenuItem__DrawEmptyItem__Wrapper(__Instance : TDCMenuItem;
p0 : TCanvas;
const p1 : IDispatch;
p2 : Boolean);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
__TDCMenuItem__(__Instance).DrawEmptyItem(p0,__p1^,p2);
end;

procedure __TDCMenuItem__DrawImage__Wrapper(__Instance : TDCMenuItem;
p0 : TCanvas;
const p1 : IDispatch;
p2 : Boolean);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
__TDCMenuItem__(__Instance).DrawImage(p0,__p1^,p2);
end;

procedure __TDCMenuItem__DrawItem__Wrapper(__Instance : TDCMenuItem;
p0 : TCanvas;
const p1 : IDispatch;
p2 : Boolean);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
TDCMenuItem(__Instance).DrawItem(p0,__p1^,p2);
end;

procedure __TDCMenuItem__ShowSubMenu__Wrapper(__Instance : TDCMenuItem;
const p0 : IDispatch);
var
__p0 : ^TRect;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
TDCMenuItem(__Instance).ShowSubMenu(__p0^);
end;


type __TRect__Wrapper__ = class(__TRect__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRect__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRectToVariant(var R : TRect) : OleVariant;
var
__rw : __TRect__Wrapper__;
begin
__rw := __TRect__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRect(const V : OleVariant) : TRect;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRect((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
function __DC__GetTDCCustomMenuEditor__Menu(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDCCustomMenuEditor(Instance).Menu);
end;

procedure __DC__SetTDCCustomMenuEditor__Menu(Instance : TObject; Params : PVariantArgList);
begin
TDCCustomMenuEditor(Instance).Menu:=TMenu(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTDCCustomMenuEditor__SelectedItem(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDCCustomMenuEditor(Instance).SelectedItem);
end;

function __DC__GetTDCMenuFolder__Count(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCMenuFolder(Instance).Count;
end;

function __DC__GetTDCMenuFolder__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDCMenuFolder(Instance).Items[OleVariant(Params^[0])]);
end;

function __DC__GetTDCMenuFolder__SelectedItem(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCMenuFolder(Instance).SelectedItem;
end;

procedure __DC__SetTDCMenuFolder__SelectedItem(Instance : TObject; Params : PVariantArgList);
begin
TDCMenuFolder(Instance).SelectedItem:=OleVariant(Params^[0]);
end;

function __DC__GetTDCMenuItem__MenuItem(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDCMenuItem(Instance).MenuItem);
end;

function __DC__GetTDCMenuItem__Width(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCMenuItem(Instance).Width;
end;

procedure __RegisterProps;
begin
RegisterProperty(TDCCustomMenuEditor,'Menu',__DC__GetTDCCustomMenuEditor__Menu,__DC__SetTDCCustomMenuEditor__Menu);
RegisterProperty(TDCCustomMenuEditor,'SelectedItem',__DC__GetTDCCustomMenuEditor__SelectedItem,nil);
RegisterProperty(TDCMenuFolder,'Count',__DC__GetTDCMenuFolder__Count,nil);
RegisterIndexedProperty(TDCMenuFolder,'Items',1,False,__DC__GetTDCMenuFolder__Items,nil);
RegisterProperty(TDCMenuFolder,'SelectedItem',__DC__GetTDCMenuFolder__SelectedItem,__DC__SetTDCMenuFolder__SelectedItem);
RegisterProperty(TDCMenuItem,'MenuItem',__DC__GetTDCMenuItem__MenuItem,nil);
RegisterProperty(TDCMenuItem,'Width',__DC__GetTDCMenuItem__Width,nil);
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..7] of TClass = (
TDCCustomMenuEditor,
TDCMainMenuFolder,
TDCMainMenuItem,
TDCMenuEditor,
TDCMenuFolder,
TDCMenuItem,
TDCPopupMenuFolder,
TDCPopupMenuItem
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..0] of string = (
'DCCreateMenuItemName'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TMenuItem)],Addr(DCCreateMenuItemName),cRegister);

//RegRegisterMethod(TDCCustomMenuEditor,'UpdateBorders',TypeInfo(_T1),NoParams, pointer(220));
RegRegisterMethod(TDCCustomMenuEditor,'UpdateBorders',TypeInfo(_T1),NoParams,  getVMTProcAddr('TDCCustomMenuEditor','UpdateBorders',220));


RegRegisterMethod(TDCCustomMenuEditor,'DoSelectionChanged',TypeInfo(_T2),[
TypeInfo(TDCMenuItem),
TypeInfo(TDCMenuItem)], pointer(MinVMTOffset - 79));

//RegRegisterMethod(TDCMenuFolder,'DrawImageOnDragItem',TypeInfo(_T3),NoParams, pointer(220));
RegRegisterMethod(TDCMenuFolder,'DrawImageOnDragItem',TypeInfo(_T3),NoParams,  getVMTProcAddr('TDCMenuFolder','DrawImageOnDragItem',220));


//RegRegisterMethod(TDCMenuFolder,'ValidateChanges',TypeInfo(_T5),[TypeInfo(Integer)], pointer(228));
RegRegisterMethod(TDCMenuFolder,'ValidateChanges',TypeInfo(_T5),[TypeInfo(Integer)],  getVMTProcAddr('TDCMenuFolder','ValidateChanges',228));


//RegRegisterMethod(TDCMenuFolder,'CheckFictitiousItem',TypeInfo(_T6),NoParams, pointer(232));
RegRegisterMethod(TDCMenuFolder,'CheckFictitiousItem',TypeInfo(_T6),NoParams,  getVMTProcAddr('TDCMenuFolder','CheckFictitiousItem',232));


//RegRegisterMethod(TDCMenuFolder,'UpdateSize',TypeInfo(_T7),NoParams, pointer(236));
RegRegisterMethod(TDCMenuFolder,'UpdateSize',TypeInfo(_T7),NoParams,  getVMTProcAddr('TDCMenuFolder','UpdateSize',236));


//RegRegisterMethod(TDCMenuFolder,'MoveUpward',TypeInfo(_T8),NoParams, pointer(240));
RegRegisterMethod(TDCMenuFolder,'MoveUpward',TypeInfo(_T8),NoParams,  getVMTProcAddr('TDCMenuFolder','MoveUpward',240));


//RegRegisterMethod(TDCMenuFolder,'MoveDownward',TypeInfo(_T9),NoParams, pointer(244));
RegRegisterMethod(TDCMenuFolder,'MoveDownward',TypeInfo(_T9),NoParams,  getVMTProcAddr('TDCMenuFolder','MoveDownward',244));


//RegRegisterMethod(TDCMenuFolder,'MoveRightward',TypeInfo(_T10),NoParams, pointer(248));
RegRegisterMethod(TDCMenuFolder,'MoveRightward',TypeInfo(_T10),NoParams,  getVMTProcAddr('TDCMenuFolder','MoveRightward',248));


//RegRegisterMethod(TDCMenuFolder,'MoveLeftward',TypeInfo(_T11),NoParams, pointer(252));
RegRegisterMethod(TDCMenuFolder,'MoveLeftward',TypeInfo(_T11),NoParams,  getVMTProcAddr('TDCMenuFolder','MoveLeftward',252));


//RegRegisterMethod(TDCMenuFolder,'MoveSelectionToParent',TypeInfo(_T12),NoParams, pointer(256));
RegRegisterMethod(TDCMenuFolder,'MoveSelectionToParent',TypeInfo(_T12),NoParams,  getVMTProcAddr('TDCMenuFolder','MoveSelectionToParent',256));


//RegRegisterMethod(TDCMenuFolder,'GetItemRect',TypeInfo(_T13),[TypeInfo(Integer),TypeInfo(IDispatch)], pointer(260));
RegRegisterMethod(TDCMenuFolder,'GetItemRect',TypeInfo(_T13),[TypeInfo(Integer),TypeInfo(IDispatch)],  getVMTProcAddr('TDCMenuFolder','GetItemRect',260));


//RegRegisterMethod(TDCMenuFolder,'GetImageShift',TypeInfo(_T14),[TypeInfo(Integer)], pointer(264));
RegRegisterMethod(TDCMenuFolder,'GetImageShift',TypeInfo(_T14),[TypeInfo(Integer)],  getVMTProcAddr('TDCMenuFolder','GetImageShift',264));


//RegRegisterMethod(TDCMenuFolder,'GetItemHeight',TypeInfo(_T15),[TypeInfo(Integer)], pointer(268));
RegRegisterMethod(TDCMenuFolder,'GetItemHeight',TypeInfo(_T15),[TypeInfo(Integer)],  getVMTProcAddr('TDCMenuFolder','GetItemHeight',268));


RegRegisterMethod(TDCMenuFolder,'DoSelectionChanged',TypeInfo(_T16),[
TypeInfo(TDCMenuItem),
TypeInfo(TDCMenuItem)], pointer(MinVMTOffset - 79));

RegRegisterMethod(TDCMenuFolder,'DoGlobalMenuClick',TypeInfo(_T17),NoParams, pointer(MinVMTOffset - 80));

RegRegisterMethod(TDCMenuFolder,'DoGlobalMenuDblClick',TypeInfo(_T18),NoParams, pointer(MinVMTOffset - 81));

//RegRegisterMethod(TDCMenuFolder,'InitItemRect',TypeInfo(_T19),[TypeInfo(IDispatch)], pointer(272));
RegRegisterMethod(TDCMenuFolder,'InitItemRect',TypeInfo(_T19),[TypeInfo(IDispatch)],  getVMTProcAddr('TDCMenuFolder','InitItemRect',272));


//RegRegisterMethod(TDCMenuFolder,'ShiftRectOnNextItem',TypeInfo(_T20),[TypeInfo(IDispatch),TypeInfo(Integer)], pointer(276));
RegRegisterMethod(TDCMenuFolder,'ShiftRectOnNextItem',TypeInfo(_T20),[TypeInfo(IDispatch),TypeInfo(Integer)],  getVMTProcAddr('TDCMenuFolder','ShiftRectOnNextItem',276));


//RegisterProc(TDCMenuFolder,'Create',mtConstructor,TypeInfo(_T21),[TypeInfo(TComponent),TypeInfo(TDCMenuItem),TypeInfo(TMenuItem)], pointer(280),cRegister);
RegisterProc(TDCMenuFolder,'Create',mtConstructor,TypeInfo(_T21),[TypeInfo(TComponent),TypeInfo(TDCMenuItem),TypeInfo(TMenuItem)],  getVMTProcAddr('TDCMenuFolder','Create',280),cRegister);


RegRegisterMethod(TDCMenuFolder,'Release',TypeInfo(_T22),NoParams,Addr(TDCMenuFolder.Release));

//RegRegisterMethod(TDCMenuFolder,'Initialize',TypeInfo(_T23),NoParams, pointer(284));
RegRegisterMethod(TDCMenuFolder,'Initialize',TypeInfo(_T23),NoParams,  getVMTProcAddr('TDCMenuFolder','Initialize',284));


RegRegisterMethod(TDCMenuFolder,'InitRegions',TypeInfo(_T24),[
TypeInfo(TCanvas)],Addr(TDCMenuFolder.InitRegions));

RegRegisterMethod(TDCMenuFolder,'GetItemAt',TypeInfo(_T25),[
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(Integer)],Addr(TDCMenuFolder.GetItemAt));

//RegRegisterMethod(TDCMenuFolder,'InsertItem',TypeInfo(_T26),[TypeInfo(Integer)], pointer(288));
RegRegisterMethod(TDCMenuFolder,'InsertItem',TypeInfo(_T26),[TypeInfo(Integer)],  getVMTProcAddr('TDCMenuFolder','InsertItem',288));


//RegRegisterMethod(TDCMenuFolder,'DeleteItem',TypeInfo(_T27),[TypeInfo(Integer),TypeInfo(Boolean)], pointer(292));
RegRegisterMethod(TDCMenuFolder,'DeleteItem',TypeInfo(_T27),[TypeInfo(Integer),TypeInfo(Boolean)],  getVMTProcAddr('TDCMenuFolder','DeleteItem',292));


RegRegisterMethod(TDCMenuFolder,'CreateSubMenu',TypeInfo(_T28),[
TypeInfo(Integer)],Addr(TDCMenuFolder.CreateSubMenu));

//RegRegisterMethod(TDCMenuFolder,'CheckMenuAttributes',TypeInfo(_T29),NoParams, pointer(296));
RegRegisterMethod(TDCMenuFolder,'CheckMenuAttributes',TypeInfo(_T29),NoParams,  getVMTProcAddr('TDCMenuFolder','CheckMenuAttributes',296));


//RegRegisterMethod(TDCMenuItem,'GetWidth',TypeInfo(_T30),[TypeInfo(Integer)], pointer(0));
RegRegisterMethod(TDCMenuItem,'GetWidth',TypeInfo(_T30),[TypeInfo(Integer)],  getVMTProcAddr('TDCMenuItem','GetWidth',0));


//RegRegisterMethod(TDCMenuItem,'InitSubMenu',TypeInfo(_T31),[TypeInfo(IDispatch)], pointer(4));
RegRegisterMethod(TDCMenuItem,'InitSubMenu',TypeInfo(_T31),[TypeInfo(IDispatch)],  getVMTProcAddr('TDCMenuItem','InitSubMenu',4));


//RegRegisterMethod(TDCMenuItem,'DrawEmptyItem',TypeInfo(_T32),[TypeInfo(TCanvas),TypeInfo(IDispatch),TypeInfo(Boolean)], pointer(8));
RegRegisterMethod(TDCMenuItem,'DrawEmptyItem',TypeInfo(_T32),[TypeInfo(TCanvas),TypeInfo(IDispatch),TypeInfo(Boolean)],  getVMTProcAddr('TDCMenuItem','DrawEmptyItem',8));


//RegRegisterMethod(TDCMenuItem,'DrawImage',TypeInfo(_T33),[TypeInfo(TCanvas),TypeInfo(IDispatch),TypeInfo(Boolean)], pointer(12));
RegRegisterMethod(TDCMenuItem,'DrawImage',TypeInfo(_T33),[TypeInfo(TCanvas),TypeInfo(IDispatch),TypeInfo(Boolean)],  getVMTProcAddr('TDCMenuItem','DrawImage',12));


RegisterProc(TDCMenuItem,'Create',mtConstructor,TypeInfo(_T34),[
TypeInfo(TDCMenuFolder),
TypeInfo(TMenuItem)], pointer(16),cRegister);

//RegRegisterMethod(TDCMenuItem,'DrawItem',TypeInfo(_T35),[TypeInfo(TCanvas),TypeInfo(IDispatch),TypeInfo(Boolean)], pointer(20));
RegRegisterMethod(TDCMenuItem,'DrawItem',TypeInfo(_T35),[TypeInfo(TCanvas),TypeInfo(IDispatch),TypeInfo(Boolean)],  getVMTProcAddr('TDCMenuItem','DrawItem',20));


//RegRegisterMethod(TDCMenuItem,'ShowSubMenu',TypeInfo(_T36),[TypeInfo(IDispatch)], pointer(24));
RegRegisterMethod(TDCMenuItem,'ShowSubMenu',TypeInfo(_T36),[TypeInfo(IDispatch)],  getVMTProcAddr('TDCMenuItem','ShowSubMenu',24));


RegRegisterMethod(TDCMenuItem,'HideSubMenu',TypeInfo(_T37),NoParams,Addr(TDCMenuItem.HideSubMenu));

RegRegisterMethod(TDCMenuItem,'CreateSubMenu',TypeInfo(_T38),NoParams,Addr(TDCMenuItem.CreateSubMenu));

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegRegisterMethod(TDCMenuFolder,'GetMenuItemClass',TypeInfo(_T4),[TypeInfo(TDCMenuItemClass)], pointer(224))}

RegisterEvent(TypeInfo(TDCOnSelectionChanged),[
TypeInfo(TObject),
TypeInfo(TDCMenuItem),
TypeInfo(TDCMenuItem)]);

RegisterEvent(TypeInfo(TDCSimpleNotifyEvent),NoParams);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
