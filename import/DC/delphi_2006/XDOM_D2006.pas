{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit XDOM_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Math,
  SysUtils,
  Classes,
  xdom;
function ConvertTdomDocumentFormatToVariant(var R : TdomDocumentFormat) : OleVariant;
function ConvertVariantToTdomDocumentFormat(const V : OleVariant) : TdomDocumentFormat;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TdomDocumentFormat__Wrapper = class(TDCRecordWrapper)
private
fR : TdomDocumentFormat;
public
function GetRecordPtr : pointer; override;
published
procedure setNamespaceUri(const val : WideString);
function getNamespaceUri : WideString;
property NamespaceUri : WideString read getNamespaceUri write setNamespaceUri;
procedure setQualifiedName(const val : WideString);
function getQualifiedName : WideString;
property QualifiedName : WideString read getQualifiedName write setQualifiedName;
end;
type
_T0 = function (const p0 : WideString): WideString of object;

_T1 = _T0;

_T2 = function (const p0 : wideChar): Boolean of object;

_T3 = _T2;

_T4 = _T2;

_T5 = _T2;

_T6 = _T2;

_T7 = _T2;

_T8 = _T2;

_T9 = _T2;

_T10 = _T2;

_T11 = _T2;

_T12 = function (const p0 : WideString): Boolean of object;

_T13 = _T12;

_T14 = _T12;

_T15 = _T12;

_T16 = _T12;

_T17 = _T12;

_T18 = _T12;

_T19 = _T12;

_T20 = _T12;

_T21 = _T12;

_T22 = _T12;

_T23 = _T12;

_T24 = _T12;

_T25 = _T12;

_T26 = _T12;

_T27 = _T12;

_T28 = _T12;

_T29 = _T12;

_T30 = _T12;

_T31 = _T12;

_T32 = _T12;

_T33 = _T12;

_T34 = _T2;

_T35 = _T12;

_T36 = _T12;

_T37 = _T12;

_T38 = _T12;

_T39 = _T12;

_T40 = _T12;

_T41 = _T12;

_T42 = _T0;

_T43 = function (const p0 : Integer): WideString of object;

_T44 = function (const p0 : WideString): Integer of object;

_T45 = _T0;

_T46 = _T0;

_T47 = function (const p0 : Char): wideChar of object;

_T48 = _T47;

_T49 = _T47;

_T50 = _T47;

_T51 = _T47;

_T52 = _T47;

_T53 = _T47;

_T54 = _T47;

_T55 = _T47;

_T56 = _T47;

_T57 = _T47;

_T58 = _T47;

_T59 = _T47;

_T60 = _T47;

_T61 = _T47;

_T62 = _T47;

_T63 = _T47;

_T64 = _T47;

_T65 = function (const p0 : String): WideString of object;

_T66 = _T65;

_T67 = _T65;

_T68 = _T65;

_T69 = _T65;

_T70 = _T65;

_T71 = _T65;

_T72 = _T65;

_T73 = _T65;

_T74 = _T65;

_T75 = _T65;

_T76 = _T65;

_T77 = _T65;

_T78 = _T65;

_T79 = _T65;

_T80 = _T65;

_T81 = _T65;

_T82 = _T65;

_T83 = _T65;

_T84 = function (const p0 : WideString;
const p1 : Boolean): String of object;

_T85 = function (const p0 : Integer): wideChar of object;

_T86 = _T85;

_T87 = function (const p0 : wideChar;
const p1 : wideChar): Integer of object;

_T88 = _T2;

_T89 = _T2;

_T90 = procedure  of object;

_T91 = procedure (const p0 : WideString;
var p1 : WideString;
p2 : TdomNameValueList) of object;

_T92 = procedure (p0 : WideString;
var p1 : WideString;
var p2 : WideString;
var p3 : WideString;
var p4 : WideString;
var p5 : Boolean) of object;

_T93 = procedure (const p0 : WideString;
var p1 : WideString;
var p2 : WideString;
var p3 : Boolean) of object;

_T94 = procedure (p0 : WideString;
var p1 : TStringList) of object;

_T95 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString): WideString of object;

_T96 = procedure (const p0 : WideString;
var p1 : WideString;
var p2 : WideString) of object;

_T97 = procedure (p0 : WideString;
var p1 : WideString;
var p2 : WideString;
var p3 : wideChar;
var p4 : Boolean) of object;

_T98 = _T0;

_T99 = _T0;

_T100 = _T0;

_T101 = procedure (const p0 : WideString;
var p1 : WideString;
var p2 : Boolean) of object;

_T102 = _T101;

_T103 = procedure (p0 : TStream;
const p1 : WideString) of object;

_T104 = procedure (p0 : TStream;
const p1 : Array of WideString) of object;

_T105 = procedure (p0 : TStream;
const p1 : Array of wideChar) of object;

_T106 = function (const p0;
p1 : Longint): Longint of object;

_T107 = _T106;

_T108 = procedure (p0 : Longint) of object;

_T109 = procedure (p0 : TStream) of object;

_T110 = _T90;

_T111 = function : WideString of object;

_T112 = function : Boolean of object;

_T113 = _T111;

_T114 = procedure (const p0 : WideString) of object;

_T115 = function : TdomElement of object;

_T116 = _T111;

_T117 = procedure (const p0 : TdomDocument;
const p1 : WideString;
const p2 : Boolean) of object;

_T118 = procedure (const p0 : TdomDocument;
const p1 : WideString;
const p2 : WideString;
const p3 : Boolean) of object;

_T119 = _T111;

_T120 = _T114;

_T121 = function : Integer of object;

_T122 = procedure (const p0 : TdomDocument) of object;

_T123 = function (const p0 : Integer;
const p1 : Integer): WideString of object;

_T124 = _T114;

_T125 = procedure (const p0 : Integer;
const p1 : WideString) of object;

_T126 = procedure (const p0 : Integer;
const p1 : Integer) of object;

_T127 = procedure (const p0 : Integer;
const p1 : Integer;
const p2 : WideString) of object;

_T128 = _T111;

_T129 = _T111;

_T130 = procedure (const p0 : TdomCustomCMObject;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString) of object;

_T131 = procedure (const p0 : TdomCustomCMObject;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString;
const p5 : WideString) of object;

_T132 = procedure (const p0 : TdomCustomCMObject;
const p1 : WideString) of object;

_T133 = _T132;

_T134 = _T111;

_T135 = _T114;

_T136 = _T121;

_T137 = procedure (const p0 : TdomCustomCMObject) of object;

_T138 = _T123;

_T139 = _T114;

_T140 = _T125;

_T141 = _T126;

_T142 = _T127;

_T143 = procedure (const p0 : TdomCustomCMObject;
const p1 : WideString;
const p2 : WideString) of object;

_T144 = _T111;

_T145 = function : TdomContentspecType of object;

_T146 = _T109;

_T147 = procedure (const p0 : TdomCustomCMObject;
const p1 : WideString;
const p2 : TdomContentspecType) of object;

_T148 = function (p0 : WideString): WideString of object;

_T149 = _T112;

_T150 = _T111;

_T151 = _T111;

_T152 = procedure (const p0 : Boolean) of object;

_T153 = function (const p0 : Boolean): Boolean of object;

_T154 = _T153;

_T155 = _T153;

_T156 = _T152;

_T157 = procedure (const p0 : TdomCustomCMObject;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString;
const p5 : WideString;
const p6 : WideString) of object;

_T158 = _T131;

_T159 = procedure (const p0 : TDomImplementation;
const p1 : WideString;
const p2 : WideString) of object;

_T160 = _T137;

_T161 = _T159;

_T162 = _T132;

_T163 = _T132;

_T164 = _T90;

_T165 = _T111;

_T166 = _T111;

_T167 = _T114;

_T168 = function : TdomCMNodeType of object;

_T169 = function : TdomCMNode of object;

_T170 = function : TdomCMNodeList of object;

_T171 = _T169;

_T172 = _T169;

_T173 = _T169;

_T174 = _T169;

_T175 = function : TdomCustomCMObject of object;

_T176 = _T111;

_T177 = _T152;

_T178 = function (const p0 : TdomCustomErrorHandler): Boolean of object;

_T179 = _T137;

_T180 = _T90;

_T181 = function (const p0 : TdomCMNode;
const p1 : TdomCMNode): TdomCMNode of object;

_T182 = _T181;

_T183 = function (const p0 : TdomCMNode): TdomCMNode of object;

_T184 = _T183;

_T185 = _T112;

_T186 = function (const p0 : Boolean): TdomCMNode of object;

_T187 = function (const p0 : TdomCMNode): Boolean of object;

_T188 = _T109;

_T189 = _T121;

_T190 = function (const p0 : TdomCMNode): Integer of object;

_T191 = function (const p0 : Integer): TdomCMNode of object;

_T192 = procedure (const p0 : TList) of object;

_T193 = procedure (const p0 : TdomCustomCMObject;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString) of object;

_T194 = _T111;

_T195 = _T111;

_T196 = _T193;

_T197 = procedure (const p0 : TdomCustomErrorHandler) of object;

_T198 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString): TdomCMAttribute of object;

_T199 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString;
const p5 : WideString): TdomCMEntity of object;

_T200 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString): TdomCMNotation of object;

_T201 = _T178;

_T202 = procedure (const p0 : TDomImplementation) of object;

_T203 = _T90;

_T204 = function : TdomCMExternalObject of object;

_T205 = function : TdomCMInternalObject of object;

_T206 = function (const p0 : TdomCMExternalObject): TdomCMExternalObject of object;

_T207 = function (const p0 : TdomCMInternalObject): TdomCMInternalObject of object;

_T208 = _T112;

_T209 = _T152;

_T210 = _T131;

_T211 = _T130;

_T212 = _T132;

_T213 = function (const p0 : TStringList;
const p1 : TStringList;
const p2 : WideString): Boolean of object;

_T214 = function (const p0 : TStringList;
const p1 : TStringList): Boolean of object;

_T215 = _T111;

_T216 = _T114;

_T217 = _T132;

_T218 = _T132;

_T219 = _T12;

_T220 = _T111;

_T221 = _T111;

_T222 = _T114;

_T223 = _T132;

_T224 = _T132;

_T225 = _T112;

_T226 = _T111;

_T227 = _T111;

_T228 = _T193;

_T229 = _T159;

_T230 = _T183;

_T231 = _T202;

_T232 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString): TdomCMAttrDefinition of object;

_T233 = function (const p0 : WideString): TdomCMAttrList of object;

_T234 = function (const p0 : WideString): TdomCMChoiceParticle of object;

_T235 = function (const p0 : WideString): TdomCMComment of object;

_T236 = function (const p0 : WideString;
const p1 : WideString): TdomCMElementParticle of object;

_T237 = function (const p0 : WideString;
const p1 : TdomContentspecType): TdomCMElementTypeDeclaration of object;

_T238 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString): TdomCMEntityDeclaration of object;

_T239 = function : TdomCMFragment of object;

_T240 = function (const p0 : WideString): TdomCMNameParticle of object;

_T241 = function (const p0 : WideString): TdomCMNmtokenParticle of object;

_T242 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString): TdomCMNotationDeclaration of object;

_T243 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString): TdomCMParameterEntityDeclaration of object;

_T244 = function (const p0 : WideString): TdomCMParameterEntityReference of object;

_T245 = function : TdomCMPcdataChoiceParticle of object;

_T246 = function (const p0 : WideString;
const p1 : WideString): TdomCMProcessingInstruction of object;

_T247 = function (const p0 : WideString): TdomCMSequenceParticle of object;

_T248 = procedure (var p0 : TdomCMNode) of object;

_T249 = procedure (const p0 : TdomCustomParser;
const p1 : TdomStandardLocator;
const p2 : WideString) of object;

_T250 = _T249;

_T251 = _T249;

_T252 = procedure (const p0 : TdomCustomParser;
const p1 : TdomStandardLocator;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString;
const p5 : WideString) of object;

_T253 = procedure (const p0 : TdomCustomParser) of object;

_T254 = procedure (const p0 : TdomCustomParser;
const p1 : TdomStandardLocator;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString) of object;

_T255 = _T249;

_T256 = _T249;

_T257 = _T249;

_T258 = procedure (const p0 : TdomCustomParser;
const p1 : TdomStandardLocator;
const p2 : WideString;
const p3 : WideString) of object;

_T259 = _T249;

_T260 = procedure (const p0 : TdomCustomParser;
const p1 : TdomStandardLocator;
p2 : WideString) of object;

_T261 = procedure (const p0 : TdomCustomParser;
const p1 : TdomStandardLocator;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString;
p5 : TdomNameValueList) of object;

_T262 = _T258;

_T263 = _T254;

_T264 = _T0;

_T265 = procedure (const p0 : TdomCustomParser;
const p1 : TdomStandardLocator;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString;
const p5 : WideString;
const p6 : WideString) of object;

_T266 = _T249;

_T267 = _T258;

_T268 = _T258;

_T269 = procedure (const p0 : TdomCustomParser;
const p1 : TdomStandardLocator) of object;

_T270 = _T253;

_T271 = _T265;

_T272 = _T254;

_T273 = _T252;

_T274 = _T249;

_T275 = _T258;

_T276 = _T249;

_T277 = procedure (const p0 : TdomCustomParser;
const p1 : WideString;
const p2 : WideString) of object;

_T278 = _T258;

_T279 = procedure (const p0 : TdomCustomParser;
const p1 : TdomStandardLocator;
const p2 : EParserException;
const p3 : WideString) of object;

_T280 = _T279;

_T281 = _T279;

_T282 = function (p0 : Integer): wideChar of object;

_T283 = procedure (p0 : Integer;
p1 : wideChar) of object;

_T284 = _T90;

_T285 = procedure (const p0 : wideChar) of object;

_T286 = _T114;

_T287 = _T12;

_T288 = _T12;

_T289 = _T90;

_T290 = _T12;

_T291 = _T111;

_T292 = function (const p0 : TdomCustomParser;
const p1 : TXmlInputSource): Boolean of object;

_T293 = function (const p0 : TdomEntityReference): Boolean of object;

_T294 = procedure (const p0 : TdomNode) of object;

_T295 = function : String of object;

_T296 = _T111;

_T297 = function : TdomDocumentType of object;

_T298 = _T115;

_T299 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString): TdomEntity of object;

_T300 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString): TdomNotation of object;

_T301 = function (const p0 : TdomNode;
const p1 : Boolean): TdomNode of object;

_T302 = _T114;

_T303 = procedure (const p0 : WideString;
const p1 : WideString) of object;

_T304 = _T202;

_T305 = _T90;

_T306 = function (const p0 : WideString): TdomElement of object;

_T307 = function (const p0 : WideString;
const p1 : WideString): TdomElement of object;

_T308 = function : TdomDocumentFragment of object;

_T309 = function (const p0 : WideString): TdomText of object;

_T310 = function (const p0 : WideString): TdomComment of object;

_T311 = function (const p0 : WideString): TdomCDATASection of object;

_T312 = function (const p0 : WideString;
const p1 : WideString): TdomProcessingInstruction of object;

_T313 = function (const p0 : WideString): TdomAttr of object;

_T314 = function (const p0 : WideString;
const p1 : WideString): TdomAttr of object;

_T315 = function (const p0 : WideString): TdomEntityReference of object;

_T316 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString): TdomDocumentType of object;

_T317 = procedure (var p0 : TdomNode) of object;

_T318 = procedure (var p0 : TdomTreeWalker) of object;

_T319 = _T306;

_T320 = function (const p0 : WideString): TdomNodeList of object;

_T321 = function (const p0 : WideString;
const p1 : WideString): TdomNodeList of object;

_T322 = _T301;

_T323 = function (const p0 : TdomNode;
p1 : TdomWhatToShow;
p2 : TdomNodeFilter;
p3 : Boolean): TdomNodeIterator of object;

_T324 = function (const p0 : TdomNode;
p1 : TdomWhatToShow;
p2 : TdomNodeFilter;
p3 : Boolean): TdomTreeWalker of object;

_T325 = function : TdomCMObject of object;

_T326 = function (const p0 : TdomCMObject): TdomCMObject of object;

_T327 = function (const p0 : TdomCustomErrorHandler;
const p1 : TdomEntityResolveOption): Boolean of object;

_T328 = _T109;

_T329 = _T109;

_T330 = _T122;

_T331 = function : TdomStyleSheetList of object;

_T332 = function : TdomEntitiesNamedNodeMap of object;

_T333 = _T111;

_T334 = _T111;

_T335 = function : TdomNamedNodeMap of object;

_T336 = _T111;

_T337 = _T111;

_T338 = procedure (const p0 : TdomDocument;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString) of object;

_T339 = procedure (const p0 : TdomCustomCMIEObject;
const p1 : TdomCMObject) of object;

_T340 = procedure (p0 : WideString;
const p1 : TdomCMObject) of object;

_T341 = procedure (const p0 : TdomCustomParser;
const p1 : TdomCMNode;
const p2 : WideString) of object;

_T342 = _T341;

_T343 = procedure (const p0 : TdomCustomParser;
const p1 : TdomCMAttribute;
const p2 : WideString) of object;

_T344 = _T101;

_T345 = _T101;

_T346 = procedure (const p0 : TdomDocument;
const p1 : WideString) of object;

_T347 = procedure (const p0 : TdomDocument;
const p1 : WideString;
const p2 : WideString) of object;

_T348 = _T111;

_T349 = _T0;

_T350 = _T314;

_T351 = _T313;

_T352 = _T313;

_T353 = function (const p0 : TdomAttr): TdomAttr of object;

_T354 = _T353;

_T355 = _T320;

_T356 = function (const p0 : WideString;
const p1 : WideString): WideString of object;

_T357 = function (const p0 : WideString;
const p1 : WideString;
const p2 : WideString): TdomAttr of object;

_T358 = _T314;

_T359 = _T314;

_T360 = _T353;

_T361 = _T321;

_T362 = _T12;

_T363 = function (const p0 : WideString;
const p1 : WideString): Boolean of object;

_T364 = procedure (const p0 : WideString;
const p1 : TdomNode) of object;

_T365 = procedure (const p0 : WideString;
const p1 : WideString;
const p2 : TdomNode) of object;

_T366 = procedure (const p0 : TdomEntity) of object;

_T367 = _T366;

_T368 = _T111;

_T369 = _T338;

_T370 = function : TdomCMEntity of object;

_T371 = _T112;

_T372 = _T112;

_T373 = _T346;

_T374 = _T170;

_T375 = _T170;

_T376 = _T170;

_T377 = function : TdomNodeList of object;

_T378 = _T377;

_T379 = _T90;

_T380 = procedure (var p0 : TdomCMExternalObject) of object;

_T381 = procedure (var p0 : TdomCMInternalObject) of object;

_T382 = procedure (var p0 : TdomCMObject) of object;

_T383 = procedure (var p0 : TdomDocument) of object;

_T384 = procedure (var p0 : TdomDocumentType) of object;

_T385 = _T363;

_T386 = function (const p0 : WideString;
const p1 : WideString): TdomCMExternalObject of object;

_T387 = function (const p0 : WideString;
const p1 : WideString): TdomCMInternalObject of object;

_T388 = _T325;

_T389 = function (const p0 : WideString;
p1 : TdomDocumentType): TdomDocument of object;

_T390 = function (const p0 : WideString;
const p1 : WideString;
p2 : TdomDocumentType): TdomDocument of object;

{_T391 = function (const p0 : WideString;
const p1 : WideString): TdomDocumentClass of object;}

{_T392 = procedure (const p0 : WideString;
const p1 : WideString;
p2 : TdomDocumentClass) of object;}

_T393 = _T363;

{_T394 = procedure (const p0 : TdomDocumentClass) of object;}

_T395 = _T111;

_T396 = _T114;

_T397 = _T121;

_T398 = function (const p0 : Integer): TdomStyleSheet of object;

_T399 = _T114;

_T400 = _T114;

_T401 = _T121;

_T402 = procedure (const p0 : TdomCMObject) of object;

_T403 = function (const p0 : Integer): TdomCMAttribute of object;

_T404 = function (const p0 : WideString;
const p1 : WideString): TdomCMAttribute of object;

_T405 = function (const p0 : TdomCMAttribute): Boolean of object;

_T406 = function : TdomCMAttribute of object;

_T407 = _T121;

_T408 = _T402;

_T409 = function (const p0 : Integer): TdomCMEntity of object;

_T410 = function (const p0 : WideString): TdomCMEntity of object;

_T411 = function (const p0 : TdomCMEntity): Boolean of object;

_T412 = _T370;

_T413 = _T169;

_T414 = _T44;

_T415 = _T183;

_T416 = _T152;

_T417 = procedure (const p0 : TdomCMNode;
const p1 : TdomCMNode;
const p2 : TList;
const p3 : TdomCMNodeTypeSet) of object;

_T418 = function (const p0 : WideString): TdomCMNode of object;

_T419 = _T183;

_T420 = _T418;

_T421 = function : TdomNode of object;

_T422 = _T112;

_T423 = _T152;

_T424 = _T44;

_T425 = function (const p0 : TdomNode): TdomNode of object;

_T426 = _T152;

_T427 = procedure (const p0 : TdomNode;
const p1 : TdomNode;
const p2 : TList;
const p3 : TdomNodeTypeSet) of object;

_T428 = function (const p0 : WideString): TdomNode of object;

_T429 = _T425;

_T430 = _T428;

_T431 = function (const p0 : WideString;
const p1 : WideString): TdomNode of object;

_T432 = _T425;

_T433 = _T431;

_T434 = _T121;

_T435 = _T121;

_T436 = function (p0 : Integer): WideString of object;

_T437 = _T436;

_T438 = procedure (const p0 : Integer) of object;

_T439 = _T90;

_T440 = function (const p0 : WideString;
const p1 : WideString): Integer of object;

_T441 = _T90;

_T442 = _T438;

_T443 = _T126;

_T444 = _T440;

_T445 = _T44;

_T446 = procedure (const p0 : Integer;
const p1 : WideString;
const p2 : WideString) of object;

_T447 = _T90;

_T448 = _T112;

_T449 = _T112;

_T450 = _T12;

_T451 = _T114;

_T452 = _T114;

_T453 = _T111;

_T454 = _T111;

_T455 = _T114;

_T456 = function : TdomNodeType of object;

_T457 = _T335;

_T458 = _T421;

_T459 = _T377;

_T460 = _T421;

_T461 = _T421;

_T462 = _T421;

_T463 = _T421;

_T464 = function : TdomDocument of object;

_T465 = _T111;

_T466 = _T111;

_T467 = _T152;

_T468 = _T114;

_T469 = _T178;

_T470 = _T178;

_T471 = _T122;

_T472 = _T425;

_T473 = _T90;

_T474 = function (const p0 : Boolean): TdomNode of object;

_T475 = _T306;

_T476 = _T307;

_T477 = _T306;

_T478 = _T307;

_T479 = _T306;

_T480 = _T307;

_T481 = _T306;

_T482 = _T307;

_T483 = _T306;

_T484 = _T307;

_T485 = _T112;

_T486 = function (const p0 : TdomNode;
const p1 : TdomNode): TdomNode of object;

_T487 = function (const p0 : TdomNode): Boolean of object;

_T488 = _T90;

_T489 = _T425;

_T490 = _T486;

_T491 = function (const p0 : TdomEntityResolveOption): Boolean of object;

_T492 = _T363;

_T493 = _T109;

_T494 = function (const p0 : TdomNode): TdomFilterResult of object;

_T495 = _T294;

_T496 = function (p0 : TdomNode): TdomNode of object;

_T497 = _T425;

_T498 = procedure (const p0 : TdomNode;
const p1 : TdomWhatToShow;
const p2 : TdomNodeFilter;
const p3 : Boolean) of object;

_T499 = _T90;

_T500 = _T421;

_T501 = _T421;

_T502 = _T121;

_T503 = function (const p0 : TdomNode): Integer of object;

_T504 = _T192;

_T505 = function (const p0 : Integer): TdomNode of object;

_T506 = _T111;

_T507 = _T111;

_T508 = procedure (const p0 : TdomDocument;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString) of object;

_T509 = _T111;

_T510 = _T111;

_T511 = _T114;

_T512 = _T346;

_T513 = _T44;

_T514 = _T428;

_T515 = procedure (const p0 : TList;
const p1 : TdomNodeTypeSet) of object;

_T516 = function (const p0 : TdomCustomParser;
const p1 : TdomCustomCMIEObject): Boolean of object;

_T517 = _T90;

_T518 = _T249;

_T519 = _T249;

_T520 = _T249;

_T521 = _T249;

_T522 = _T249;

_T523 = _T249;

_T524 = _T249;

_T525 = _T249;

_T526 = _T249;

_T527 = _T249;

_T528 = _T249;

_T529 = _T90;

_T530 = _T90;

_T531 = function (const p0 : TdomCustomParser;
const p1 : TdomStandardLocator;
const p2 : TXmlInputSource): WideString of object;

_T532 = _T531;

_T533 = _T249;

_T534 = _T249;

_T535 = _T101;

_T536 = _T341;

_T537 = _T341;

_T538 = procedure (const p0 : TdomCustomParser;
const p1 : TdomCMAttrDefinition;
const p2 : WideString) of object;

_T539 = procedure (const p0 : TdomCMNode) of object;

_T540 = _T90;

_T541 = _T249;

_T542 = _T249;

_T543 = _T249;

_T544 = _T249;

_T545 = _T249;

_T546 = _T249;

_T547 = _T249;

_T548 = _T111;

_T549 = _T111;

_T550 = _T285;

_T551 = procedure (const p0 : TXmlInputSource) of object;

_T552 = _T90;

_T553 = _T90;

_T554 = _T90;

_T555 = _T111;

_T556 = _T112;

_T557 = _T152;

_T558 = _T421;

_T559 = function : TdomStyleSheet of object;

_T560 = _T111;

_T561 = _T111;

_T562 = function : TdomMediaList of object;

_T563 = _T121;

_T564 = _T398;

_T565 = _T112;

_T566 = _T111;

_T567 = function (const p0 : Integer): TdomText of object;

_T568 = _T421;

_T569 = _T294;

_T570 = _T425;

_T571 = _T425;

_T572 = _T425;

_T573 = _T425;

_T574 = _T425;

_T575 = _T496;

_T576 = _T425;

_T577 = _T498;

_T578 = _T421;

_T579 = _T421;

_T580 = _T421;

_T581 = _T421;

_T582 = _T421;

_T583 = _T421;

_T584 = _T421;

_T585 = _T108;

_T586 = _T114;

_T587 = function (p0 : Longint): WideString of object;

_T588 = _T114;

_T589 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
const p2 : EParserException;
const p3 : WideString): TXmlParserError of object;

_T590 = _T589;

_T591 = procedure (const p0 : TXmlCustomProcessorAgent;
var p1 : TXmlParserError) of object;

_T592 = _T591;

_T593 = _T591;

_T594 = _T591;

_T595 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
p2 : WideString): TXmlParserError of object;

_T596 = _T595;

_T597 = _T595;

_T598 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
p2 : WideString;
p3 : WideString;
p4 : WideString;
p5 : WideString): TXmlParserError of object;

_T599 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator): TXmlParserError of object;

_T600 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
p2 : WideString;
p3 : WideString): TXmlParserError of object;

_T601 = _T595;

_T602 = _T595;

_T603 = _T595;

_T604 = _T600;

_T605 = _T595;

_T606 = _T595;

_T607 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
p2 : WideString;
p3 : WideString;
p4 : TdomNameValueList): TXmlParserError of object;

_T608 = _T600;

_T609 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
p2 : WideString;
p3 : WideString;
p4 : WideString): TXmlParserError of object;

_T610 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
p2 : WideString;
p3 : WideString;
p4 : WideString;
p5 : WideString;
p6 : WideString): TXmlParserError of object;

_T611 = _T600;

_T612 = _T595;

_T613 = _T600;

_T614 = _T600;

_T615 = _T599;

_T616 = _T599;

_T617 = _T610;

_T618 = _T609;

_T619 = _T598;

_T620 = _T595;

_T621 = _T595;

_T622 = _T600;

_T623 = _T600;

_T624 = _T591;

_T625 = _T589;

_T626 = _T591;

_T627 = _T591;

_T628 = _T591;

_T629 = function (p0 : Integer): TXmlHandlerItem of object;

_T630 = procedure (p0 : Integer;
p1 : TXmlHandlerItem) of object;

_T631 = procedure (p0 : TXmlDistributor) of object;

_T632 = function : TXmlHandlerItem of object;

_T633 = function (p0 : TXmlCustomHandler): TXmlHandlerItem of object;

_T634 = function : TdomEncodingType of object;

_T635 = _T111;

_T636 = _T111;

_T637 = procedure (const p0 : TdomStandardLocator) of object;

_T638 = function (var p0 : wideChar;
const p1 : TdomStandardLocator): Boolean of object;

_T639 = _T637;

_T640 = procedure (const p0 : TStream;
const p1 : WideString;
const p2 : WideString) of object;

_T641 = function (var p0 : wideChar): Boolean of object;

_T642 = _T90;

_T643 = procedure (p0 : Pointer;
p1 : Longint) of object;

_T644 = procedure (const p0 : EParserException;
const p1 : Integer;
const p2 : Integer;
const p3 : Integer;
const p4 : Integer;
const p5 : WideString;
const p6 : WideString;
const p7 : WideString) of object;

_T645 = function (const p0 : TXmlParserLanguage): WideString of object;

_T646 = _T438;

_T647 = _T111;

_T648 = function (p0 : Pointer): Integer of object;

_T649 = _T90;

_T650 = procedure (p0 : Integer) of object;

_T651 = procedure (p0 : Integer;
p1 : Integer) of object;

_T652 = function (p0 : Integer): TXmlSourceCodePiece of object;

_T653 = procedure (p0 : Integer;
p1 : Pointer) of object;

_T654 = _T651;

_T655 = _T90;

_T656 = _T648;

{_T657 = procedure (p0 : TListSortCompare) of object;}

_T658 = procedure (const p0 : TdomPieceType) of object;

_T659 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
const p2 : WideString): TXmlParserError of object;

_T660 = _T659;

_T661 = _T659;

_T662 = _T659;

_T663 = _T659;

_T664 = _T659;

_T665 = _T659;

_T666 = _T659;

_T667 = _T659;

_T668 = _T659;

_T669 = _T659;

_T670 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TXmlInputSource): Boolean of object;

_T671 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString): TXmlParserError of object;

_T672 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
const p2 : WideString;
const p3 : WideString): TXmlParserError of object;

_T673 = _T659;

_T674 = _T659;

_T675 = _T659;

_T676 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
const p2 : WideString;
const p3 : TdomNameValueList): TXmlParserError of object;

_T677 = _T659;

_T678 = _T676;

_T679 = _T600;

_T680 = _T595;

_T681 = _T659;

_T682 = _T659;

_T683 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomStandardLocator;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString;
const p5 : WideString): TXmlParserError of object;

_T684 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomNode): TXmlParserError of object;

_T685 = function (const p0 : TXmlCustomProcessorAgent;
const p1 : TdomNode): Boolean of object;

_T686 = _T363;

_T687 = function (const p0 : Pointer;
const p1 : Longint;
const p2 : WideString;
const p3 : WideString): Boolean of object;

_T688 = function (const p0 : TXmlSourceCode;
const p1 : WideString;
const p2 : WideString): Boolean of object;

_T689 = function (const p0 : TStream;
const p1 : WideString;
const p2 : WideString): Boolean of object;

_T690 = function (const p0 : String;
const p1 : WideString;
const p2 : WideString): Boolean of object;

_T691 = function (p0 : WideString;
const p1 : WideString;
const p2 : WideString): Boolean of object;

_T692 = _T202;

_T693 = function : TDomImplementation of object;

_T694 = procedure (const p0 : TdomStandardLocator;
const p1 : WideString;
const p2 : WideString;
const p3 : WideString;
const p4 : WideString;
const p5 : Boolean) of object;

_T695 = procedure (const p0 : Pointer;
const p1 : Longint;
const p2 : WideString;
const p3 : WideString;
const p4 : TdomNode) of object;

_T696 = procedure (const p0 : TXmlSourceCode;
const p1 : WideString;
const p2 : WideString;
const p3 : TdomNode) of object;

_T697 = procedure (const p0 : TStream;
const p1 : WideString;
const p2 : WideString;
const p3 : TdomNode) of object;

_T698 = procedure (const p0 : String;
const p1 : WideString;
const p2 : WideString;
const p3 : TdomNode) of object;

_T699 = procedure (p0 : WideString;
const p1 : WideString;
const p2 : WideString;
const p3 : TdomNode) of object;

_T700 = procedure (const p0 : Pointer;
const p1 : Longint;
const p2 : WideString;
const p3 : WideString;
const p4 : TdomCMNode) of object;

_T701 = procedure (const p0 : TXmlSourceCode;
const p1 : WideString;
const p2 : WideString;
const p3 : TdomCMNode) of object;

_T702 = procedure (const p0 : TStream;
const p1 : WideString;
const p2 : WideString;
const p3 : TdomCMNode) of object;

_T703 = procedure (const p0 : String;
const p1 : WideString;
const p2 : WideString;
const p3 : TdomCMNode) of object;

_T704 = procedure (p0 : WideString;
const p1 : WideString;
const p2 : WideString;
const p3 : TdomCMNode) of object;

_T705 = _T700;

_T706 = _T701;

_T707 = _T702;

_T708 = _T703;

_T709 = _T704;

_T710 = function (const p0 : TFileName): TdomDocument of object;

_T711 = function (const p0 : Pointer;
const p1 : Longint): TdomDocument of object;

_T712 = function (const p0 : TXmlSourceCode): TdomDocument of object;

_T713 = function (const p0 : TStream): TdomDocument of object;

_T714 = function (const p0 : String): TdomDocument of object;

_T715 = function (p0 : WideString): TdomDocument of object;

function __TdomDocumentFormat__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TdomDocumentFormat__Wrapper.setNamespaceUri(const val : WideString);
begin
TdomDocumentFormat(GetRecordPtr^).NamespaceUri := val;
end;
function __TdomDocumentFormat__Wrapper.getNamespaceUri : WideString;
begin
result := TdomDocumentFormat(GetRecordPtr^).NamespaceUri;
end;
procedure __TdomDocumentFormat__Wrapper.setQualifiedName(const val : WideString);
begin
TdomDocumentFormat(GetRecordPtr^).QualifiedName := val;
end;
function __TdomDocumentFormat__Wrapper.getQualifiedName : WideString;
begin
result := TdomDocumentFormat(GetRecordPtr^).QualifiedName;
end;
function _TdomDocumentFormat_ : IDispatch;
begin
  result := __TdomDocumentFormat__Wrapper.Create;
end;

type __TdomDocumentFormat__Wrapper__ = class(__TdomDocumentFormat__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TdomDocumentFormat__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTdomDocumentFormatToVariant(var R : TdomDocumentFormat) : OleVariant;
var
__rw : __TdomDocumentFormat__Wrapper__;
begin
__rw := __TdomDocumentFormat__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTdomDocumentFormat(const V : OleVariant) : TdomDocumentFormat;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TdomDocumentFormat((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
function __DC__GetTConversionStream__target(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TConversionStream(Instance).target);
end;

function __DC__GetTConversionStream__convertBufP(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := PointerToVariant(TConversionStream(Instance).convertBufP);
end;

function __DC__GetTConversionStream__convertCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TConversionStream(Instance).convertCount;
end;

function __DC__GetTConversionStream__convertBufSize(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TConversionStream(Instance).convertBufSize;
end;

function __DC__GetTdomAbstractView__document(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomAbstractView(Instance).document);
end;

function __DC__GetTdomAttr__literalValue(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomAttr(Instance).literalValue;
end;

function __DC__GetTdomAttr__name(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomAttr(Instance).name;
end;

function __DC__GetTdomAttr__ownerElement(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomAttr(Instance).ownerElement);
end;

function __DC__GetTdomAttr__specified(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomAttr(Instance).specified;
end;

function __DC__GetTdomAttr__value(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomAttr(Instance).value;
end;

procedure __DC__SetTdomAttr__value(Instance : TObject; Params : PVariantArgList);
begin
TdomAttr(Instance).value:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCharacterData__data(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCharacterData(Instance).data;
end;

procedure __DC__SetTdomCharacterData__data(Instance : TObject; Params : PVariantArgList);
begin
TdomCharacterData(Instance).data:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCharacterData__length(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCharacterData(Instance).length;
end;

function __DC__GetTdomCMAttrDefinition__attributeType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMAttrDefinition(Instance).attributeType;
end;

function __DC__GetTdomCMAttrDefinition__defaultDeclaration(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMAttrDefinition(Instance).defaultDeclaration;
end;

function __DC__GetTdomCMAttribute__attributeName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMAttribute(Instance).attributeName;
end;

function __DC__GetTdomCMAttribute__attributeType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMAttribute(Instance).attributeType;
end;

function __DC__GetTdomCMAttribute__defaultDeclaration(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMAttribute(Instance).defaultDeclaration;
end;

function __DC__GetTdomCMAttribute__elementName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMAttribute(Instance).elementName;
end;

function __DC__GetTdomCMComment__data(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMComment(Instance).data;
end;

procedure __DC__SetTdomCMComment__data(Instance : TObject; Params : PVariantArgList);
begin
TdomCMComment(Instance).data:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCMComment__length(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMComment(Instance).length;
end;

function __DC__GetTdomCMElementTypeDeclaration__contentspec(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMElementTypeDeclaration(Instance).contentspec;
end;

function __DC__GetTdomCMElementTypeDeclaration__contentspecType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMElementTypeDeclaration(Instance).contentspecType;
end;

function __DC__GetTdomCMEntity__encoding(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).encoding;
end;

procedure __DC__SetTdomCMEntity__encoding(Instance : TObject; Params : PVariantArgList);
begin
TdomCMEntity(Instance).encoding:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCMEntity__isInternalEntity(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).isInternalEntity;
end;

function __DC__GetTdomCMEntity__isParsedEntity(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).isParsedEntity;
end;

function __DC__GetTdomCMEntity__isUnusable(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).isUnusable;
end;

procedure __DC__SetTdomCMEntity__isUnusable(Instance : TObject; Params : PVariantArgList);
begin
TdomCMEntity(Instance).isUnusable:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCMEntity__literalValue(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).literalValue;
end;

function __DC__GetTdomCMEntity__normalizedValue(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).normalizedValue;
end;

function __DC__GetTdomCMEntity__notationName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).notationName;
end;

function __DC__GetTdomCMEntity__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).publicId;
end;

function __DC__GetTdomCMEntity__replacementText(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).replacementText;
end;

function __DC__GetTdomCMEntity__resolvedValue(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).resolvedValue;
end;

function __DC__GetTdomCMEntity__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).systemId;
end;

function __DC__GetTdomCMEntity__version(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntity(Instance).version;
end;

function __DC__GetTdomCMEntityDeclaration__isParsedEntity(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntityDeclaration(Instance).isParsedEntity;
end;

function __DC__GetTdomCMEntityDeclaration__notationName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMEntityDeclaration(Instance).notationName;
end;

function __DC__GetTdomCMExternalObject__encoding(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMExternalObject(Instance).encoding;
end;

procedure __DC__SetTdomCMExternalObject__encoding(Instance : TObject; Params : PVariantArgList);
begin
TdomCMExternalObject(Instance).encoding:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCMExternalObject__version(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMExternalObject(Instance).version;
end;

procedure __DC__SetTdomCMExternalObject__version(Instance : TObject; Params : PVariantArgList);
begin
TdomCMExternalObject(Instance).version:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCMNode__childNodes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMNode(Instance).childNodes);
end;

function __DC__GetTdomCMNode__code(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMNode(Instance).code;
end;

function __DC__GetTdomCMNode__firstChild(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMNode(Instance).firstChild);
end;

function __DC__GetTdomCMNode__isReadonly(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMNode(Instance).isReadonly;
end;

function __DC__GetTdomCMNode__lastChild(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMNode(Instance).lastChild);
end;

function __DC__GetTdomCMNode__nextSibling(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMNode(Instance).nextSibling);
end;

function __DC__GetTdomCMNode__nodeName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMNode(Instance).nodeName;
end;

function __DC__GetTdomCMNode__nodeType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMNode(Instance).nodeType;
end;

function __DC__GetTdomCMNode__nodeValue(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMNode(Instance).nodeValue;
end;

procedure __DC__SetTdomCMNode__nodeValue(Instance : TObject; Params : PVariantArgList);
begin
TdomCMNode(Instance).nodeValue:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCMNode__ownerCMObject(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMNode(Instance).ownerCMObject);
end;

function __DC__GetTdomCMNode__parentNode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMNode(Instance).parentNode);
end;

function __DC__GetTdomCMNode__previousSibling(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMNode(Instance).previousSibling);
end;

function __DC__GetTdomCMNodeList__length(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMNodeList(Instance).length;
end;

function __DC__GetTdomCMNotation__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMNotation(Instance).publicId;
end;

function __DC__GetTdomCMNotation__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMNotation(Instance).systemId;
end;

function __DC__GetTdomCMNotationDeclaration__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMNotationDeclaration(Instance).publicId;
end;

function __DC__GetTdomCMNotationDeclaration__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMNotationDeclaration(Instance).systemId;
end;

function __DC__GetTdomCMObject__associatedDocument(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMObject(Instance).associatedDocument);
end;

function __DC__GetTdomCMObject__attributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMObject(Instance).attributes);
end;

function __DC__GetTdomCMObject__elementTypes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMObject(Instance).elementTypes);
end;

function __DC__GetTdomCMObject__entities(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMObject(Instance).entities);
end;

function __DC__GetTdomCMObject__notations(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMObject(Instance).notations);
end;

function __DC__GetTdomCMObject__parameterEntities(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMObject(Instance).parameterEntities);
end;

function __DC__GetTdomCMObject__externalCM(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMObject(Instance).externalCM);
end;

function __DC__GetTdomCMObject__internalCM(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCMObject(Instance).internalCM);
end;

function __DC__GetTdomCMParameterEntity__encoding(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMParameterEntity(Instance).encoding;
end;

procedure __DC__SetTdomCMParameterEntity__encoding(Instance : TObject; Params : PVariantArgList);
begin
TdomCMParameterEntity(Instance).encoding:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCMParameterEntity__isInternalEntity(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMParameterEntity(Instance).isInternalEntity;
end;

function __DC__GetTdomCMParameterEntity__isUnusable(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMParameterEntity(Instance).isUnusable;
end;

function __DC__GetTdomCMParameterEntity__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMParameterEntity(Instance).publicId;
end;

function __DC__GetTdomCMParameterEntity__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMParameterEntity(Instance).systemId;
end;

function __DC__GetTdomCMParameterEntity__version(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMParameterEntity(Instance).version;
end;

function __DC__GetTdomCMParticle__frequency(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMParticle(Instance).frequency;
end;

function __DC__GetTdomCMProcessingInstruction__target(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMProcessingInstruction(Instance).target;
end;

function __DC__GetTdomCMProcessingInstruction__data(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCMProcessingInstruction(Instance).data;
end;

procedure __DC__SetTdomCMProcessingInstruction__data(Instance : TObject; Params : PVariantArgList);
begin
TdomCMProcessingInstruction(Instance).data:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCustomCMEntDecl__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCustomCMEntDecl(Instance).publicId;
end;

function __DC__GetTdomCustomCMEntDecl__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCustomCMEntDecl(Instance).systemId;
end;

function __DC__GetTdomCustomCMEntDecl__isInternalEntity(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCustomCMEntDecl(Instance).isInternalEntity;
end;

function __DC__GetTdomCustomCMIEObject__associatedContentModel(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCustomCMIEObject(Instance).associatedContentModel);
end;

function __DC__GetTdomCustomCMIEObject__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCustomCMIEObject(Instance).publicId;
end;

function __DC__GetTdomCustomCMIEObject__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCustomCMIEObject(Instance).systemId;
end;

function __DC__GetTdomCustomCMObject__domImplementation(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCustomCMObject(Instance).domImplementation);
end;

function __DC__GetTdomCustomStr__length(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCustomStr(Instance).length;
end;

function __DC__GetTdomCustomStr__wideChars(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomCustomStr(Instance).wideChars[OleVariant(Params^[0])];
end;

procedure __DC__SetTdomCustomStr__wideChars(Instance : TObject; Params : PVariantArgList);
begin
TdomCustomStr(Instance).wideChars[OleVariant(Params^[1])]:=OleVariant(Params^[0]);
end;

function __DC__GetTdomCustomXMLReader__contentHandler(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCustomXMLReader(Instance).contentHandler);
end;

procedure __DC__SetTdomCustomXMLReader__contentHandler(Instance : TObject; Params : PVariantArgList);
begin
TdomCustomXMLReader(Instance).contentHandler:=TdomCustomContentHandler(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTdomCustomXMLReader__dtdHandler(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCustomXMLReader(Instance).dtdHandler);
end;

procedure __DC__SetTdomCustomXMLReader__dtdHandler(Instance : TObject; Params : PVariantArgList);
begin
TdomCustomXMLReader(Instance).dtdHandler:=TdomCustomDTDHandler(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTdomCustomXMLReader__errorHandler(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCustomXMLReader(Instance).errorHandler);
end;

procedure __DC__SetTdomCustomXMLReader__errorHandler(Instance : TObject; Params : PVariantArgList);
begin
TdomCustomXMLReader(Instance).errorHandler:=TdomCustomErrorHandler(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTdomCustomXMLReader__locator(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomCustomXMLReader(Instance).locator);
end;

function __DC__GetTdomDocument__codeAsString(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomDocument(Instance).codeAsString;
end;

function __DC__GetTdomDocument__codeAsWideString(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomDocument(Instance).codeAsWideString;
end;

function __DC__GetTdomDocument__contentModel(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDocument(Instance).contentModel);
end;

function __DC__GetTdomDocument__defaultView(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDocument(Instance).defaultView);
end;

function __DC__GetTdomDocument__docType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDocument(Instance).docType);
end;

function __DC__GetTdomDocument__documentElement(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDocument(Instance).documentElement);
end;

function __DC__GetTdomDocument__domImplementation(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDocument(Instance).domImplementation);
end;

function __DC__GetTdomDocument__encoding(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomDocument(Instance).encoding;
end;

procedure __DC__SetTdomDocument__encoding(Instance : TObject; Params : PVariantArgList);
begin
TdomDocument(Instance).encoding:=OleVariant(Params^[0]);
end;

function __DC__GetTdomDocument__IDs(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDocument(Instance).IDs);
end;

function __DC__GetTdomDocument__standalone(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomDocument(Instance).standalone;
end;

procedure __DC__SetTdomDocument__standalone(Instance : TObject; Params : PVariantArgList);
begin
TdomDocument(Instance).standalone:=OleVariant(Params^[0]);
end;

function __DC__GetTdomDocument__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomDocument(Instance).systemId;
end;

procedure __DC__SetTdomDocument__systemId(Instance : TObject; Params : PVariantArgList);
begin
TdomDocument(Instance).systemId:=OleVariant(Params^[0]);
end;

function __DC__GetTdomDocument__version(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomDocument(Instance).version;
end;

procedure __DC__SetTdomDocument__version(Instance : TObject; Params : PVariantArgList);
begin
TdomDocument(Instance).version:=OleVariant(Params^[0]);
end;

function __DC__GetTdomDocumentStyle__styleSheets(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDocumentStyle(Instance).styleSheets);
end;

function __DC__GetTdomDocumentType__entities(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDocumentType(Instance).entities);
end;

function __DC__GetTdomDocumentType__internalSubset(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomDocumentType(Instance).internalSubset;
end;

function __DC__GetTdomDocumentType__name(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomDocumentType(Instance).name;
end;

function __DC__GetTdomDocumentType__notations(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDocumentType(Instance).notations);
end;

function __DC__GetTdomDocumentType__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomDocumentType(Instance).publicId;
end;

function __DC__GetTdomDocumentType__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomDocumentType(Instance).systemId;
end;

function __DC__GetTdomDtdAnalyzer__dtdHandler(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDtdAnalyzer(Instance).dtdHandler);
end;

function __DC__GetTdomDtdAnalyzer__dtdReader(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDtdAnalyzer(Instance).dtdReader);
end;

function __DC__GetTdomDtdAnalyzer__errorHandler(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDtdAnalyzer(Instance).errorHandler);
end;

procedure __DC__SetTdomDtdAnalyzer__errorHandler(Instance : TObject; Params : PVariantArgList);
begin
TdomDtdAnalyzer(Instance).errorHandler:=TdomCustomErrorHandler(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTdomDtdAnalyzer__intDtdReader(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDtdAnalyzer(Instance).intDtdReader);
end;

function __DC__GetTdomDTDContentModelHandler__contentModel(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomDTDContentModelHandler(Instance).contentModel);
end;

function __DC__GetTdomElement__tagName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomElement(Instance).tagName;
end;

function __DC__GetTdomEntity__encoding(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomEntity(Instance).encoding;
end;

procedure __DC__SetTdomEntity__encoding(Instance : TObject; Params : PVariantArgList);
begin
TdomEntity(Instance).encoding:=OleVariant(Params^[0]);
end;

function __DC__GetTdomEntity__isInternalEntity(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomEntity(Instance).isInternalEntity;
end;

function __DC__GetTdomEntity__notationName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomEntity(Instance).notationName;
end;

function __DC__GetTdomEntity__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomEntity(Instance).publicId;
end;

function __DC__GetTdomEntity__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomEntity(Instance).systemId;
end;

function __DC__GetTdomEntity__version(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomEntity(Instance).version;
end;

procedure __DC__SetTdomEntity__version(Instance : TObject; Params : PVariantArgList);
begin
TdomEntity(Instance).version:=OleVariant(Params^[0]);
end;

function __DC__GetTdomEntityReference__correspondingCMEntity(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomEntityReference(Instance).correspondingCMEntity);
end;

function __DC__GetTdomEntityReference__refersToPredefinedEntity(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomEntityReference(Instance).refersToPredefinedEntity;
end;

function __DC__GetTDomImplementation__cmExternalObjects(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDomImplementation(Instance).cmExternalObjects);
end;

function __DC__GetTDomImplementation__cmInternalObjects(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDomImplementation(Instance).cmInternalObjects);
end;

function __DC__GetTDomImplementation__cmObjects(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDomImplementation(Instance).cmObjects);
end;

function __DC__GetTDomImplementation__documents(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDomImplementation(Instance).documents);
end;

function __DC__GetTDomImplementation__documentTypes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDomImplementation(Instance).documentTypes);
end;

function __DC__GetTdomMediaList__length(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomMediaList(Instance).length;
end;

function __DC__GetTdomMediaList__cssText(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomMediaList(Instance).cssText;
end;

procedure __DC__SetTdomMediaList__cssText(Instance : TObject; Params : PVariantArgList);
begin
TdomMediaList(Instance).cssText:=OleVariant(Params^[0]);
end;

function __DC__GetTdomNamedCMAttributeMap__length(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNamedCMAttributeMap(Instance).length;
end;

function __DC__GetTdomNamedCMAttributeMap__ownerContentModel(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNamedCMAttributeMap(Instance).ownerContentModel);
end;

function __DC__GetTdomNamedCMEntityMap__length(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNamedCMEntityMap(Instance).length;
end;

function __DC__GetTdomNamedCMEntityMap__ownerContentModel(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNamedCMEntityMap(Instance).ownerContentModel);
end;

function __DC__GetTdomNamedCMNodeMap__isReadonly(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNamedCMNodeMap(Instance).isReadonly;
end;

function __DC__GetTdomNamedCMNodeMap__ownerNode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNamedCMNodeMap(Instance).ownerNode);
end;

function __DC__GetTdomNamedNodeMap__isReadonly(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNamedNodeMap(Instance).isReadonly;
end;

function __DC__GetTdomNamedNodeMap__namespaceAware(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNamedNodeMap(Instance).namespaceAware;
end;

procedure __DC__SetTdomNamedNodeMap__namespaceAware(Instance : TObject; Params : PVariantArgList);
begin
TdomNamedNodeMap(Instance).namespaceAware:=OleVariant(Params^[0]);
end;

function __DC__GetTdomNamedNodeMap__ownerNode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNamedNodeMap(Instance).ownerNode);
end;

function __DC__GetTdomNameValueList__capacity(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNameValueList(Instance).capacity;
end;

procedure __DC__SetTdomNameValueList__capacity(Instance : TObject; Params : PVariantArgList);
begin
TdomNameValueList(Instance).capacity:=OleVariant(Params^[0]);
end;

function __DC__GetTdomNameValueList__length(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNameValueList(Instance).length;
end;

function __DC__GetTdomNameValueList__names(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNameValueList(Instance).names[OleVariant(Params^[0])];
end;

function __DC__GetTdomNameValueList__values(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNameValueList(Instance).values[OleVariant(Params^[0])];
end;

function __DC__GetTdomNode__attributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNode(Instance).attributes);
end;

function __DC__GetTdomNode__childNodes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNode(Instance).childNodes);
end;

function __DC__GetTdomNode__code(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNode(Instance).code;
end;

function __DC__GetTdomNode__firstChild(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNode(Instance).firstChild);
end;

function __DC__GetTdomNode__isReadonly(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNode(Instance).isReadonly;
end;

function __DC__GetTdomNode__lastChild(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNode(Instance).lastChild);
end;

function __DC__GetTdomNode__localName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNode(Instance).localName;
end;

function __DC__GetTdomNode__NamespaceUri(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNode(Instance).NamespaceUri;
end;

function __DC__GetTdomNode__nextSibling(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNode(Instance).nextSibling);
end;

function __DC__GetTdomNode__nodeName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNode(Instance).nodeName;
end;

function __DC__GetTdomNode__nodeType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNode(Instance).nodeType;
end;

function __DC__GetTdomNode__nodeValue(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNode(Instance).nodeValue;
end;

procedure __DC__SetTdomNode__nodeValue(Instance : TObject; Params : PVariantArgList);
begin
TdomNode(Instance).nodeValue:=OleVariant(Params^[0]);
end;

function __DC__GetTdomNode__ownerDocument(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNode(Instance).ownerDocument);
end;

function __DC__GetTdomNode__parentNode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNode(Instance).parentNode);
end;

function __DC__GetTdomNode__previousSibling(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNode(Instance).previousSibling);
end;

function __DC__GetTdomNode__prefix(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNode(Instance).prefix;
end;

procedure __DC__SetTdomNode__prefix(Instance : TObject; Params : PVariantArgList);
begin
TdomNode(Instance).prefix:=OleVariant(Params^[0]);
end;

function __DC__GetTdomNode__textContent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNode(Instance).textContent;
end;

function __DC__GetTdomNodeIterator__expandEntityReferences(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNodeIterator(Instance).expandEntityReferences;
end;

function __DC__GetTdomNodeIterator__filter(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNodeIterator(Instance).filter);
end;

function __DC__GetTdomNodeIterator__root(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomNodeIterator(Instance).root);
end;

function __DC__GetTdomNodeIterator__whatToShow(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
  tmp : TdomWhatToShow;
begin
tmp := TdomNodeIterator(Instance).whatToShow;
result := VarFromSet(tmp, sizeof(tmp));
end;

function __DC__GetTdomNodeList__length(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNodeList(Instance).length;
end;

function __DC__GetTdomNotation__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNotation(Instance).publicId;
end;

function __DC__GetTdomNotation__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomNotation(Instance).systemId;
end;

function __DC__GetTdomProcessingInstruction__target(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomProcessingInstruction(Instance).target;
end;

function __DC__GetTdomProcessingInstruction__data(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomProcessingInstruction(Instance).data;
end;

procedure __DC__SetTdomProcessingInstruction__data(Instance : TObject; Params : PVariantArgList);
begin
TdomProcessingInstruction(Instance).data:=OleVariant(Params^[0]);
end;

function __DC__GetTdomStandardContentModelReader__errorHandler(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomStandardContentModelReader(Instance).errorHandler);
end;

procedure __DC__SetTdomStandardContentModelReader__errorHandler(Instance : TObject; Params : PVariantArgList);
begin
TdomStandardContentModelReader(Instance).errorHandler:=TdomCustomErrorHandler(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTdomStandardDocBuilder__ReferenceDocument(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomStandardDocBuilder(Instance).ReferenceDocument);
end;

function __DC__GetTdomStandardDocBuilder__referenceNode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomStandardDocBuilder(Instance).referenceNode);
end;

procedure __DC__SetTdomStandardDocBuilder__referenceNode(Instance : TObject; Params : PVariantArgList);
begin
TdomStandardDocBuilder(Instance).referenceNode:=TdomNode(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTdomStandardErrorHandler__errorList(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomStandardErrorHandler(Instance).errorList);
end;

function __DC__GetTdomStandardIntSubsetBuilder__referenceNode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomStandardIntSubsetBuilder(Instance).referenceNode);
end;

procedure __DC__SetTdomStandardIntSubsetBuilder__referenceNode(Instance : TObject; Params : PVariantArgList);
begin
TdomStandardIntSubsetBuilder(Instance).referenceNode:=TdomCMNode(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTdomStandardLocator__columnNumber(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStandardLocator(Instance).columnNumber;
end;

function __DC__GetTdomStandardLocator__lineNumber(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStandardLocator(Instance).lineNumber;
end;

function __DC__GetTdomStandardLocator__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStandardLocator(Instance).publicId;
end;

function __DC__GetTdomStandardLocator__startColumnNumber(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStandardLocator(Instance).startColumnNumber;
end;

function __DC__GetTdomStandardLocator__startLineNumber(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStandardLocator(Instance).startLineNumber;
end;

function __DC__GetTdomStandardLocator__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStandardLocator(Instance).systemId;
end;

function __DC__GetTdomStyleSheet__styleSheetType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStyleSheet(Instance).styleSheetType;
end;

function __DC__GetTdomStyleSheet__disabled(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStyleSheet(Instance).disabled;
end;

procedure __DC__SetTdomStyleSheet__disabled(Instance : TObject; Params : PVariantArgList);
begin
TdomStyleSheet(Instance).disabled:=OleVariant(Params^[0]);
end;

function __DC__GetTdomStyleSheet__ownerNode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomStyleSheet(Instance).ownerNode);
end;

function __DC__GetTdomStyleSheet__parentStyleSheet(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomStyleSheet(Instance).parentStyleSheet);
end;

function __DC__GetTdomStyleSheet__href(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStyleSheet(Instance).href;
end;

function __DC__GetTdomStyleSheet__title(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStyleSheet(Instance).title;
end;

function __DC__GetTdomStyleSheet__media(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomStyleSheet(Instance).media);
end;

function __DC__GetTdomStyleSheetList__length(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomStyleSheetList(Instance).length;
end;

function __DC__GetTdomText__isWhitespaceInElementContent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomText(Instance).isWhitespaceInElementContent;
end;

function __DC__GetTdomText__literalValue(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomText(Instance).literalValue;
end;

function __DC__GetTdomTreeWalker__currentNode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomTreeWalker(Instance).currentNode);
end;

procedure __DC__SetTdomTreeWalker__currentNode(Instance : TObject; Params : PVariantArgList);
begin
TdomTreeWalker(Instance).currentNode:=TdomNode(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTdomTreeWalker__expandEntityReferences(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomTreeWalker(Instance).expandEntityReferences;
end;

function __DC__GetTdomTreeWalker__filter(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomTreeWalker(Instance).filter);
end;

function __DC__GetTdomTreeWalker__root(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TdomTreeWalker(Instance).root);
end;

function __DC__GetTdomTreeWalker__whatToShow(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
  tmp : TdomWhatToShow;
begin
tmp := TdomTreeWalker(Instance).whatToShow;
result := VarFromSet(tmp, sizeof(tmp));
end;

function __DC__GetTdomWideStringStream__capacity(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomWideStringStream(Instance).capacity;
end;

procedure __DC__SetTdomWideStringStream__capacity(Instance : TObject; Params : PVariantArgList);
begin
TdomWideStringStream(Instance).capacity:=OleVariant(Params^[0]);
end;

function __DC__GetTdomWideStringStream__stringLength(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomWideStringStream(Instance).stringLength;
end;

procedure __DC__SetTdomWideStringStream__stringLength(Instance : TObject; Params : PVariantArgList);
begin
TdomWideStringStream(Instance).stringLength:=OleVariant(Params^[0]);
end;

function __DC__GetTdomWideStringStream__stringPosition(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomWideStringStream(Instance).stringPosition;
end;

procedure __DC__SetTdomWideStringStream__stringPosition(Instance : TObject; Params : PVariantArgList);
begin
TdomWideStringStream(Instance).stringPosition:=OleVariant(Params^[0]);
end;

function __DC__GetTdomWideStringStream__dataString(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TdomWideStringStream(Instance).dataString;
end;

function __DC__GetTUTF16BEToUTF8Stream__expandLF(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TUTF16BEToUTF8Stream(Instance).expandLF;
end;

procedure __DC__SetTUTF16BEToUTF8Stream__expandLF(Instance : TObject; Params : PVariantArgList);
begin
TUTF16BEToUTF8Stream(Instance).expandLF:=OleVariant(Params^[0]);
end;

function __DC__GetTXmlDocBuilder__referenceNode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlDocBuilder(Instance).referenceNode);
end;

procedure __DC__SetTXmlDocBuilder__referenceNode(Instance : TObject; Params : PVariantArgList);
begin
TXmlDocBuilder(Instance).referenceNode:=TdomNode(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTXmlDocBuilder__preserveWhitespace(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlDocBuilder(Instance).preserveWhitespace;
end;

procedure __DC__SetTXmlDocBuilder__preserveWhitespace(Instance : TObject; Params : PVariantArgList);
begin
TXmlDocBuilder(Instance).preserveWhitespace:=OleVariant(Params^[0]);
end;

function __DC__GetTXmlHandlers__Distributor(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlHandlers(Instance).Distributor);
end;

function __DC__GetTXmlHandlers__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlHandlers(Instance).Items[OleVariant(Params^[0])]);
end;

procedure __DC__SetTXmlHandlers__Items(Instance : TObject; Params : PVariantArgList);
begin
TXmlHandlers(Instance).Items[OleVariant(Params^[1])]:=TXmlHandlerItem(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTXmlInputSource__encoding(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlInputSource(Instance).encoding;
end;

function __DC__GetTXmlInputSource__locator(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlInputSource(Instance).locator);
end;

function __DC__GetTXmlInputSource__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlInputSource(Instance).publicId;
end;

function __DC__GetTXmlInputSource__rootName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlInputSource(Instance).rootName;
end;

function __DC__GetTXmlInputSource__stream(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlInputSource(Instance).stream);
end;

function __DC__GetTXmlInputSource__streamAsWideString(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlInputSource(Instance).streamAsWideString;
end;

function __DC__GetTXmlInputSource__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlInputSource(Instance).systemId;
end;

function __DC__GetTXmlParserError__code(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlParserError(Instance).code;
end;

function __DC__GetTXmlParserError__endColumn(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlParserError(Instance).endColumn;
end;

function __DC__GetTXmlParserError__endLine(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlParserError(Instance).endLine;
end;

function __DC__GetTXmlParserError__errorClass(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlParserError(Instance).errorClass;
end;

function __DC__GetTXmlParserError__errorType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlParserError(Instance).errorType;
end;

function __DC__GetTXmlParserError__publicId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlParserError(Instance).publicId;
end;

function __DC__GetTXmlParserError__startColumn(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlParserError(Instance).startColumn;
end;

function __DC__GetTXmlParserError__startLine(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlParserError(Instance).startLine;
end;

function __DC__GetTXmlParserError__systemId(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlParserError(Instance).systemId;
end;

function __DC__GetTXmlSourceCode__nameOfFirstTag(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlSourceCode(Instance).nameOfFirstTag;
end;

function __DC__GetTXmlSourceCodePiece__pieceType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlSourceCodePiece(Instance).pieceType;
end;

function __DC__GetTXmlSourceCodePiece__Text(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlSourceCodePiece(Instance).Text;
end;

procedure __DC__SetTXmlSourceCodePiece__Text(Instance : TObject; Params : PVariantArgList);
begin
TXmlSourceCodePiece(Instance).Text:=OleVariant(Params^[0]);
end;

function __DC__GetTXmlSourceCodePiece__offset(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlSourceCodePiece(Instance).offset;
end;

function __DC__GetTXmlSourceCodePiece__ownerSourceCode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlSourceCodePiece(Instance).ownerSourceCode);
end;

function __DC__GetTXmlToDomParser__docBuilder(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlToDomParser(Instance).docBuilder);
end;

function __DC__GetTXmlToDomParser__docXMLReader(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlToDomParser(Instance).docXMLReader);
end;

function __DC__GetTXmlToDomParser__errorHandler(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlToDomParser(Instance).errorHandler);
end;

function __DC__GetTXmlToDomParser__extDtdBuilder(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlToDomParser(Instance).extDtdBuilder);
end;

function __DC__GetTXmlToDomParser__extDtdReader(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlToDomParser(Instance).extDtdReader);
end;

function __DC__GetTXmlToDomParser__intDtdBuilder(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlToDomParser(Instance).intDtdBuilder);
end;

function __DC__GetTXmlToDomParser__intDtdReader(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXmlToDomParser(Instance).intDtdReader);
end;

function __DC__GetTXmlWFTestContentHandler__isActive(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXmlWFTestContentHandler(Instance).isActive;
end;

procedure __RegisterProps;
begin
RegisterProperty(TConversionStream,'target',__DC__GetTConversionStream__target,nil);
RegisterProperty(TConversionStream,'convertBufP',__DC__GetTConversionStream__convertBufP,nil);
RegisterProperty(TConversionStream,'convertCount',__DC__GetTConversionStream__convertCount,nil);
RegisterProperty(TConversionStream,'convertBufSize',__DC__GetTConversionStream__convertBufSize,nil);
RegisterProperty(TdomAbstractView,'document',__DC__GetTdomAbstractView__document,nil);
RegisterProperty(TdomAttr,'literalValue',__DC__GetTdomAttr__literalValue,nil);
RegisterProperty(TdomAttr,'name',__DC__GetTdomAttr__name,nil);
RegisterProperty(TdomAttr,'ownerElement',__DC__GetTdomAttr__ownerElement,nil);
RegisterProperty(TdomAttr,'specified',__DC__GetTdomAttr__specified,nil);
RegisterProperty(TdomAttr,'value',__DC__GetTdomAttr__value,__DC__SetTdomAttr__value);
RegisterProperty(TdomCharacterData,'data',__DC__GetTdomCharacterData__data,__DC__SetTdomCharacterData__data);
RegisterProperty(TdomCharacterData,'length',__DC__GetTdomCharacterData__length,nil);
RegisterProperty(TdomCMAttrDefinition,'attributeType',__DC__GetTdomCMAttrDefinition__attributeType,nil);
RegisterProperty(TdomCMAttrDefinition,'defaultDeclaration',__DC__GetTdomCMAttrDefinition__defaultDeclaration,nil);
RegisterProperty(TdomCMAttribute,'attributeName',__DC__GetTdomCMAttribute__attributeName,nil);
RegisterProperty(TdomCMAttribute,'attributeType',__DC__GetTdomCMAttribute__attributeType,nil);
RegisterProperty(TdomCMAttribute,'defaultDeclaration',__DC__GetTdomCMAttribute__defaultDeclaration,nil);
RegisterProperty(TdomCMAttribute,'elementName',__DC__GetTdomCMAttribute__elementName,nil);
RegisterProperty(TdomCMComment,'data',__DC__GetTdomCMComment__data,__DC__SetTdomCMComment__data);
RegisterProperty(TdomCMComment,'length',__DC__GetTdomCMComment__length,nil);
RegisterProperty(TdomCMElementTypeDeclaration,'contentspec',__DC__GetTdomCMElementTypeDeclaration__contentspec,nil);
RegisterProperty(TdomCMElementTypeDeclaration,'contentspecType',__DC__GetTdomCMElementTypeDeclaration__contentspecType,nil);
RegisterProperty(TdomCMEntity,'encoding',__DC__GetTdomCMEntity__encoding,__DC__SetTdomCMEntity__encoding);
RegisterProperty(TdomCMEntity,'isInternalEntity',__DC__GetTdomCMEntity__isInternalEntity,nil);
RegisterProperty(TdomCMEntity,'isParsedEntity',__DC__GetTdomCMEntity__isParsedEntity,nil);
RegisterProperty(TdomCMEntity,'isUnusable',__DC__GetTdomCMEntity__isUnusable,__DC__SetTdomCMEntity__isUnusable);
RegisterProperty(TdomCMEntity,'literalValue',__DC__GetTdomCMEntity__literalValue,nil);
RegisterProperty(TdomCMEntity,'normalizedValue',__DC__GetTdomCMEntity__normalizedValue,nil);
RegisterProperty(TdomCMEntity,'notationName',__DC__GetTdomCMEntity__notationName,nil);
RegisterProperty(TdomCMEntity,'publicId',__DC__GetTdomCMEntity__publicId,nil);
RegisterProperty(TdomCMEntity,'replacementText',__DC__GetTdomCMEntity__replacementText,nil);
RegisterProperty(TdomCMEntity,'resolvedValue',__DC__GetTdomCMEntity__resolvedValue,nil);
RegisterProperty(TdomCMEntity,'systemId',__DC__GetTdomCMEntity__systemId,nil);
RegisterProperty(TdomCMEntity,'version',__DC__GetTdomCMEntity__version,nil);
RegisterProperty(TdomCMEntityDeclaration,'isParsedEntity',__DC__GetTdomCMEntityDeclaration__isParsedEntity,nil);
RegisterProperty(TdomCMEntityDeclaration,'notationName',__DC__GetTdomCMEntityDeclaration__notationName,nil);
RegisterProperty(TdomCMExternalObject,'encoding',__DC__GetTdomCMExternalObject__encoding,__DC__SetTdomCMExternalObject__encoding);
RegisterProperty(TdomCMExternalObject,'version',__DC__GetTdomCMExternalObject__version,__DC__SetTdomCMExternalObject__version);
RegisterProperty(TdomCMNode,'childNodes',__DC__GetTdomCMNode__childNodes,nil);
RegisterProperty(TdomCMNode,'code',__DC__GetTdomCMNode__code,nil);
RegisterProperty(TdomCMNode,'firstChild',__DC__GetTdomCMNode__firstChild,nil);
RegisterProperty(TdomCMNode,'isReadonly',__DC__GetTdomCMNode__isReadonly,nil);
RegisterProperty(TdomCMNode,'lastChild',__DC__GetTdomCMNode__lastChild,nil);
RegisterProperty(TdomCMNode,'nextSibling',__DC__GetTdomCMNode__nextSibling,nil);
RegisterProperty(TdomCMNode,'nodeName',__DC__GetTdomCMNode__nodeName,nil);
RegisterProperty(TdomCMNode,'nodeType',__DC__GetTdomCMNode__nodeType,nil);
RegisterProperty(TdomCMNode,'nodeValue',__DC__GetTdomCMNode__nodeValue,__DC__SetTdomCMNode__nodeValue);
RegisterProperty(TdomCMNode,'ownerCMObject',__DC__GetTdomCMNode__ownerCMObject,nil);
RegisterProperty(TdomCMNode,'parentNode',__DC__GetTdomCMNode__parentNode,nil);
RegisterProperty(TdomCMNode,'previousSibling',__DC__GetTdomCMNode__previousSibling,nil);
RegisterProperty(TdomCMNodeList,'length',__DC__GetTdomCMNodeList__length,nil);
RegisterProperty(TdomCMNotation,'publicId',__DC__GetTdomCMNotation__publicId,nil);
RegisterProperty(TdomCMNotation,'systemId',__DC__GetTdomCMNotation__systemId,nil);
RegisterProperty(TdomCMNotationDeclaration,'publicId',__DC__GetTdomCMNotationDeclaration__publicId,nil);
RegisterProperty(TdomCMNotationDeclaration,'systemId',__DC__GetTdomCMNotationDeclaration__systemId,nil);
RegisterProperty(TdomCMObject,'associatedDocument',__DC__GetTdomCMObject__associatedDocument,nil);
RegisterProperty(TdomCMObject,'attributes',__DC__GetTdomCMObject__attributes,nil);
RegisterProperty(TdomCMObject,'elementTypes',__DC__GetTdomCMObject__elementTypes,nil);
RegisterProperty(TdomCMObject,'entities',__DC__GetTdomCMObject__entities,nil);
RegisterProperty(TdomCMObject,'notations',__DC__GetTdomCMObject__notations,nil);
RegisterProperty(TdomCMObject,'parameterEntities',__DC__GetTdomCMObject__parameterEntities,nil);
RegisterProperty(TdomCMObject,'externalCM',__DC__GetTdomCMObject__externalCM,nil);
RegisterProperty(TdomCMObject,'internalCM',__DC__GetTdomCMObject__internalCM,nil);
RegisterProperty(TdomCMParameterEntity,'encoding',__DC__GetTdomCMParameterEntity__encoding,__DC__SetTdomCMParameterEntity__encoding);
RegisterProperty(TdomCMParameterEntity,'isInternalEntity',__DC__GetTdomCMParameterEntity__isInternalEntity,nil);
RegisterProperty(TdomCMParameterEntity,'isUnusable',__DC__GetTdomCMParameterEntity__isUnusable,nil);
RegisterProperty(TdomCMParameterEntity,'publicId',__DC__GetTdomCMParameterEntity__publicId,nil);
RegisterProperty(TdomCMParameterEntity,'systemId',__DC__GetTdomCMParameterEntity__systemId,nil);
RegisterProperty(TdomCMParameterEntity,'version',__DC__GetTdomCMParameterEntity__version,nil);
RegisterProperty(TdomCMParticle,'frequency',__DC__GetTdomCMParticle__frequency,nil);
RegisterProperty(TdomCMProcessingInstruction,'target',__DC__GetTdomCMProcessingInstruction__target,nil);
RegisterProperty(TdomCMProcessingInstruction,'data',__DC__GetTdomCMProcessingInstruction__data,__DC__SetTdomCMProcessingInstruction__data);
RegisterProperty(TdomCustomCMEntDecl,'publicId',__DC__GetTdomCustomCMEntDecl__publicId,nil);
RegisterProperty(TdomCustomCMEntDecl,'systemId',__DC__GetTdomCustomCMEntDecl__systemId,nil);
RegisterProperty(TdomCustomCMEntDecl,'isInternalEntity',__DC__GetTdomCustomCMEntDecl__isInternalEntity,nil);
RegisterProperty(TdomCustomCMIEObject,'associatedContentModel',__DC__GetTdomCustomCMIEObject__associatedContentModel,nil);
RegisterProperty(TdomCustomCMIEObject,'publicId',__DC__GetTdomCustomCMIEObject__publicId,nil);
RegisterProperty(TdomCustomCMIEObject,'systemId',__DC__GetTdomCustomCMIEObject__systemId,nil);
RegisterProperty(TdomCustomCMObject,'domImplementation',__DC__GetTdomCustomCMObject__domImplementation,nil);
RegisterProperty(TdomCustomStr,'length',__DC__GetTdomCustomStr__length,nil);
RegisterIndexedProperty(TdomCustomStr,'wideChars',1,True,__DC__GetTdomCustomStr__wideChars,__DC__SetTdomCustomStr__wideChars);
RegisterProperty(TdomCustomXMLReader,'contentHandler',__DC__GetTdomCustomXMLReader__contentHandler,__DC__SetTdomCustomXMLReader__contentHandler);
RegisterProperty(TdomCustomXMLReader,'dtdHandler',__DC__GetTdomCustomXMLReader__dtdHandler,__DC__SetTdomCustomXMLReader__dtdHandler);
RegisterProperty(TdomCustomXMLReader,'errorHandler',__DC__GetTdomCustomXMLReader__errorHandler,__DC__SetTdomCustomXMLReader__errorHandler);
RegisterProperty(TdomCustomXMLReader,'locator',__DC__GetTdomCustomXMLReader__locator,nil);
RegisterProperty(TdomDocument,'codeAsString',__DC__GetTdomDocument__codeAsString,nil);
RegisterProperty(TdomDocument,'codeAsWideString',__DC__GetTdomDocument__codeAsWideString,nil);
RegisterProperty(TdomDocument,'contentModel',__DC__GetTdomDocument__contentModel,nil);
RegisterProperty(TdomDocument,'defaultView',__DC__GetTdomDocument__defaultView,nil);
RegisterProperty(TdomDocument,'docType',__DC__GetTdomDocument__docType,nil);
RegisterProperty(TdomDocument,'documentElement',__DC__GetTdomDocument__documentElement,nil);
RegisterProperty(TdomDocument,'domImplementation',__DC__GetTdomDocument__domImplementation,nil);
RegisterProperty(TdomDocument,'encoding',__DC__GetTdomDocument__encoding,__DC__SetTdomDocument__encoding);
RegisterProperty(TdomDocument,'IDs',__DC__GetTdomDocument__IDs,nil);
RegisterProperty(TdomDocument,'standalone',__DC__GetTdomDocument__standalone,__DC__SetTdomDocument__standalone);
RegisterProperty(TdomDocument,'systemId',__DC__GetTdomDocument__systemId,__DC__SetTdomDocument__systemId);
RegisterProperty(TdomDocument,'version',__DC__GetTdomDocument__version,__DC__SetTdomDocument__version);
RegisterProperty(TdomDocumentStyle,'styleSheets',__DC__GetTdomDocumentStyle__styleSheets,nil);
RegisterProperty(TdomDocumentType,'entities',__DC__GetTdomDocumentType__entities,nil);
RegisterProperty(TdomDocumentType,'internalSubset',__DC__GetTdomDocumentType__internalSubset,nil);
RegisterProperty(TdomDocumentType,'name',__DC__GetTdomDocumentType__name,nil);
RegisterProperty(TdomDocumentType,'notations',__DC__GetTdomDocumentType__notations,nil);
RegisterProperty(TdomDocumentType,'publicId',__DC__GetTdomDocumentType__publicId,nil);
RegisterProperty(TdomDocumentType,'systemId',__DC__GetTdomDocumentType__systemId,nil);
RegisterProperty(TdomDtdAnalyzer,'dtdHandler',__DC__GetTdomDtdAnalyzer__dtdHandler,nil);
RegisterProperty(TdomDtdAnalyzer,'dtdReader',__DC__GetTdomDtdAnalyzer__dtdReader,nil);
RegisterProperty(TdomDtdAnalyzer,'errorHandler',__DC__GetTdomDtdAnalyzer__errorHandler,__DC__SetTdomDtdAnalyzer__errorHandler);
RegisterProperty(TdomDtdAnalyzer,'intDtdReader',__DC__GetTdomDtdAnalyzer__intDtdReader,nil);
RegisterProperty(TdomDTDContentModelHandler,'contentModel',__DC__GetTdomDTDContentModelHandler__contentModel,nil);
RegisterProperty(TdomElement,'tagName',__DC__GetTdomElement__tagName,nil);
RegisterProperty(TdomEntity,'encoding',__DC__GetTdomEntity__encoding,__DC__SetTdomEntity__encoding);
RegisterProperty(TdomEntity,'isInternalEntity',__DC__GetTdomEntity__isInternalEntity,nil);
RegisterProperty(TdomEntity,'notationName',__DC__GetTdomEntity__notationName,nil);
RegisterProperty(TdomEntity,'publicId',__DC__GetTdomEntity__publicId,nil);
RegisterProperty(TdomEntity,'systemId',__DC__GetTdomEntity__systemId,nil);
RegisterProperty(TdomEntity,'version',__DC__GetTdomEntity__version,__DC__SetTdomEntity__version);
RegisterProperty(TdomEntityReference,'correspondingCMEntity',__DC__GetTdomEntityReference__correspondingCMEntity,nil);
RegisterProperty(TdomEntityReference,'refersToPredefinedEntity',__DC__GetTdomEntityReference__refersToPredefinedEntity,nil);
RegisterProperty(TDomImplementation,'cmExternalObjects',__DC__GetTDomImplementation__cmExternalObjects,nil);
RegisterProperty(TDomImplementation,'cmInternalObjects',__DC__GetTDomImplementation__cmInternalObjects,nil);
RegisterProperty(TDomImplementation,'cmObjects',__DC__GetTDomImplementation__cmObjects,nil);
RegisterProperty(TDomImplementation,'documents',__DC__GetTDomImplementation__documents,nil);
RegisterProperty(TDomImplementation,'documentTypes',__DC__GetTDomImplementation__documentTypes,nil);
RegisterProperty(TdomMediaList,'length',__DC__GetTdomMediaList__length,nil);
RegisterProperty(TdomMediaList,'cssText',__DC__GetTdomMediaList__cssText,__DC__SetTdomMediaList__cssText);
RegisterProperty(TdomNamedCMAttributeMap,'length',__DC__GetTdomNamedCMAttributeMap__length,nil);
RegisterProperty(TdomNamedCMAttributeMap,'ownerContentModel',__DC__GetTdomNamedCMAttributeMap__ownerContentModel,nil);
RegisterProperty(TdomNamedCMEntityMap,'length',__DC__GetTdomNamedCMEntityMap__length,nil);
RegisterProperty(TdomNamedCMEntityMap,'ownerContentModel',__DC__GetTdomNamedCMEntityMap__ownerContentModel,nil);
RegisterProperty(TdomNamedCMNodeMap,'isReadonly',__DC__GetTdomNamedCMNodeMap__isReadonly,nil);
RegisterProperty(TdomNamedCMNodeMap,'ownerNode',__DC__GetTdomNamedCMNodeMap__ownerNode,nil);
RegisterProperty(TdomNamedNodeMap,'isReadonly',__DC__GetTdomNamedNodeMap__isReadonly,nil);
RegisterProperty(TdomNamedNodeMap,'namespaceAware',__DC__GetTdomNamedNodeMap__namespaceAware,__DC__SetTdomNamedNodeMap__namespaceAware);
RegisterProperty(TdomNamedNodeMap,'ownerNode',__DC__GetTdomNamedNodeMap__ownerNode,nil);
RegisterProperty(TdomNameValueList,'capacity',__DC__GetTdomNameValueList__capacity,__DC__SetTdomNameValueList__capacity);
RegisterProperty(TdomNameValueList,'length',__DC__GetTdomNameValueList__length,nil);
RegisterIndexedProperty(TdomNameValueList,'names',1,False,__DC__GetTdomNameValueList__names,nil);
RegisterIndexedProperty(TdomNameValueList,'values',1,False,__DC__GetTdomNameValueList__values,nil);
RegisterProperty(TdomNode,'attributes',__DC__GetTdomNode__attributes,nil);
RegisterProperty(TdomNode,'childNodes',__DC__GetTdomNode__childNodes,nil);
RegisterProperty(TdomNode,'code',__DC__GetTdomNode__code,nil);
RegisterProperty(TdomNode,'firstChild',__DC__GetTdomNode__firstChild,nil);
RegisterProperty(TdomNode,'isReadonly',__DC__GetTdomNode__isReadonly,nil);
RegisterProperty(TdomNode,'lastChild',__DC__GetTdomNode__lastChild,nil);
RegisterProperty(TdomNode,'localName',__DC__GetTdomNode__localName,nil);
RegisterProperty(TdomNode,'NamespaceUri',__DC__GetTdomNode__NamespaceUri,nil);
RegisterProperty(TdomNode,'nextSibling',__DC__GetTdomNode__nextSibling,nil);
RegisterProperty(TdomNode,'nodeName',__DC__GetTdomNode__nodeName,nil);
RegisterProperty(TdomNode,'nodeType',__DC__GetTdomNode__nodeType,nil);
RegisterProperty(TdomNode,'nodeValue',__DC__GetTdomNode__nodeValue,__DC__SetTdomNode__nodeValue);
RegisterProperty(TdomNode,'ownerDocument',__DC__GetTdomNode__ownerDocument,nil);
RegisterProperty(TdomNode,'parentNode',__DC__GetTdomNode__parentNode,nil);
RegisterProperty(TdomNode,'previousSibling',__DC__GetTdomNode__previousSibling,nil);
RegisterProperty(TdomNode,'prefix',__DC__GetTdomNode__prefix,__DC__SetTdomNode__prefix);
RegisterProperty(TdomNode,'textContent',__DC__GetTdomNode__textContent,nil);
RegisterProperty(TdomNodeIterator,'expandEntityReferences',__DC__GetTdomNodeIterator__expandEntityReferences,nil);
RegisterProperty(TdomNodeIterator,'filter',__DC__GetTdomNodeIterator__filter,nil);
RegisterProperty(TdomNodeIterator,'root',__DC__GetTdomNodeIterator__root,nil);
RegisterProperty(TdomNodeIterator,'whatToShow',__DC__GetTdomNodeIterator__whatToShow,nil);
RegisterProperty(TdomNodeList,'length',__DC__GetTdomNodeList__length,nil);
RegisterProperty(TdomNotation,'publicId',__DC__GetTdomNotation__publicId,nil);
RegisterProperty(TdomNotation,'systemId',__DC__GetTdomNotation__systemId,nil);
RegisterProperty(TdomProcessingInstruction,'target',__DC__GetTdomProcessingInstruction__target,nil);
RegisterProperty(TdomProcessingInstruction,'data',__DC__GetTdomProcessingInstruction__data,__DC__SetTdomProcessingInstruction__data);
RegisterProperty(TdomStandardContentModelReader,'errorHandler',__DC__GetTdomStandardContentModelReader__errorHandler,__DC__SetTdomStandardContentModelReader__errorHandler);
RegisterProperty(TdomStandardDocBuilder,'ReferenceDocument',__DC__GetTdomStandardDocBuilder__ReferenceDocument,nil);
RegisterProperty(TdomStandardDocBuilder,'referenceNode',__DC__GetTdomStandardDocBuilder__referenceNode,__DC__SetTdomStandardDocBuilder__referenceNode);
RegisterProperty(TdomStandardErrorHandler,'errorList',__DC__GetTdomStandardErrorHandler__errorList,nil);
RegisterProperty(TdomStandardIntSubsetBuilder,'referenceNode',__DC__GetTdomStandardIntSubsetBuilder__referenceNode,__DC__SetTdomStandardIntSubsetBuilder__referenceNode);
RegisterProperty(TdomStandardLocator,'columnNumber',__DC__GetTdomStandardLocator__columnNumber,nil);
RegisterProperty(TdomStandardLocator,'lineNumber',__DC__GetTdomStandardLocator__lineNumber,nil);
RegisterProperty(TdomStandardLocator,'publicId',__DC__GetTdomStandardLocator__publicId,nil);
RegisterProperty(TdomStandardLocator,'startColumnNumber',__DC__GetTdomStandardLocator__startColumnNumber,nil);
RegisterProperty(TdomStandardLocator,'startLineNumber',__DC__GetTdomStandardLocator__startLineNumber,nil);
RegisterProperty(TdomStandardLocator,'systemId',__DC__GetTdomStandardLocator__systemId,nil);
RegisterProperty(TdomStyleSheet,'styleSheetType',__DC__GetTdomStyleSheet__styleSheetType,nil);
RegisterProperty(TdomStyleSheet,'disabled',__DC__GetTdomStyleSheet__disabled,__DC__SetTdomStyleSheet__disabled);
RegisterProperty(TdomStyleSheet,'ownerNode',__DC__GetTdomStyleSheet__ownerNode,nil);
RegisterProperty(TdomStyleSheet,'parentStyleSheet',__DC__GetTdomStyleSheet__parentStyleSheet,nil);
RegisterProperty(TdomStyleSheet,'href',__DC__GetTdomStyleSheet__href,nil);
RegisterProperty(TdomStyleSheet,'title',__DC__GetTdomStyleSheet__title,nil);
RegisterProperty(TdomStyleSheet,'media',__DC__GetTdomStyleSheet__media,nil);
RegisterProperty(TdomStyleSheetList,'length',__DC__GetTdomStyleSheetList__length,nil);
RegisterProperty(TdomText,'isWhitespaceInElementContent',__DC__GetTdomText__isWhitespaceInElementContent,nil);
RegisterProperty(TdomText,'literalValue',__DC__GetTdomText__literalValue,nil);
RegisterProperty(TdomTreeWalker,'currentNode',__DC__GetTdomTreeWalker__currentNode,__DC__SetTdomTreeWalker__currentNode);
RegisterProperty(TdomTreeWalker,'expandEntityReferences',__DC__GetTdomTreeWalker__expandEntityReferences,nil);
RegisterProperty(TdomTreeWalker,'filter',__DC__GetTdomTreeWalker__filter,nil);
RegisterProperty(TdomTreeWalker,'root',__DC__GetTdomTreeWalker__root,nil);
RegisterProperty(TdomTreeWalker,'whatToShow',__DC__GetTdomTreeWalker__whatToShow,nil);
RegisterProperty(TdomWideStringStream,'capacity',__DC__GetTdomWideStringStream__capacity,__DC__SetTdomWideStringStream__capacity);
RegisterProperty(TdomWideStringStream,'stringLength',__DC__GetTdomWideStringStream__stringLength,__DC__SetTdomWideStringStream__stringLength);
RegisterProperty(TdomWideStringStream,'stringPosition',__DC__GetTdomWideStringStream__stringPosition,__DC__SetTdomWideStringStream__stringPosition);
RegisterProperty(TdomWideStringStream,'dataString',__DC__GetTdomWideStringStream__dataString,nil);
RegisterProperty(TUTF16BEToUTF8Stream,'expandLF',__DC__GetTUTF16BEToUTF8Stream__expandLF,__DC__SetTUTF16BEToUTF8Stream__expandLF);
RegisterProperty(TXmlDocBuilder,'referenceNode',__DC__GetTXmlDocBuilder__referenceNode,__DC__SetTXmlDocBuilder__referenceNode);
RegisterProperty(TXmlDocBuilder,'preserveWhitespace',__DC__GetTXmlDocBuilder__preserveWhitespace,__DC__SetTXmlDocBuilder__preserveWhitespace);
RegisterProperty(TXmlHandlers,'Distributor',__DC__GetTXmlHandlers__Distributor,nil);
RegisterIndexedProperty(TXmlHandlers,'Items',1,True,__DC__GetTXmlHandlers__Items,__DC__SetTXmlHandlers__Items);
RegisterProperty(TXmlInputSource,'encoding',__DC__GetTXmlInputSource__encoding,nil);
RegisterProperty(TXmlInputSource,'locator',__DC__GetTXmlInputSource__locator,nil);
RegisterProperty(TXmlInputSource,'publicId',__DC__GetTXmlInputSource__publicId,nil);
RegisterProperty(TXmlInputSource,'rootName',__DC__GetTXmlInputSource__rootName,nil);
RegisterProperty(TXmlInputSource,'stream',__DC__GetTXmlInputSource__stream,nil);
RegisterProperty(TXmlInputSource,'streamAsWideString',__DC__GetTXmlInputSource__streamAsWideString,nil);
RegisterProperty(TXmlInputSource,'systemId',__DC__GetTXmlInputSource__systemId,nil);
RegisterProperty(TXmlParserError,'code',__DC__GetTXmlParserError__code,nil);
RegisterProperty(TXmlParserError,'endColumn',__DC__GetTXmlParserError__endColumn,nil);
RegisterProperty(TXmlParserError,'endLine',__DC__GetTXmlParserError__endLine,nil);
RegisterProperty(TXmlParserError,'errorClass',__DC__GetTXmlParserError__errorClass,nil);
RegisterProperty(TXmlParserError,'errorType',__DC__GetTXmlParserError__errorType,nil);
RegisterProperty(TXmlParserError,'publicId',__DC__GetTXmlParserError__publicId,nil);
RegisterProperty(TXmlParserError,'startColumn',__DC__GetTXmlParserError__startColumn,nil);
RegisterProperty(TXmlParserError,'startLine',__DC__GetTXmlParserError__startLine,nil);
RegisterProperty(TXmlParserError,'systemId',__DC__GetTXmlParserError__systemId,nil);
RegisterProperty(TXmlSourceCode,'nameOfFirstTag',__DC__GetTXmlSourceCode__nameOfFirstTag,nil);
RegisterProperty(TXmlSourceCodePiece,'pieceType',__DC__GetTXmlSourceCodePiece__pieceType,nil);
RegisterProperty(TXmlSourceCodePiece,'Text',__DC__GetTXmlSourceCodePiece__Text,__DC__SetTXmlSourceCodePiece__Text);
RegisterProperty(TXmlSourceCodePiece,'offset',__DC__GetTXmlSourceCodePiece__offset,nil);
RegisterProperty(TXmlSourceCodePiece,'ownerSourceCode',__DC__GetTXmlSourceCodePiece__ownerSourceCode,nil);
RegisterProperty(TXmlToDomParser,'docBuilder',__DC__GetTXmlToDomParser__docBuilder,nil);
RegisterProperty(TXmlToDomParser,'docXMLReader',__DC__GetTXmlToDomParser__docXMLReader,nil);
RegisterProperty(TXmlToDomParser,'errorHandler',__DC__GetTXmlToDomParser__errorHandler,nil);
RegisterProperty(TXmlToDomParser,'extDtdBuilder',__DC__GetTXmlToDomParser__extDtdBuilder,nil);
RegisterProperty(TXmlToDomParser,'extDtdReader',__DC__GetTXmlToDomParser__extDtdReader,nil);
RegisterProperty(TXmlToDomParser,'intDtdBuilder',__DC__GetTXmlToDomParser__intDtdBuilder,nil);
RegisterProperty(TXmlToDomParser,'intDtdReader',__DC__GetTXmlToDomParser__intDtdReader,nil);
RegisterProperty(TXmlWFTestContentHandler,'isActive',__DC__GetTXmlWFTestContentHandler__isActive,nil);
end;

const __ConstNames0 : array[0..109] of string = (
'SCannotReadOddPos'
,'SCannotWriteOddPos'
,'SOddSizeInvalid'
,'SNegativeSizeInvalid'
,'SOddPosInvalid'
,'SCapacityLessSize'
,'STargetNil'
,'ntUnknown'
,'ntElement_Node'
,'ntAttribute_Node'
,'ntText_Node'
,'ntCDATA_Section_Node'
,'ntEntity_Reference_Node'
,'ntEntity_Node'
,'ntProcessing_Instruction_Node'
,'ntComment_Node'
,'ntDocument_Node'
,'ntDocument_Type_Node'
,'ntDocument_Fragment_Node'
,'ntNotation_Node'
,'show_all'
,'xmlProcessingInstruction'
,'xmlXmlDeclaration'
,'xmlTextDeclaration'
,'xmlComment'
,'xmlCDATA'
,'xmlPCDATA'
,'xmlDoctype'
,'xmlStartTag'
,'xmlEndTag'
,'xmlEmptyElementTag'
,'xmlCharRef'
,'xmlEntityRef'
,'xmlParameterEntityRef'
,'xmlEntityDecl'
,'xmlElementDecl'
,'xmlAttributeDecl'
,'xmlNotationDecl'
,'xmlCondSection'
,'xmlUnknown'
,'erReplace'
,'erExpand'
,'ctEmpty'
,'ctAny'
,'ctMixed'
,'ctChildren'
,'etUTF8'
,'etUTF16BE'
,'etUTF16LE'
,'etLatin1'
,'etLatin2'
,'etLatin3'
,'etLatin4'
,'etCyrillic'
,'etArabic'
,'etGreek'
,'etHebrew'
,'etLatin5'
,'etLatin6'
,'etLatin7'
,'etLatin8'
,'etLatin9'
,'etKOI8R'
,'etcp10000_MacRoman'
,'etcp1250'
,'etcp1251'
,'etcp1252'
,'etsystem'
,'filter_accept'
,'filter_reject'
,'filter_skip'
,'paFail'
,'paRetry'
,'paOK'
,'posBefore'
,'posAfter'
,'ctUnknown'
,'ctProcessingInstruction'
,'ctComment'
,'ctObject'
,'ctFragment'
,'ctExternalObject'
,'ctInternalObject'
,'ctAttribute'
,'ctNotation'
,'ctEntity'
,'ctParameterEntity'
,'ctParameterEntityReference'
,'ctEntityDeclaration'
,'ctParameterEntityDeclaration'
,'ctElementTypeDeclaration'
,'ctSequenceParticle'
,'ctChoiceParticle'
,'ctPcdataChoiceParticle'
,'ctElementParticle'
,'ctAttributeList'
,'ctAttributeDefinition'
,'ctNotationDeclaration'
,'ctNameParticle'
,'ctNmtokenParticle'
,'iso639_de'
,'iso639_en'
,'iso639_es'
,'iso639_fr'
,'iso639_it'
,'iso639_nl'
,'iso639_pl'
,'xetFatalError'
,'xetError'
,'xetWarning'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,SCannotReadOddPos));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,SCannotWriteOddPos));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,SOddSizeInvalid));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,SNegativeSizeInvalid));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,SOddPosInvalid));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,SCapacityLessSize));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,STargetNil));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,ntUnknown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,ntElement_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,ntAttribute_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,ntText_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,ntCDATA_Section_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,ntEntity_Reference_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,ntEntity_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,ntProcessing_Instruction_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,ntComment_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,ntDocument_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,ntDocument_Type_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,ntDocument_Fragment_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,ntNotation_Node));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,VarFromSet(show_all, sizeof(show_all))));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,xmlProcessingInstruction));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,xmlXmlDeclaration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,xmlTextDeclaration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,xmlComment));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,xmlCDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,xmlPCDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,xmlDoctype));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,xmlStartTag));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,xmlEndTag));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,xmlEmptyElementTag));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,xmlCharRef));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,xmlEntityRef));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,xmlParameterEntityRef));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,xmlEntityDecl));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,xmlElementDecl));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,xmlAttributeDecl));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,xmlNotationDecl));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,xmlCondSection));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,xmlUnknown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,erReplace));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,erExpand));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,ctEmpty));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,ctAny));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,ctMixed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,ctChildren));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,etUTF8));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,etUTF16BE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,etUTF16LE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,etLatin1));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,etLatin2));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,etLatin3));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,etLatin4));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,etCyrillic));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,etArabic));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,etGreek));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,etHebrew));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,etLatin5));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,etLatin6));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,etLatin7));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,etLatin8));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,etLatin9));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,etKOI8R));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,etcp10000_MacRoman));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,etcp1250));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,etcp1251));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,etcp1252));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,etsystem));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,filter_accept));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,filter_reject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,filter_skip));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,paFail));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,paRetry));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,paOK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,posBefore));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,posAfter));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,ctUnknown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,ctProcessingInstruction));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,ctComment));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,ctObject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,ctFragment));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,ctExternalObject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,ctInternalObject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,ctAttribute));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,ctNotation));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,ctEntity));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,ctParameterEntity));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,ctParameterEntityReference));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,ctEntityDeclaration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,ctParameterEntityDeclaration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,ctElementTypeDeclaration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,ctSequenceParticle));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,ctChoiceParticle));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,ctPcdataChoiceParticle));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,ctElementParticle));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,ctAttributeList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,ctAttributeDefinition));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,ctNotationDeclaration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,ctNameParticle));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,ctNmtokenParticle));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,iso639_de));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,iso639_en));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,iso639_es));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,iso639_fr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,iso639_it));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[105] ,iso639_nl));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[106] ,iso639_pl));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[107] ,xetFatalError));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[108] ,xetError));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[109] ,xetWarning));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..208] of TClass = (
EConversionStream,
EDomException,
EDomstring_Size_Err,
EHierarchy_Request_Err,
EIndex_Size_Err,
EInternalParserException,
EInuse_Attribute_Err,
EInuse_AttributeDefinition_Err,
EInuse_Content_Model_Err,
EInuse_Node_Err,
EInvalid_Access_Err,
EInvalid_Character_Err,
EInvalid_Entity_Reference_Err,
EInvalid_Modification_Err,
EInvalid_State_Err,
ENamespace_Err,
ENo_Data_Allowed_Err,
ENo_External_Entity_Allowed_Err,
ENo_Modification_Allowed_Err,
ENot_Found_Err,
ENot_Supported_Err,
EParserAttribute_Default_Type_Mismatch_Err,
EParserAttribute_Definition_Not_Found_Err,
EParserAttribute_Type_Mismatch_Err,
EParserAttributeValueRefersToExternalEntity_Err,
EParserDouble_AttDef_Warning,
EParserDouble_Element_Type_Declaration_Err,
EParserDouble_Entity_Decl_Warning,
EParserDouble_Parameter_Entity_Decl_Warning,
EParserDoubleAttributeName_Err,
EParserDoubleDoctype_Err,
EParserDoubleEqualitySign_Err,
EParserDoubleRootElement_Err,
EParserDuplicate_Enumeration_Token_Err,
EParserDuplicate_ID_On_Element_Type_Err,
EParserDuplicate_ID_Value_Err,
EParserDuplicate_Name_In_Mixed_Content_Err,
EParserDuplicate_Notation_Decl_Err,
EParserDuplicate_Notation_On_Element_Type_Err,
EParserDuplicate_Notation_Token_Err,
EParserDuplicate_Tokens_Err,
EParserElement_Declared_Empty_Has_Content_Err,
EParserElement_Type_Declaration_Not_Found_Err,
EParserElement_With_Illegal_Element_Content_Err,
EParserElement_With_Illegal_Mixed_Content_Err,
EParserError,
EParserException,
EParserExternal_Entity_Not_Found_Err,
EParserExternal_Subset_Not_Found_Err,
EParserFatalError,
EParserFixed_Attribute_Mismatch_Err,
EParserId_Neither_Implied_Nor_Required_Err,
EParserInvalidAttributeDeclaration_Err,
EParserInvalidAttributeName_Err,
EParserInvalidAttributeValue_Err,
EParserInvalidCDATASection_Err,
EParserInvalidCharacter_Err,
EParserInvalidCharRef_Err,
EParserInvalidComment_Err,
EParserInvalidConditionalSection_Err,
EParserInvalidDoctype_Err,
EParserInvalidDoctypeName_Err,
EParserInvalidElementDeclaration_Err,
EParserInvalidElementName_Err,
EParserInvalidEndTag_Err,
EParserInvalidEntityDeclaration_Err,
EParserInvalidEntityName_Err,
EParserInvalidNamespaceURI_Err,
EParserInvalidNotationDeclaration_Err,
EParserInvalidPrefix_Err,
EParserInvalidProcessingInstruction_Err,
EParserInvalidPubidLiteral_Err,
EParserInvalidQualifiedName_Err,
EParserInvalidSystemLiteral_Err,
EParserInvalidTextDeclaration_Err,
EParserInvalidXmlDeclaration_Err,
EParserLtInAttributeValue_Err,
EParserMissing_Entity_Declaration_Err,
EParserMissingEndTag_Err,
EParserMissingEqualitySign_Err,
EParserMissingQuotationMark_Err,
EParserMissingStartTag_Err,
EParserMissingWhiteSpace_Err,
EParserNamespaceFatalError,
EParserNamespaceURINotFound_Err,
EParserNondeterministic_Element_Content_Model_Err,
EParserNoProperMarkupReferenced_Err,
EParserNotation_On_Empty_Element_Err,
EParserNotInRoot_Err,
EParserReferenceToUnparsedEntity_Err,
EParserRequired_Attribute_Not_Found_Err,
EParserRootNotFound_Err,
EParserTarget_ID_Value_Not_Found_Err,
EParserTarget_Unparsed_Entity_Not_Found_Err,
EParserUndeclared_Notation_Name_Err,
EParserUnknownDeclarationType_Err,
EParserUnresolvable_Entity_Reference_Err,
EParserUnresolvable_Parameter_Entity_Reference_Err,
EParserUnusable_Entity_Decl_Warning,
EParserWarning,
EParserWrong_Declaration_Of_Predefined_Entity_Err,
EParserWrong_Root_Element_Type_Err,
EParserWrongOrder_Err,
EParserWrongPrefixMappingNesting_Err,
ESyntax_Err,
EUnknown_Document_Format_Err,
EWrong_Document_Err,
TConversionStream,
TdomAbstractView,
TdomAttr,
TdomCDATASection,
TdomCharacterData,
TdomCMAttrDefinition,
TdomCMAttribute,
TdomCMAttrList,
TdomCMChoiceParticle,
TdomCMComment,
TdomCMElementParticle,
TdomCMElementTypeDeclaration,
TdomCMEntity,
TdomCMEntityDeclaration,
TdomCMExternalObject,
TdomCMFragment,
TdomCMInternalObject,
TdomCMNameParticle,
TdomCMNmtokenParticle,
TdomCMNode,
TdomCMNodeList,
TdomCMNotation,
TdomCMNotationDeclaration,
TdomCMObject,
TdomCMParameterEntity,
TdomCMParameterEntityDeclaration,
TdomCMParameterEntityReference,
TdomCMParticle,
TdomCMPcdataChoiceParticle,
TdomCMProcessingInstruction,
TdomCMSequenceParticle,
TdomComment,
TdomCustomCMEntDecl,
TdomCustomCMIEObject,
TdomCustomCMObject,
TdomCustomContentHandler,
TdomCustomDTDHandler,
TdomCustomErrorHandler,
TdomCustomParser,
TdomCustomStr,
TdomCustomXMLReader,
TdomDocument,
TdomDocumentFragment,
TdomDocumentStyle,
TdomDocumentType,
TdomDtdAnalyzer,
TdomDTDContentModelHandler,
TdomElement,
TdomElementsNodeList,
TdomElementsNodeListNS,
TdomEntitiesNamedNodeMap,
TdomEntity,
TdomEntityReference,
TDomImplementation,
TdomMediaList,
TdomNamedCMAttributeMap,
TdomNamedCMEntityMap,
TdomNamedCMNodeMap,
TdomNamedNodeMap,
TdomNameValueList,
TdomNode,
TdomNodeFilter,
TdomNodeIterator,
TdomNodeList,
TdomNotation,
TdomProcessingInstruction,
TdomSpecialNodeList,
TdomStandardContentModelReader,
TdomStandardDocBuilder,
TdomStandardDocXMLReader,
TdomStandardErrorHandler,
TdomStandardExtSubsetBuilder,
TdomStandardExtSubsetXMLReader,
TdomStandardIntSubsetBuilder,
TdomStandardIntSubsetXMLReader,
TdomStandardLocator,
TdomStyleSheet,
TdomStyleSheetList,
TdomText,
TdomTreeWalker,
TdomWideStringStream,
TUTF16BEToUTF8Stream,
TXmlCustomContentHandler,
TXmlCustomDTDHandler,
TXmlCustomHandler,
TXmlCustomProcessorAgent,
TXmlCustomReader,
TXmlDistributor,
TXmlDocBuilder,
TXmlHandlerItem,
TXmlHandlers,
TXmlInputSource,
TXmlMemoryStream,
TXmlParserError,
TXmlSourceCode,
TXmlSourceCodePiece,
TXmlStandardDocReader,
TXmlStandardDomReader,
TXmlStandardHandler,
TXmlStandardProcessorAgent,
TXmlToDomParser,
TXmlWFTestContentHandler
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..106] of string = (
'TdomDocumentFormat'
,'xmlExtractPrefix'
,'xmlExtractLocalName'
,'isXmlChar'
,'isXmlWhiteSpace'
,'isXmlLetter'
,'isXmlBaseChar'
,'isXmlIdeographic'
,'isXmlCombiningChar'
,'isXmlDigit'
,'isXmlExtender'
,'isXmlNameChar'
,'isXmlPubidChar'
,'isXmlChars'
,'isXmlS'
,'isXmlName'
,'isXmlNames'
,'isXmlNmtoken'
,'isXmlNmtokens'
,'isXmlCharRef'
,'isXmlEntityRef'
,'isXmlPEReference'
,'isXmlReference'
,'isXmlEntityValue'
,'isXmlAttValue'
,'isXmlSystemLiteral'
,'isXmlPubidLiteral'
,'isXmlComment'
,'isXmlCData'
,'isXmlCharData'
,'isXmlPITarget'
,'isXmlVersionNum'
,'isXmlEncName'
,'isXmlStringType'
,'isXmlTokenizedType'
,'isXmlNCNameChar'
,'isXmlNCName'
,'isXmlDefaultAttName'
,'isXmlPrefixedAttName'
,'isXmlNSAttName'
,'isXmlLocalPart'
,'isXmlPrefix'
,'isXmlQName'
,'resolveCharRefs'
,'xmlIntToCharRef'
,'xmlCharRefToInt'
,'xmlCharRefToStr'
,'xmlStrToCharRef'
,'Iso8859_1ToUTF16Char'
,'Iso8859_2ToUTF16Char'
,'Iso8859_3ToUTF16Char'
,'Iso8859_4ToUTF16Char'
,'Iso8859_5ToUTF16Char'
,'Iso8859_6ToUTF16Char'
,'Iso8859_7ToUTF16Char'
,'Iso8859_8ToUTF16Char'
,'Iso8859_9ToUTF16Char'
,'Iso8859_10ToUTF16Char'
,'Iso8859_13ToUTF16Char'
,'Iso8859_14ToUTF16Char'
,'Iso8859_15ToUTF16Char'
,'KOI8_RToUTF16Char'
,'cp10000_MacRomanToUTF16Char'
,'cp1250ToUTF16Char'
,'cp1251ToUTF16Char'
,'cp1252ToUTF16Char'
,'Iso8859_1ToUTF16Str'
,'Iso8859_2ToUTF16Str'
,'Iso8859_3ToUTF16Str'
,'Iso8859_4ToUTF16Str'
,'Iso8859_5ToUTF16Str'
,'Iso8859_6ToUTF16Str'
,'Iso8859_7ToUTF16Str'
,'Iso8859_8ToUTF16Str'
,'Iso8859_9ToUTF16Str'
,'Iso8859_10ToUTF16Str'
,'Iso8859_13ToUTF16Str'
,'Iso8859_14ToUTF16Str'
,'Iso8859_15ToUTF16Str'
,'KOI8_RToUTF16Str'
,'cp10000_MacRomanToUTF16Str'
,'cp1250ToUTF16Str'
,'cp1251ToUTF16Str'
,'cp1252ToUTF16Str'
,'UTF8ToUTF16BEStr'
,'UTF16BEToUTF8Str'
,'UTF16HighSurrogate'
,'UTF16LowSurrogate'
,'UTF16SurrogateToInt'
,'IsUTF16HighSurrogate'
,'IsUTF16LowSurrogate'
,'Register'
,'xmlAnalyseElement'
,'xmlAnalyseEntityDef'
,'xmlAnalyseNotationDecl'
,'xmlAnalysePCDATA'
,'xmlAnalysePubSysId'
,'xmlAnalyseTag'
,'xmlIsolateQuote'
,'xmlNormalizeLineBreaks'
,'xmlReplaceQuotes'
,'xmlTrunc'
,'xmlTruncAngularBrackets'
,'xmlTruncRoundBrackets'
,'writeWideString'
,'writeWideStrings'
,'writeWideChars'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_TdomDocumentFormat_)));
RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T0),[
TypeInfo(WideString),TypeInfo(WideString)],Addr(xmlExtractPrefix),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T1),[
TypeInfo(WideString),TypeInfo(WideString)],Addr(xmlExtractLocalName),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T2),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlChar),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T3),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlWhiteSpace),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T4),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlLetter),cRegister);

RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T5),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlBaseChar),cRegister);

RegisterProc(nil,MethodNames[7],mtProc,TypeInfo(_T6),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlIdeographic),cRegister);

RegisterProc(nil,MethodNames[8],mtProc,TypeInfo(_T7),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlCombiningChar),cRegister);

RegisterProc(nil,MethodNames[9],mtProc,TypeInfo(_T8),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlDigit),cRegister);

RegisterProc(nil,MethodNames[10],mtProc,TypeInfo(_T9),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlExtender),cRegister);

RegisterProc(nil,MethodNames[11],mtProc,TypeInfo(_T10),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlNameChar),cRegister);

RegisterProc(nil,MethodNames[12],mtProc,TypeInfo(_T11),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlPubidChar),cRegister);

RegisterProc(nil,MethodNames[13],mtProc,TypeInfo(_T12),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlChars),cRegister);

RegisterProc(nil,MethodNames[14],mtProc,TypeInfo(_T13),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlS),cRegister);

RegisterProc(nil,MethodNames[15],mtProc,TypeInfo(_T14),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlName),cRegister);

RegisterProc(nil,MethodNames[16],mtProc,TypeInfo(_T15),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlNames),cRegister);

RegisterProc(nil,MethodNames[17],mtProc,TypeInfo(_T16),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlNmtoken),cRegister);

RegisterProc(nil,MethodNames[18],mtProc,TypeInfo(_T17),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlNmtokens),cRegister);

RegisterProc(nil,MethodNames[19],mtProc,TypeInfo(_T18),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlCharRef),cRegister);

RegisterProc(nil,MethodNames[20],mtProc,TypeInfo(_T19),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlEntityRef),cRegister);

RegisterProc(nil,MethodNames[21],mtProc,TypeInfo(_T20),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlPEReference),cRegister);

RegisterProc(nil,MethodNames[22],mtProc,TypeInfo(_T21),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlReference),cRegister);

RegisterProc(nil,MethodNames[23],mtProc,TypeInfo(_T22),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlEntityValue),cRegister);

RegisterProc(nil,MethodNames[24],mtProc,TypeInfo(_T23),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlAttValue),cRegister);

RegisterProc(nil,MethodNames[25],mtProc,TypeInfo(_T24),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlSystemLiteral),cRegister);

RegisterProc(nil,MethodNames[26],mtProc,TypeInfo(_T25),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlPubidLiteral),cRegister);

RegisterProc(nil,MethodNames[27],mtProc,TypeInfo(_T26),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlComment),cRegister);

RegisterProc(nil,MethodNames[28],mtProc,TypeInfo(_T27),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlCData),cRegister);

RegisterProc(nil,MethodNames[29],mtProc,TypeInfo(_T28),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlCharData),cRegister);

RegisterProc(nil,MethodNames[30],mtProc,TypeInfo(_T29),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlPITarget),cRegister);

RegisterProc(nil,MethodNames[31],mtProc,TypeInfo(_T30),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlVersionNum),cRegister);

RegisterProc(nil,MethodNames[32],mtProc,TypeInfo(_T31),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlEncName),cRegister);

RegisterProc(nil,MethodNames[33],mtProc,TypeInfo(_T32),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlStringType),cRegister);

RegisterProc(nil,MethodNames[34],mtProc,TypeInfo(_T33),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlTokenizedType),cRegister);

RegisterProc(nil,MethodNames[35],mtProc,TypeInfo(_T34),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(isXmlNCNameChar),cRegister);

RegisterProc(nil,MethodNames[36],mtProc,TypeInfo(_T35),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlNCName),cRegister);

RegisterProc(nil,MethodNames[37],mtProc,TypeInfo(_T36),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlDefaultAttName),cRegister);

RegisterProc(nil,MethodNames[38],mtProc,TypeInfo(_T37),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlPrefixedAttName),cRegister);

RegisterProc(nil,MethodNames[39],mtProc,TypeInfo(_T38),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlNSAttName),cRegister);

RegisterProc(nil,MethodNames[40],mtProc,TypeInfo(_T39),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlLocalPart),cRegister);

RegisterProc(nil,MethodNames[41],mtProc,TypeInfo(_T40),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlPrefix),cRegister);

RegisterProc(nil,MethodNames[42],mtProc,TypeInfo(_T41),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(isXmlQName),cRegister);

RegisterProc(nil,MethodNames[43],mtProc,TypeInfo(_T42),[
TypeInfo(WideString),TypeInfo(WideString)],Addr(resolveCharRefs),cRegister);

RegisterProc(nil,MethodNames[44],mtProc,TypeInfo(_T43),[
TypeInfo(Integer),TypeInfo(WideString)],Addr(xmlIntToCharRef),cRegister);

RegisterProc(nil,MethodNames[45],mtProc,TypeInfo(_T44),[
TypeInfo(WideString),TypeInfo(Integer)],Addr(xmlCharRefToInt),cRegister);

RegisterProc(nil,MethodNames[46],mtProc,TypeInfo(_T45),[
TypeInfo(WideString),TypeInfo(WideString)],Addr(xmlCharRefToStr),cRegister);

RegisterProc(nil,MethodNames[47],mtProc,TypeInfo(_T46),[
TypeInfo(WideString),TypeInfo(WideString)],Addr(xmlStrToCharRef),cRegister);

RegisterProc(nil,MethodNames[48],mtProc,TypeInfo(_T47),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_1ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[49],mtProc,TypeInfo(_T48),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_2ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[50],mtProc,TypeInfo(_T49),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_3ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[51],mtProc,TypeInfo(_T50),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_4ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[52],mtProc,TypeInfo(_T51),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_5ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[53],mtProc,TypeInfo(_T52),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_6ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[54],mtProc,TypeInfo(_T53),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_7ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[55],mtProc,TypeInfo(_T54),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_8ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[56],mtProc,TypeInfo(_T55),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_9ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[57],mtProc,TypeInfo(_T56),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_10ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[58],mtProc,TypeInfo(_T57),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_13ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[59],mtProc,TypeInfo(_T58),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_14ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[60],mtProc,TypeInfo(_T59),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(Iso8859_15ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[61],mtProc,TypeInfo(_T60),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(KOI8_RToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[62],mtProc,TypeInfo(_T61),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(cp10000_MacRomanToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[63],mtProc,TypeInfo(_T62),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(cp1250ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[64],mtProc,TypeInfo(_T63),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(cp1251ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[65],mtProc,TypeInfo(_T64),[
TypeInfo(Char),TypeInfo(wideChar)],Addr(cp1252ToUTF16Char),cRegister);

RegisterProc(nil,MethodNames[66],mtProc,TypeInfo(_T65),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_1ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[67],mtProc,TypeInfo(_T66),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_2ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[68],mtProc,TypeInfo(_T67),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_3ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[69],mtProc,TypeInfo(_T68),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_4ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[70],mtProc,TypeInfo(_T69),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_5ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[71],mtProc,TypeInfo(_T70),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_6ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[72],mtProc,TypeInfo(_T71),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_7ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[73],mtProc,TypeInfo(_T72),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_8ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[74],mtProc,TypeInfo(_T73),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_9ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[75],mtProc,TypeInfo(_T74),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_10ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[76],mtProc,TypeInfo(_T75),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_13ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[77],mtProc,TypeInfo(_T76),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_14ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[78],mtProc,TypeInfo(_T77),[
TypeInfo(String),TypeInfo(WideString)],Addr(Iso8859_15ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[79],mtProc,TypeInfo(_T78),[
TypeInfo(String),TypeInfo(WideString)],Addr(KOI8_RToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[80],mtProc,TypeInfo(_T79),[
TypeInfo(String),TypeInfo(WideString)],Addr(cp10000_MacRomanToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[81],mtProc,TypeInfo(_T80),[
TypeInfo(String),TypeInfo(WideString)],Addr(cp1250ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[82],mtProc,TypeInfo(_T81),[
TypeInfo(String),TypeInfo(WideString)],Addr(cp1251ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[83],mtProc,TypeInfo(_T82),[
TypeInfo(String),TypeInfo(WideString)],Addr(cp1252ToUTF16Str),cRegister);

RegisterProc(nil,MethodNames[84],mtProc,TypeInfo(_T83),[
TypeInfo(String),TypeInfo(WideString)],Addr(UTF8ToUTF16BEStr),cRegister);

RegisterProc(nil,MethodNames[85],mtProc,TypeInfo(_T84),[
TypeInfo(WideString),
TypeInfo(Boolean),TypeInfo(String)],Addr(UTF16BEToUTF8Str),cRegister);

RegisterProc(nil,MethodNames[86],mtProc,TypeInfo(_T85),[
TypeInfo(Integer),TypeInfo(wideChar)],Addr(UTF16HighSurrogate),cRegister);

RegisterProc(nil,MethodNames[87],mtProc,TypeInfo(_T86),[
TypeInfo(Integer),TypeInfo(wideChar)],Addr(UTF16LowSurrogate),cRegister);

RegisterProc(nil,MethodNames[88],mtProc,TypeInfo(_T87),[
TypeInfo(wideChar),
TypeInfo(wideChar),TypeInfo(Integer)],Addr(UTF16SurrogateToInt),cRegister);

RegisterProc(nil,MethodNames[89],mtProc,TypeInfo(_T88),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(IsUTF16HighSurrogate),cRegister);

RegisterProc(nil,MethodNames[90],mtProc,TypeInfo(_T89),[
TypeInfo(wideChar),TypeInfo(Boolean)],Addr(IsUTF16LowSurrogate),cRegister);

RegisterProc(nil,MethodNames[91],mtProc,TypeInfo(_T90),NoParams,Addr(Register),cRegister);

RegisterProc(nil,MethodNames[92],mtProc,TypeInfo(_T91),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomNameValueList)],Addr(xmlAnalyseElement),cRegister);

RegisterProc(nil,MethodNames[93],mtProc,TypeInfo(_T92),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(Boolean)],Addr(xmlAnalyseEntityDef),cRegister);

RegisterProc(nil,MethodNames[94],mtProc,TypeInfo(_T93),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(Boolean)],Addr(xmlAnalyseNotationDecl),cRegister);

RegisterProc(nil,MethodNames[95],mtProc,TypeInfo(_T94),[
TypeInfo(WideString),
TypeInfo(TStringList)],Addr(xmlAnalysePCDATA),cRegister);

RegisterProc(nil,MethodNames[96],mtProc,TypeInfo(_T95),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(WideString)],Addr(xmlAnalysePubSysId),cRegister);

RegisterProc(nil,MethodNames[97],mtProc,TypeInfo(_T96),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)],Addr(xmlAnalyseTag),cRegister);

RegisterProc(nil,MethodNames[98],mtProc,TypeInfo(_T97),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(wideChar),
TypeInfo(Boolean)],Addr(xmlIsolateQuote),cRegister);

RegisterProc(nil,MethodNames[99],mtProc,TypeInfo(_T98),[
TypeInfo(WideString),TypeInfo(WideString)],Addr(xmlNormalizeLineBreaks),cRegister);

RegisterProc(nil,MethodNames[100],mtProc,TypeInfo(_T99),[
TypeInfo(WideString),TypeInfo(WideString)],Addr(xmlReplaceQuotes),cRegister);

RegisterProc(nil,MethodNames[101],mtProc,TypeInfo(_T100),[
TypeInfo(WideString),TypeInfo(WideString)],Addr(xmlTrunc),cRegister);

RegisterProc(nil,MethodNames[102],mtProc,TypeInfo(_T101),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(Boolean)],Addr(xmlTruncAngularBrackets),cRegister);

RegisterProc(nil,MethodNames[103],mtProc,TypeInfo(_T102),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(Boolean)],Addr(xmlTruncRoundBrackets),cRegister);

RegisterProc(nil,MethodNames[104],mtProc,TypeInfo(_T103),[
TypeInfo(TStream),
TypeInfo(WideString)],Addr(writeWideString),cRegister);

RegisterProc(nil,MethodNames[105],mtProc,TypeInfo(_T104),[
TypeInfo(TStream),
ArrayInfo(TypeInfo(WideString))],Addr(writeWideStrings),cRegister);

RegisterProc(nil,MethodNames[106],mtProc,TypeInfo(_T105),[
TypeInfo(TStream),
ArrayInfo(TypeInfo(wideChar))],Addr(writeWideChars),cRegister);

RegRegisterMethod(TConversionStream,'convertReadBuffer',TypeInfo(_T106),[
TypeInfoUntyped,
TypeInfo(Longint),TypeInfo(Longint)], pointer(28));

RegRegisterMethod(TConversionStream,'convertWriteBuffer',TypeInfo(_T107),[
TypeInfoUntyped,
TypeInfo(Longint),TypeInfo(Longint)], pointer(32));

RegRegisterMethod(TConversionStream,'setConvertBufSize',TypeInfo(_T108),[
TypeInfo(Longint)], pointer(36));

RegisterProc(TConversionStream,'create',mtConstructor,TypeInfo(_T109),[
TypeInfo(TStream)],Addr(TConversionStream.create),cRegister);

RegRegisterMethod(TConversionStream,'freeConvertBuffer',TypeInfo(_T110),NoParams,Addr(TConversionStream.freeConvertBuffer));

RegRegisterMethod(TdomAttr,'getName',TypeInfo(_T111),[TypeInfo(WideString)], pointer(184));

RegRegisterMethod(TdomAttr,'getSpecified',TypeInfo(_T112),[TypeInfo(Boolean)], pointer(188));

RegRegisterMethod(TdomAttr,'getValue',TypeInfo(_T113),[TypeInfo(WideString)], pointer(192));

RegRegisterMethod(TdomAttr,'setValue',TypeInfo(_T114),[
TypeInfo(WideString)], pointer(196));

RegRegisterMethod(TdomAttr,'getOwnerElement',TypeInfo(_T115),[TypeInfo(TdomElement)], pointer(200));

RegRegisterMethod(TdomAttr,'getLiteralValue',TypeInfo(_T116),[TypeInfo(WideString)], pointer(204));

RegisterProc(TdomAttr,'create',mtConstructor,TypeInfo(_T117),[
TypeInfo(TdomDocument),
TypeInfo(WideString),
TypeInfo(Boolean)],Addr(TdomAttr.create),cRegister);

RegisterProc(TdomAttr,'createNS',mtConstructor,TypeInfo(_T118),[
TypeInfo(TdomDocument),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(Boolean)],Addr(TdomAttr.createNS),cRegister);

RegRegisterMethod(TdomCharacterData,'getData',TypeInfo(_T119),[TypeInfo(WideString)], pointer(184));

RegRegisterMethod(TdomCharacterData,'setData',TypeInfo(_T120),[
TypeInfo(WideString)], pointer(188));

RegRegisterMethod(TdomCharacterData,'getLength',TypeInfo(_T121),[TypeInfo(Integer)], pointer(192));

RegisterProc(TdomCharacterData,'create',mtConstructor,TypeInfo(_T122),[
TypeInfo(TdomDocument)], pointer(196),cRegister);

RegRegisterMethod(TdomCharacterData,'substringData',TypeInfo(_T123),[
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(WideString)], pointer(200));

RegRegisterMethod(TdomCharacterData,'appendData',TypeInfo(_T124),[
TypeInfo(WideString)], pointer(204));

RegRegisterMethod(TdomCharacterData,'insertData',TypeInfo(_T125),[
TypeInfo(Integer),
TypeInfo(WideString)], pointer(208));

RegRegisterMethod(TdomCharacterData,'deleteData',TypeInfo(_T126),[
TypeInfo(Integer),
TypeInfo(Integer)], pointer(212));

RegRegisterMethod(TdomCharacterData,'replaceData',TypeInfo(_T127),[
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(WideString)], pointer(216));

RegRegisterMethod(TdomCMAttrDefinition,'getAttributeType',TypeInfo(_T128),[TypeInfo(WideString)], pointer(96));

RegRegisterMethod(TdomCMAttrDefinition,'getDefaultDeclaration',TypeInfo(_T129),[TypeInfo(WideString)], pointer(100));

RegisterProc(TdomCMAttrDefinition,'create',mtConstructor,TypeInfo(_T130),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(104),cRegister);

RegisterProc(TdomCMAttribute,'create',mtConstructor,TypeInfo(_T131),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(96),cRegister);

RegisterProc(TdomCMAttrList,'create',mtConstructor,TypeInfo(_T132),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString)], pointer(96),cRegister);

RegisterProc(TdomCMChoiceParticle,'create',mtConstructor,TypeInfo(_T133),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString)], pointer(112),cRegister);

RegRegisterMethod(TdomCMComment,'getData',TypeInfo(_T134),[TypeInfo(WideString)], pointer(96));

RegRegisterMethod(TdomCMComment,'setData',TypeInfo(_T135),[
TypeInfo(WideString)], pointer(100));

RegRegisterMethod(TdomCMComment,'getLength',TypeInfo(_T136),[TypeInfo(Integer)], pointer(104));

RegisterProc(TdomCMComment,'create',mtConstructor,TypeInfo(_T137),[
TypeInfo(TdomCustomCMObject)], pointer(108),cRegister);

RegRegisterMethod(TdomCMComment,'substringData',TypeInfo(_T138),[
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(WideString)], pointer(112));

RegRegisterMethod(TdomCMComment,'appendData',TypeInfo(_T139),[
TypeInfo(WideString)], pointer(116));

RegRegisterMethod(TdomCMComment,'insertData',TypeInfo(_T140),[
TypeInfo(Integer),
TypeInfo(WideString)], pointer(120));

RegRegisterMethod(TdomCMComment,'deleteData',TypeInfo(_T141),[
TypeInfo(Integer),
TypeInfo(Integer)], pointer(124));

RegRegisterMethod(TdomCMComment,'replaceData',TypeInfo(_T142),[
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(WideString)], pointer(128));

RegisterProc(TdomCMElementParticle,'create',mtConstructor,TypeInfo(_T143),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(112),cRegister);

RegRegisterMethod(TdomCMElementTypeDeclaration,'getContentspec',TypeInfo(_T144),[TypeInfo(WideString)], pointer(96));

RegRegisterMethod(TdomCMElementTypeDeclaration,'getContentspecType',TypeInfo(_T145),[TypeInfo(TdomContentspecType)], pointer(100));

RegRegisterMethod(TdomCMElementTypeDeclaration,'writeContentspec',TypeInfo(_T146),[
TypeInfo(TStream)], pointer(104));

RegisterProc(TdomCMElementTypeDeclaration,'create',mtConstructor,TypeInfo(_T147),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(TdomContentspecType)], pointer(108),cRegister);

RegRegisterMethod(TdomCMEntity,'calculateReplacementText',TypeInfo(_T148),[
TypeInfo(WideString),TypeInfo(WideString)], pointer(96));

RegRegisterMethod(TdomCMEntity,'getIsUnusable',TypeInfo(_T149),[TypeInfo(Boolean)], pointer(100));

RegRegisterMethod(TdomCMEntity,'getNormalizedValue',TypeInfo(_T150),[TypeInfo(WideString)], pointer(104));

RegRegisterMethod(TdomCMEntity,'getResolvedValue',TypeInfo(_T151),[TypeInfo(WideString)], pointer(108));

RegRegisterMethod(TdomCMEntity,'setIsUnusable',TypeInfo(_T152),[
TypeInfo(Boolean)], pointer(112));

RegRegisterMethod(TdomCMEntity,'refersToExternalEntity',TypeInfo(_T153),[
TypeInfo(Boolean),TypeInfo(Boolean)], pointer(116));

RegRegisterMethod(TdomCMEntity,'refersToUnparsedEntity',TypeInfo(_T154),[
TypeInfo(Boolean),TypeInfo(Boolean)], pointer(120));

RegRegisterMethod(TdomCMEntity,'refersToUnusableEntity',TypeInfo(_T155),[
TypeInfo(Boolean),TypeInfo(Boolean)], pointer(124));

RegRegisterMethod(TdomCMEntity,'testForCircularReference',TypeInfo(_T156),[
TypeInfo(Boolean)], pointer(128));

RegisterProc(TdomCMEntity,'create',mtConstructor,TypeInfo(_T157),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(132),cRegister);

RegisterProc(TdomCMEntityDeclaration,'create',mtConstructor,TypeInfo(_T158),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(108),cRegister);

RegisterProc(TdomCMExternalObject,'create',mtConstructor,TypeInfo(_T159),[
TypeInfo(TDomImplementation),
TypeInfo(WideString),
TypeInfo(WideString)],Addr(TdomCMExternalObject.create),cRegister);

RegisterProc(TdomCMFragment,'create',mtConstructor,TypeInfo(_T160),[
TypeInfo(TdomCustomCMObject)], pointer(96),cRegister);

RegisterProc(TdomCMInternalObject,'create',mtConstructor,TypeInfo(_T161),[
TypeInfo(TDomImplementation),
TypeInfo(WideString),
TypeInfo(WideString)],Addr(TdomCMInternalObject.create),cRegister);

RegisterProc(TdomCMNameParticle,'create',mtConstructor,TypeInfo(_T162),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString)], pointer(96),cRegister);

RegisterProc(TdomCMNmtokenParticle,'create',mtConstructor,TypeInfo(_T163),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString)], pointer(96),cRegister);

RegRegisterMethod(TdomCMNode,'makeChildrenReadonly',TypeInfo(_T164),NoParams, pointer(0));

RegRegisterMethod(TdomCMNode,'getNodeName',TypeInfo(_T165),[TypeInfo(WideString)], pointer(4));

RegRegisterMethod(TdomCMNode,'getNodeValue',TypeInfo(_T166),[TypeInfo(WideString)], pointer(8));

RegRegisterMethod(TdomCMNode,'setNodeValue',TypeInfo(_T167),[
TypeInfo(WideString)], pointer(12));

RegRegisterMethod(TdomCMNode,'getCMNodeType',TypeInfo(_T168),[TypeInfo(TdomCMNodeType)], pointer(16));

RegRegisterMethod(TdomCMNode,'getParentNode',TypeInfo(_T169),[TypeInfo(TdomCMNode)], pointer(20));

RegRegisterMethod(TdomCMNode,'getChildNodes',TypeInfo(_T170),[TypeInfo(TdomCMNodeList)], pointer(24));

RegRegisterMethod(TdomCMNode,'getFirstChild',TypeInfo(_T171),[TypeInfo(TdomCMNode)], pointer(28));

RegRegisterMethod(TdomCMNode,'getLastChild',TypeInfo(_T172),[TypeInfo(TdomCMNode)], pointer(32));

RegRegisterMethod(TdomCMNode,'getPreviousSibling',TypeInfo(_T173),[TypeInfo(TdomCMNode)], pointer(36));

RegRegisterMethod(TdomCMNode,'getNextSibling',TypeInfo(_T174),[TypeInfo(TdomCMNode)], pointer(40));

RegRegisterMethod(TdomCMNode,'getCMObject',TypeInfo(_T175),[TypeInfo(TdomCustomCMObject)], pointer(44));

RegRegisterMethod(TdomCMNode,'getCode',TypeInfo(_T176),[TypeInfo(WideString)], pointer(48));

RegRegisterMethod(TdomCMNode,'setIsReadonly',TypeInfo(_T177),[
TypeInfo(Boolean)], pointer(52));

RegRegisterMethod(TdomCMNode,'validate',TypeInfo(_T178),[
TypeInfo(TdomCustomErrorHandler),TypeInfo(Boolean)], pointer(56));

RegisterProc(TdomCMNode,'create',mtConstructor,TypeInfo(_T179),[
TypeInfo(TdomCustomCMObject)],Addr(TdomCMNode.create),cRegister);

RegRegisterMethod(TdomCMNode,'clear',TypeInfo(_T180),NoParams, pointer(60));

RegRegisterMethod(TdomCMNode,'insertBefore',TypeInfo(_T181),[
TypeInfo(TdomCMNode),
TypeInfo(TdomCMNode),TypeInfo(TdomCMNode)], pointer(64));

RegRegisterMethod(TdomCMNode,'replaceChild',TypeInfo(_T182),[
TypeInfo(TdomCMNode),
TypeInfo(TdomCMNode),TypeInfo(TdomCMNode)], pointer(68));

RegRegisterMethod(TdomCMNode,'removeChild',TypeInfo(_T183),[
TypeInfo(TdomCMNode),TypeInfo(TdomCMNode)], pointer(72));

RegRegisterMethod(TdomCMNode,'appendChild',TypeInfo(_T184),[
TypeInfo(TdomCMNode),TypeInfo(TdomCMNode)], pointer(76));

RegRegisterMethod(TdomCMNode,'hasChildNodes',TypeInfo(_T185),[TypeInfo(Boolean)], pointer(80));

RegRegisterMethod(TdomCMNode,'cloneNode',TypeInfo(_T186),[
TypeInfo(Boolean),TypeInfo(TdomCMNode)], pointer(84));

RegRegisterMethod(TdomCMNode,'isAncestor',TypeInfo(_T187),[
TypeInfo(TdomCMNode),TypeInfo(Boolean)], pointer(88));

RegRegisterMethod(TdomCMNode,'writeCode',TypeInfo(_T188),[
TypeInfo(TStream)], pointer(92));

RegRegisterMethod(TdomCMNodeList,'getLength',TypeInfo(_T189),[TypeInfo(Integer)], pointer(0));

RegRegisterMethod(TdomCMNodeList,'indexOf',TypeInfo(_T190),[
TypeInfo(TdomCMNode),TypeInfo(Integer)], pointer(4));

RegRegisterMethod(TdomCMNodeList,'item',TypeInfo(_T191),[
TypeInfo(Integer),TypeInfo(TdomCMNode)], pointer(8));

RegisterProc(TdomCMNodeList,'create',mtConstructor,TypeInfo(_T192),[
TypeInfo(TList)],Addr(TdomCMNodeList.create),cRegister);

RegisterProc(TdomCMNotation,'create',mtConstructor,TypeInfo(_T193),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(96),cRegister);

RegRegisterMethod(TdomCMNotationDeclaration,'getPublicId',TypeInfo(_T194),[TypeInfo(WideString)], pointer(96));

RegRegisterMethod(TdomCMNotationDeclaration,'getSystemId',TypeInfo(_T195),[TypeInfo(WideString)], pointer(100));

RegisterProc(TdomCMNotationDeclaration,'create',mtConstructor,TypeInfo(_T196),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(104),cRegister);

RegRegisterMethod(TdomCMObject,'prepareCM',TypeInfo(_T197),[
TypeInfo(TdomCustomErrorHandler)], pointer(168));

RegRegisterMethod(TdomCMObject,'createCMAttribute',TypeInfo(_T198),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMAttribute)], pointer(172));

RegRegisterMethod(TdomCMObject,'createCMEntity',TypeInfo(_T199),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMEntity)], pointer(176));

RegRegisterMethod(TdomCMObject,'createCMNotation',TypeInfo(_T200),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMNotation)], pointer(180));

RegRegisterMethod(TdomCMObject,'setPredefinedEntities',TypeInfo(_T201),[
TypeInfo(TdomCustomErrorHandler),TypeInfo(Boolean)], pointer(184));

RegisterProc(TdomCMObject,'create',mtConstructor,TypeInfo(_T202),[
TypeInfo(TDomImplementation)], pointer(188),cRegister);

RegRegisterMethod(TdomCMObject,'prepare',TypeInfo(_T203),NoParams, pointer(192));

RegRegisterMethod(TdomCMObject,'removeExternalCM',TypeInfo(_T204),[TypeInfo(TdomCMExternalObject)], pointer(196));

RegRegisterMethod(TdomCMObject,'removeInternalCM',TypeInfo(_T205),[TypeInfo(TdomCMInternalObject)], pointer(200));

RegRegisterMethod(TdomCMObject,'setExternalCM',TypeInfo(_T206),[
TypeInfo(TdomCMExternalObject),TypeInfo(TdomCMExternalObject)], pointer(204));

RegRegisterMethod(TdomCMObject,'setInternalCM',TypeInfo(_T207),[
TypeInfo(TdomCMInternalObject),TypeInfo(TdomCMInternalObject)], pointer(208));

RegRegisterMethod(TdomCMParameterEntity,'getIsUnusable',TypeInfo(_T208),[TypeInfo(Boolean)], pointer(96));

RegRegisterMethod(TdomCMParameterEntity,'setIsUnusable',TypeInfo(_T209),[
TypeInfo(Boolean)], pointer(100));

RegisterProc(TdomCMParameterEntity,'create',mtConstructor,TypeInfo(_T210),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(104),cRegister);

RegisterProc(TdomCMParameterEntityDeclaration,'create',mtConstructor,TypeInfo(_T211),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(108),cRegister);

RegisterProc(TdomCMParameterEntityReference,'create',mtConstructor,TypeInfo(_T212),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString)], pointer(96),cRegister);

RegRegisterMethod(TdomCMParticle,'contentModelTest2',TypeInfo(_T213),[
TypeInfo(TStringList),
TypeInfo(TStringList),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(96));

RegRegisterMethod(TdomCMParticle,'contentModelTest',TypeInfo(_T214),[
TypeInfo(TStringList),
TypeInfo(TStringList),TypeInfo(Boolean)], pointer(100));

RegRegisterMethod(TdomCMParticle,'getFrequency',TypeInfo(_T215),[TypeInfo(WideString)], pointer(104));

RegRegisterMethod(TdomCMParticle,'setFrequency',TypeInfo(_T216),[
TypeInfo(WideString)], pointer(108));

RegisterProc(TdomCMParticle,'create',mtConstructor,TypeInfo(_T217),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString)],Addr(TdomCMParticle.create),cRegister);

RegisterProc(TdomCMPcdataChoiceParticle,'create',mtConstructor,TypeInfo(_T218),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString)], pointer(112),cRegister);

RegRegisterMethod(TdomCMPcdataChoiceParticle,'elementDefined',TypeInfo(_T219),[
TypeInfo(WideString),TypeInfo(Boolean)],Addr(TdomCMPcdataChoiceParticle.elementDefined));

RegRegisterMethod(TdomCMProcessingInstruction,'getTarget',TypeInfo(_T220),[TypeInfo(WideString)], pointer(96));

RegRegisterMethod(TdomCMProcessingInstruction,'getData',TypeInfo(_T221),[TypeInfo(WideString)], pointer(100));

RegRegisterMethod(TdomCMProcessingInstruction,'setData',TypeInfo(_T222),[
TypeInfo(WideString)], pointer(104));

RegisterProc(TdomCMProcessingInstruction,'create',mtConstructor,TypeInfo(_T223),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString)], pointer(108),cRegister);

RegisterProc(TdomCMSequenceParticle,'create',mtConstructor,TypeInfo(_T224),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString)], pointer(112),cRegister);

RegRegisterMethod(TdomCustomCMEntDecl,'getIsInternalEntity',TypeInfo(_T225),[TypeInfo(Boolean)], pointer(96));

RegRegisterMethod(TdomCustomCMEntDecl,'getPublicId',TypeInfo(_T226),[TypeInfo(WideString)], pointer(100));

RegRegisterMethod(TdomCustomCMEntDecl,'getSystemId',TypeInfo(_T227),[TypeInfo(WideString)], pointer(104));

RegisterProc(TdomCustomCMEntDecl,'create',mtConstructor,TypeInfo(_T228),[
TypeInfo(TdomCustomCMObject),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)],Addr(TdomCustomCMEntDecl.create),cRegister);

RegisterProc(TdomCustomCMIEObject,'create',mtConstructor,TypeInfo(_T229),[
TypeInfo(TDomImplementation),
TypeInfo(WideString),
TypeInfo(WideString)],Addr(TdomCustomCMIEObject.create),cRegister);

RegRegisterMethod(TdomCustomCMObject,'duplicateCMNode',TypeInfo(_T230),[
TypeInfo(TdomCMNode),TypeInfo(TdomCMNode)], pointer(96));

RegisterProc(TdomCustomCMObject,'create',mtConstructor,TypeInfo(_T231),[
TypeInfo(TDomImplementation)],Addr(TdomCustomCMObject.create),cRegister);

RegRegisterMethod(TdomCustomCMObject,'createCMAttributeDefinition',TypeInfo(_T232),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMAttrDefinition)], pointer(100));

RegRegisterMethod(TdomCustomCMObject,'createCMAttributeList',TypeInfo(_T233),[
TypeInfo(WideString),TypeInfo(TdomCMAttrList)], pointer(104));

RegRegisterMethod(TdomCustomCMObject,'createCMChoiceParticle',TypeInfo(_T234),[
TypeInfo(WideString),TypeInfo(TdomCMChoiceParticle)], pointer(108));

RegRegisterMethod(TdomCustomCMObject,'createCMComment',TypeInfo(_T235),[
TypeInfo(WideString),TypeInfo(TdomCMComment)], pointer(112));

RegRegisterMethod(TdomCustomCMObject,'createCMElementParticle',TypeInfo(_T236),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMElementParticle)], pointer(116));

RegRegisterMethod(TdomCustomCMObject,'createCMElementTypeDeclaration',TypeInfo(_T237),[
TypeInfo(WideString),
TypeInfo(TdomContentspecType),TypeInfo(TdomCMElementTypeDeclaration)], pointer(120));

RegRegisterMethod(TdomCustomCMObject,'createCMEntityDeclaration',TypeInfo(_T238),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMEntityDeclaration)], pointer(124));

RegRegisterMethod(TdomCustomCMObject,'createCMFragment',TypeInfo(_T239),[TypeInfo(TdomCMFragment)], pointer(128));

RegRegisterMethod(TdomCustomCMObject,'createCMNameParticle',TypeInfo(_T240),[
TypeInfo(WideString),TypeInfo(TdomCMNameParticle)], pointer(132));

RegRegisterMethod(TdomCustomCMObject,'createCMNmtokenParticle',TypeInfo(_T241),[
TypeInfo(WideString),TypeInfo(TdomCMNmtokenParticle)], pointer(136));

RegRegisterMethod(TdomCustomCMObject,'createCMNotationDeclaration',TypeInfo(_T242),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMNotationDeclaration)], pointer(140));

RegRegisterMethod(TdomCustomCMObject,'createCMParameterEntityDeclaration',TypeInfo(_T243),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMParameterEntityDeclaration)], pointer(144));

RegRegisterMethod(TdomCustomCMObject,'createCMParameterEntityReference',TypeInfo(_T244),[
TypeInfo(WideString),TypeInfo(TdomCMParameterEntityReference)], pointer(148));

RegRegisterMethod(TdomCustomCMObject,'createCMPcdataChoiceParticle',TypeInfo(_T245),[TypeInfo(TdomCMPcdataChoiceParticle)], pointer(152));

RegRegisterMethod(TdomCustomCMObject,'createCMProcessingInstruction',TypeInfo(_T246),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMProcessingInstruction)], pointer(156));

RegRegisterMethod(TdomCustomCMObject,'createCMSequenceParticle',TypeInfo(_T247),[
TypeInfo(WideString),TypeInfo(TdomCMSequenceParticle)], pointer(160));

RegRegisterMethod(TdomCustomCMObject,'freeAllCMNodes',TypeInfo(_T248),[
TypeInfo(TdomCMNode)], pointer(164));

RegRegisterMethod(TdomCustomContentHandler,'CDATA',TypeInfo(_T249),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(0));

RegRegisterMethod(TdomCustomContentHandler,'charRef',TypeInfo(_T250),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(4));

RegRegisterMethod(TdomCustomContentHandler,'comment',TypeInfo(_T251),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(8));

RegRegisterMethod(TdomCustomContentHandler,'docType',TypeInfo(_T252),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(12));

RegRegisterMethod(TdomCustomContentHandler,'endDocument',TypeInfo(_T253),[
TypeInfo(TdomCustomParser)], pointer(16));

RegRegisterMethod(TdomCustomContentHandler,'endElement',TypeInfo(_T254),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(20));

RegRegisterMethod(TdomCustomContentHandler,'endPrefixMapping',TypeInfo(_T255),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(24));

RegRegisterMethod(TdomCustomContentHandler,'entityRef',TypeInfo(_T256),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(28));

RegRegisterMethod(TdomCustomContentHandler,'PCDATA',TypeInfo(_T257),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(32));

RegRegisterMethod(TdomCustomContentHandler,'processingInstruction',TypeInfo(_T258),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(36));

RegRegisterMethod(TdomCustomContentHandler,'skippedEntity',TypeInfo(_T259),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(40));

RegRegisterMethod(TdomCustomContentHandler,'startDocument',TypeInfo(_T260),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(44));

RegRegisterMethod(TdomCustomContentHandler,'startElement',TypeInfo(_T261),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomNameValueList)], pointer(48));

RegRegisterMethod(TdomCustomContentHandler,'startPrefixMapping',TypeInfo(_T262),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(52));

RegRegisterMethod(TdomCustomContentHandler,'xmlDeclaration',TypeInfo(_T263),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(56));

RegRegisterMethod(TdomCustomDTDHandler,'getPEFromCurrentCMObject',TypeInfo(_T264),[
TypeInfo(WideString),TypeInfo(WideString)], pointer(0));

RegRegisterMethod(TdomCustomDTDHandler,'attributeDefinition',TypeInfo(_T265),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(4));

RegRegisterMethod(TdomCustomDTDHandler,'comment',TypeInfo(_T266),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(8));

RegRegisterMethod(TdomCustomDTDHandler,'conditionalSection',TypeInfo(_T267),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(12));

RegRegisterMethod(TdomCustomDTDHandler,'elementTypeDeclaration',TypeInfo(_T268),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(16));

RegRegisterMethod(TdomCustomDTDHandler,'endAttListDeclaration',TypeInfo(_T269),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator)], pointer(20));

RegRegisterMethod(TdomCustomDTDHandler,'endDtd',TypeInfo(_T270),[
TypeInfo(TdomCustomParser)], pointer(24));

RegRegisterMethod(TdomCustomDTDHandler,'entityDeclaration',TypeInfo(_T271),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(28));

RegRegisterMethod(TdomCustomDTDHandler,'notationDeclaration',TypeInfo(_T272),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(32));

RegRegisterMethod(TdomCustomDTDHandler,'parameterEntityDeclaration',TypeInfo(_T273),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(36));

RegRegisterMethod(TdomCustomDTDHandler,'parameterEntityRef',TypeInfo(_T274),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(40));

RegRegisterMethod(TdomCustomDTDHandler,'processingInstruction',TypeInfo(_T275),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(44));

RegRegisterMethod(TdomCustomDTDHandler,'startAttListDeclaration',TypeInfo(_T276),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(48));

RegRegisterMethod(TdomCustomDTDHandler,'startDtd',TypeInfo(_T277),[
TypeInfo(TdomCustomParser),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(52));

RegRegisterMethod(TdomCustomDTDHandler,'textDeclaration',TypeInfo(_T278),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(56));

RegRegisterMethod(TdomCustomErrorHandler,'error',TypeInfo(_T279),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(EParserException),
TypeInfo(WideString)], pointer(0));

RegRegisterMethod(TdomCustomErrorHandler,'fatalError',TypeInfo(_T280),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(EParserException),
TypeInfo(WideString)], pointer(4));

RegRegisterMethod(TdomCustomErrorHandler,'warning',TypeInfo(_T281),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(EParserException),
TypeInfo(WideString)], pointer(8));

RegRegisterMethod(TdomCustomStr,'getWideChars',TypeInfo(_T282),[
TypeInfo(Integer),TypeInfo(wideChar)], pointer(0));

RegRegisterMethod(TdomCustomStr,'setWideChars',TypeInfo(_T283),[
TypeInfo(Integer),
TypeInfo(wideChar)], pointer(4));

RegisterProc(TdomCustomStr,'create',mtConstructor,TypeInfo(_T284),NoParams,Addr(TdomCustomStr.create),cRegister);

RegRegisterMethod(TdomCustomStr,'addWideChar',TypeInfo(_T285),[
TypeInfo(wideChar)], pointer(8));

RegRegisterMethod(TdomCustomStr,'addWideString',TypeInfo(_T286),[
TypeInfo(WideString)], pointer(12));

RegRegisterMethod(TdomCustomStr,'endsWith',TypeInfo(_T287),[
TypeInfo(WideString),TypeInfo(Boolean)], pointer(16));

RegRegisterMethod(TdomCustomStr,'isEqual',TypeInfo(_T288),[
TypeInfo(WideString),TypeInfo(Boolean)], pointer(20));

RegRegisterMethod(TdomCustomStr,'reset',TypeInfo(_T289),NoParams, pointer(24));

RegRegisterMethod(TdomCustomStr,'startsWith',TypeInfo(_T290),[
TypeInfo(WideString),TypeInfo(Boolean)], pointer(28));

RegRegisterMethod(TdomCustomStr,'value',TypeInfo(_T291),[TypeInfo(WideString)], pointer(32));

RegRegisterMethod(TdomCustomXMLReader,'parse',TypeInfo(_T292),[
TypeInfo(TdomCustomParser),
TypeInfo(TXmlInputSource),TypeInfo(Boolean)], pointer(0));

RegRegisterMethod(TdomDocument,'expandEntRef',TypeInfo(_T293),[
TypeInfo(TdomEntityReference),TypeInfo(Boolean)], pointer(184));

RegRegisterMethod(TdomDocument,'findNewReferenceNodes',TypeInfo(_T294),[
TypeInfo(TdomNode)], pointer(188));

RegRegisterMethod(TdomDocument,'getCodeAsString',TypeInfo(_T295),[TypeInfo(String)], pointer(192));

RegRegisterMethod(TdomDocument,'getCodeAsWideString',TypeInfo(_T296),[TypeInfo(WideString)], pointer(196));

RegRegisterMethod(TdomDocument,'getDoctype',TypeInfo(_T297),[TypeInfo(TdomDocumentType)], pointer(200));

RegRegisterMethod(TdomDocument,'getDocumentElement',TypeInfo(_T298),[TypeInfo(TdomElement)], pointer(204));

RegRegisterMethod(TdomDocument,'createEntity',TypeInfo(_T299),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomEntity)], pointer(208));

RegRegisterMethod(TdomDocument,'createNotation',TypeInfo(_T300),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomNotation)], pointer(212));

RegRegisterMethod(TdomDocument,'duplicateNode',TypeInfo(_T301),[
TypeInfo(TdomNode),
TypeInfo(Boolean),TypeInfo(TdomNode)], pointer(216));

RegRegisterMethod(TdomDocument,'initDoc',TypeInfo(_T302),[
TypeInfo(WideString)], pointer(220));

RegRegisterMethod(TdomDocument,'initDocNS',TypeInfo(_T303),[
TypeInfo(WideString),
TypeInfo(WideString)], pointer(224));

RegisterProc(TdomDocument,'create',mtConstructor,TypeInfo(_T304),[
TypeInfo(TDomImplementation)], pointer(228),cRegister);

RegRegisterMethod(TdomDocument,'clearInvalidNodeIterators',TypeInfo(_T305),NoParams, pointer(232));

RegRegisterMethod(TdomDocument,'createElement',TypeInfo(_T306),[
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(236));

RegRegisterMethod(TdomDocument,'createElementNS',TypeInfo(_T307),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(240));

RegRegisterMethod(TdomDocument,'createDocumentFragment',TypeInfo(_T308),[TypeInfo(TdomDocumentFragment)], pointer(244));

RegRegisterMethod(TdomDocument,'createTextNode',TypeInfo(_T309),[
TypeInfo(WideString),TypeInfo(TdomText)], pointer(248));

RegRegisterMethod(TdomDocument,'createComment',TypeInfo(_T310),[
TypeInfo(WideString),TypeInfo(TdomComment)], pointer(252));

RegRegisterMethod(TdomDocument,'createCDATASection',TypeInfo(_T311),[
TypeInfo(WideString),TypeInfo(TdomCDATASection)], pointer(256));

RegRegisterMethod(TdomDocument,'createProcessingInstruction',TypeInfo(_T312),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomProcessingInstruction)], pointer(260));

RegRegisterMethod(TdomDocument,'createAttribute',TypeInfo(_T313),[
TypeInfo(WideString),TypeInfo(TdomAttr)], pointer(264));

RegRegisterMethod(TdomDocument,'createAttributeNS',TypeInfo(_T314),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomAttr)], pointer(268));

RegRegisterMethod(TdomDocument,'createEntityReference',TypeInfo(_T315),[
TypeInfo(WideString),TypeInfo(TdomEntityReference)], pointer(272));

RegRegisterMethod(TdomDocument,'createDocumentType',TypeInfo(_T316),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomDocumentType)], pointer(276));

RegRegisterMethod(TdomDocument,'freeAllNodes',TypeInfo(_T317),[
TypeInfo(TdomNode)], pointer(280));

RegRegisterMethod(TdomDocument,'freeTreeWalker',TypeInfo(_T318),[
TypeInfo(TdomTreeWalker)], pointer(284));

RegRegisterMethod(TdomDocument,'getElementById',TypeInfo(_T319),[
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(288));

RegRegisterMethod(TdomDocument,'getElementsByTagName',TypeInfo(_T320),[
TypeInfo(WideString),TypeInfo(TdomNodeList)], pointer(292));

RegRegisterMethod(TdomDocument,'getElementsByTagNameNS',TypeInfo(_T321),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomNodeList)], pointer(296));

RegRegisterMethod(TdomDocument,'importNode',TypeInfo(_T322),[
TypeInfo(TdomNode),
TypeInfo(Boolean),TypeInfo(TdomNode)], pointer(300));

RegRegisterMethod(TdomDocument,'createNodeIterator',TypeInfo(_T323),[
TypeInfo(TdomNode),
TypeInfo(TdomWhatToShow),
TypeInfo(TdomNodeFilter),
TypeInfo(Boolean),TypeInfo(TdomNodeIterator)], pointer(304));

RegRegisterMethod(TdomDocument,'createTreeWalker',TypeInfo(_T324),[
TypeInfo(TdomNode),
TypeInfo(TdomWhatToShow),
TypeInfo(TdomNodeFilter),
TypeInfo(Boolean),TypeInfo(TdomTreeWalker)], pointer(308));

RegRegisterMethod(TdomDocument,'removeContentModel',TypeInfo(_T325),[TypeInfo(TdomCMObject)], pointer(312));

RegRegisterMethod(TdomDocument,'setContentModel',TypeInfo(_T326),[
TypeInfo(TdomCMObject),TypeInfo(TdomCMObject)], pointer(316));

RegRegisterMethod(TdomDocument,'validate',TypeInfo(_T327),[
TypeInfo(TdomCustomErrorHandler),
TypeInfo(TdomEntityResolveOption),TypeInfo(Boolean)], pointer(320));

RegRegisterMethod(TdomDocument,'writeCodeAsUTF8',TypeInfo(_T328),[
TypeInfo(TStream)], pointer(324));

RegRegisterMethod(TdomDocument,'writeCodeAsUTF16',TypeInfo(_T329),[
TypeInfo(TStream)], pointer(328));

RegisterProc(TdomDocumentFragment,'create',mtConstructor,TypeInfo(_T330),[
TypeInfo(TdomDocument)], pointer(184),cRegister);

RegRegisterMethod(TdomDocumentStyle,'getStyleSheets',TypeInfo(_T331),[TypeInfo(TdomStyleSheetList)], pointer(0));

RegRegisterMethod(TdomDocumentType,'getEntities',TypeInfo(_T332),[TypeInfo(TdomEntitiesNamedNodeMap)], pointer(184));

RegRegisterMethod(TdomDocumentType,'getInternalSubset',TypeInfo(_T333),[TypeInfo(WideString)], pointer(188));

RegRegisterMethod(TdomDocumentType,'getName',TypeInfo(_T334),[TypeInfo(WideString)], pointer(192));

RegRegisterMethod(TdomDocumentType,'getNotations',TypeInfo(_T335),[TypeInfo(TdomNamedNodeMap)], pointer(196));

RegRegisterMethod(TdomDocumentType,'getPublicId',TypeInfo(_T336),[TypeInfo(WideString)], pointer(200));

RegRegisterMethod(TdomDocumentType,'getSystemId',TypeInfo(_T337),[TypeInfo(WideString)], pointer(204));

RegisterProc(TdomDocumentType,'create',mtConstructor,TypeInfo(_T338),[
TypeInfo(TdomDocument),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(208),cRegister);

RegRegisterMethod(TdomDtdAnalyzer,'analyzeCM',TypeInfo(_T339),[
TypeInfo(TdomCustomCMIEObject),
TypeInfo(TdomCMObject)], pointer(48));

RegRegisterMethod(TdomDtdAnalyzer,'analyzeIntDTDStr',TypeInfo(_T340),[
TypeInfo(WideString),
TypeInfo(TdomCMObject)], pointer(52));

RegRegisterMethod(TdomDTDContentModelHandler,'insertMixedContent',TypeInfo(_T341),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomCMNode),
TypeInfo(WideString)], pointer(60));

RegRegisterMethod(TdomDTDContentModelHandler,'insertChildrenContent',TypeInfo(_T342),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomCMNode),
TypeInfo(WideString)], pointer(64));

RegRegisterMethod(TdomDTDContentModelHandler,'insertNotationOrEnumerationContent',TypeInfo(_T343),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomCMAttribute),
TypeInfo(WideString)], pointer(68));

RegRegisterMethod(TdomDTDContentModelHandler,'ResolveCharRefsAndPERefs',TypeInfo(_T344),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(Boolean)], pointer(72));

RegRegisterMethod(TdomDTDContentModelHandler,'CDataNormalization',TypeInfo(_T345),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(Boolean)], pointer(76));

RegisterProc(TdomElement,'create',mtConstructor,TypeInfo(_T346),[
TypeInfo(TdomDocument),
TypeInfo(WideString)],Addr(TdomElement.create),cRegister);

RegisterProc(TdomElement,'createNS',mtConstructor,TypeInfo(_T347),[
TypeInfo(TdomDocument),
TypeInfo(WideString),
TypeInfo(WideString)],Addr(TdomElement.createNS),cRegister);

RegRegisterMethod(TdomElement,'getTagName',TypeInfo(_T348),[TypeInfo(WideString)], pointer(184));

RegRegisterMethod(TdomElement,'getAttribute',TypeInfo(_T349),[
TypeInfo(WideString),TypeInfo(WideString)], pointer(188));

RegRegisterMethod(TdomElement,'setAttribute',TypeInfo(_T350),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomAttr)], pointer(192));

RegRegisterMethod(TdomElement,'removeAttribute',TypeInfo(_T351),[
TypeInfo(WideString),TypeInfo(TdomAttr)], pointer(196));

RegRegisterMethod(TdomElement,'getAttributeNode',TypeInfo(_T352),[
TypeInfo(WideString),TypeInfo(TdomAttr)], pointer(200));

RegRegisterMethod(TdomElement,'setAttributeNode',TypeInfo(_T353),[
TypeInfo(TdomAttr),TypeInfo(TdomAttr)], pointer(204));

RegRegisterMethod(TdomElement,'removeAttributeNode',TypeInfo(_T354),[
TypeInfo(TdomAttr),TypeInfo(TdomAttr)], pointer(208));

RegRegisterMethod(TdomElement,'getElementsByTagName',TypeInfo(_T355),[
TypeInfo(WideString),TypeInfo(TdomNodeList)], pointer(212));

RegRegisterMethod(TdomElement,'getAttributeNS',TypeInfo(_T356),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(WideString)], pointer(216));

RegRegisterMethod(TdomElement,'setAttributeNS',TypeInfo(_T357),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomAttr)], pointer(220));

RegRegisterMethod(TdomElement,'removeAttributeNS',TypeInfo(_T358),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomAttr)], pointer(224));

RegRegisterMethod(TdomElement,'getAttributeNodeNS',TypeInfo(_T359),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomAttr)], pointer(228));

RegRegisterMethod(TdomElement,'setAttributeNodeNS',TypeInfo(_T360),[
TypeInfo(TdomAttr),TypeInfo(TdomAttr)], pointer(232));

RegRegisterMethod(TdomElement,'getElementsByTagNameNS',TypeInfo(_T361),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomNodeList)], pointer(236));

RegRegisterMethod(TdomElement,'hasAttribute',TypeInfo(_T362),[
TypeInfo(WideString),TypeInfo(Boolean)], pointer(240));

RegRegisterMethod(TdomElement,'hasAttributeNS',TypeInfo(_T363),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(244));

RegisterProc(TdomElementsNodeList,'create',mtConstructor,TypeInfo(_T364),[
TypeInfo(WideString),
TypeInfo(TdomNode)], pointer(12),cRegister);

RegisterProc(TdomElementsNodeListNS,'create',mtConstructor,TypeInfo(_T365),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomNode)], pointer(12),cRegister);

RegRegisterMethod(TdomEntitiesNamedNodeMap,'resolveAfterAddition',TypeInfo(_T366),[
TypeInfo(TdomEntity)], pointer(64));

RegRegisterMethod(TdomEntitiesNamedNodeMap,'resolveAfterRemoval',TypeInfo(_T367),[
TypeInfo(TdomEntity)], pointer(68));

RegRegisterMethod(TdomEntity,'getNotationName',TypeInfo(_T368),[TypeInfo(WideString)], pointer(184));

RegisterProc(TdomEntity,'create',mtConstructor,TypeInfo(_T369),[
TypeInfo(TdomDocument),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(188),cRegister);

RegRegisterMethod(TdomEntityReference,'getCorrespondingCMEntity',TypeInfo(_T370),[TypeInfo(TdomCMEntity)], pointer(184));

RegRegisterMethod(TdomEntityReference,'getRefersToPredefinedEntity',TypeInfo(_T371),[TypeInfo(Boolean)], pointer(188));

RegRegisterMethod(TdomEntityReference,'expand',TypeInfo(_T372),[TypeInfo(Boolean)], pointer(192));

RegisterProc(TdomEntityReference,'create',mtConstructor,TypeInfo(_T373),[
TypeInfo(TdomDocument),
TypeInfo(WideString)], pointer(196),cRegister);

RegRegisterMethod(TDomImplementation,'getCMExternalObjects',TypeInfo(_T374),[TypeInfo(TdomCMNodeList)], pointer(48));

RegRegisterMethod(TDomImplementation,'getCMInternalObjects',TypeInfo(_T375),[TypeInfo(TdomCMNodeList)], pointer(52));

RegRegisterMethod(TDomImplementation,'getCMObjects',TypeInfo(_T376),[TypeInfo(TdomCMNodeList)], pointer(56));

RegRegisterMethod(TDomImplementation,'getDocuments',TypeInfo(_T377),[TypeInfo(TdomNodeList)], pointer(60));

RegRegisterMethod(TDomImplementation,'getDocumentTypes',TypeInfo(_T378),[TypeInfo(TdomNodeList)], pointer(64));

RegRegisterMethod(TDomImplementation,'clear',TypeInfo(_T379),NoParams, pointer(68));

RegRegisterMethod(TDomImplementation,'freeCMExternalObject',TypeInfo(_T380),[
TypeInfo(TdomCMExternalObject)], pointer(72));

RegRegisterMethod(TDomImplementation,'freeCMInternalObject',TypeInfo(_T381),[
TypeInfo(TdomCMInternalObject)], pointer(76));

RegRegisterMethod(TDomImplementation,'freeCMObject',TypeInfo(_T382),[
TypeInfo(TdomCMObject)], pointer(80));

RegRegisterMethod(TDomImplementation,'freeDocument',TypeInfo(_T383),[
TypeInfo(TdomDocument)], pointer(84));

RegRegisterMethod(TDomImplementation,'freeDocumentType',TypeInfo(_T384),[
TypeInfo(TdomDocumentType)], pointer(88));

RegRegisterMethod(TDomImplementation,'hasFeature',TypeInfo(_T385),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(92));

RegRegisterMethod(TDomImplementation,'createCMExternalObject',TypeInfo(_T386),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMExternalObject)], pointer(96));

RegRegisterMethod(TDomImplementation,'createCMInternalObject',TypeInfo(_T387),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMInternalObject)], pointer(100));

RegRegisterMethod(TDomImplementation,'createCMObject',TypeInfo(_T388),[TypeInfo(TdomCMObject)], pointer(104));

RegRegisterMethod(TDomImplementation,'createDocument',TypeInfo(_T389),[
TypeInfo(WideString),
TypeInfo(TdomDocumentType),TypeInfo(TdomDocument)], pointer(108));

RegRegisterMethod(TDomImplementation,'createDocumentNS',TypeInfo(_T390),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomDocumentType),TypeInfo(TdomDocument)], pointer(112));

RegRegisterMethod(TDomImplementation,'supportsDocumentFormat',TypeInfo(_T393),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(124));

RegRegisterMethod(TdomMediaList,'getCssText',TypeInfo(_T395),[TypeInfo(WideString)], pointer(0));

RegRegisterMethod(TdomMediaList,'setCssText',TypeInfo(_T396),[
TypeInfo(WideString)], pointer(4));

RegRegisterMethod(TdomMediaList,'getLength',TypeInfo(_T397),[TypeInfo(Integer)], pointer(8));

RegRegisterMethod(TdomMediaList,'item',TypeInfo(_T398),[
TypeInfo(Integer),TypeInfo(TdomStyleSheet)], pointer(12));

RegRegisterMethod(TdomMediaList,'Delete',TypeInfo(_T399),[
TypeInfo(WideString)], pointer(16));

RegRegisterMethod(TdomMediaList,'append',TypeInfo(_T400),[
TypeInfo(WideString)], pointer(20));

RegRegisterMethod(TdomNamedCMAttributeMap,'getLength',TypeInfo(_T401),[TypeInfo(Integer)], pointer(0));

RegisterProc(TdomNamedCMAttributeMap,'create',mtConstructor,TypeInfo(_T402),[
TypeInfo(TdomCMObject)],Addr(TdomNamedCMAttributeMap.create),cRegister);

RegRegisterMethod(TdomNamedCMAttributeMap,'item',TypeInfo(_T403),[
TypeInfo(Integer),TypeInfo(TdomCMAttribute)], pointer(4));

RegRegisterMethod(TdomNamedCMAttributeMap,'getNamedItem',TypeInfo(_T404),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomCMAttribute)], pointer(8));

RegRegisterMethod(TdomNamedCMAttributeMap,'appendNamedItem',TypeInfo(_T405),[
TypeInfo(TdomCMAttribute),TypeInfo(Boolean)], pointer(12));

RegRegisterMethod(TdomNamedCMAttributeMap,'removeLastItem',TypeInfo(_T406),[TypeInfo(TdomCMAttribute)], pointer(16));

RegRegisterMethod(TdomNamedCMEntityMap,'getLength',TypeInfo(_T407),[TypeInfo(Integer)], pointer(0));

RegisterProc(TdomNamedCMEntityMap,'create',mtConstructor,TypeInfo(_T408),[
TypeInfo(TdomCMObject)],Addr(TdomNamedCMEntityMap.create),cRegister);

RegRegisterMethod(TdomNamedCMEntityMap,'item',TypeInfo(_T409),[
TypeInfo(Integer),TypeInfo(TdomCMEntity)], pointer(4));

RegRegisterMethod(TdomNamedCMEntityMap,'getNamedItem',TypeInfo(_T410),[
TypeInfo(WideString),TypeInfo(TdomCMEntity)], pointer(8));

RegRegisterMethod(TdomNamedCMEntityMap,'appendNamedItem',TypeInfo(_T411),[
TypeInfo(TdomCMEntity),TypeInfo(Boolean)], pointer(12));

RegRegisterMethod(TdomNamedCMEntityMap,'removeLastItem',TypeInfo(_T412),[TypeInfo(TdomCMEntity)], pointer(16));

RegRegisterMethod(TdomNamedCMNodeMap,'getOwnerNode',TypeInfo(_T413),[TypeInfo(TdomCMNode)], pointer(12));

RegRegisterMethod(TdomNamedCMNodeMap,'getNamedIndex',TypeInfo(_T414),[
TypeInfo(WideString),TypeInfo(Integer)], pointer(16));

RegRegisterMethod(TdomNamedCMNodeMap,'removeItem',TypeInfo(_T415),[
TypeInfo(TdomCMNode),TypeInfo(TdomCMNode)], pointer(20));

RegRegisterMethod(TdomNamedCMNodeMap,'setIsReadonly',TypeInfo(_T416),[
TypeInfo(Boolean)], pointer(24));

RegisterProc(TdomNamedCMNodeMap,'create',mtConstructor,TypeInfo(_T417),[
TypeInfo(TdomCMNode),
TypeInfo(TdomCMNode),
TypeInfo(TList),
TypeInfo(TdomCMNodeTypeSet)], pointer(28),cRegister);

RegRegisterMethod(TdomNamedCMNodeMap,'getNamedItem',TypeInfo(_T418),[
TypeInfo(WideString),TypeInfo(TdomCMNode)], pointer(32));

RegRegisterMethod(TdomNamedCMNodeMap,'setNamedItem',TypeInfo(_T419),[
TypeInfo(TdomCMNode),TypeInfo(TdomCMNode)], pointer(36));

RegRegisterMethod(TdomNamedCMNodeMap,'removeNamedItem',TypeInfo(_T420),[
TypeInfo(WideString),TypeInfo(TdomCMNode)], pointer(40));

RegRegisterMethod(TdomNamedNodeMap,'getOwnerNode',TypeInfo(_T421),[TypeInfo(TdomNode)], pointer(12));

RegRegisterMethod(TdomNamedNodeMap,'getNamespaceAware',TypeInfo(_T422),[TypeInfo(Boolean)], pointer(16));

RegRegisterMethod(TdomNamedNodeMap,'setNamespaceAware',TypeInfo(_T423),[
TypeInfo(Boolean)], pointer(20));

RegRegisterMethod(TdomNamedNodeMap,'getNamedIndex',TypeInfo(_T424),[
TypeInfo(WideString),TypeInfo(Integer)], pointer(24));

RegRegisterMethod(TdomNamedNodeMap,'removeItem',TypeInfo(_T425),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(28));

RegRegisterMethod(TdomNamedNodeMap,'setIsReadonly',TypeInfo(_T426),[
TypeInfo(Boolean)], pointer(32));

RegisterProc(TdomNamedNodeMap,'create',mtConstructor,TypeInfo(_T427),[
TypeInfo(TdomNode),
TypeInfo(TdomNode),
TypeInfo(TList),
TypeInfo(TdomNodeTypeSet)], pointer(36),cRegister);

RegRegisterMethod(TdomNamedNodeMap,'getNamedItem',TypeInfo(_T428),[
TypeInfo(WideString),TypeInfo(TdomNode)], pointer(40));

RegRegisterMethod(TdomNamedNodeMap,'setNamedItem',TypeInfo(_T429),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(44));

RegRegisterMethod(TdomNamedNodeMap,'removeNamedItem',TypeInfo(_T430),[
TypeInfo(WideString),TypeInfo(TdomNode)], pointer(48));

RegRegisterMethod(TdomNamedNodeMap,'getNamedItemNS',TypeInfo(_T431),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomNode)], pointer(52));

RegRegisterMethod(TdomNamedNodeMap,'setNamedItemNS',TypeInfo(_T432),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(56));

RegRegisterMethod(TdomNamedNodeMap,'removeNamedItemNS',TypeInfo(_T433),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomNode)], pointer(60));

RegRegisterMethod(TdomNameValueList,'getLength',TypeInfo(_T434),[TypeInfo(Integer)], pointer(0));

RegRegisterMethod(TdomNameValueList,'getCapacity',TypeInfo(_T435),[TypeInfo(Integer)], pointer(4));

RegRegisterMethod(TdomNameValueList,'getNames',TypeInfo(_T436),[
TypeInfo(Integer),TypeInfo(WideString)], pointer(8));

RegRegisterMethod(TdomNameValueList,'getValues',TypeInfo(_T437),[
TypeInfo(Integer),TypeInfo(WideString)], pointer(12));

RegRegisterMethod(TdomNameValueList,'setCapacity',TypeInfo(_T438),[
TypeInfo(Integer)], pointer(16));

RegisterProc(TdomNameValueList,'create',mtConstructor,TypeInfo(_T439),NoParams,Addr(TdomNameValueList.create),cRegister);

RegRegisterMethod(TdomNameValueList,'add',TypeInfo(_T440),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Integer)], pointer(20));

RegRegisterMethod(TdomNameValueList,'clear',TypeInfo(_T441),NoParams, pointer(24));

RegRegisterMethod(TdomNameValueList,'Delete',TypeInfo(_T442),[
TypeInfo(Integer)], pointer(28));

RegRegisterMethod(TdomNameValueList,'exchange',TypeInfo(_T443),[
TypeInfo(Integer),
TypeInfo(Integer)], pointer(32));

RegRegisterMethod(TdomNameValueList,'indexOf',TypeInfo(_T444),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Integer)], pointer(36));

RegRegisterMethod(TdomNameValueList,'indexOfName',TypeInfo(_T445),[
TypeInfo(WideString),TypeInfo(Integer)], pointer(40));

RegRegisterMethod(TdomNameValueList,'insert',TypeInfo(_T446),[
TypeInfo(Integer),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(44));

RegRegisterMethod(TdomNode,'makeChildrenReadonly',TypeInfo(_T447),NoParams, pointer(0));

RegRegisterMethod(TdomNode,'refersToExternalEntity',TypeInfo(_T448),[TypeInfo(Boolean)], pointer(4));

RegRegisterMethod(TdomNode,'refersToUnparsedEntity',TypeInfo(_T449),[TypeInfo(Boolean)], pointer(8));

RegRegisterMethod(TdomNode,'hasEntRef',TypeInfo(_T450),[
TypeInfo(WideString),TypeInfo(Boolean)], pointer(12));

RegRegisterMethod(TdomNode,'addEntRefSubtree',TypeInfo(_T451),[
TypeInfo(WideString)], pointer(16));

RegRegisterMethod(TdomNode,'removeEntRefSubtree',TypeInfo(_T452),[
TypeInfo(WideString)], pointer(20));

RegRegisterMethod(TdomNode,'getNodeName',TypeInfo(_T453),[TypeInfo(WideString)], pointer(24));

RegRegisterMethod(TdomNode,'getNodeValue',TypeInfo(_T454),[TypeInfo(WideString)], pointer(28));

RegRegisterMethod(TdomNode,'setNodeValue',TypeInfo(_T455),[
TypeInfo(WideString)], pointer(32));

RegRegisterMethod(TdomNode,'getNodeType',TypeInfo(_T456),[TypeInfo(TdomNodeType)], pointer(36));

RegRegisterMethod(TdomNode,'getAttributes',TypeInfo(_T457),[TypeInfo(TdomNamedNodeMap)], pointer(40));

RegRegisterMethod(TdomNode,'getParentNode',TypeInfo(_T458),[TypeInfo(TdomNode)], pointer(44));

RegRegisterMethod(TdomNode,'getChildNodes',TypeInfo(_T459),[TypeInfo(TdomNodeList)], pointer(48));

RegRegisterMethod(TdomNode,'getFirstChild',TypeInfo(_T460),[TypeInfo(TdomNode)], pointer(52));

RegRegisterMethod(TdomNode,'getLastChild',TypeInfo(_T461),[TypeInfo(TdomNode)], pointer(56));

RegRegisterMethod(TdomNode,'getPreviousSibling',TypeInfo(_T462),[TypeInfo(TdomNode)], pointer(60));

RegRegisterMethod(TdomNode,'getNextSibling',TypeInfo(_T463),[TypeInfo(TdomNode)], pointer(64));

RegRegisterMethod(TdomNode,'getDocument',TypeInfo(_T464),[TypeInfo(TdomDocument)], pointer(68));

RegRegisterMethod(TdomNode,'getCode',TypeInfo(_T465),[TypeInfo(WideString)], pointer(72));

RegRegisterMethod(TdomNode,'getTextContent',TypeInfo(_T466),[TypeInfo(WideString)], pointer(76));

RegRegisterMethod(TdomNode,'setIsReadonly',TypeInfo(_T467),[
TypeInfo(Boolean)], pointer(80));

RegRegisterMethod(TdomNode,'setPrefix',TypeInfo(_T468),[
TypeInfo(WideString)], pointer(84));

RegRegisterMethod(TdomNode,'validate2',TypeInfo(_T469),[
TypeInfo(TdomCustomErrorHandler),TypeInfo(Boolean)], pointer(88));

RegRegisterMethod(TdomNode,'validateIDREFS',TypeInfo(_T470),[
TypeInfo(TdomCustomErrorHandler),TypeInfo(Boolean)], pointer(92));

RegisterProc(TdomNode,'create',mtConstructor,TypeInfo(_T471),[
TypeInfo(TdomDocument)],Addr(TdomNode.create),cRegister);

RegRegisterMethod(TdomNode,'appendChild',TypeInfo(_T472),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(96));

RegRegisterMethod(TdomNode,'clear',TypeInfo(_T473),NoParams, pointer(100));

RegRegisterMethod(TdomNode,'cloneNode',TypeInfo(_T474),[
TypeInfo(Boolean),TypeInfo(TdomNode)], pointer(104));

RegRegisterMethod(TdomNode,'getFirstChildElement',TypeInfo(_T475),[
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(108));

RegRegisterMethod(TdomNode,'getFirstChildElementNS',TypeInfo(_T476),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(112));

RegRegisterMethod(TdomNode,'getLastChildElement',TypeInfo(_T477),[
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(116));

RegRegisterMethod(TdomNode,'getLastChildElementNS',TypeInfo(_T478),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(120));

RegRegisterMethod(TdomNode,'getNextSiblingElement',TypeInfo(_T479),[
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(124));

RegRegisterMethod(TdomNode,'getNextSiblingElementNS',TypeInfo(_T480),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(128));

RegRegisterMethod(TdomNode,'getParentElement',TypeInfo(_T481),[
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(132));

RegRegisterMethod(TdomNode,'getParentElementNS',TypeInfo(_T482),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(136));

RegRegisterMethod(TdomNode,'getPreviousSiblingElement',TypeInfo(_T483),[
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(140));

RegRegisterMethod(TdomNode,'getPreviousSiblingElementNS',TypeInfo(_T484),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomElement)], pointer(144));

RegRegisterMethod(TdomNode,'hasChildNodes',TypeInfo(_T485),[TypeInfo(Boolean)], pointer(148));

RegRegisterMethod(TdomNode,'insertBefore',TypeInfo(_T486),[
TypeInfo(TdomNode),
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(152));

RegRegisterMethod(TdomNode,'isAncestor',TypeInfo(_T487),[
TypeInfo(TdomNode),TypeInfo(Boolean)], pointer(156));

RegRegisterMethod(TdomNode,'normalize',TypeInfo(_T488),NoParams, pointer(160));

RegRegisterMethod(TdomNode,'removeChild',TypeInfo(_T489),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(164));

RegRegisterMethod(TdomNode,'replaceChild',TypeInfo(_T490),[
TypeInfo(TdomNode),
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(168));

RegRegisterMethod(TdomNode,'resolveEntityReferences',TypeInfo(_T491),[
TypeInfo(TdomEntityResolveOption),TypeInfo(Boolean)], pointer(172));

RegRegisterMethod(TdomNode,'supports',TypeInfo(_T492),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(176));

RegRegisterMethod(TdomNode,'writeCode',TypeInfo(_T493),[
TypeInfo(TStream)], pointer(180));

RegRegisterMethod(TdomNodeFilter,'acceptNode',TypeInfo(_T494),[
TypeInfo(TdomNode),TypeInfo(TdomFilterResult)], pointer(0));

RegRegisterMethod(TdomNodeIterator,'findNewReferenceNode',TypeInfo(_T495),[
TypeInfo(TdomNode)], pointer(0));

RegRegisterMethod(TdomNodeIterator,'findNextNode',TypeInfo(_T496),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(4));

RegRegisterMethod(TdomNodeIterator,'findPreviousNode',TypeInfo(_T497),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(8));

RegisterProc(TdomNodeIterator,'create',mtConstructor,TypeInfo(_T498),[
TypeInfo(TdomNode),
TypeInfo(TdomWhatToShow),
TypeInfo(TdomNodeFilter),
TypeInfo(Boolean)], pointer(12),cRegister);

RegRegisterMethod(TdomNodeIterator,'detach',TypeInfo(_T499),NoParams, pointer(16));

RegRegisterMethod(TdomNodeIterator,'nextNode',TypeInfo(_T500),[TypeInfo(TdomNode)], pointer(20));

RegRegisterMethod(TdomNodeIterator,'previousNode',TypeInfo(_T501),[TypeInfo(TdomNode)], pointer(24));

RegRegisterMethod(TdomNodeList,'getLength',TypeInfo(_T502),[TypeInfo(Integer)], pointer(0));

RegRegisterMethod(TdomNodeList,'indexOf',TypeInfo(_T503),[
TypeInfo(TdomNode),TypeInfo(Integer)], pointer(4));

RegisterProc(TdomNodeList,'create',mtConstructor,TypeInfo(_T504),[
TypeInfo(TList)],Addr(TdomNodeList.create),cRegister);

RegRegisterMethod(TdomNodeList,'item',TypeInfo(_T505),[
TypeInfo(Integer),TypeInfo(TdomNode)], pointer(8));

RegRegisterMethod(TdomNotation,'getPublicId',TypeInfo(_T506),[TypeInfo(WideString)], pointer(184));

RegRegisterMethod(TdomNotation,'getSystemId',TypeInfo(_T507),[TypeInfo(WideString)], pointer(188));

RegisterProc(TdomNotation,'create',mtConstructor,TypeInfo(_T508),[
TypeInfo(TdomDocument),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(192),cRegister);

RegRegisterMethod(TdomProcessingInstruction,'getTarget',TypeInfo(_T509),[TypeInfo(WideString)], pointer(184));

RegRegisterMethod(TdomProcessingInstruction,'getData',TypeInfo(_T510),[TypeInfo(WideString)], pointer(188));

RegRegisterMethod(TdomProcessingInstruction,'setData',TypeInfo(_T511),[
TypeInfo(WideString)], pointer(192));

RegisterProc(TdomProcessingInstruction,'create',mtConstructor,TypeInfo(_T512),[
TypeInfo(TdomDocument),
TypeInfo(WideString)], pointer(196),cRegister);

RegRegisterMethod(TdomSpecialNodeList,'getNamedIndex',TypeInfo(_T513),[
TypeInfo(WideString),TypeInfo(Integer)], pointer(12));

RegRegisterMethod(TdomSpecialNodeList,'getNamedItem',TypeInfo(_T514),[
TypeInfo(WideString),TypeInfo(TdomNode)], pointer(16));

RegisterProc(TdomSpecialNodeList,'create',mtConstructor,TypeInfo(_T515),[
TypeInfo(TList),
TypeInfo(TdomNodeTypeSet)], pointer(20),cRegister);

RegRegisterMethod(TdomStandardContentModelReader,'parse',TypeInfo(_T516),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomCustomCMIEObject),TypeInfo(Boolean)], pointer(0));

RegisterProc(TdomStandardDocBuilder,'create',mtConstructor,TypeInfo(_T517),NoParams,Addr(TdomStandardDocBuilder.create),cRegister);

RegRegisterMethod(TdomStandardDocXMLReader,'writeXmlDeclaration',TypeInfo(_T518),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(4));

RegRegisterMethod(TdomStandardDocXMLReader,'writeProcessingInstruction',TypeInfo(_T519),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(8));

RegRegisterMethod(TdomStandardDocXMLReader,'writeComment',TypeInfo(_T520),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(12));

RegRegisterMethod(TdomStandardDocXMLReader,'writeCDATA',TypeInfo(_T521),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(16));

RegRegisterMethod(TdomStandardDocXMLReader,'writePCDATA',TypeInfo(_T522),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(20));

RegRegisterMethod(TdomStandardDocXMLReader,'writeStartElement',TypeInfo(_T523),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(24));

RegRegisterMethod(TdomStandardDocXMLReader,'writeEndElement',TypeInfo(_T524),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(28));

RegRegisterMethod(TdomStandardDocXMLReader,'writeEmptyElement',TypeInfo(_T525),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(32));

RegRegisterMethod(TdomStandardDocXMLReader,'writeCharRef',TypeInfo(_T526),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(36));

RegRegisterMethod(TdomStandardDocXMLReader,'writeEntityRef',TypeInfo(_T527),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(40));

RegRegisterMethod(TdomStandardDocXMLReader,'writeDoctype',TypeInfo(_T528),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(44));

RegisterProc(TdomStandardErrorHandler,'create',mtConstructor,TypeInfo(_T529),NoParams,Addr(TdomStandardErrorHandler.create),cRegister);

RegRegisterMethod(TdomStandardErrorHandler,'clearErrorList',TypeInfo(_T530),NoParams, pointer(12));

RegRegisterMethod(TdomStandardExtSubsetXMLReader,'includeAsPE',TypeInfo(_T531),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(TXmlInputSource),TypeInfo(WideString)], pointer(32));

RegRegisterMethod(TdomStandardExtSubsetXMLReader,'includeInLiteral',TypeInfo(_T532),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(TXmlInputSource),TypeInfo(WideString)], pointer(36));

RegRegisterMethod(TdomStandardExtSubsetXMLReader,'writeTextDeclaration',TypeInfo(_T533),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(40));

RegRegisterMethod(TdomStandardExtSubsetXMLReader,'writeConditionalSection',TypeInfo(_T534),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(44));

RegRegisterMethod(TdomStandardIntSubsetBuilder,'ResolveCharRefsAndPERefs',TypeInfo(_T535),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(Boolean)], pointer(60));

RegRegisterMethod(TdomStandardIntSubsetBuilder,'insertMixedContent',TypeInfo(_T536),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomCMNode),
TypeInfo(WideString)], pointer(64));

RegRegisterMethod(TdomStandardIntSubsetBuilder,'insertChildrenContent',TypeInfo(_T537),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomCMNode),
TypeInfo(WideString)], pointer(68));

RegRegisterMethod(TdomStandardIntSubsetBuilder,'insertNotationOrEnumerationContent',TypeInfo(_T538),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomCMAttrDefinition),
TypeInfo(WideString)], pointer(72));

RegRegisterMethod(TdomStandardIntSubsetBuilder,'setReferenceNode',TypeInfo(_T539),[
TypeInfo(TdomCMNode)], pointer(76));

RegisterProc(TdomStandardIntSubsetBuilder,'create',mtConstructor,TypeInfo(_T540),NoParams, pointer(80),cRegister);

RegRegisterMethod(TdomStandardIntSubsetXMLReader,'writeProcessingInstruction',TypeInfo(_T541),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(4));

RegRegisterMethod(TdomStandardIntSubsetXMLReader,'writeComment',TypeInfo(_T542),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(8));

RegRegisterMethod(TdomStandardIntSubsetXMLReader,'writeParameterEntityRef',TypeInfo(_T543),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(12));

RegRegisterMethod(TdomStandardIntSubsetXMLReader,'writeEntityDeclaration',TypeInfo(_T544),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(16));

RegRegisterMethod(TdomStandardIntSubsetXMLReader,'writeElementDeclaration',TypeInfo(_T545),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(20));

RegRegisterMethod(TdomStandardIntSubsetXMLReader,'writeAttributeDeclaration',TypeInfo(_T546),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(24));

RegRegisterMethod(TdomStandardIntSubsetXMLReader,'writeNotationDeclaration',TypeInfo(_T547),[
TypeInfo(TdomCustomParser),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)], pointer(28));

RegRegisterMethod(TdomStandardLocator,'getPublicId',TypeInfo(_T548),[TypeInfo(WideString)], pointer(0));

RegRegisterMethod(TdomStandardLocator,'getSystemId',TypeInfo(_T549),[TypeInfo(WideString)], pointer(4));

RegRegisterMethod(TdomStandardLocator,'evaluate',TypeInfo(_T550),[
TypeInfo(wideChar)], pointer(8));

RegisterProc(TdomStandardLocator,'create',mtConstructor,TypeInfo(_T551),[
TypeInfo(TXmlInputSource)], pointer(12),cRegister);

RegRegisterMethod(TdomStandardLocator,'pieceEnd',TypeInfo(_T552),NoParams, pointer(16));

RegRegisterMethod(TdomStandardLocator,'pieceStart',TypeInfo(_T553),NoParams, pointer(20));

RegRegisterMethod(TdomStandardLocator,'reset',TypeInfo(_T554),NoParams, pointer(24));

RegRegisterMethod(TdomStyleSheet,'getStyleSheetType',TypeInfo(_T555),[TypeInfo(WideString)], pointer(0));

RegRegisterMethod(TdomStyleSheet,'getDisabled',TypeInfo(_T556),[TypeInfo(Boolean)], pointer(4));

RegRegisterMethod(TdomStyleSheet,'setDisabled',TypeInfo(_T557),[
TypeInfo(Boolean)], pointer(8));

RegRegisterMethod(TdomStyleSheet,'getOwnerNode',TypeInfo(_T558),[TypeInfo(TdomNode)], pointer(12));

RegRegisterMethod(TdomStyleSheet,'getParentStyleSheet',TypeInfo(_T559),[TypeInfo(TdomStyleSheet)], pointer(16));

RegRegisterMethod(TdomStyleSheet,'getHref',TypeInfo(_T560),[TypeInfo(WideString)], pointer(20));

RegRegisterMethod(TdomStyleSheet,'getTitle',TypeInfo(_T561),[TypeInfo(WideString)], pointer(24));

RegRegisterMethod(TdomStyleSheet,'getMedia',TypeInfo(_T562),[TypeInfo(TdomMediaList)], pointer(28));

RegRegisterMethod(TdomStyleSheetList,'getLength',TypeInfo(_T563),[TypeInfo(Integer)], pointer(0));

RegRegisterMethod(TdomStyleSheetList,'item',TypeInfo(_T564),[
TypeInfo(Integer),TypeInfo(TdomStyleSheet)], pointer(4));

RegRegisterMethod(TdomText,'getIsWhitespaceInElementContent',TypeInfo(_T565),[TypeInfo(Boolean)], pointer(220));

RegRegisterMethod(TdomText,'getLiteralValue',TypeInfo(_T566),[TypeInfo(WideString)], pointer(224));

RegRegisterMethod(TdomText,'splitText',TypeInfo(_T567),[
TypeInfo(Integer),TypeInfo(TdomText)], pointer(228));

RegRegisterMethod(TdomTreeWalker,'getCurrentNode',TypeInfo(_T568),[TypeInfo(TdomNode)], pointer(0));

RegRegisterMethod(TdomTreeWalker,'setCurrentNode',TypeInfo(_T569),[
TypeInfo(TdomNode)], pointer(4));

RegRegisterMethod(TdomTreeWalker,'findNextSibling',TypeInfo(_T570),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(8));

RegRegisterMethod(TdomTreeWalker,'findPreviousSibling',TypeInfo(_T571),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(12));

RegRegisterMethod(TdomTreeWalker,'findParentNode',TypeInfo(_T572),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(16));

RegRegisterMethod(TdomTreeWalker,'findFirstChild',TypeInfo(_T573),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(20));

RegRegisterMethod(TdomTreeWalker,'findLastChild',TypeInfo(_T574),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(24));

RegRegisterMethod(TdomTreeWalker,'findNextNode',TypeInfo(_T575),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(28));

RegRegisterMethod(TdomTreeWalker,'findPreviousNode',TypeInfo(_T576),[
TypeInfo(TdomNode),TypeInfo(TdomNode)], pointer(32));

RegisterProc(TdomTreeWalker,'create',mtConstructor,TypeInfo(_T577),[
TypeInfo(TdomNode),
TypeInfo(TdomWhatToShow),
TypeInfo(TdomNodeFilter),
TypeInfo(Boolean)], pointer(36),cRegister);

RegRegisterMethod(TdomTreeWalker,'parentNode',TypeInfo(_T578),[TypeInfo(TdomNode)], pointer(40));

RegRegisterMethod(TdomTreeWalker,'firstChild',TypeInfo(_T579),[TypeInfo(TdomNode)], pointer(44));

RegRegisterMethod(TdomTreeWalker,'lastChild',TypeInfo(_T580),[TypeInfo(TdomNode)], pointer(48));

RegRegisterMethod(TdomTreeWalker,'previousSibling',TypeInfo(_T581),[TypeInfo(TdomNode)], pointer(52));

RegRegisterMethod(TdomTreeWalker,'nextSibling',TypeInfo(_T582),[TypeInfo(TdomNode)], pointer(56));

RegRegisterMethod(TdomTreeWalker,'nextNode',TypeInfo(_T583),[TypeInfo(TdomNode)], pointer(60));

RegRegisterMethod(TdomTreeWalker,'previousNode',TypeInfo(_T584),[TypeInfo(TdomNode)], pointer(64));

RegRegisterMethod(TdomWideStringStream,'setCapacity',TypeInfo(_T585),[
TypeInfo(Longint)], pointer(28));

RegisterProc(TdomWideStringStream,'createFromString',mtConstructor,TypeInfo(_T586),[
TypeInfo(WideString)],Addr(TdomWideStringStream.createFromString),cRegister);

RegRegisterMethod(TdomWideStringStream,'readString',TypeInfo(_T587),[
TypeInfo(Longint),TypeInfo(WideString)],Addr(TdomWideStringStream.readString));

RegRegisterMethod(TdomWideStringStream,'writeString',TypeInfo(_T588),[
TypeInfo(WideString)],Addr(TdomWideStringStream.writeString));

RegRegisterMethod(TXmlCustomContentHandler,'parserErrorFactory',TypeInfo(_T589),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(EParserException),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(180));

RegRegisterMethod(TXmlCustomDTDHandler,'parserErrorFactory',TypeInfo(_T590),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(EParserException),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(180));

RegRegisterMethod(TXmlCustomHandler,'sendErrorNotification',TypeInfo(_T591),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TXmlParserError)], pointer(48));

RegRegisterMethod(TXmlCustomHandler,'error',TypeInfo(_T592),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TXmlParserError)], pointer(52));

RegRegisterMethod(TXmlCustomHandler,'fatalError',TypeInfo(_T593),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TXmlParserError)], pointer(56));

RegRegisterMethod(TXmlCustomHandler,'warning',TypeInfo(_T594),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TXmlParserError)], pointer(60));

RegRegisterMethod(TXmlCustomHandler,'CDATA',TypeInfo(_T595),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(64));

RegRegisterMethod(TXmlCustomHandler,'charRef',TypeInfo(_T596),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(68));

RegRegisterMethod(TXmlCustomHandler,'comment',TypeInfo(_T597),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(72));

RegRegisterMethod(TXmlCustomHandler,'docType',TypeInfo(_T598),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(76));

RegRegisterMethod(TXmlCustomHandler,'endDocument',TypeInfo(_T599),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),TypeInfo(TXmlParserError)], pointer(80));

RegRegisterMethod(TXmlCustomHandler,'endElement',TypeInfo(_T600),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(84));

RegRegisterMethod(TXmlCustomHandler,'endPrefixMapping',TypeInfo(_T601),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(88));

RegRegisterMethod(TXmlCustomHandler,'entityRef',TypeInfo(_T602),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(92));

RegRegisterMethod(TXmlCustomHandler,'PCDATA',TypeInfo(_T603),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(96));

RegRegisterMethod(TXmlCustomHandler,'processingInstruction',TypeInfo(_T604),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(100));

RegRegisterMethod(TXmlCustomHandler,'skippedEntity',TypeInfo(_T605),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(104));

RegRegisterMethod(TXmlCustomHandler,'startDocument',TypeInfo(_T606),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(108));

RegRegisterMethod(TXmlCustomHandler,'startElement',TypeInfo(_T607),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomNameValueList),TypeInfo(TXmlParserError)], pointer(112));

RegRegisterMethod(TXmlCustomHandler,'startPrefixMapping',TypeInfo(_T608),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(116));

RegRegisterMethod(TXmlCustomHandler,'xmlDeclaration',TypeInfo(_T609),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(120));

RegRegisterMethod(TXmlCustomHandler,'attributeDefinition',TypeInfo(_T610),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(124));

RegRegisterMethod(TXmlCustomHandler,'conditionalSection',TypeInfo(_T611),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(128));

RegRegisterMethod(TXmlCustomHandler,'DTDcomment',TypeInfo(_T612),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(132));

RegRegisterMethod(TXmlCustomHandler,'DTDprocessingInstruction',TypeInfo(_T613),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(136));

RegRegisterMethod(TXmlCustomHandler,'elementTypeDeclaration',TypeInfo(_T614),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(140));

RegRegisterMethod(TXmlCustomHandler,'endAttListDeclaration',TypeInfo(_T615),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),TypeInfo(TXmlParserError)], pointer(144));

RegRegisterMethod(TXmlCustomHandler,'endDtd',TypeInfo(_T616),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),TypeInfo(TXmlParserError)], pointer(148));

RegRegisterMethod(TXmlCustomHandler,'entityDeclaration',TypeInfo(_T617),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(152));

RegRegisterMethod(TXmlCustomHandler,'notationDeclaration',TypeInfo(_T618),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(156));

RegRegisterMethod(TXmlCustomHandler,'parameterEntityDeclaration',TypeInfo(_T619),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(160));

RegRegisterMethod(TXmlCustomHandler,'parameterEntityRef',TypeInfo(_T620),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(164));

RegRegisterMethod(TXmlCustomHandler,'startAttListDeclaration',TypeInfo(_T621),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(168));

RegRegisterMethod(TXmlCustomHandler,'startDtd',TypeInfo(_T622),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(172));

RegRegisterMethod(TXmlCustomHandler,'textDeclaration',TypeInfo(_T623),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(176));

RegRegisterMethod(TXmlCustomReader,'sendErrorNotification',TypeInfo(_T624),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TXmlParserError)], pointer(48));

RegRegisterMethod(TXmlCustomReader,'parserErrorFactory',TypeInfo(_T625),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(EParserException),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(52));

RegRegisterMethod(TXmlCustomReader,'error',TypeInfo(_T626),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TXmlParserError)], pointer(56));

RegRegisterMethod(TXmlCustomReader,'fatalError',TypeInfo(_T627),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TXmlParserError)], pointer(60));

RegRegisterMethod(TXmlCustomReader,'warning',TypeInfo(_T628),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TXmlParserError)], pointer(64));

RegRegisterMethod(TXmlHandlers,'GetItem',TypeInfo(_T629),[
TypeInfo(Integer),TypeInfo(TXmlHandlerItem)], pointer(40));

RegRegisterMethod(TXmlHandlers,'SetItem',TypeInfo(_T630),[
TypeInfo(Integer),
TypeInfo(TXmlHandlerItem)], pointer(44));

RegisterProc(TXmlHandlers,'create',mtConstructor,TypeInfo(_T631),[
TypeInfo(TXmlDistributor)],Addr(TXmlHandlers.create),cRegister);

RegRegisterMethod(TXmlHandlers,'add',TypeInfo(_T632),[TypeInfo(TXmlHandlerItem)],Addr(TXmlHandlers.add));

RegRegisterMethod(TXmlHandlers,'FindHandlerItem',TypeInfo(_T633),[
TypeInfo(TXmlCustomHandler),TypeInfo(TXmlHandlerItem)],Addr(TXmlHandlers.FindHandlerItem));

RegRegisterMethod(TXmlInputSource,'getEncodingType',TypeInfo(_T634),[TypeInfo(TdomEncodingType)], pointer(0));

RegRegisterMethod(TXmlInputSource,'getRootName',TypeInfo(_T635),[TypeInfo(WideString)], pointer(4));

RegRegisterMethod(TXmlInputSource,'getStreamAsWideString',TypeInfo(_T636),[TypeInfo(WideString)], pointer(8));

RegRegisterMethod(TXmlInputSource,'skipTextDecl',TypeInfo(_T637),[
TypeInfo(TdomStandardLocator)], pointer(12));

RegRegisterMethod(TXmlInputSource,'getNextWideChar2',TypeInfo(_T638),[
TypeInfo(wideChar),
TypeInfo(TdomStandardLocator),TypeInfo(Boolean)], pointer(16));

RegRegisterMethod(TXmlInputSource,'reset2',TypeInfo(_T639),[
TypeInfo(TdomStandardLocator)], pointer(20));

RegisterProc(TXmlInputSource,'create',mtConstructor,TypeInfo(_T640),[
TypeInfo(TStream),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(24),cRegister);

RegRegisterMethod(TXmlInputSource,'getNextWideChar',TypeInfo(_T641),[
TypeInfo(wideChar),TypeInfo(Boolean)], pointer(28));

RegRegisterMethod(TXmlInputSource,'reset',TypeInfo(_T642),NoParams, pointer(32));

RegRegisterMethod(TXmlMemoryStream,'setPointer',TypeInfo(_T643),[
TypeInfoPointer,
TypeInfo(Longint)],Addr(TXmlMemoryStream.setPointer));

RegisterProc(TXmlParserError,'create',mtConstructor,TypeInfo(_T644),[
TypeInfo(EParserException),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)], pointer(0),cRegister);

RegRegisterMethod(TXmlParserError,'getErrorStr',TypeInfo(_T645),[
TypeInfo(TXmlParserLanguage),TypeInfo(WideString)], pointer(4));

RegRegisterMethod(TXmlSourceCode,'calculatePieceOffset',TypeInfo(_T646),[
TypeInfo(Integer)], pointer(16));

RegRegisterMethod(TXmlSourceCode,'getNameOfFirstTag',TypeInfo(_T647),[TypeInfo(WideString)], pointer(20));

RegRegisterMethod(TXmlSourceCode,'add',TypeInfo(_T648),[
TypeInfoPointer,TypeInfo(Integer)],Addr(TXmlSourceCode.add));

RegRegisterMethod(TXmlSourceCode,'clearAndFree',TypeInfo(_T649),NoParams, pointer(24));

RegRegisterMethod(TXmlSourceCode,'Delete',TypeInfo(_T650),[
TypeInfo(Integer)],Addr(TXmlSourceCode.Delete));

RegRegisterMethod(TXmlSourceCode,'exchange',TypeInfo(_T651),[
TypeInfo(Integer),
TypeInfo(Integer)],Addr(TXmlSourceCode.exchange));

RegRegisterMethod(TXmlSourceCode,'getPieceAtPos',TypeInfo(_T652),[
TypeInfo(Integer),TypeInfo(TXmlSourceCodePiece)],Addr(TXmlSourceCode.getPieceAtPos));

RegRegisterMethod(TXmlSourceCode,'insert',TypeInfo(_T653),[
TypeInfo(Integer),
TypeInfoPointer],Addr(TXmlSourceCode.insert));

RegRegisterMethod(TXmlSourceCode,'move',TypeInfo(_T654),[
TypeInfo(Integer),
TypeInfo(Integer)],Addr(TXmlSourceCode.move));

RegRegisterMethod(TXmlSourceCode,'pack',TypeInfo(_T655),NoParams,Addr(TXmlSourceCode.pack));

RegRegisterMethod(TXmlSourceCode,'remove',TypeInfo(_T656),[
TypeInfoPointer,TypeInfo(Integer)],Addr(TXmlSourceCode.remove));

RegisterProc(TXmlSourceCodePiece,'create',mtConstructor,TypeInfo(_T658),[
TypeInfo(TdomPieceType)], pointer(0),cRegister);

RegRegisterMethod(TXmlStandardDocReader,'writeXmlDeclaration',TypeInfo(_T659),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(68));

RegRegisterMethod(TXmlStandardDocReader,'writeProcessingInstruction',TypeInfo(_T660),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(72));

RegRegisterMethod(TXmlStandardDocReader,'writeComment',TypeInfo(_T661),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(76));

RegRegisterMethod(TXmlStandardDocReader,'writeCDATA',TypeInfo(_T662),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(80));

RegRegisterMethod(TXmlStandardDocReader,'writePCDATA',TypeInfo(_T663),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(84));

RegRegisterMethod(TXmlStandardDocReader,'writeStartElement',TypeInfo(_T664),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(88));

RegRegisterMethod(TXmlStandardDocReader,'writeEndElement',TypeInfo(_T665),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(92));

RegRegisterMethod(TXmlStandardDocReader,'writeEmptyElement',TypeInfo(_T666),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(96));

RegRegisterMethod(TXmlStandardDocReader,'writeCharRef',TypeInfo(_T667),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(100));

RegRegisterMethod(TXmlStandardDocReader,'writeEntityRef',TypeInfo(_T668),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(104));

RegRegisterMethod(TXmlStandardDocReader,'writeDoctype',TypeInfo(_T669),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(108));

RegRegisterMethod(TXmlStandardDocReader,'parse',TypeInfo(_T670),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TXmlInputSource),TypeInfo(Boolean)], pointer(112));

RegRegisterMethod(TXmlStandardDomReader,'writeXmlDeclaration',TypeInfo(_T671),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(68));

RegRegisterMethod(TXmlStandardDomReader,'writeProcessingInstruction',TypeInfo(_T672),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(72));

RegRegisterMethod(TXmlStandardDomReader,'writeComment',TypeInfo(_T673),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(76));

RegRegisterMethod(TXmlStandardDomReader,'writeCDATA',TypeInfo(_T674),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(80));

RegRegisterMethod(TXmlStandardDomReader,'writePCDATA',TypeInfo(_T675),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(84));

RegRegisterMethod(TXmlStandardDomReader,'writeStartElement',TypeInfo(_T676),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(TdomNameValueList),TypeInfo(TXmlParserError)], pointer(88));

RegRegisterMethod(TXmlStandardDomReader,'writeEndElement',TypeInfo(_T677),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(92));

RegRegisterMethod(TXmlStandardDomReader,'writeEmptyElement',TypeInfo(_T678),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(TdomNameValueList),TypeInfo(TXmlParserError)], pointer(96));

RegRegisterMethod(TXmlStandardDomReader,'writeStartPrefixMapping',TypeInfo(_T679),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(100));

RegRegisterMethod(TXmlStandardDomReader,'writeEndPrefixMapping',TypeInfo(_T680),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(104));

RegRegisterMethod(TXmlStandardDomReader,'writeCharRef',TypeInfo(_T681),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(108));

RegRegisterMethod(TXmlStandardDomReader,'writeEntityRef',TypeInfo(_T682),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(112));

RegRegisterMethod(TXmlStandardDomReader,'writeDoctype',TypeInfo(_T683),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TXmlParserError)], pointer(116));

RegRegisterMethod(TXmlStandardDomReader,'parseloop',TypeInfo(_T684),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomNode),TypeInfo(TXmlParserError)], pointer(120));

RegRegisterMethod(TXmlStandardDomReader,'parse',TypeInfo(_T685),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomNode),TypeInfo(Boolean)], pointer(124));

RegRegisterMethod(TXmlStandardProcessorAgent,'processFile',TypeInfo(_T686),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(48));

RegRegisterMethod(TXmlStandardProcessorAgent,'processMemory',TypeInfo(_T687),[
TypeInfoPointer,
TypeInfo(Longint),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(52));

RegRegisterMethod(TXmlStandardProcessorAgent,'processSourceCode',TypeInfo(_T688),[
TypeInfo(TXmlSourceCode),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(56));

RegRegisterMethod(TXmlStandardProcessorAgent,'processStream',TypeInfo(_T689),[
TypeInfo(TStream),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(60));

RegRegisterMethod(TXmlStandardProcessorAgent,'processString',TypeInfo(_T690),[
TypeInfo(String),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(64));

RegRegisterMethod(TXmlStandardProcessorAgent,'processWideString',TypeInfo(_T691),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(Boolean)], pointer(68));

RegRegisterMethod(TXmlToDomParser,'setDomImpl',TypeInfo(_T692),[
TypeInfo(TDomImplementation)], pointer(48));

RegRegisterMethod(TXmlToDomParser,'getDomImpl',TypeInfo(_T693),[TypeInfo(TDomImplementation)], pointer(52));

RegRegisterMethod(TXmlToDomParser,'parseDtd',TypeInfo(_T694),[
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(Boolean)], pointer(56));

RegRegisterMethod(TXmlToDomParser,'docMemoryToDom',TypeInfo(_T695),[
TypeInfoPointer,
TypeInfo(Longint),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomNode)], pointer(60));

RegRegisterMethod(TXmlToDomParser,'docSourceCodeToDom',TypeInfo(_T696),[
TypeInfo(TXmlSourceCode),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomNode)], pointer(64));

RegRegisterMethod(TXmlToDomParser,'docStreamToDom',TypeInfo(_T697),[
TypeInfo(TStream),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomNode)], pointer(68));

RegRegisterMethod(TXmlToDomParser,'docStringToDom',TypeInfo(_T698),[
TypeInfo(String),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomNode)], pointer(72));

RegRegisterMethod(TXmlToDomParser,'docWideStringToDom',TypeInfo(_T699),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomNode)], pointer(76));

RegRegisterMethod(TXmlToDomParser,'extDtdMemoryToDom',TypeInfo(_T700),[
TypeInfoPointer,
TypeInfo(Longint),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomCMNode)], pointer(80));

RegRegisterMethod(TXmlToDomParser,'extDtdSourceCodeToDom',TypeInfo(_T701),[
TypeInfo(TXmlSourceCode),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomCMNode)], pointer(84));

RegRegisterMethod(TXmlToDomParser,'extDtdStreamToDom',TypeInfo(_T702),[
TypeInfo(TStream),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomCMNode)], pointer(88));

RegRegisterMethod(TXmlToDomParser,'extDtdStringToDom',TypeInfo(_T703),[
TypeInfo(String),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomCMNode)], pointer(92));

RegRegisterMethod(TXmlToDomParser,'extDtdWideStringToDom',TypeInfo(_T704),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomCMNode)], pointer(96));

RegRegisterMethod(TXmlToDomParser,'intDtdMemoryToDom',TypeInfo(_T705),[
TypeInfoPointer,
TypeInfo(Longint),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomCMNode)], pointer(100));

RegRegisterMethod(TXmlToDomParser,'intDtdSourceCodeToDom',TypeInfo(_T706),[
TypeInfo(TXmlSourceCode),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomCMNode)], pointer(104));

RegRegisterMethod(TXmlToDomParser,'intDtdStreamToDom',TypeInfo(_T707),[
TypeInfo(TStream),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomCMNode)], pointer(108));

RegRegisterMethod(TXmlToDomParser,'intDtdStringToDom',TypeInfo(_T708),[
TypeInfo(String),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomCMNode)], pointer(112));

RegRegisterMethod(TXmlToDomParser,'intDtdWideStringToDom',TypeInfo(_T709),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomCMNode)], pointer(116));

RegRegisterMethod(TXmlToDomParser,'fileToDom',TypeInfo(_T710),[
TypeInfo(TFileName),TypeInfo(TdomDocument)], pointer(120));

RegRegisterMethod(TXmlToDomParser,'memoryToDom',TypeInfo(_T711),[
TypeInfoPointer,
TypeInfo(Longint),TypeInfo(TdomDocument)], pointer(124));

RegRegisterMethod(TXmlToDomParser,'sourceCodeToDom',TypeInfo(_T712),[
TypeInfo(TXmlSourceCode),TypeInfo(TdomDocument)], pointer(128));

RegRegisterMethod(TXmlToDomParser,'streamToDom',TypeInfo(_T713),[
TypeInfo(TStream),TypeInfo(TdomDocument)], pointer(132));

RegRegisterMethod(TXmlToDomParser,'stringToDom',TypeInfo(_T714),[
TypeInfo(String),TypeInfo(TdomDocument)], pointer(136));

RegRegisterMethod(TXmlToDomParser,'wideStringToDom',TypeInfo(_T715),[
TypeInfo(WideString),TypeInfo(TdomDocument)], pointer(140));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegRegisterMethod(TDomImplementation,'getDocumentClass',TypeInfo(_T391),[
TypeInfo(WideString),
TypeInfo(WideString),TypeInfo(TdomDocumentClass)], pointer(116))}

{RegisterProc(TDomImplementation,'registerDocumentFormat',mtClassMethod,TypeInfo(_T392),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomDocumentClass)], pointer(120),cRegister)}

{RegisterProc(TDomImplementation,'unregisterDocumentClass',mtClassMethod,TypeInfo(_T394),[
TypeInfo(TdomDocumentClass)], pointer(128),cRegister)}

{RegRegisterMethod(TXmlSourceCode,'sort',TypeInfo(_T657),[
TypeInfo(TListSortCompare)],Addr(TXmlSourceCode.sort))}

RegisterEvent(TypeInfo(TXmlParserEvent),[
TypeInfo(TObject),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TStream),
TypeInfo(TXmlParserAction)]);

RegisterEvent(TypeInfo(TXmlProcessorErrorEvent),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TXmlParserError)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent1),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent10),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent11),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent12),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent13),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent14),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent15),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent16),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent2),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent3),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent4),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent5),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(TdomNameValueList)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent6),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent7),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent8),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)]);

RegisterEvent(TypeInfo(TXmlProcessorEvent9),[
TypeInfo(TXmlCustomProcessorAgent),
TypeInfo(TdomStandardLocator),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
