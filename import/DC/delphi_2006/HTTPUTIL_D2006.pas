{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit HTTPUTIL_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Types,
  Classes,
  HTTPUtil;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (const p0 : string;
const p1 : string): Boolean of object;

_T1 = function (const p0 : string;
const p1 : string): Integer of object;

{_T2 = function (const p0 : string;
const p1 : string): IStringTokenizer of object;}

{_T3 = function (const p0 : string;
const p1 : string): TStringDynArray of object;}

_T4 = function (const p0 : string): string of object;

{_T5 = function : IStreamLoader of object;}

procedure __RegisterProps;
begin
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..2] of string = (
'StartsWith'
,'FirstDelimiter'
,'HTMLEscape'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(string),
TypeInfo(string),TypeInfo(Boolean)],Addr(StartsWith),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(string),
TypeInfo(string),TypeInfo(Integer)],Addr(FirstDelimiter),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T4),[
TypeInfo(string),TypeInfo(string)],Addr(HTMLEscape),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'StringTokenizer',mtProc,TypeInfo(_T2),[
TypeInfo(string),
TypeInfo(string),TypeInfo(IStringTokenizer)],Addr(StringTokenizer),cRegister)}

{RegisterProc(nil,'StringToStringArray',mtProc,TypeInfo(_T3),[
TypeInfo(string),
TypeInfo(string),TypeInfo(TStringDynArray)],Addr(StringToStringArray),cRegister)}

{RegisterProc(nil,'GetDefaultStreamLoader',mtProc,TypeInfo(_T5),[TypeInfo(IStreamLoader)],Addr(GetDefaultStreamLoader),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
