{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit PROPERTYCATEGORIES_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  TypInfo,
  Classes,
  Masks,
  Contnrs,
  PropertyCategories;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
{_T0 = function (const p0 : string;
p1 : TClass;
const p2 : string): Boolean of object;}

_T1 = function : TPropertyCategoryList of object;

{_T2 = procedure (const p0 : string;
p1 : TClass;
p2 : PTypeInfo) of object;}

{_T3 = function (const p0 : string;
p1 : TClass;
p2 : PTypeInfo): Boolean of object;}

_T4 = procedure (const p0 : string) of object;

_T5 = function (p0 : TPropertyFilter): TPropertyFilter of object;

_T6 = procedure (p0 : TPropertyFilter) of object;

_T7 = function : Integer of object;

_T9 = procedure  of object;

_T10 = procedure (p0 : Integer) of object;

_T11 = _T9;

_T12 = function (const p0 : string): TPropertyCategory of object;

_T13 = function (const p0 : string): Integer of object;

_T14 = _T9;

_T15 = _T10;

_T16 = function : TPropertyCategory of object;

_T17 = _T7;

_T19 = function (p0 : TPropertyCategoryVisibleMode): Boolean of object;

_T20 = _T9;

_T21 = _T9;

_T22 = procedure (const p0 : string;
p1 : Integer) of object;

function __DC__GetTPropertyCategory__Filters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TPropertyCategory(Instance).Filters[OleVariant(Params^[0])]);
end;

function __DC__GetTPropertyCategory__MatchCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TPropertyCategory(Instance).MatchCount;
end;

function __DC__GetTPropertyCategory__Visible(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TPropertyCategory(Instance).Visible;
end;

procedure __DC__SetTPropertyCategory__Visible(Instance : TObject; Params : PVariantArgList);
begin
TPropertyCategory(Instance).Visible:=OleVariant(Params^[0]);
end;

function __DC__GetTPropertyCategory__Editor(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TPropertyCategory(Instance).Editor);
end;

procedure __DC__SetTPropertyCategory__Editor(Instance : TObject; Params : PVariantArgList);
begin
TPropertyCategory(Instance).Editor:=TPropertyEditor(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTPropertyCategory__Name(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TPropertyCategory(Instance).Name;
end;

function __DC__GetTPropertyCategoryList__Categories(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TPropertyCategoryList(Instance).Categories[OleVariant(Params^[0])]);
end;

procedure __RegisterProps;
begin
RegisterIndexedProperty(TPropertyCategory,'Filters',1,False,__DC__GetTPropertyCategory__Filters,nil);
RegisterProperty(TPropertyCategory,'MatchCount',__DC__GetTPropertyCategory__MatchCount,nil);
RegisterProperty(TPropertyCategory,'Visible',__DC__GetTPropertyCategory__Visible,__DC__SetTPropertyCategory__Visible);
RegisterProperty(TPropertyCategory,'Editor',__DC__GetTPropertyCategory__Editor,__DC__SetTPropertyCategory__Editor);
RegisterProperty(TPropertyCategory,'Name',__DC__GetTPropertyCategory__Name,nil);
RegisterIndexedProperty(TPropertyCategoryList,'Categories',1,True,__DC__GetTPropertyCategoryList__Categories,nil);
end;

const __ConstNames0 : array[0..4] of string = (
'pcvAll'
,'pcvToggle'
,'pcvNone'
,'pcvNotListed'
,'pcvOnlyListed'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,pcvAll));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,pcvToggle));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,pcvNone));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,pcvNotListed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,pcvOnlyListed));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..3] of TClass = (
TComponentPropertyFilter,
TPropertyCategory,
TPropertyCategoryList,
TPropertyFilter
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..0] of string = (
'PropertyCategoryList'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T1),[TypeInfo(TPropertyCategoryList)],Addr(PropertyCategoryList),cRegister);

RegisterProc(TPropertyCategory,'Create',mtConstructor,TypeInfo(_T4),[
TypeInfo(string)],Addr(TPropertyCategory.Create),cRegister);

RegRegisterMethod(TPropertyCategory,'Add',TypeInfo(_T5),[
TypeInfo(TPropertyFilter),TypeInfo(TPropertyFilter)],Addr(TPropertyCategory.Add));

RegRegisterMethod(TPropertyCategory,'Remove',TypeInfo(_T6),[
TypeInfo(TPropertyFilter)],Addr(TPropertyCategory.Remove));

RegRegisterMethod(TPropertyCategory,'Count',TypeInfo(_T7),[TypeInfo(Integer)],Addr(TPropertyCategory.Count));

RegRegisterMethod(TPropertyCategory,'ClearMatches',TypeInfo(_T9),NoParams,Addr(TPropertyCategory.ClearMatches));

RegRegisterMethod(TPropertyCategory,'FreeEditorGroup',TypeInfo(_T10),[
TypeInfo(Integer)],Addr(TPropertyCategory.FreeEditorGroup));

RegisterProc(TPropertyCategoryList,'Create',mtConstructor,TypeInfo(_T11),NoParams,Addr(TPropertyCategoryList.Create),cRegister);

RegRegisterMethod(TPropertyCategoryList,'FindCategory',TypeInfo(_T12),[
TypeInfo(string),TypeInfo(TPropertyCategory)],Addr(TPropertyCategoryList.FindCategory));

RegRegisterMethod(TPropertyCategoryList,'IndexOf',TypeInfo(_T13),[
TypeInfo(string),TypeInfo(Integer)],Addr(TPropertyCategoryList.IndexOf));

RegRegisterMethod(TPropertyCategoryList,'ClearMatches',TypeInfo(_T14),NoParams,Addr(TPropertyCategoryList.ClearMatches));

RegRegisterMethod(TPropertyCategoryList,'FreeEditorGroup',TypeInfo(_T15),[
TypeInfo(Integer)],Addr(TPropertyCategoryList.FreeEditorGroup));

RegRegisterMethod(TPropertyCategoryList,'MiscCategory',TypeInfo(_T16),[TypeInfo(TPropertyCategory)],Addr(TPropertyCategoryList.MiscCategory));

RegRegisterMethod(TPropertyCategoryList,'Count',TypeInfo(_T17),[TypeInfo(Integer)],Addr(TPropertyCategoryList.Count));

RegRegisterMethod(TPropertyCategoryList,'ChangeVisibility',TypeInfo(_T19),[
TypeInfo(TPropertyCategoryVisibleMode),TypeInfo(Boolean)],Addr(TPropertyCategoryList.ChangeVisibility));

RegRegisterMethod(TPropertyCategoryList,'LoadHiddenCategories',TypeInfo(_T20),NoParams,Addr(TPropertyCategoryList.LoadHiddenCategories));

RegRegisterMethod(TPropertyCategoryList,'SaveHiddenCategories',TypeInfo(_T21),NoParams,Addr(TPropertyCategoryList.SaveHiddenCategories));

RegisterProc(TPropertyFilter,'Create',mtConstructor,TypeInfo(_T22),[
TypeInfo(string),
TypeInfo(Integer)],Addr(TPropertyFilter.Create),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'IsPropertyInCategory',mtProc,TypeInfo(_T0),[
TypeInfo(string),
TypeInfo(TClass),
TypeInfo(string),TypeInfo(Boolean)],Addr(IsPropertyInCategory),cRegister)}

{RegisterProc(TComponentPropertyFilter,'Create',mtConstructor,TypeInfo(_T2),[
TypeInfo(string),
TypeInfo(TClass),
TypeInfoPointer],Addr(TComponentPropertyFilter.Create),cRegister)}

{RegRegisterMethod(TComponentPropertyFilter,'Match',TypeInfo(_T3),[
TypeInfo(string),
TypeInfo(TClass),
TypeInfoPointer,TypeInfo(Boolean)],Addr(TComponentPropertyFilter.Match))}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
