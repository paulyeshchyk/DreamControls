{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit OLEACC_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  ActiveX,
  oleacc;
function Convert__MIDL_IWinTypes_0009ToVariant(var R : __MIDL_IWinTypes_0009) : OleVariant;
function ConvertVariantTo__MIDL_IWinTypes_0009(const V : OleVariant) : __MIDL_IWinTypes_0009;
function Convert_RemotableHandleToVariant(var R : _RemotableHandle) : OleVariant;
function ConvertVariantTo_RemotableHandle(const V : OleVariant) : _RemotableHandle;
function ConvertTGUIDToVariant(var R : TGUID) : OleVariant;
function ConvertVariantToTGUID(const V : OleVariant) : TGUID;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type ____MIDL_IWinTypes_0009__Wrapper = class(TDCRecordWrapper)
private
fR : __MIDL_IWinTypes_0009;
public
function GetRecordPtr : pointer; override;
published
procedure sethInproc(const val : Integer);
function gethInproc : Integer;
property hInproc : Integer read gethInproc write sethInproc;
procedure sethRemote(const val : Integer);
function gethRemote : Integer;
property hRemote : Integer read gethRemote write sethRemote;
end;
type ___RemotableHandle__Wrapper = class(TDCRecordWrapper)
private
fR : _RemotableHandle;
public
function GetRecordPtr : pointer; override;
published
procedure setfContext(const val : Integer);
function getfContext : Integer;
property fContext : Integer read getfContext write setfContext;
end;
type __TGUID__Wrapper = class(TDCRecordWrapper)
private
fR : TGUID;
public
function GetRecordPtr : pointer; override;
published
procedure setD1(const val : LongWord);
function getD1 : LongWord;
property D1 : LongWord read getD1 write setD1;
procedure setD2(const val : Word);
function getD2 : Word;
property D2 : Word read getD2 write setD2;
procedure setD3(const val : Word);
function getD3 : Word;
property D3 : Word read getD3 write setD3;
end;
type
_T1 = function (p0 : LRESULT;
const p1 : IDispatch;
p2 : wParam;
out p3): LRESULT of object;

_T2 = function (p0 : THandle;
p1 : DWORD;
const p2 : IDispatch;
out p3): HRESULT of object;

_T3 = function (p0 : THandle;
p1 : Longint;
const p2 : IDispatch;
out p3 : Pointer): HRESULT of object;

{_T5 = function (p0 : THandle;
p1 : string): IDispatch of object;}

{_T6 = function : IAccPropServices of object;}

{_T7 = function (const p0 : string): IAccPropServices of object;}

function ____MIDL_IWinTypes_0009__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ____MIDL_IWinTypes_0009__Wrapper.sethInproc(const val : Integer);
begin
__MIDL_IWinTypes_0009(GetRecordPtr^).hInproc := val;
end;
function ____MIDL_IWinTypes_0009__Wrapper.gethInproc : Integer;
begin
result := __MIDL_IWinTypes_0009(GetRecordPtr^).hInproc;
end;
procedure ____MIDL_IWinTypes_0009__Wrapper.sethRemote(const val : Integer);
begin
__MIDL_IWinTypes_0009(GetRecordPtr^).hRemote := val;
end;
function ____MIDL_IWinTypes_0009__Wrapper.gethRemote : Integer;
begin
result := __MIDL_IWinTypes_0009(GetRecordPtr^).hRemote;
end;
function ___RemotableHandle__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___RemotableHandle__Wrapper.setfContext(const val : Integer);
begin
_RemotableHandle(GetRecordPtr^).fContext := val;
end;
function ___RemotableHandle__Wrapper.getfContext : Integer;
begin
result := _RemotableHandle(GetRecordPtr^).fContext;
end;
function ___MIDL_IWinTypes_0009_ : IDispatch;
begin
  result := ____MIDL_IWinTypes_0009__Wrapper.Create;
end;
function __RemotableHandle_ : IDispatch;
begin
  result := ___RemotableHandle__Wrapper.Create;
end;
function __TGUID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TGUID__Wrapper.setD1(const val : LongWord);
begin
TGUID(GetRecordPtr^).D1 := val;
end;
function __TGUID__Wrapper.getD1 : LongWord;
begin
result := TGUID(GetRecordPtr^).D1;
end;
procedure __TGUID__Wrapper.setD2(const val : Word);
begin
TGUID(GetRecordPtr^).D2 := val;
end;
function __TGUID__Wrapper.getD2 : Word;
begin
result := TGUID(GetRecordPtr^).D2;
end;
procedure __TGUID__Wrapper.setD3(const val : Word);
begin
TGUID(GetRecordPtr^).D3 := val;
end;
function __TGUID__Wrapper.getD3 : Word;
begin
result := TGUID(GetRecordPtr^).D3;
end;
function ____ObjectFromLresult__Wrapper(p0 : LRESULT;
const p1 : IDispatch;
p2 : wParam;
out p3): LRESULT;
var
__p1 : ^TGUID;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := ObjectFromLresult(p0,__p1^,p2,p3);
end;

function ____AccessibleObjectFromWindow__Wrapper(p0 : THandle;
p1 : DWORD;
const p2 : IDispatch;
out p3): HRESULT;
var
__p2 : ^TGUID;
__i2 : IDispatch;
begin
if p2 = nil then exit;
__p2 := (p2 as IDCRecordWrapper).GetRecordPtr;
result := AccessibleObjectFromWindow(p0,p1,__p2^,p3);
end;

function ____CreateStdAccessibleObject__Wrapper(p0 : THandle;
p1 : Longint;
const p2 : IDispatch;
out p3 : Pointer): HRESULT;
var
__p2 : ^TGUID;
__i2 : IDispatch;
begin
if p2 = nil then exit;
__p2 := (p2 as IDCRecordWrapper).GetRecordPtr;
result := CreateStdAccessibleObject(p0,p1,__p2^,p3);
end;


type ____MIDL_IWinTypes_0009__Wrapper__ = class(____MIDL_IWinTypes_0009__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ____MIDL_IWinTypes_0009__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert__MIDL_IWinTypes_0009ToVariant(var R : __MIDL_IWinTypes_0009) : OleVariant;
var
__rw : ____MIDL_IWinTypes_0009__Wrapper__;
begin
__rw := ____MIDL_IWinTypes_0009__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo__MIDL_IWinTypes_0009(const V : OleVariant) : __MIDL_IWinTypes_0009;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := __MIDL_IWinTypes_0009((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___RemotableHandle__Wrapper__ = class(___RemotableHandle__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___RemotableHandle__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_RemotableHandleToVariant(var R : _RemotableHandle) : OleVariant;
var
__rw : ___RemotableHandle__Wrapper__;
begin
__rw := ___RemotableHandle__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_RemotableHandle(const V : OleVariant) : _RemotableHandle;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _RemotableHandle((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TGUID__Wrapper__ = class(__TGUID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TGUID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTGUIDToVariant(var R : TGUID) : OleVariant;
var
__rw : __TGUID__Wrapper__;
begin
__rw := __TGUID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTGUID(const V : OleVariant) : TGUID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TGUID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..135] of string = (
'AccessibilityMajorVersion'
,'AccessibilityMinorVersion'
,'ANNO_THIS'
,'ANNO_CONTAINER'
,'DISPID_ACC_PARENT'
,'DISPID_ACC_CHILDCOUNT'
,'DISPID_ACC_CHILD'
,'DISPID_ACC_NAME'
,'DISPID_ACC_VALUE'
,'DISPID_ACC_DESCRIPTION'
,'DISPID_ACC_ROLE'
,'DISPID_ACC_STATE'
,'DISPID_ACC_HELP'
,'DISPID_ACC_HELPTOPIC'
,'DISPID_ACC_KEYBOARDSHORTCUT'
,'DISPID_ACC_FOCUS'
,'DISPID_ACC_SELECTION'
,'DISPID_ACC_DEFAULTACTION'
,'DISPID_ACC_SELECT'
,'DISPID_ACC_LOCATION'
,'DISPID_ACC_NAVIGATE'
,'DISPID_ACC_HITTEST'
,'DISPID_ACC_DODEFAULTACTION'
,'NAVDIR_MIN'
,'NAVDIR_UP'
,'NAVDIR_DOWN'
,'NAVDIR_LEFT'
,'NAVDIR_RIGHT'
,'NAVDIR_NEXT'
,'NAVDIR_PREVIOUS'
,'NAVDIR_FIRSTCHILD'
,'NAVDIR_LASTCHILD'
,'NAVDIR_MAX'
,'SELFLAG_NONE'
,'SELFLAG_TAKEFOCUS'
,'SELFLAG_TAKESELECTION'
,'SELFLAG_EXTENDSELECTION'
,'SELFLAG_ADDSELECTION'
,'SELFLAG_REMOVESELECTION'
,'SELFLAG_VALID'
,'STATE_SYSTEM_NORMAL'
,'STATE_SYSTEM_UNAVAILABLE'
,'STATE_SYSTEM_SELECTED'
,'STATE_SYSTEM_FOCUSED'
,'STATE_SYSTEM_PRESSED'
,'STATE_SYSTEM_CHECKED'
,'STATE_SYSTEM_MIXED'
,'STATE_SYSTEM_INDETERMINATE'
,'STATE_SYSTEM_READONLY'
,'STATE_SYSTEM_HOTTRACKED'
,'STATE_SYSTEM_DEFAULT'
,'STATE_SYSTEM_EXPANDED'
,'STATE_SYSTEM_COLLAPSED'
,'STATE_SYSTEM_BUSY'
,'STATE_SYSTEM_FLOATING'
,'STATE_SYSTEM_MARQUEED'
,'STATE_SYSTEM_ANIMATED'
,'STATE_SYSTEM_INVISIBLE'
,'STATE_SYSTEM_OFFSCREEN'
,'STATE_SYSTEM_SIZEABLE'
,'STATE_SYSTEM_MOVEABLE'
,'STATE_SYSTEM_SELFVOICING'
,'STATE_SYSTEM_FOCUSABLE'
,'STATE_SYSTEM_SELECTABLE'
,'STATE_SYSTEM_LINKED'
,'STATE_SYSTEM_TRAVERSED'
,'STATE_SYSTEM_MULTISELECTABLE'
,'STATE_SYSTEM_EXTSELECTABLE'
,'STATE_SYSTEM_ALERT_LOW'
,'STATE_SYSTEM_ALERT_MEDIUM'
,'STATE_SYSTEM_ALERT_HIGH'
,'STATE_SYSTEM_PROTECTED'
,'STATE_SYSTEM_HASPOPUP'
,'STATE_SYSTEM_VALID'
,'ROLE_SYSTEM_TITLEBAR'
,'ROLE_SYSTEM_MENUBAR'
,'ROLE_SYSTEM_SCROLLBAR'
,'ROLE_SYSTEM_GRIP'
,'ROLE_SYSTEM_SOUND'
,'ROLE_SYSTEM_CURSOR'
,'ROLE_SYSTEM_CARET'
,'ROLE_SYSTEM_ALERT'
,'ROLE_SYSTEM_WINDOW'
,'ROLE_SYSTEM_CLIENT'
,'ROLE_SYSTEM_MENUPOPUP'
,'ROLE_SYSTEM_MENUITEM'
,'ROLE_SYSTEM_TOOLTIP'
,'ROLE_SYSTEM_APPLICATION'
,'ROLE_SYSTEM_DOCUMENT'
,'ROLE_SYSTEM_PANE'
,'ROLE_SYSTEM_CHART'
,'ROLE_SYSTEM_DIALOG'
,'ROLE_SYSTEM_BORDER'
,'ROLE_SYSTEM_GROUPING'
,'ROLE_SYSTEM_SEPARATOR'
,'ROLE_SYSTEM_TOOLBAR'
,'ROLE_SYSTEM_STATUSBAR'
,'ROLE_SYSTEM_TABLE'
,'ROLE_SYSTEM_COLUMNHEADER'
,'ROLE_SYSTEM_ROWHEADER'
,'ROLE_SYSTEM_COLUMN'
,'ROLE_SYSTEM_ROW'
,'ROLE_SYSTEM_CELL'
,'ROLE_SYSTEM_LINK'
,'ROLE_SYSTEM_HELPBALLOON'
,'ROLE_SYSTEM_CHARACTER'
,'ROLE_SYSTEM_LIST'
,'ROLE_SYSTEM_LISTITEM'
,'ROLE_SYSTEM_OUTLINE'
,'ROLE_SYSTEM_OUTLINEITEM'
,'ROLE_SYSTEM_PAGETAB'
,'ROLE_SYSTEM_PROPERTYPAGE'
,'ROLE_SYSTEM_INDICATOR'
,'ROLE_SYSTEM_GRAPHIC'
,'ROLE_SYSTEM_STATICTEXT'
,'ROLE_SYSTEM_TEXT'
,'ROLE_SYSTEM_PUSHBUTTON'
,'ROLE_SYSTEM_CHECKBUTTON'
,'ROLE_SYSTEM_RADIOBUTTON'
,'ROLE_SYSTEM_COMBOBOX'
,'ROLE_SYSTEM_DROPLIST'
,'ROLE_SYSTEM_PROGRESSBAR'
,'ROLE_SYSTEM_DIAL'
,'ROLE_SYSTEM_HOTKEYFIELD'
,'ROLE_SYSTEM_SLIDER'
,'ROLE_SYSTEM_SPINBUTTON'
,'ROLE_SYSTEM_DIAGRAM'
,'ROLE_SYSTEM_ANIMATION'
,'ROLE_SYSTEM_EQUATION'
,'ROLE_SYSTEM_BUTTONDROPDOWN'
,'ROLE_SYSTEM_BUTTONMENU'
,'ROLE_SYSTEM_BUTTONDROPDOWNGRID'
,'ROLE_SYSTEM_WHITESPACE'
,'ROLE_SYSTEM_PAGETABLIST'
,'ROLE_SYSTEM_CLOCK'
,'CHILDID_SELF'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,AccessibilityMajorVersion));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,AccessibilityMinorVersion));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,ANNO_THIS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,ANNO_CONTAINER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,DISPID_ACC_PARENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,DISPID_ACC_CHILDCOUNT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,DISPID_ACC_CHILD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,DISPID_ACC_NAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,DISPID_ACC_VALUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,DISPID_ACC_DESCRIPTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,DISPID_ACC_ROLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,DISPID_ACC_STATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,DISPID_ACC_HELP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,DISPID_ACC_HELPTOPIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,DISPID_ACC_KEYBOARDSHORTCUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,DISPID_ACC_FOCUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,DISPID_ACC_SELECTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,DISPID_ACC_DEFAULTACTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,DISPID_ACC_SELECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,DISPID_ACC_LOCATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,DISPID_ACC_NAVIGATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,DISPID_ACC_HITTEST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,DISPID_ACC_DODEFAULTACTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,NAVDIR_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,NAVDIR_UP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,NAVDIR_DOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,NAVDIR_LEFT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,NAVDIR_RIGHT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,NAVDIR_NEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,NAVDIR_PREVIOUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,NAVDIR_FIRSTCHILD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,NAVDIR_LASTCHILD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,NAVDIR_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,SELFLAG_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,SELFLAG_TAKEFOCUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,SELFLAG_TAKESELECTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,SELFLAG_EXTENDSELECTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,SELFLAG_ADDSELECTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,SELFLAG_REMOVESELECTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,SELFLAG_VALID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,STATE_SYSTEM_NORMAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,STATE_SYSTEM_UNAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,STATE_SYSTEM_SELECTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,STATE_SYSTEM_FOCUSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,STATE_SYSTEM_PRESSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,STATE_SYSTEM_CHECKED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,STATE_SYSTEM_MIXED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,STATE_SYSTEM_INDETERMINATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,STATE_SYSTEM_READONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,STATE_SYSTEM_HOTTRACKED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,STATE_SYSTEM_DEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,STATE_SYSTEM_EXPANDED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,STATE_SYSTEM_COLLAPSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,STATE_SYSTEM_BUSY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,STATE_SYSTEM_FLOATING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,STATE_SYSTEM_MARQUEED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,STATE_SYSTEM_ANIMATED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,STATE_SYSTEM_INVISIBLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,STATE_SYSTEM_OFFSCREEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,STATE_SYSTEM_SIZEABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,STATE_SYSTEM_MOVEABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,STATE_SYSTEM_SELFVOICING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,STATE_SYSTEM_FOCUSABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,STATE_SYSTEM_SELECTABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,STATE_SYSTEM_LINKED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,STATE_SYSTEM_TRAVERSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,STATE_SYSTEM_MULTISELECTABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,STATE_SYSTEM_EXTSELECTABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,STATE_SYSTEM_ALERT_LOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,STATE_SYSTEM_ALERT_MEDIUM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,STATE_SYSTEM_ALERT_HIGH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,STATE_SYSTEM_PROTECTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,STATE_SYSTEM_HASPOPUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,STATE_SYSTEM_VALID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,ROLE_SYSTEM_TITLEBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,ROLE_SYSTEM_MENUBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,ROLE_SYSTEM_SCROLLBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,ROLE_SYSTEM_GRIP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,ROLE_SYSTEM_SOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,ROLE_SYSTEM_CURSOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,ROLE_SYSTEM_CARET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,ROLE_SYSTEM_ALERT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,ROLE_SYSTEM_WINDOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,ROLE_SYSTEM_CLIENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,ROLE_SYSTEM_MENUPOPUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,ROLE_SYSTEM_MENUITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,ROLE_SYSTEM_TOOLTIP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,ROLE_SYSTEM_APPLICATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,ROLE_SYSTEM_DOCUMENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,ROLE_SYSTEM_PANE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,ROLE_SYSTEM_CHART));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,ROLE_SYSTEM_DIALOG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,ROLE_SYSTEM_BORDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,ROLE_SYSTEM_GROUPING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,ROLE_SYSTEM_SEPARATOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,ROLE_SYSTEM_TOOLBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,ROLE_SYSTEM_STATUSBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,ROLE_SYSTEM_TABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,ROLE_SYSTEM_COLUMNHEADER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,ROLE_SYSTEM_ROWHEADER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,ROLE_SYSTEM_COLUMN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,ROLE_SYSTEM_ROW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,ROLE_SYSTEM_CELL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,ROLE_SYSTEM_LINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,ROLE_SYSTEM_HELPBALLOON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[105] ,ROLE_SYSTEM_CHARACTER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[106] ,ROLE_SYSTEM_LIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[107] ,ROLE_SYSTEM_LISTITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[108] ,ROLE_SYSTEM_OUTLINE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[109] ,ROLE_SYSTEM_OUTLINEITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[110] ,ROLE_SYSTEM_PAGETAB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[111] ,ROLE_SYSTEM_PROPERTYPAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[112] ,ROLE_SYSTEM_INDICATOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[113] ,ROLE_SYSTEM_GRAPHIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[114] ,ROLE_SYSTEM_STATICTEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[115] ,ROLE_SYSTEM_TEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[116] ,ROLE_SYSTEM_PUSHBUTTON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[117] ,ROLE_SYSTEM_CHECKBUTTON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[118] ,ROLE_SYSTEM_RADIOBUTTON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[119] ,ROLE_SYSTEM_COMBOBOX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[120] ,ROLE_SYSTEM_DROPLIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[121] ,ROLE_SYSTEM_PROGRESSBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[122] ,ROLE_SYSTEM_DIAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[123] ,ROLE_SYSTEM_HOTKEYFIELD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[124] ,ROLE_SYSTEM_SLIDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[125] ,ROLE_SYSTEM_SPINBUTTON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[126] ,ROLE_SYSTEM_DIAGRAM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[127] ,ROLE_SYSTEM_ANIMATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[128] ,ROLE_SYSTEM_EQUATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[129] ,ROLE_SYSTEM_BUTTONDROPDOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[130] ,ROLE_SYSTEM_BUTTONMENU));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[131] ,ROLE_SYSTEM_BUTTONDROPDOWNGRID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[132] ,ROLE_SYSTEM_WHITESPACE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[133] ,ROLE_SYSTEM_PAGETABLIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[134] ,ROLE_SYSTEM_CLOCK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[135] ,CHILDID_SELF));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..0] of TClass = (
CoCAccPropServices
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..4] of string = (
'__MIDL_IWinTypes_0009'
,'_RemotableHandle'
,'ObjectFromLresult'
,'AccessibleObjectFromWindow'
,'CreateStdAccessibleObject'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(___MIDL_IWinTypes_0009_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(__RemotableHandle_)));
RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T1),[
TypeInfo(LRESULT),
TypeInfo(IDispatch),
TypeInfo(wParam),
TypeInfoUntyped,TypeInfo(LRESULT)],Addr(____ObjectFromLresult__Wrapper),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T2),[
TypeInfo(THandle),
TypeInfo(DWORD),
TypeInfo(IDispatch),
TypeInfoUntyped,TypeInfo(HRESULT)],Addr(____AccessibleObjectFromWindow__Wrapper),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T3),[
TypeInfo(THandle),
TypeInfo(Longint),
TypeInfo(IDispatch),
TypeInfoPointer,TypeInfo(HRESULT)],Addr(____CreateStdAccessibleObject__Wrapper),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'CreateAccessibleProxy',mtProc,TypeInfo(_T5),[
TypeInfo(THandle),
TypeInfo(string),TypeInfo(IDispatch)],Addr(CreateAccessibleProxy),cRegister)}

{RegisterProc(CoCAccPropServices,'Create',mtClassMethod,TypeInfo(_T6),[TypeInfo(IAccPropServices)],Addr(CoCAccPropServices.Create),cRegister)}

{RegisterProc(CoCAccPropServices,'CreateRemote',mtClassMethod,TypeInfo(_T7),[
TypeInfo(string),TypeInfo(IAccPropServices)],Addr(CoCAccPropServices.CreateRemote),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
