{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit HTTPAPP_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  SysUtils,
  Classes,
  Masks,
  Contnrs,
  HTTPApp;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (const p0 : string): string of object;

_T1 = _T0;

_T2 = _T0;

_T3 = _T0;

_T4 = _T0;

_T5 = function (const p0 : string): TDateTime of object;

_T8 = function (p0 : Integer): string of object;

_T9 = _T0;

_T10 = function (p0 : TDateTime): string of object;

_T11 = _T10;

{_T12 = procedure (p0 : TContentParserClass) of object;}

_T13 = function : TStrings of object;

_T14 = function : TAbstractWebRequestFiles of object;

_T15 = procedure (p0 : TWebRequest) of object;

_T16 = function (p0 : TWebRequest): Boolean of object;

_T17 = function : string of object;

_T18 = function : Boolean of object;

_T19 = function : TWebModuleCreateMode of object;

_T20 = function : TWebModuleCacheMode of object;

{_T21 = function : TComponentClass of object;}

_T22 = function : TAbstractWebPageInfo of object;

_T23 = function : TComponent of object;

_T24 = procedure  of object;

_T25 = function (p0 : Integer): TComponent of object;

_T26 = function : Integer of object;

{_T27 = function : TModuleAddedProc of object;}

{_T28 = procedure (p0 : TModuleAddedProc) of object;}

_T29 = _T26;

_T30 = function (p0 : Integer): TAbstractWebModuleFactory of object;

{_T31 = function (p0 : TComponentClass): TComponent of object;}

_T32 = function (const p0 : string): TComponent of object;

{_T33 = function (p0 : TComponentClass): TComponent of object;}

_T34 = _T32;

_T35 = _T17;

_T36 = _T17;

_T37 = _T17;

_T38 = _T17;

_T39 = _T17;

_T40 = _T18;

_T41 = _T18;

_T42 = _T17;

_T43 = procedure (p0 : TAbstractWebPageModuleFactory) of object;

_T44 = procedure (p0 : TAbstractWebPageInfo) of object;

_T45 = _T17;

_T46 = _T17;

_T47 = function : TStream of object;

_T48 = _T17;

_T49 = _T26;

_T50 = function (p0 : Integer): TAbstractWebRequestFile of object;

_T51 = function (const p0 : string): Variant of object;

_T52 = procedure (const p0 : string;
const p1 : Variant) of object;

_T53 = _T26;

_T54 = procedure (p0 : Integer) of object;

_T55 = _T17;

_T56 = procedure (p0 : TWebResponse) of object;

_T57 = _T24;

{_T58 = procedure (p0 : TWebResponse;
p1 : TCollectionItemClass) of object;}

_T59 = function : TCookie of object;

_T60 = _T17;

_T61 = function (p0 : TStream): string of object;

_T62 = _T0;

_T63 = function (const p0 : string): TWebActionItem of object;

{_T64 = function : IWebRequestHandler of object;}

{_T65 = procedure (p0 : TCustomWebDispatcher;
p1 : TCollectionItemClass) of object;}

_T66 = function : TWebActionItem of object;

_T67 = _T8;

_T68 = function (p0 : Integer): TDateTime of object;

_T69 = function (p0 : Integer): Integer of object;

_T70 = _T17;

_T71 = _T17;

_T72 = _T24;

_T73 = function (var p0;
p1 : Integer): Integer of object;

_T74 = _T8;

_T75 = _T0;

_T76 = _T73;

_T77 = function (const p0 : string): Boolean of object;

_T78 = function (p0 : Integer;
const p1 : string;
const p2 : string): Boolean of object;

{_T79 = procedure (p0 : TSysCharSet;
p1 : TSysCharSet;
p2 : PChar;
p3 : TStrings) of object;}

_T80 = procedure (p0 : TStrings) of object;

_T81 = _T80;

_T82 = _T80;

_T83 = _T0;

_T84 = _T8;

_T85 = procedure (p0 : Integer;
const p1 : string) of object;

_T86 = _T68;

_T87 = procedure (p0 : Integer;
const p1 : TDateTime) of object;

_T88 = _T69;

_T89 = procedure (p0 : Integer;
p1 : Integer) of object;

_T90 = _T17;

_T91 = procedure (const p0 : string) of object;

_T92 = procedure (p0 : TStream) of object;

_T93 = _T26;

_T94 = _T54;

_T95 = _T17;

_T96 = _T91;

_T97 = _T15;

_T98 = _T0;

_T99 = _T24;

_T100 = _T91;

_T101 = _T92;

_T102 = _T18;

_T103 = procedure (p0 : TStrings;
const p1 : string;
const p2 : string;
p3 : TDateTime;
p4 : Boolean) of object;

_T104 = procedure (const p0 : string;
const p1 : string) of object;

function __DC__GetTAbstractWebModuleFactory__ModuleName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebModuleFactory(Instance).ModuleName;
end;

function __DC__GetTAbstractWebModuleFactory__IsAppModule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebModuleFactory(Instance).IsAppModule;
end;

function __DC__GetTAbstractWebModuleFactory__CreateMode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebModuleFactory(Instance).CreateMode;
end;

function __DC__GetTAbstractWebModuleFactory__CacheMode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebModuleFactory(Instance).CacheMode;
end;

function __DC__GetTAbstractWebModuleFactory__WebPageInfo(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAbstractWebModuleFactory(Instance).WebPageInfo);
end;

function __DC__GetTAbstractWebModuleList__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAbstractWebModuleList(Instance).Items[OleVariant(Params^[0])]);
end;

function __DC__GetTAbstractWebModuleList__ItemCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebModuleList(Instance).ItemCount;
end;

function __DC__GetTAbstractWebModuleList__FactoryCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebModuleList(Instance).FactoryCount;
end;

function __DC__GetTAbstractWebModuleList__Factory(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAbstractWebModuleList(Instance).Factory[OleVariant(Params^[0])]);
end;

function __DC__GetTAbstractWebPageInfo__PageHREF(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebPageInfo(Instance).PageHREF;
end;

function __DC__GetTAbstractWebPageInfo__PageDescription(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebPageInfo(Instance).PageDescription;
end;

function __DC__GetTAbstractWebPageInfo__PageTitle(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebPageInfo(Instance).PageTitle;
end;

function __DC__GetTAbstractWebPageInfo__PageName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebPageInfo(Instance).PageName;
end;

function __DC__GetTAbstractWebPageInfo__IsPublished(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebPageInfo(Instance).IsPublished;
end;

function __DC__GetTAbstractWebPageInfo__IsLoginRequired(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebPageInfo(Instance).IsLoginRequired;
end;

function __DC__GetTAbstractWebPageInfo__PageFile(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebPageInfo(Instance).PageFile;
end;

function __DC__GetTAbstractWebPageInfo__ViewAccess(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebPageInfo(Instance).ViewAccess;
end;

function __DC__GetTAbstractWebPageInfo__Factory(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAbstractWebPageInfo(Instance).Factory);
end;

procedure __DC__SetTAbstractWebPageInfo__Factory(Instance : TObject; Params : PVariantArgList);
begin
TAbstractWebPageInfo(Instance).Factory:=TAbstractWebPageModuleFactory(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTAbstractWebRequestFile__FieldName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebRequestFile(Instance).FieldName;
end;

function __DC__GetTAbstractWebRequestFile__FileName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebRequestFile(Instance).FileName;
end;

function __DC__GetTAbstractWebRequestFile__Stream(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAbstractWebRequestFile(Instance).Stream);
end;

function __DC__GetTAbstractWebRequestFile__ContentType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebRequestFile(Instance).ContentType;
end;

function __DC__GetTAbstractWebRequestFiles__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAbstractWebRequestFiles(Instance).Items[OleVariant(Params^[0])]);
end;

function __DC__GetTAbstractWebRequestFiles__Count(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebRequestFiles(Instance).Count;
end;

function __DC__GetTAbstractWebSession__TimeoutMinutes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebSession(Instance).TimeoutMinutes;
end;

procedure __DC__SetTAbstractWebSession__TimeoutMinutes(Instance : TObject; Params : PVariantArgList);
begin
TAbstractWebSession(Instance).TimeoutMinutes:=OleVariant(Params^[0]);
end;

function __DC__GetTAbstractWebSession__Values(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebSession(Instance).Values[OleVariant(Params^[0])];
end;

procedure __DC__SetTAbstractWebSession__Values(Instance : TObject; Params : PVariantArgList);
begin
TAbstractWebSession(Instance).Values[OleVariant(Params^[1])]:=OleVariant(Params^[0]);
end;

function __DC__GetTAbstractWebSession__SessionID(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAbstractWebSession(Instance).SessionID;
end;

function __DC__GetTCookie__Name(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCookie(Instance).Name;
end;

procedure __DC__SetTCookie__Name(Instance : TObject; Params : PVariantArgList);
begin
TCookie(Instance).Name:=OleVariant(Params^[0]);
end;

function __DC__GetTCookie__Value(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCookie(Instance).Value;
end;

procedure __DC__SetTCookie__Value(Instance : TObject; Params : PVariantArgList);
begin
TCookie(Instance).Value:=OleVariant(Params^[0]);
end;

function __DC__GetTCookie__Domain(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCookie(Instance).Domain;
end;

procedure __DC__SetTCookie__Domain(Instance : TObject; Params : PVariantArgList);
begin
TCookie(Instance).Domain:=OleVariant(Params^[0]);
end;

function __DC__GetTCookie__Path(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCookie(Instance).Path;
end;

procedure __DC__SetTCookie__Path(Instance : TObject; Params : PVariantArgList);
begin
TCookie(Instance).Path:=OleVariant(Params^[0]);
end;

function __DC__GetTCookie__Expires(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCookie(Instance).Expires;
end;

procedure __DC__SetTCookie__Expires(Instance : TObject; Params : PVariantArgList);
begin
TCookie(Instance).Expires:=OleVariant(Params^[0]);
end;

function __DC__GetTCookie__Secure(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCookie(Instance).Secure;
end;

procedure __DC__SetTCookie__Secure(Instance : TObject; Params : PVariantArgList);
begin
TCookie(Instance).Secure:=OleVariant(Params^[0]);
end;

function __DC__GetTCookie__HeaderValue(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCookie(Instance).HeaderValue;
end;

function __DC__GetTCookieCollection__WebResponse(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCookieCollection(Instance).WebResponse);
end;

function __DC__GetTCookieCollection__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCookieCollection(Instance).Items[OleVariant(Params^[0])]);
end;

procedure __DC__SetTCookieCollection__Items(Instance : TObject; Params : PVariantArgList);
begin
TCookieCollection(Instance).Items[OleVariant(Params^[1])]:=TCookie(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomContentProducer__DispatcherComponent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomContentProducer(Instance).DispatcherComponent);
end;

function __DC__GetTCustomWebDispatcher__Actions(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomWebDispatcher(Instance).Actions);
end;

procedure __DC__SetTCustomWebDispatcher__Actions(Instance : TObject; Params : PVariantArgList);
begin
TCustomWebDispatcher(Instance).Actions:=TWebActionItems(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomWebDispatcher__Action(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomWebDispatcher(Instance).Action[OleVariant(Params^[0])]);
end;

function __DC__GetTCustomWebDispatcher__Request(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomWebDispatcher(Instance).Request);
end;

function __DC__GetTCustomWebDispatcher__Response(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomWebDispatcher(Instance).Response);
end;

function __DC__GetTWebActionItems__WebDispatcher(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebActionItems(Instance).WebDispatcher);
end;

function __DC__GetTWebActionItems__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebActionItems(Instance).Items[OleVariant(Params^[0])]);
end;

procedure __DC__SetTWebActionItems__Items(Instance : TObject; Params : PVariantArgList);
begin
TWebActionItems(Instance).Items[OleVariant(Params^[1])]:=TWebActionItem(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTWebRequest__MethodType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).MethodType;
end;

function __DC__GetTWebRequest__ContentParser(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebRequest(Instance).ContentParser);
end;

function __DC__GetTWebRequest__ContentFields(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebRequest(Instance).ContentFields);
end;

function __DC__GetTWebRequest__CookieFields(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebRequest(Instance).CookieFields);
end;

function __DC__GetTWebRequest__QueryFields(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebRequest(Instance).QueryFields);
end;

function __DC__GetTWebRequest__Method(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Method;
end;

function __DC__GetTWebRequest__ProtocolVersion(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).ProtocolVersion;
end;

function __DC__GetTWebRequest__URL(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).URL;
end;

function __DC__GetTWebRequest__Query(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Query;
end;

function __DC__GetTWebRequest__PathInfo(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).PathInfo;
end;

function __DC__GetTWebRequest__PathTranslated(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).PathTranslated;
end;

function __DC__GetTWebRequest__Authorization(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Authorization;
end;

function __DC__GetTWebRequest__CacheControl(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).CacheControl;
end;

function __DC__GetTWebRequest__Cookie(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Cookie;
end;

function __DC__GetTWebRequest__Date(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Date;
end;

function __DC__GetTWebRequest__Accept(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Accept;
end;

function __DC__GetTWebRequest__From(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).From;
end;

function __DC__GetTWebRequest__Host(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Host;
end;

function __DC__GetTWebRequest__IfModifiedSince(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).IfModifiedSince;
end;

function __DC__GetTWebRequest__Referer(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Referer;
end;

function __DC__GetTWebRequest__UserAgent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).UserAgent;
end;

function __DC__GetTWebRequest__ContentEncoding(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).ContentEncoding;
end;

function __DC__GetTWebRequest__ContentType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).ContentType;
end;

function __DC__GetTWebRequest__ContentLength(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).ContentLength;
end;

function __DC__GetTWebRequest__ContentVersion(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).ContentVersion;
end;

function __DC__GetTWebRequest__Content(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Content;
end;

function __DC__GetTWebRequest__Connection(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Connection;
end;

function __DC__GetTWebRequest__DerivedFrom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).DerivedFrom;
end;

function __DC__GetTWebRequest__Expires(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Expires;
end;

function __DC__GetTWebRequest__Title(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).Title;
end;

function __DC__GetTWebRequest__RemoteAddr(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).RemoteAddr;
end;

function __DC__GetTWebRequest__RemoteHost(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).RemoteHost;
end;

function __DC__GetTWebRequest__ScriptName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).ScriptName;
end;

function __DC__GetTWebRequest__ServerPort(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).ServerPort;
end;

function __DC__GetTWebRequest__InternalPathInfo(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).InternalPathInfo;
end;

function __DC__GetTWebRequest__InternalScriptName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRequest(Instance).InternalScriptName;
end;

function __DC__GetTWebRequest__Files(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebRequest(Instance).Files);
end;

function __DC__GetTWebResponse__Cookies(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebResponse(Instance).Cookies);
end;

function __DC__GetTWebResponse__HTTPRequest(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebResponse(Instance).HTTPRequest);
end;

function __DC__GetTWebResponse__Version(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).Version;
end;

procedure __DC__SetTWebResponse__Version(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).Version:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__ReasonString(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).ReasonString;
end;

procedure __DC__SetTWebResponse__ReasonString(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).ReasonString:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__Server(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).Server;
end;

procedure __DC__SetTWebResponse__Server(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).Server:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__WWWAuthenticate(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).WWWAuthenticate;
end;

procedure __DC__SetTWebResponse__WWWAuthenticate(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).WWWAuthenticate:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__Realm(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).Realm;
end;

procedure __DC__SetTWebResponse__Realm(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).Realm:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__Allow(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).Allow;
end;

procedure __DC__SetTWebResponse__Allow(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).Allow:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__Location(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).Location;
end;

procedure __DC__SetTWebResponse__Location(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).Location:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__ContentEncoding(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).ContentEncoding;
end;

procedure __DC__SetTWebResponse__ContentEncoding(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).ContentEncoding:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__ContentType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).ContentType;
end;

procedure __DC__SetTWebResponse__ContentType(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).ContentType:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__ContentVersion(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).ContentVersion;
end;

procedure __DC__SetTWebResponse__ContentVersion(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).ContentVersion:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__DerivedFrom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).DerivedFrom;
end;

procedure __DC__SetTWebResponse__DerivedFrom(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).DerivedFrom:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__Title(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).Title;
end;

procedure __DC__SetTWebResponse__Title(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).Title:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__StatusCode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).StatusCode;
end;

procedure __DC__SetTWebResponse__StatusCode(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).StatusCode:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__ContentLength(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).ContentLength;
end;

procedure __DC__SetTWebResponse__ContentLength(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).ContentLength:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__Date(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).Date;
end;

procedure __DC__SetTWebResponse__Date(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).Date:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__Expires(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).Expires;
end;

procedure __DC__SetTWebResponse__Expires(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).Expires:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__LastModified(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).LastModified;
end;

procedure __DC__SetTWebResponse__LastModified(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).LastModified:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__Content(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).Content;
end;

procedure __DC__SetTWebResponse__Content(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).Content:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__ContentStream(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebResponse(Instance).ContentStream);
end;

procedure __DC__SetTWebResponse__ContentStream(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).ContentStream:=TStream(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTWebResponse__LogMessage(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebResponse(Instance).LogMessage;
end;

procedure __DC__SetTWebResponse__LogMessage(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).LogMessage:=OleVariant(Params^[0]);
end;

function __DC__GetTWebResponse__CustomHeaders(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebResponse(Instance).CustomHeaders);
end;

procedure __DC__SetTWebResponse__CustomHeaders(Instance : TObject; Params : PVariantArgList);
begin
TWebResponse(Instance).CustomHeaders:=TStrings(VarToObject(OleVariant(Params^[0])));
end;

procedure __RegisterProps;
begin
RegisterProperty(TAbstractWebModuleFactory,'ModuleName',__DC__GetTAbstractWebModuleFactory__ModuleName,nil);
RegisterProperty(TAbstractWebModuleFactory,'IsAppModule',__DC__GetTAbstractWebModuleFactory__IsAppModule,nil);
RegisterProperty(TAbstractWebModuleFactory,'CreateMode',__DC__GetTAbstractWebModuleFactory__CreateMode,nil);
RegisterProperty(TAbstractWebModuleFactory,'CacheMode',__DC__GetTAbstractWebModuleFactory__CacheMode,nil);
RegisterProperty(TAbstractWebModuleFactory,'WebPageInfo',__DC__GetTAbstractWebModuleFactory__WebPageInfo,nil);
RegisterIndexedProperty(TAbstractWebModuleList,'Items',1,True,__DC__GetTAbstractWebModuleList__Items,nil);
RegisterProperty(TAbstractWebModuleList,'ItemCount',__DC__GetTAbstractWebModuleList__ItemCount,nil);
RegisterProperty(TAbstractWebModuleList,'FactoryCount',__DC__GetTAbstractWebModuleList__FactoryCount,nil);
RegisterIndexedProperty(TAbstractWebModuleList,'Factory',1,False,__DC__GetTAbstractWebModuleList__Factory,nil);
RegisterProperty(TAbstractWebPageInfo,'PageHREF',__DC__GetTAbstractWebPageInfo__PageHREF,nil);
RegisterProperty(TAbstractWebPageInfo,'PageDescription',__DC__GetTAbstractWebPageInfo__PageDescription,nil);
RegisterProperty(TAbstractWebPageInfo,'PageTitle',__DC__GetTAbstractWebPageInfo__PageTitle,nil);
RegisterProperty(TAbstractWebPageInfo,'PageName',__DC__GetTAbstractWebPageInfo__PageName,nil);
RegisterProperty(TAbstractWebPageInfo,'IsPublished',__DC__GetTAbstractWebPageInfo__IsPublished,nil);
RegisterProperty(TAbstractWebPageInfo,'IsLoginRequired',__DC__GetTAbstractWebPageInfo__IsLoginRequired,nil);
RegisterProperty(TAbstractWebPageInfo,'PageFile',__DC__GetTAbstractWebPageInfo__PageFile,nil);
RegisterProperty(TAbstractWebPageInfo,'ViewAccess',__DC__GetTAbstractWebPageInfo__ViewAccess,nil);
RegisterProperty(TAbstractWebPageInfo,'Factory',__DC__GetTAbstractWebPageInfo__Factory,__DC__SetTAbstractWebPageInfo__Factory);
RegisterProperty(TAbstractWebRequestFile,'FieldName',__DC__GetTAbstractWebRequestFile__FieldName,nil);
RegisterProperty(TAbstractWebRequestFile,'FileName',__DC__GetTAbstractWebRequestFile__FileName,nil);
RegisterProperty(TAbstractWebRequestFile,'Stream',__DC__GetTAbstractWebRequestFile__Stream,nil);
RegisterProperty(TAbstractWebRequestFile,'ContentType',__DC__GetTAbstractWebRequestFile__ContentType,nil);
RegisterIndexedProperty(TAbstractWebRequestFiles,'Items',1,True,__DC__GetTAbstractWebRequestFiles__Items,nil);
RegisterProperty(TAbstractWebRequestFiles,'Count',__DC__GetTAbstractWebRequestFiles__Count,nil);
RegisterProperty(TAbstractWebSession,'TimeoutMinutes',__DC__GetTAbstractWebSession__TimeoutMinutes,__DC__SetTAbstractWebSession__TimeoutMinutes);
RegisterIndexedProperty(TAbstractWebSession,'Values',1,False,__DC__GetTAbstractWebSession__Values,__DC__SetTAbstractWebSession__Values);
RegisterProperty(TAbstractWebSession,'SessionID',__DC__GetTAbstractWebSession__SessionID,nil);
RegisterProperty(TCookie,'Name',__DC__GetTCookie__Name,__DC__SetTCookie__Name);
RegisterProperty(TCookie,'Value',__DC__GetTCookie__Value,__DC__SetTCookie__Value);
RegisterProperty(TCookie,'Domain',__DC__GetTCookie__Domain,__DC__SetTCookie__Domain);
RegisterProperty(TCookie,'Path',__DC__GetTCookie__Path,__DC__SetTCookie__Path);
RegisterProperty(TCookie,'Expires',__DC__GetTCookie__Expires,__DC__SetTCookie__Expires);
RegisterProperty(TCookie,'Secure',__DC__GetTCookie__Secure,__DC__SetTCookie__Secure);
RegisterProperty(TCookie,'HeaderValue',__DC__GetTCookie__HeaderValue,nil);
RegisterProperty(TCookieCollection,'WebResponse',__DC__GetTCookieCollection__WebResponse,nil);
RegisterIndexedProperty(TCookieCollection,'Items',1,True,__DC__GetTCookieCollection__Items,__DC__SetTCookieCollection__Items);
RegisterProperty(TCustomContentProducer,'DispatcherComponent',__DC__GetTCustomContentProducer__DispatcherComponent,nil);
RegisterProperty(TCustomWebDispatcher,'Actions',__DC__GetTCustomWebDispatcher__Actions,__DC__SetTCustomWebDispatcher__Actions);
RegisterIndexedProperty(TCustomWebDispatcher,'Action',1,False,__DC__GetTCustomWebDispatcher__Action,nil);
RegisterProperty(TCustomWebDispatcher,'Request',__DC__GetTCustomWebDispatcher__Request,nil);
RegisterProperty(TCustomWebDispatcher,'Response',__DC__GetTCustomWebDispatcher__Response,nil);
RegisterProperty(TWebActionItems,'WebDispatcher',__DC__GetTWebActionItems__WebDispatcher,nil);
RegisterIndexedProperty(TWebActionItems,'Items',1,True,__DC__GetTWebActionItems__Items,__DC__SetTWebActionItems__Items);
RegisterProperty(TWebRequest,'MethodType',__DC__GetTWebRequest__MethodType,nil);
RegisterProperty(TWebRequest,'ContentParser',__DC__GetTWebRequest__ContentParser,nil);
RegisterProperty(TWebRequest,'ContentFields',__DC__GetTWebRequest__ContentFields,nil);
RegisterProperty(TWebRequest,'CookieFields',__DC__GetTWebRequest__CookieFields,nil);
RegisterProperty(TWebRequest,'QueryFields',__DC__GetTWebRequest__QueryFields,nil);
RegisterProperty(TWebRequest,'Method',__DC__GetTWebRequest__Method,nil);
RegisterProperty(TWebRequest,'ProtocolVersion',__DC__GetTWebRequest__ProtocolVersion,nil);
RegisterProperty(TWebRequest,'URL',__DC__GetTWebRequest__URL,nil);
RegisterProperty(TWebRequest,'Query',__DC__GetTWebRequest__Query,nil);
RegisterProperty(TWebRequest,'PathInfo',__DC__GetTWebRequest__PathInfo,nil);
RegisterProperty(TWebRequest,'PathTranslated',__DC__GetTWebRequest__PathTranslated,nil);
RegisterProperty(TWebRequest,'Authorization',__DC__GetTWebRequest__Authorization,nil);
RegisterProperty(TWebRequest,'CacheControl',__DC__GetTWebRequest__CacheControl,nil);
RegisterProperty(TWebRequest,'Cookie',__DC__GetTWebRequest__Cookie,nil);
RegisterProperty(TWebRequest,'Date',__DC__GetTWebRequest__Date,nil);
RegisterProperty(TWebRequest,'Accept',__DC__GetTWebRequest__Accept,nil);
RegisterProperty(TWebRequest,'From',__DC__GetTWebRequest__From,nil);
RegisterProperty(TWebRequest,'Host',__DC__GetTWebRequest__Host,nil);
RegisterProperty(TWebRequest,'IfModifiedSince',__DC__GetTWebRequest__IfModifiedSince,nil);
RegisterProperty(TWebRequest,'Referer',__DC__GetTWebRequest__Referer,nil);
RegisterProperty(TWebRequest,'UserAgent',__DC__GetTWebRequest__UserAgent,nil);
RegisterProperty(TWebRequest,'ContentEncoding',__DC__GetTWebRequest__ContentEncoding,nil);
RegisterProperty(TWebRequest,'ContentType',__DC__GetTWebRequest__ContentType,nil);
RegisterProperty(TWebRequest,'ContentLength',__DC__GetTWebRequest__ContentLength,nil);
RegisterProperty(TWebRequest,'ContentVersion',__DC__GetTWebRequest__ContentVersion,nil);
RegisterProperty(TWebRequest,'Content',__DC__GetTWebRequest__Content,nil);
RegisterProperty(TWebRequest,'Connection',__DC__GetTWebRequest__Connection,nil);
RegisterProperty(TWebRequest,'DerivedFrom',__DC__GetTWebRequest__DerivedFrom,nil);
RegisterProperty(TWebRequest,'Expires',__DC__GetTWebRequest__Expires,nil);
RegisterProperty(TWebRequest,'Title',__DC__GetTWebRequest__Title,nil);
RegisterProperty(TWebRequest,'RemoteAddr',__DC__GetTWebRequest__RemoteAddr,nil);
RegisterProperty(TWebRequest,'RemoteHost',__DC__GetTWebRequest__RemoteHost,nil);
RegisterProperty(TWebRequest,'ScriptName',__DC__GetTWebRequest__ScriptName,nil);
RegisterProperty(TWebRequest,'ServerPort',__DC__GetTWebRequest__ServerPort,nil);
RegisterProperty(TWebRequest,'InternalPathInfo',__DC__GetTWebRequest__InternalPathInfo,nil);
RegisterProperty(TWebRequest,'InternalScriptName',__DC__GetTWebRequest__InternalScriptName,nil);
RegisterProperty(TWebRequest,'Files',__DC__GetTWebRequest__Files,nil);
RegisterProperty(TWebResponse,'Cookies',__DC__GetTWebResponse__Cookies,nil);
RegisterProperty(TWebResponse,'HTTPRequest',__DC__GetTWebResponse__HTTPRequest,nil);
RegisterProperty(TWebResponse,'Version',__DC__GetTWebResponse__Version,__DC__SetTWebResponse__Version);
RegisterProperty(TWebResponse,'ReasonString',__DC__GetTWebResponse__ReasonString,__DC__SetTWebResponse__ReasonString);
RegisterProperty(TWebResponse,'Server',__DC__GetTWebResponse__Server,__DC__SetTWebResponse__Server);
RegisterProperty(TWebResponse,'WWWAuthenticate',__DC__GetTWebResponse__WWWAuthenticate,__DC__SetTWebResponse__WWWAuthenticate);
RegisterProperty(TWebResponse,'Realm',__DC__GetTWebResponse__Realm,__DC__SetTWebResponse__Realm);
RegisterProperty(TWebResponse,'Allow',__DC__GetTWebResponse__Allow,__DC__SetTWebResponse__Allow);
RegisterProperty(TWebResponse,'Location',__DC__GetTWebResponse__Location,__DC__SetTWebResponse__Location);
RegisterProperty(TWebResponse,'ContentEncoding',__DC__GetTWebResponse__ContentEncoding,__DC__SetTWebResponse__ContentEncoding);
RegisterProperty(TWebResponse,'ContentType',__DC__GetTWebResponse__ContentType,__DC__SetTWebResponse__ContentType);
RegisterProperty(TWebResponse,'ContentVersion',__DC__GetTWebResponse__ContentVersion,__DC__SetTWebResponse__ContentVersion);
RegisterProperty(TWebResponse,'DerivedFrom',__DC__GetTWebResponse__DerivedFrom,__DC__SetTWebResponse__DerivedFrom);
RegisterProperty(TWebResponse,'Title',__DC__GetTWebResponse__Title,__DC__SetTWebResponse__Title);
RegisterProperty(TWebResponse,'StatusCode',__DC__GetTWebResponse__StatusCode,__DC__SetTWebResponse__StatusCode);
RegisterProperty(TWebResponse,'ContentLength',__DC__GetTWebResponse__ContentLength,__DC__SetTWebResponse__ContentLength);
RegisterProperty(TWebResponse,'Date',__DC__GetTWebResponse__Date,__DC__SetTWebResponse__Date);
RegisterProperty(TWebResponse,'Expires',__DC__GetTWebResponse__Expires,__DC__SetTWebResponse__Expires);
RegisterProperty(TWebResponse,'LastModified',__DC__GetTWebResponse__LastModified,__DC__SetTWebResponse__LastModified);
RegisterProperty(TWebResponse,'Content',__DC__GetTWebResponse__Content,__DC__SetTWebResponse__Content);
RegisterProperty(TWebResponse,'ContentStream',__DC__GetTWebResponse__ContentStream,__DC__SetTWebResponse__ContentStream);
RegisterProperty(TWebResponse,'LogMessage',__DC__GetTWebResponse__LogMessage,__DC__SetTWebResponse__LogMessage);
RegisterProperty(TWebResponse,'CustomHeaders',__DC__GetTWebResponse__CustomHeaders,__DC__SetTWebResponse__CustomHeaders);
end;

const __ConstNames0 : array[0..12] of string = (
'sDateFormat'
,'MAX_STRINGS'
,'MAX_INTEGERS'
,'MAX_DATETIMES'
,'mtAny'
,'mtGet'
,'mtPut'
,'mtPost'
,'mtHead'
,'crOnDemand'
,'crAlways'
,'caCache'
,'caDestroy'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,sDateFormat));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,MAX_STRINGS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,MAX_INTEGERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,MAX_DATETIMES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,mtAny));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,mtGet));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,mtPut));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,mtPost));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,mtHead));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,crOnDemand));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,crAlways));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,caCache));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,caDestroy));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..21] of TClass = (
EWebBrokerException,
TAbstractContentParser,
TAbstractWebModuleFactory,
TAbstractWebModuleList,
TAbstractWebPageInfo,
TAbstractWebPageModuleFactory,
TAbstractWebRequestFile,
TAbstractWebRequestFiles,
TAbstractWebSession,
TContentParser,
TCookie,
TCookieCollection,
TCustomContentProducer,
TCustomWebDispatcher,
TDefaultWebAppServices,
TWebActionItem,
TWebActionItems,
TWebDispatcher,
TWebModule,
TWebModuleContext,
TWebRequest,
TWebResponse
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..9] of string = (
'DosPathToUnixPath'
,'HTTPDecode'
,'HTTPEncode'
,'HTMLEncode'
,'HTMLDecode'
,'ParseDate'
,'StatusString'
,'UnixPathToDosPath'
,'MonthStr'
,'DayOfWeekStr'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(string),TypeInfo(string)],Addr(DosPathToUnixPath),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(string),TypeInfo(string)],Addr(HTTPDecode),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(string),TypeInfo(string)],Addr(HTTPEncode),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),[
TypeInfo(string),TypeInfo(string)],Addr(HTMLEncode),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T4),[
TypeInfo(string),TypeInfo(string)],Addr(HTMLDecode),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T5),[
TypeInfo(string),TypeInfo(TDateTime)],Addr(ParseDate),cRegister);

RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T8),[
TypeInfo(Integer),TypeInfo(string)],Addr(StatusString),cRegister);

RegisterProc(nil,MethodNames[7],mtProc,TypeInfo(_T9),[
TypeInfo(string),TypeInfo(string)],Addr(UnixPathToDosPath),cRegister);

RegisterProc(nil,MethodNames[8],mtProc,TypeInfo(_T10),[
TypeInfo(TDateTime),TypeInfo(string)],Addr(MonthStr),cRegister);

RegisterProc(nil,MethodNames[9],mtProc,TypeInfo(_T11),[
TypeInfo(TDateTime),TypeInfo(string)],Addr(DayOfWeekStr),cRegister);

//RegRegisterMethod(TAbstractContentParser,'GetContentFields',TypeInfo(_T13),[TypeInfo(TStrings)], pointer(0));
RegRegisterMethod(TAbstractContentParser,'GetContentFields',TypeInfo(_T13),[TypeInfo(TStrings)],  getVMTProcAddr('TAbstractContentParser','GetContentFields',0));


//RegRegisterMethod(TAbstractContentParser,'GetFiles',TypeInfo(_T14),[TypeInfo(TAbstractWebRequestFiles)], pointer(4));
RegRegisterMethod(TAbstractContentParser,'GetFiles',TypeInfo(_T14),[TypeInfo(TAbstractWebRequestFiles)],  getVMTProcAddr('TAbstractContentParser','GetFiles',4));


RegisterProc(TAbstractContentParser,'Create',mtConstructor,TypeInfo(_T15),[
TypeInfo(TWebRequest)], pointer(8),cRegister);

RegisterProc(TAbstractContentParser,'CanParse',mtClassMethod,TypeInfo(_T16),[
TypeInfo(TWebRequest),TypeInfo(Boolean)], pointer(12),cRegister);

//RegRegisterMethod(TAbstractWebModuleFactory,'GetModuleName',TypeInfo(_T17),[TypeInfo(string)], pointer(0));
RegRegisterMethod(TAbstractWebModuleFactory,'GetModuleName',TypeInfo(_T17),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebModuleFactory','GetModuleName',0));


//RegRegisterMethod(TAbstractWebModuleFactory,'GetIsAppModule',TypeInfo(_T18),[TypeInfo(Boolean)], pointer(4));
RegRegisterMethod(TAbstractWebModuleFactory,'GetIsAppModule',TypeInfo(_T18),[TypeInfo(Boolean)],  getVMTProcAddr('TAbstractWebModuleFactory','GetIsAppModule',4));


//RegRegisterMethod(TAbstractWebModuleFactory,'GetCreateMode',TypeInfo(_T19),[TypeInfo(TWebModuleCreateMode)], pointer(8));
RegRegisterMethod(TAbstractWebModuleFactory,'GetCreateMode',TypeInfo(_T19),[TypeInfo(TWebModuleCreateMode)],  getVMTProcAddr('TAbstractWebModuleFactory','GetCreateMode',8));


//RegRegisterMethod(TAbstractWebModuleFactory,'GetCacheMode',TypeInfo(_T20),[TypeInfo(TWebModuleCacheMode)], pointer(12));
RegRegisterMethod(TAbstractWebModuleFactory,'GetCacheMode',TypeInfo(_T20),[TypeInfo(TWebModuleCacheMode)],  getVMTProcAddr('TAbstractWebModuleFactory','GetCacheMode',12));


//RegRegisterMethod(TAbstractWebModuleFactory,'GetWebPageInfo',TypeInfo(_T22),[TypeInfo(TAbstractWebPageInfo)], pointer(20));
RegRegisterMethod(TAbstractWebModuleFactory,'GetWebPageInfo',TypeInfo(_T22),[TypeInfo(TAbstractWebPageInfo)],  getVMTProcAddr('TAbstractWebModuleFactory','GetWebPageInfo',20));


//RegRegisterMethod(TAbstractWebModuleFactory,'GetModule',TypeInfo(_T23),[TypeInfo(TComponent)], pointer(24));
RegRegisterMethod(TAbstractWebModuleFactory,'GetModule',TypeInfo(_T23),[TypeInfo(TComponent)],  getVMTProcAddr('TAbstractWebModuleFactory','GetModule',24));


//RegRegisterMethod(TAbstractWebModuleFactory,'PreventDestruction',TypeInfo(_T24),NoParams, pointer(28));
RegRegisterMethod(TAbstractWebModuleFactory,'PreventDestruction',TypeInfo(_T24),NoParams,  getVMTProcAddr('TAbstractWebModuleFactory','PreventDestruction',28));


//RegRegisterMethod(TAbstractWebModuleList,'GetItem',TypeInfo(_T25),[TypeInfo(Integer),TypeInfo(TComponent)], pointer(0));
RegRegisterMethod(TAbstractWebModuleList,'GetItem',TypeInfo(_T25),[TypeInfo(Integer),TypeInfo(TComponent)],  getVMTProcAddr('TAbstractWebModuleList','GetItem',0));


//RegRegisterMethod(TAbstractWebModuleList,'GetItemCount',TypeInfo(_T26),[TypeInfo(Integer)], pointer(4));
RegRegisterMethod(TAbstractWebModuleList,'GetItemCount',TypeInfo(_T26),[TypeInfo(Integer)],  getVMTProcAddr('TAbstractWebModuleList','GetItemCount',4));


//RegRegisterMethod(TAbstractWebModuleList,'GetFactoryCount',TypeInfo(_T29),[TypeInfo(Integer)], pointer(16));
RegRegisterMethod(TAbstractWebModuleList,'GetFactoryCount',TypeInfo(_T29),[TypeInfo(Integer)],  getVMTProcAddr('TAbstractWebModuleList','GetFactoryCount',16));


//RegRegisterMethod(TAbstractWebModuleList,'GetFactory',TypeInfo(_T30),[TypeInfo(Integer),TypeInfo(TAbstractWebModuleFactory)], pointer(20));
RegRegisterMethod(TAbstractWebModuleList,'GetFactory',TypeInfo(_T30),[TypeInfo(Integer),TypeInfo(TAbstractWebModuleFactory)],  getVMTProcAddr('TAbstractWebModuleList','GetFactory',20));


//RegRegisterMethod(TAbstractWebModuleList,'FindModuleName',TypeInfo(_T32),[TypeInfo(string),TypeInfo(TComponent)], pointer(28));
RegRegisterMethod(TAbstractWebModuleList,'FindModuleName',TypeInfo(_T32),[TypeInfo(string),TypeInfo(TComponent)],  getVMTProcAddr('TAbstractWebModuleList','FindModuleName',28));


//RegRegisterMethod(TAbstractWebModuleList,'AddModuleName',TypeInfo(_T34),[TypeInfo(string),TypeInfo(TComponent)], pointer(36));
RegRegisterMethod(TAbstractWebModuleList,'AddModuleName',TypeInfo(_T34),[TypeInfo(string),TypeInfo(TComponent)],  getVMTProcAddr('TAbstractWebModuleList','AddModuleName',36));


//RegRegisterMethod(TAbstractWebPageInfo,'GetPageFile',TypeInfo(_T35),[TypeInfo(string)], pointer(0));
RegRegisterMethod(TAbstractWebPageInfo,'GetPageFile',TypeInfo(_T35),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebPageInfo','GetPageFile',0));


//RegRegisterMethod(TAbstractWebPageInfo,'GetPageHREF',TypeInfo(_T36),[TypeInfo(string)], pointer(4));
RegRegisterMethod(TAbstractWebPageInfo,'GetPageHREF',TypeInfo(_T36),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebPageInfo','GetPageHREF',4));


//RegRegisterMethod(TAbstractWebPageInfo,'GetPageName',TypeInfo(_T37),[TypeInfo(string)], pointer(8));
RegRegisterMethod(TAbstractWebPageInfo,'GetPageName',TypeInfo(_T37),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebPageInfo','GetPageName',8));


//RegRegisterMethod(TAbstractWebPageInfo,'GetPageDescription',TypeInfo(_T38),[TypeInfo(string)], pointer(12));
RegRegisterMethod(TAbstractWebPageInfo,'GetPageDescription',TypeInfo(_T38),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebPageInfo','GetPageDescription',12));


//RegRegisterMethod(TAbstractWebPageInfo,'GetPageTitle',TypeInfo(_T39),[TypeInfo(string)], pointer(16));
RegRegisterMethod(TAbstractWebPageInfo,'GetPageTitle',TypeInfo(_T39),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebPageInfo','GetPageTitle',16));


//RegRegisterMethod(TAbstractWebPageInfo,'GetIsPublished',TypeInfo(_T40),[TypeInfo(Boolean)], pointer(20));
RegRegisterMethod(TAbstractWebPageInfo,'GetIsPublished',TypeInfo(_T40),[TypeInfo(Boolean)],  getVMTProcAddr('TAbstractWebPageInfo','GetIsPublished',20));


//RegRegisterMethod(TAbstractWebPageInfo,'GetIsLoginRequired',TypeInfo(_T41),[TypeInfo(Boolean)], pointer(24));
RegRegisterMethod(TAbstractWebPageInfo,'GetIsLoginRequired',TypeInfo(_T41),[TypeInfo(Boolean)],  getVMTProcAddr('TAbstractWebPageInfo','GetIsLoginRequired',24));


//RegRegisterMethod(TAbstractWebPageInfo,'GetViewAccess',TypeInfo(_T42),[TypeInfo(string)], pointer(28));
RegRegisterMethod(TAbstractWebPageInfo,'GetViewAccess',TypeInfo(_T42),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebPageInfo','GetViewAccess',28));


//RegRegisterMethod(TAbstractWebPageInfo,'SetFactory',TypeInfo(_T43),[TypeInfo(TAbstractWebPageModuleFactory)], pointer(32));
RegRegisterMethod(TAbstractWebPageInfo,'SetFactory',TypeInfo(_T43),[TypeInfo(TAbstractWebPageModuleFactory)],  getVMTProcAddr('TAbstractWebPageInfo','SetFactory',32));


RegisterProc(TAbstractWebPageModuleFactory,'Create',mtConstructor,TypeInfo(_T44),[
TypeInfo(TAbstractWebPageInfo)],Addr(TAbstractWebPageModuleFactory.Create),cRegister);

//RegRegisterMethod(TAbstractWebRequestFile,'GetFieldName',TypeInfo(_T45),[TypeInfo(string)], pointer(0));
RegRegisterMethod(TAbstractWebRequestFile,'GetFieldName',TypeInfo(_T45),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebRequestFile','GetFieldName',0));


//RegRegisterMethod(TAbstractWebRequestFile,'GetFileName',TypeInfo(_T46),[TypeInfo(string)], pointer(4));
RegRegisterMethod(TAbstractWebRequestFile,'GetFileName',TypeInfo(_T46),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebRequestFile','GetFileName',4));


//RegRegisterMethod(TAbstractWebRequestFile,'GetStream',TypeInfo(_T47),[TypeInfo(TStream)], pointer(8));
RegRegisterMethod(TAbstractWebRequestFile,'GetStream',TypeInfo(_T47),[TypeInfo(TStream)],  getVMTProcAddr('TAbstractWebRequestFile','GetStream',8));


//RegRegisterMethod(TAbstractWebRequestFile,'GetContentType',TypeInfo(_T48),[TypeInfo(string)], pointer(12));
RegRegisterMethod(TAbstractWebRequestFile,'GetContentType',TypeInfo(_T48),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebRequestFile','GetContentType',12));


//RegRegisterMethod(TAbstractWebRequestFiles,'GetCount',TypeInfo(_T49),[TypeInfo(Integer)], pointer(0));
RegRegisterMethod(TAbstractWebRequestFiles,'GetCount',TypeInfo(_T49),[TypeInfo(Integer)],  getVMTProcAddr('TAbstractWebRequestFiles','GetCount',0));


//RegRegisterMethod(TAbstractWebRequestFiles,'GetItem',TypeInfo(_T50),[TypeInfo(Integer),TypeInfo(TAbstractWebRequestFile)], pointer(4));
RegRegisterMethod(TAbstractWebRequestFiles,'GetItem',TypeInfo(_T50),[TypeInfo(Integer),TypeInfo(TAbstractWebRequestFile)],  getVMTProcAddr('TAbstractWebRequestFiles','GetItem',4));


//RegRegisterMethod(TAbstractWebSession,'GetValue',TypeInfo(_T51),[TypeInfo(string),TypeInfo(Variant)], pointer(0));
RegRegisterMethod(TAbstractWebSession,'GetValue',TypeInfo(_T51),[TypeInfo(string),TypeInfo(Variant)],  getVMTProcAddr('TAbstractWebSession','GetValue',0));


//RegRegisterMethod(TAbstractWebSession,'SetValue',TypeInfo(_T52),[TypeInfo(string),TypeInfo(Variant)], pointer(4));
RegRegisterMethod(TAbstractWebSession,'SetValue',TypeInfo(_T52),[TypeInfo(string),TypeInfo(Variant)],  getVMTProcAddr('TAbstractWebSession','SetValue',4));


//RegRegisterMethod(TAbstractWebSession,'GetTimeoutMinutes',TypeInfo(_T53),[TypeInfo(Integer)], pointer(8));
RegRegisterMethod(TAbstractWebSession,'GetTimeoutMinutes',TypeInfo(_T53),[TypeInfo(Integer)],  getVMTProcAddr('TAbstractWebSession','GetTimeoutMinutes',8));


//RegRegisterMethod(TAbstractWebSession,'SetTimeoutMinutes',TypeInfo(_T54),[TypeInfo(Integer)], pointer(12));
RegRegisterMethod(TAbstractWebSession,'SetTimeoutMinutes',TypeInfo(_T54),[TypeInfo(Integer)],  getVMTProcAddr('TAbstractWebSession','SetTimeoutMinutes',12));


//RegRegisterMethod(TAbstractWebSession,'GetSessionID',TypeInfo(_T55),[TypeInfo(string)], pointer(16));
RegRegisterMethod(TAbstractWebSession,'GetSessionID',TypeInfo(_T55),[TypeInfo(string)],  getVMTProcAddr('TAbstractWebSession','GetSessionID',16));


//RegRegisterMethod(TAbstractWebSession,'UpdateResponse',TypeInfo(_T56),[TypeInfo(TWebResponse)], pointer(20));
RegRegisterMethod(TAbstractWebSession,'UpdateResponse',TypeInfo(_T56),[TypeInfo(TWebResponse)],  getVMTProcAddr('TAbstractWebSession','UpdateResponse',20));


//RegRegisterMethod(TAbstractWebSession,'Terminate',TypeInfo(_T57),NoParams, pointer(24));
RegRegisterMethod(TAbstractWebSession,'Terminate',TypeInfo(_T57),NoParams,  getVMTProcAddr('TAbstractWebSession','Terminate',24));


RegRegisterMethod(TCookieCollection,'Add',TypeInfo(_T59),[TypeInfo(TCookie)],Addr(TCookieCollection.Add));

//RegRegisterMethod(TCustomContentProducer,'Content',TypeInfo(_T60),[TypeInfo(string)], pointer(48));
RegRegisterMethod(TCustomContentProducer,'Content',TypeInfo(_T60),[TypeInfo(string)],  getVMTProcAddr('TCustomContentProducer','Content',48));


//RegRegisterMethod(TCustomContentProducer,'ContentFromStream',TypeInfo(_T61),[TypeInfo(TStream),TypeInfo(string)], pointer(52));
RegRegisterMethod(TCustomContentProducer,'ContentFromStream',TypeInfo(_T61),[TypeInfo(TStream),TypeInfo(string)],  getVMTProcAddr('TCustomContentProducer','ContentFromStream',52));


//RegRegisterMethod(TCustomContentProducer,'ContentFromString',TypeInfo(_T62),[TypeInfo(string),TypeInfo(string)], pointer(56));
RegRegisterMethod(TCustomContentProducer,'ContentFromString',TypeInfo(_T62),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TCustomContentProducer','ContentFromString',56));


RegRegisterMethod(TCustomWebDispatcher,'ActionByName',TypeInfo(_T63),[
TypeInfo(string),TypeInfo(TWebActionItem)],Addr(TCustomWebDispatcher.ActionByName));

RegRegisterMethod(TWebActionItems,'Add',TypeInfo(_T66),[TypeInfo(TWebActionItem)],Addr(TWebActionItems.Add));

//RegRegisterMethod(TWebRequest,'GetStringVariable',TypeInfo(_T67),[TypeInfo(Integer),TypeInfo(string)], pointer(0));
RegRegisterMethod(TWebRequest,'GetStringVariable',TypeInfo(_T67),[TypeInfo(Integer),TypeInfo(string)],  getVMTProcAddr('TWebRequest','GetStringVariable',0));


//RegRegisterMethod(TWebRequest,'GetDateVariable',TypeInfo(_T68),[TypeInfo(Integer),TypeInfo(TDateTime)], pointer(4));
RegRegisterMethod(TWebRequest,'GetDateVariable',TypeInfo(_T68),[TypeInfo(Integer),TypeInfo(TDateTime)],  getVMTProcAddr('TWebRequest','GetDateVariable',4));


//RegRegisterMethod(TWebRequest,'GetIntegerVariable',TypeInfo(_T69),[TypeInfo(Integer),TypeInfo(Integer)], pointer(8));
RegRegisterMethod(TWebRequest,'GetIntegerVariable',TypeInfo(_T69),[TypeInfo(Integer),TypeInfo(Integer)],  getVMTProcAddr('TWebRequest','GetIntegerVariable',8));


//RegRegisterMethod(TWebRequest,'GetInternalPathInfo',TypeInfo(_T70),[TypeInfo(string)], pointer(12));
RegRegisterMethod(TWebRequest,'GetInternalPathInfo',TypeInfo(_T70),[TypeInfo(string)],  getVMTProcAddr('TWebRequest','GetInternalPathInfo',12));


//RegRegisterMethod(TWebRequest,'GetInternalScriptName',TypeInfo(_T71),[TypeInfo(string)], pointer(16));
RegRegisterMethod(TWebRequest,'GetInternalScriptName',TypeInfo(_T71),[TypeInfo(string)],  getVMTProcAddr('TWebRequest','GetInternalScriptName',16));


RegisterProc(TWebRequest,'Create',mtConstructor,TypeInfo(_T72),NoParams,Addr(TWebRequest.Create),cRegister);

//RegRegisterMethod(TWebRequest,'ReadClient',TypeInfo(_T73),[TypeInfoUntyped,TypeInfo(Integer),TypeInfo(Integer)], pointer(20));
RegRegisterMethod(TWebRequest,'ReadClient',TypeInfo(_T73),[TypeInfoUntyped,TypeInfo(Integer),TypeInfo(Integer)],  getVMTProcAddr('TWebRequest','ReadClient',20));


//RegRegisterMethod(TWebRequest,'ReadString',TypeInfo(_T74),[TypeInfo(Integer),TypeInfo(string)], pointer(24));
RegRegisterMethod(TWebRequest,'ReadString',TypeInfo(_T74),[TypeInfo(Integer),TypeInfo(string)],  getVMTProcAddr('TWebRequest','ReadString',24));


//RegRegisterMethod(TWebRequest,'TranslateURI',TypeInfo(_T75),[TypeInfo(string),TypeInfo(string)], pointer(28));
RegRegisterMethod(TWebRequest,'TranslateURI',TypeInfo(_T75),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TWebRequest','TranslateURI',28));


//RegRegisterMethod(TWebRequest,'WriteClient',TypeInfo(_T76),[TypeInfoUntyped,TypeInfo(Integer),TypeInfo(Integer)], pointer(32));
RegRegisterMethod(TWebRequest,'WriteClient',TypeInfo(_T76),[TypeInfoUntyped,TypeInfo(Integer),TypeInfo(Integer)],  getVMTProcAddr('TWebRequest','WriteClient',32));


//RegRegisterMethod(TWebRequest,'WriteString',TypeInfo(_T77),[TypeInfo(string),TypeInfo(Boolean)], pointer(36));
RegRegisterMethod(TWebRequest,'WriteString',TypeInfo(_T77),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TWebRequest','WriteString',36));


//RegRegisterMethod(TWebRequest,'WriteHeaders',TypeInfo(_T78),[TypeInfo(Integer),TypeInfo(string),TypeInfo(string),TypeInfo(Boolean)], pointer(40));
RegRegisterMethod(TWebRequest,'WriteHeaders',TypeInfo(_T78),[TypeInfo(Integer),TypeInfo(string),TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TWebRequest','WriteHeaders',40));


RegRegisterMethod(TWebRequest,'ExtractContentFields',TypeInfo(_T80),[
TypeInfo(TStrings)],Addr(TWebRequest.ExtractContentFields));

RegRegisterMethod(TWebRequest,'ExtractCookieFields',TypeInfo(_T81),[
TypeInfo(TStrings)],Addr(TWebRequest.ExtractCookieFields));

RegRegisterMethod(TWebRequest,'ExtractQueryFields',TypeInfo(_T82),[
TypeInfo(TStrings)],Addr(TWebRequest.ExtractQueryFields));

//RegRegisterMethod(TWebRequest,'GetFieldByName',TypeInfo(_T83),[TypeInfo(string),TypeInfo(string)], pointer(44));
RegRegisterMethod(TWebRequest,'GetFieldByName',TypeInfo(_T83),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TWebRequest','GetFieldByName',44));


//RegRegisterMethod(TWebResponse,'GetStringVariable',TypeInfo(_T84),[TypeInfo(Integer),TypeInfo(string)], pointer(0));
RegRegisterMethod(TWebResponse,'GetStringVariable',TypeInfo(_T84),[TypeInfo(Integer),TypeInfo(string)],  getVMTProcAddr('TWebResponse','GetStringVariable',0));


//RegRegisterMethod(TWebResponse,'SetStringVariable',TypeInfo(_T85),[TypeInfo(Integer),TypeInfo(string)], pointer(4));
RegRegisterMethod(TWebResponse,'SetStringVariable',TypeInfo(_T85),[TypeInfo(Integer),TypeInfo(string)],  getVMTProcAddr('TWebResponse','SetStringVariable',4));


//RegRegisterMethod(TWebResponse,'GetDateVariable',TypeInfo(_T86),[TypeInfo(Integer),TypeInfo(TDateTime)], pointer(8));
RegRegisterMethod(TWebResponse,'GetDateVariable',TypeInfo(_T86),[TypeInfo(Integer),TypeInfo(TDateTime)],  getVMTProcAddr('TWebResponse','GetDateVariable',8));


//RegRegisterMethod(TWebResponse,'SetDateVariable',TypeInfo(_T87),[TypeInfo(Integer),TypeInfo(TDateTime)], pointer(12));
RegRegisterMethod(TWebResponse,'SetDateVariable',TypeInfo(_T87),[TypeInfo(Integer),TypeInfo(TDateTime)],  getVMTProcAddr('TWebResponse','SetDateVariable',12));


//RegRegisterMethod(TWebResponse,'GetIntegerVariable',TypeInfo(_T88),[TypeInfo(Integer),TypeInfo(Integer)], pointer(16));
RegRegisterMethod(TWebResponse,'GetIntegerVariable',TypeInfo(_T88),[TypeInfo(Integer),TypeInfo(Integer)],  getVMTProcAddr('TWebResponse','GetIntegerVariable',16));


//RegRegisterMethod(TWebResponse,'SetIntegerVariable',TypeInfo(_T89),[TypeInfo(Integer),TypeInfo(Integer)], pointer(20));
RegRegisterMethod(TWebResponse,'SetIntegerVariable',TypeInfo(_T89),[TypeInfo(Integer),TypeInfo(Integer)],  getVMTProcAddr('TWebResponse','SetIntegerVariable',20));


//RegRegisterMethod(TWebResponse,'GetContent',TypeInfo(_T90),[TypeInfo(string)], pointer(24));
RegRegisterMethod(TWebResponse,'GetContent',TypeInfo(_T90),[TypeInfo(string)],  getVMTProcAddr('TWebResponse','GetContent',24));


//RegRegisterMethod(TWebResponse,'SetContent',TypeInfo(_T91),[TypeInfo(string)], pointer(28));
RegRegisterMethod(TWebResponse,'SetContent',TypeInfo(_T91),[TypeInfo(string)],  getVMTProcAddr('TWebResponse','SetContent',28));


//RegRegisterMethod(TWebResponse,'SetContentStream',TypeInfo(_T92),[TypeInfo(TStream)], pointer(32));
RegRegisterMethod(TWebResponse,'SetContentStream',TypeInfo(_T92),[TypeInfo(TStream)],  getVMTProcAddr('TWebResponse','SetContentStream',32));


//RegRegisterMethod(TWebResponse,'GetStatusCode',TypeInfo(_T93),[TypeInfo(Integer)], pointer(36));
RegRegisterMethod(TWebResponse,'GetStatusCode',TypeInfo(_T93),[TypeInfo(Integer)],  getVMTProcAddr('TWebResponse','GetStatusCode',36));


//RegRegisterMethod(TWebResponse,'SetStatusCode',TypeInfo(_T94),[TypeInfo(Integer)], pointer(40));
RegRegisterMethod(TWebResponse,'SetStatusCode',TypeInfo(_T94),[TypeInfo(Integer)],  getVMTProcAddr('TWebResponse','SetStatusCode',40));


//RegRegisterMethod(TWebResponse,'GetLogMessage',TypeInfo(_T95),[TypeInfo(string)], pointer(44));
RegRegisterMethod(TWebResponse,'GetLogMessage',TypeInfo(_T95),[TypeInfo(string)],  getVMTProcAddr('TWebResponse','GetLogMessage',44));


//RegRegisterMethod(TWebResponse,'SetLogMessage',TypeInfo(_T96),[TypeInfo(string)], pointer(48));
RegRegisterMethod(TWebResponse,'SetLogMessage',TypeInfo(_T96),[TypeInfo(string)],  getVMTProcAddr('TWebResponse','SetLogMessage',48));


RegisterProc(TWebResponse,'Create',mtConstructor,TypeInfo(_T97),[
TypeInfo(TWebRequest)],Addr(TWebResponse.Create),cRegister);

RegRegisterMethod(TWebResponse,'GetCustomHeader',TypeInfo(_T98),[
TypeInfo(string),TypeInfo(string)],Addr(TWebResponse.GetCustomHeader));

//RegRegisterMethod(TWebResponse,'SendResponse',TypeInfo(_T99),NoParams, pointer(52));
RegRegisterMethod(TWebResponse,'SendResponse',TypeInfo(_T99),NoParams,  getVMTProcAddr('TWebResponse','SendResponse',52));


//RegRegisterMethod(TWebResponse,'SendRedirect',TypeInfo(_T100),[TypeInfo(string)], pointer(56));
RegRegisterMethod(TWebResponse,'SendRedirect',TypeInfo(_T100),[TypeInfo(string)],  getVMTProcAddr('TWebResponse','SendRedirect',56));


//RegRegisterMethod(TWebResponse,'SendStream',TypeInfo(_T101),[TypeInfo(TStream)], pointer(60));
RegRegisterMethod(TWebResponse,'SendStream',TypeInfo(_T101),[TypeInfo(TStream)],  getVMTProcAddr('TWebResponse','SendStream',60));


//RegRegisterMethod(TWebResponse,'Sent',TypeInfo(_T102),[TypeInfo(Boolean)], pointer(64));
RegRegisterMethod(TWebResponse,'Sent',TypeInfo(_T102),[TypeInfo(Boolean)],  getVMTProcAddr('TWebResponse','Sent',64));


RegRegisterMethod(TWebResponse,'SetCookieField',TypeInfo(_T103),[
TypeInfo(TStrings),
TypeInfo(string),
TypeInfo(string),
TypeInfo(TDateTime),
TypeInfo(Boolean)],Addr(TWebResponse.SetCookieField));

RegRegisterMethod(TWebResponse,'SetCustomHeader',TypeInfo(_T104),[
TypeInfo(string),
TypeInfo(string)],Addr(TWebResponse.SetCustomHeader));

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'RegisterContentParser',mtProc,TypeInfo(_T12),[
TypeInfo(TContentParserClass)],Addr(RegisterContentParser),cRegister)}

{RegRegisterMethod(TAbstractWebModuleFactory,'GetComponentClass',TypeInfo(_T21),[TypeInfo(TComponentClass)], pointer(16))}

{RegRegisterMethod(TAbstractWebModuleList,'GetOnModuleAdded',TypeInfo(_T27),[TypeInfo(TModuleAddedProc)], pointer(8))}

{RegRegisterMethod(TAbstractWebModuleList,'SetOnModuleAdded',TypeInfo(_T28),[
TypeInfo(TModuleAddedProc)], pointer(12))}

{RegRegisterMethod(TAbstractWebModuleList,'FindModuleClass',TypeInfo(_T31),[
TypeInfo(TComponentClass),TypeInfo(TComponent)], pointer(24))}

{RegRegisterMethod(TAbstractWebModuleList,'AddModuleClass',TypeInfo(_T33),[
TypeInfo(TComponentClass),TypeInfo(TComponent)], pointer(32))}

{RegisterProc(TCookieCollection,'Create',mtConstructor,TypeInfo(_T58),[
TypeInfo(TWebResponse),
TypeInfo(TCollectionItemClass)],Addr(TCookieCollection.Create),cRegister)}

{RegRegisterMethod(TDefaultWebAppServices,'FindRequestHandler',TypeInfo(_T64),[TypeInfo(IWebRequestHandler)], pointer(0))}

{RegisterProc(TWebActionItems,'Create',mtConstructor,TypeInfo(_T65),[
TypeInfo(TCustomWebDispatcher),
TypeInfo(TCollectionItemClass)],Addr(TWebActionItems.Create),cRegister)}

{RegRegisterMethod(TWebRequest,'ExtractFields',TypeInfo(_T79),[
TypeInfo(TSysCharSet),
TypeInfo(TSysCharSet),
TypeInfoPChar,
TypeInfo(TStrings)],Addr(TWebRequest.ExtractFields))}

RegisterEvent(TypeInfo(THTTPMethodEvent),[
TypeInfo(TObject),
TypeInfo(TWebRequest),
TypeInfo(TWebResponse),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TModuleAddedProc),[
TypeInfo(TComponent)]);

RegisterEvent(TypeInfo(TWebExceptionEvent),[
TypeInfo(TObject),
TypeInfo(Exception),
TypeInfo(Boolean)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
