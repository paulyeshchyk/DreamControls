{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit XMLBROKR_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Variants,
  Classes,
  HTTPApp,
  DB,
  DBClient,
  Provider,
  WebComp,
  Masks,
  Midas,
  AutoDisp,
  XMLBrokr;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (const p0 : string;
p1 : TXMLOptions): string of object;

_T1 = function (var p0 : Integer;
var p1 : OleVariant;
p2 : TXMLOptions): string of object;

_T2 = function (const p0 : string;
out p1 : Integer): string of object;

_T3 = function (p0 : TWebRequest): string of object;

_T4 = function : string of object;

_T5 = function : Integer of object;

_T6 = _T4;

_T7 = _T4;

_T8 = function (p0 : TStrings): string of object;

_T9 = _T8;

_T10 = procedure (p0 : TComponent) of object;

_T11 = function (p0 : TObject;
p1 : TWebRequest;
out p2 : Integer;
var p3 : OleVariant;
p4 : TXMLOptions): string of object;

_T12 = function (p0 : TObject;
p1 : TWebRequest;
p2 : TWebResponse): Boolean of object;

_T13 = procedure  of object;

_T14 = procedure (p0 : TObject) of object;

_T15 = _T14;

_T16 = procedure (p0 : TStrings) of object;

function __DC__GetTXMLBroker__HasAppServer(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXMLBroker(Instance).HasAppServer;
end;

function __DC__GetTXMLBroker__Notify(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXMLBroker(Instance).Notify[OleVariant(Params^[0])]);
end;

function __DC__GetTXMLBroker__NotifyCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXMLBroker(Instance).NotifyCount;
end;

procedure __RegisterProps;
begin
RegisterProperty(TXMLBroker,'HasAppServer',__DC__GetTXMLBroker__HasAppServer,nil);
RegisterIndexedProperty(TXMLBroker,'Notify',1,False,__DC__GetTXMLBroker__Notify,nil);
RegisterProperty(TXMLBroker,'NotifyCount',__DC__GetTXMLBroker__NotifyCount,nil);
end;

const __ConstNames0 : array[0..3] of string = (
'xoQuote'
,'sProducer'
,'sPostDelta'
,'sRedirect'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,xoQuote));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,sProducer));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,sPostDelta));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,sRedirect));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..1] of TClass = (
TXMLBroker,
TXMLParams
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..0] of string = (
'FormatXML'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(string),
TypeInfo(TXMLOptions),TypeInfo(string)],Addr(FormatXML),cRegister);

RegRegisterMethod(TXMLBroker,'GetXMLRecords',TypeInfo(_T1),[
TypeInfo(Integer),
TypeInfo(OleVariant),
TypeInfo(TXMLOptions),TypeInfo(string)],Addr(TXMLBroker.GetXMLRecords));

RegRegisterMethod(TXMLBroker,'ApplyXMLUpdates',TypeInfo(_T2),[
TypeInfo(string),
TypeInfo(Integer),TypeInfo(string)],Addr(TXMLBroker.ApplyXMLUpdates));

RegRegisterMethod(TXMLBroker,'GetDelta',TypeInfo(_T3),[
TypeInfo(TWebRequest),TypeInfo(string)],Addr(TXMLBroker.GetDelta));

RegRegisterMethod(TXMLBroker,'GetErrors',TypeInfo(_T4),[TypeInfo(string)],Addr(TXMLBroker.GetErrors));

RegRegisterMethod(TXMLBroker,'GetErrorCount',TypeInfo(_T5),[TypeInfo(Integer)],Addr(TXMLBroker.GetErrorCount));

RegRegisterMethod(TXMLBroker,'HTMLSubmitFormName',TypeInfo(_T6),[TypeInfo(string)],Addr(TXMLBroker.HTMLSubmitFormName));

RegRegisterMethod(TXMLBroker,'SubmitFormVarName',TypeInfo(_T7),[TypeInfo(string)],Addr(TXMLBroker.SubmitFormVarName));

RegRegisterMethod(TXMLBroker,'RowSetVarName',TypeInfo(_T8),[
TypeInfo(TStrings),TypeInfo(string)],Addr(TXMLBroker.RowSetVarName));

RegRegisterMethod(TXMLBroker,'MasterRowSetVarName',TypeInfo(_T9),[
TypeInfo(TStrings),TypeInfo(string)],Addr(TXMLBroker.MasterRowSetVarName));

RegRegisterMethod(TXMLBroker,'SetProvider',TypeInfo(_T10),[
TypeInfo(TComponent)],Addr(TXMLBroker.SetProvider));

RegRegisterMethod(TXMLBroker,'RequestRecords',TypeInfo(_T11),[
TypeInfo(TObject),
TypeInfo(TWebRequest),
TypeInfo(Integer),
TypeInfo(OleVariant),
TypeInfo(TXMLOptions),TypeInfo(string)], pointer(48));

RegRegisterMethod(TXMLBroker,'RequestUpdate',TypeInfo(_T12),[
TypeInfo(TObject),
TypeInfo(TWebRequest),
TypeInfo(TWebResponse),TypeInfo(Boolean)], pointer(52));

RegRegisterMethod(TXMLBroker,'FetchParams',TypeInfo(_T13),NoParams, pointer(56));

RegRegisterMethod(TXMLBroker,'AddNotify',TypeInfo(_T14),[
TypeInfo(TObject)],Addr(TXMLBroker.AddNotify));

RegRegisterMethod(TXMLBroker,'RemoveNotify',TypeInfo(_T15),[
TypeInfo(TObject)],Addr(TXMLBroker.RemoveNotify));

RegRegisterMethod(TXMLParams,'AssignStrings',TypeInfo(_T16),[
TypeInfo(TStrings)],Addr(TXMLParams.AssignStrings));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
RegisterEvent(TypeInfo(TGetErrorResponseEvent),[
TypeInfo(TObject),
TypeInfo(Integer),
TypeInfo(string),
TypeInfo(TWebRequest),
TypeInfo(TWebResponse),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TGetResponseEvent),[
TypeInfo(TObject),
TypeInfo(TWebRequest),
TypeInfo(TWebResponse),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TRequestRecordsEvent),[
TypeInfo(TObject),
TypeInfo(TWebRequest),
TypeInfo(Integer),
TypeInfo(OleVariant),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TRequestUpdateEvent),[
TypeInfo(TObject),
TypeInfo(TWebRequest),
TypeInfo(TWebResponse),
TypeInfo(Boolean)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
