{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IBBATCHMOVE_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  SysUtils,
  Classes,
  DB,
  IB,
  IBDatabase,
  IBCustomDataSet,
  IBTable,
  IBIntf,
  IBBatchMove;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure  of object;

function __DC__GetTIBBatchMove__ChangedCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIBBatchMove(Instance).ChangedCount;
end;

function __DC__GetTIBBatchMove__KeyViolCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIBBatchMove(Instance).KeyViolCount;
end;

function __DC__GetTIBBatchMove__MovedCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIBBatchMove(Instance).MovedCount;
end;

function __DC__GetTIBBatchMove__ProblemCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIBBatchMove(Instance).ProblemCount;
end;

procedure __RegisterProps;
begin
RegisterProperty(TIBBatchMove,'ChangedCount',__DC__GetTIBBatchMove__ChangedCount,nil);
RegisterProperty(TIBBatchMove,'KeyViolCount',__DC__GetTIBBatchMove__KeyViolCount,nil);
RegisterProperty(TIBBatchMove,'MovedCount',__DC__GetTIBBatchMove__MovedCount,nil);
RegisterProperty(TIBBatchMove,'ProblemCount',__DC__GetTIBBatchMove__ProblemCount,nil);
end;

const __ConstNames0 : array[0..4] of string = (
'batAppend'
,'batUpdate'
,'batAppendUpdate'
,'batDelete'
,'batCopy'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,batAppend));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,batUpdate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,batAppendUpdate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,batDelete));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,batCopy));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..0] of TClass = (
TIBBatchMove
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TIBBatchMove,'Execute',TypeInfo(_T0),NoParams,Addr(TIBBatchMove.Execute));

end;
initialization
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
