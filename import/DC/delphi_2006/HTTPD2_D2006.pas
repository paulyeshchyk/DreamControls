{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit HTTPD2_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  Winsock,
  HTTPD2;
function Convertap_conf_vector_tToVariant(var R : ap_conf_vector_t) : OleVariant;
function ConvertVariantToap_conf_vector_t(const V : OleVariant) : ap_conf_vector_t;
function Convertap_configfile_tToVariant(var R : ap_configfile_t) : OleVariant;
function ConvertVariantToap_configfile_t(const V : OleVariant) : ap_configfile_t;
function Convertap_directive_tToVariant(var R : ap_directive_t) : OleVariant;
function ConvertVariantToap_directive_t(const V : OleVariant) : ap_directive_t;
function Convertap_filter_funcToVariant(var R : ap_filter_func) : OleVariant;
function ConvertVariantToap_filter_func(const V : OleVariant) : ap_filter_func;
function Convertap_filter_rec_tToVariant(var R : ap_filter_rec_t) : OleVariant;
function ConvertVariantToap_filter_rec_t(const V : OleVariant) : ap_filter_rec_t;
function Convertap_filter_tToVariant(var R : ap_filter_t) : OleVariant;
function ConvertVariantToap_filter_t(const V : OleVariant) : ap_filter_t;
function Convertap_LINK_access_checker_tToVariant(var R : ap_LINK_access_checker_t) : OleVariant;
function ConvertVariantToap_LINK_access_checker_t(const V : OleVariant) : ap_LINK_access_checker_t;
function Convertap_LINK_auth_checker_tToVariant(var R : ap_LINK_auth_checker_t) : OleVariant;
function ConvertVariantToap_LINK_auth_checker_t(const V : OleVariant) : ap_LINK_auth_checker_t;
function Convertap_LINK_check_user_id_tToVariant(var R : ap_LINK_check_user_id_t) : OleVariant;
function ConvertVariantToap_LINK_check_user_id_t(const V : OleVariant) : ap_LINK_check_user_id_t;
function Convertap_LINK_child_init_tToVariant(var R : ap_LINK_child_init_t) : OleVariant;
function ConvertVariantToap_LINK_child_init_t(const V : OleVariant) : ap_LINK_child_init_t;
function Convertap_LINK_create_connection_tToVariant(var R : ap_LINK_create_connection_t) : OleVariant;
function ConvertVariantToap_LINK_create_connection_t(const V : OleVariant) : ap_LINK_create_connection_t;
function Convertap_LINK_create_request_tToVariant(var R : ap_LINK_create_request_t) : OleVariant;
function ConvertVariantToap_LINK_create_request_t(const V : OleVariant) : ap_LINK_create_request_t;
function Convertap_LINK_default_port_tToVariant(var R : ap_LINK_default_port_t) : OleVariant;
function ConvertVariantToap_LINK_default_port_t(const V : OleVariant) : ap_LINK_default_port_t;
function Convertap_LINK_error_log_tToVariant(var R : ap_LINK_error_log_t) : OleVariant;
function ConvertVariantToap_LINK_error_log_t(const V : OleVariant) : ap_LINK_error_log_t;
function Convertap_LINK_fixups_tToVariant(var R : ap_LINK_fixups_t) : OleVariant;
function ConvertVariantToap_LINK_fixups_t(const V : OleVariant) : ap_LINK_fixups_t;
function Convertap_LINK_get_mgmt_items_tToVariant(var R : ap_LINK_get_mgmt_items_t) : OleVariant;
function ConvertVariantToap_LINK_get_mgmt_items_t(const V : OleVariant) : ap_LINK_get_mgmt_items_t;
function Convertap_LINK_handler_tToVariant(var R : ap_LINK_handler_t) : OleVariant;
function ConvertVariantToap_LINK_handler_t(const V : OleVariant) : ap_LINK_handler_t;
function Convertap_LINK_header_parser_tToVariant(var R : ap_LINK_header_parser_t) : OleVariant;
function ConvertVariantToap_LINK_header_parser_t(const V : OleVariant) : ap_LINK_header_parser_t;
function Convertap_LINK_http_method_tToVariant(var R : ap_LINK_http_method_t) : OleVariant;
function ConvertVariantToap_LINK_http_method_t(const V : OleVariant) : ap_LINK_http_method_t;
function Convertap_LINK_insert_filter_tToVariant(var R : ap_LINK_insert_filter_t) : OleVariant;
function ConvertVariantToap_LINK_insert_filter_t(const V : OleVariant) : ap_LINK_insert_filter_t;
function Convertap_LINK_log_transaction_tToVariant(var R : ap_LINK_log_transaction_t) : OleVariant;
function ConvertVariantToap_LINK_log_transaction_t(const V : OleVariant) : ap_LINK_log_transaction_t;
function Convertap_LINK_map_to_storage_tToVariant(var R : ap_LINK_map_to_storage_t) : OleVariant;
function ConvertVariantToap_LINK_map_to_storage_t(const V : OleVariant) : ap_LINK_map_to_storage_t;
function Convertap_LINK_open_logs_tToVariant(var R : ap_LINK_open_logs_t) : OleVariant;
function ConvertVariantToap_LINK_open_logs_t(const V : OleVariant) : ap_LINK_open_logs_t;
function Convertap_LINK_optional_fn_retrieve_tToVariant(var R : ap_LINK_optional_fn_retrieve_t) : OleVariant;
function ConvertVariantToap_LINK_optional_fn_retrieve_t(const V : OleVariant) : ap_LINK_optional_fn_retrieve_t;
function Convertap_LINK_post_config_tToVariant(var R : ap_LINK_post_config_t) : OleVariant;
function ConvertVariantToap_LINK_post_config_t(const V : OleVariant) : ap_LINK_post_config_t;
function Convertap_LINK_post_read_request_tToVariant(var R : ap_LINK_post_read_request_t) : OleVariant;
function ConvertVariantToap_LINK_post_read_request_t(const V : OleVariant) : ap_LINK_post_read_request_t;
function Convertap_LINK_pre_config_tToVariant(var R : ap_LINK_pre_config_t) : OleVariant;
function ConvertVariantToap_LINK_pre_config_t(const V : OleVariant) : ap_LINK_pre_config_t;
function Convertap_LINK_pre_connection_tToVariant(var R : ap_LINK_pre_connection_t) : OleVariant;
function ConvertVariantToap_LINK_pre_connection_t(const V : OleVariant) : ap_LINK_pre_connection_t;
function Convertap_LINK_process_connection_tToVariant(var R : ap_LINK_process_connection_t) : OleVariant;
function ConvertVariantToap_LINK_process_connection_t(const V : OleVariant) : ap_LINK_process_connection_t;
function Convertap_LINK_quick_handler_tToVariant(var R : ap_LINK_quick_handler_t) : OleVariant;
function ConvertVariantToap_LINK_quick_handler_t(const V : OleVariant) : ap_LINK_quick_handler_t;
function Convertap_LINK_translate_name_tToVariant(var R : ap_LINK_translate_name_t) : OleVariant;
function ConvertVariantToap_LINK_translate_name_t(const V : OleVariant) : ap_LINK_translate_name_t;
function Convertap_LINK_type_checker_tToVariant(var R : ap_LINK_type_checker_t) : OleVariant;
function ConvertVariantToap_LINK_type_checker_t(const V : OleVariant) : ap_LINK_type_checker_t;
function Convertap_method_list_tToVariant(var R : ap_method_list_t) : OleVariant;
function ConvertVariantToap_method_list_t(const V : OleVariant) : ap_method_list_t;
function Convertapr_array_header_tToVariant(var R : apr_array_header_t) : OleVariant;
function ConvertVariantToapr_array_header_t(const V : OleVariant) : apr_array_header_t;
function Convertapr_bucket_alloc_tToVariant(var R : apr_bucket_alloc_t) : OleVariant;
function ConvertVariantToapr_bucket_alloc_t(const V : OleVariant) : apr_bucket_alloc_t;
function Convertapr_file_tToVariant(var R : apr_file_t) : OleVariant;
function ConvertVariantToapr_file_t(const V : OleVariant) : apr_file_t;
function Convertapr_finfo_tToVariant(var R : apr_finfo_t) : OleVariant;
function ConvertVariantToapr_finfo_t(const V : OleVariant) : apr_finfo_t;
function Convertapr_hash_tToVariant(var R : apr_hash_t) : OleVariant;
function ConvertVariantToapr_hash_t(const V : OleVariant) : apr_hash_t;
function Convertapr_pool_tToVariant(var R : apr_pool_t) : OleVariant;
function ConvertVariantToapr_pool_t(const V : OleVariant) : apr_pool_t;
function Convertapr_sockaddr_tToVariant(var R : apr_sockaddr_t) : OleVariant;
function ConvertVariantToapr_sockaddr_t(const V : OleVariant) : apr_sockaddr_t;
function Convertapr_socket_tToVariant(var R : apr_socket_t) : OleVariant;
function ConvertVariantToapr_socket_t(const V : OleVariant) : apr_socket_t;
function Convertapr_table_entry_tToVariant(var R : apr_table_entry_t) : OleVariant;
function ConvertVariantToapr_table_entry_t(const V : OleVariant) : apr_table_entry_t;
function Convertapr_table_tToVariant(var R : apr_table_t) : OleVariant;
function ConvertVariantToapr_table_t(const V : OleVariant) : apr_table_t;
function Convertapr_uri_tToVariant(var R : apr_uri_t) : OleVariant;
function ConvertVariantToapr_uri_t(const V : OleVariant) : apr_uri_t;
function Convertcmd_parmsToVariant(var R : cmd_parms) : OleVariant;
function ConvertVariantTocmd_parms(const V : OleVariant) : cmd_parms;
function Convertcmd_parms_structToVariant(var R : cmd_parms_struct) : OleVariant;
function ConvertVariantTocmd_parms_struct(const V : OleVariant) : cmd_parms_struct;
function Convertcommand_recToVariant(var R : command_rec) : OleVariant;
function ConvertVariantTocommand_rec(const V : OleVariant) : command_rec;
function Convertcommand_structToVariant(var R : command_struct) : OleVariant;
function ConvertVariantTocommand_struct(const V : OleVariant) : command_struct;
function Convertconn_recToVariant(var R : conn_rec) : OleVariant;
function ConvertVariantToconn_rec(const V : OleVariant) : conn_rec;
function Converthtaccess_resultToVariant(var R : htaccess_result) : OleVariant;
function ConvertVariantTohtaccess_result(const V : OleVariant) : htaccess_result;
function ConvertmoduleToVariant(var R : module) : OleVariant;
function ConvertVariantTomodule(const V : OleVariant) : module;
function Convertprocess_recToVariant(var R : process_rec) : OleVariant;
function ConvertVariantToprocess_rec(const V : OleVariant) : process_rec;
function Convertrequest_recToVariant(var R : request_rec) : OleVariant;
function ConvertVariantTorequest_rec(const V : OleVariant) : request_rec;
function Convertserver_addr_recToVariant(var R : server_addr_rec) : OleVariant;
function ConvertVariantToserver_addr_rec(const V : OleVariant) : server_addr_rec;
function Convertserver_recToVariant(var R : server_rec) : OleVariant;
function ConvertVariantToserver_rec(const V : OleVariant) : server_rec;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __ap_conf_vector_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_conf_vector_t;
public
function GetRecordPtr : pointer; override;
published
end;
type __ap_configfile_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_configfile_t;
public
function GetRecordPtr : pointer; override;
published
procedure setline_number(const val : Cardinal);
function getline_number : Cardinal;
property line_number : Cardinal read getline_number write setline_number;
end;
type __ap_directive_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_directive_t;
public
function GetRecordPtr : pointer; override;
published
procedure setline_num(const val : Integer);
function getline_num : Integer;
property line_num : Integer read getline_num write setline_num;
end;
type __ap_filter_func__Wrapper = class(TDCRecordWrapper)
private
fR : ap_filter_func;
public
function GetRecordPtr : pointer; override;
published
end;
type __ap_filter_rec_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_filter_rec_t;
public
function GetRecordPtr : pointer; override;
published
end;
type __ap_filter_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_filter_t;
public
function GetRecordPtr : pointer; override;
published
end;
type __ap_LINK_access_checker_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_access_checker_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_auth_checker_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_auth_checker_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_check_user_id_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_check_user_id_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_child_init_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_child_init_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_create_connection_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_create_connection_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_create_request_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_create_request_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_default_port_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_default_port_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_error_log_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_error_log_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_fixups_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_fixups_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_get_mgmt_items_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_get_mgmt_items_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_handler_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_handler_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_header_parser_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_header_parser_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_http_method_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_http_method_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_insert_filter_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_insert_filter_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_log_transaction_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_log_transaction_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_map_to_storage_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_map_to_storage_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_open_logs_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_open_logs_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_optional_fn_retrieve_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_optional_fn_retrieve_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_post_config_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_post_config_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_post_read_request_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_post_read_request_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_pre_config_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_pre_config_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_pre_connection_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_pre_connection_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_process_connection_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_process_connection_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_quick_handler_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_quick_handler_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_translate_name_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_translate_name_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_LINK_type_checker_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_LINK_type_checker_t;
public
function GetRecordPtr : pointer; override;
published
procedure setnOrder(const val : Integer);
function getnOrder : Integer;
property nOrder : Integer read getnOrder write setnOrder;
end;
type __ap_method_list_t__Wrapper = class(TDCRecordWrapper)
private
fR : ap_method_list_t;
public
function GetRecordPtr : pointer; override;
published
end;
type __apr_array_header_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_array_header_t;
public
function GetRecordPtr : pointer; override;
published
procedure setelt_size(const val : Integer);
function getelt_size : Integer;
property elt_size : Integer read getelt_size write setelt_size;
procedure setnelts(const val : Integer);
function getnelts : Integer;
property nelts : Integer read getnelts write setnelts;
procedure setnalloc(const val : Integer);
function getnalloc : Integer;
property nalloc : Integer read getnalloc write setnalloc;
end;
type __apr_bucket_alloc_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_bucket_alloc_t;
public
function GetRecordPtr : pointer; override;
published
end;
type __apr_file_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_file_t;
public
function GetRecordPtr : pointer; override;
published
end;
type __apr_finfo_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_finfo_t;
public
function GetRecordPtr : pointer; override;
published
procedure setvalid(const val : apr_int32_t);
function getvalid : apr_int32_t;
property valid : apr_int32_t read getvalid write setvalid;
procedure setprotection(const val : apr_fileperms_t);
function getprotection : apr_fileperms_t;
property protection : apr_fileperms_t read getprotection write setprotection;
procedure setdevice(const val : apr_dev_t);
function getdevice : apr_dev_t;
property device : apr_dev_t read getdevice write setdevice;
procedure setnlink(const val : apr_int32_t);
function getnlink : apr_int32_t;
property nlink : apr_int32_t read getnlink write setnlink;
end;
type __apr_hash_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_hash_t;
public
function GetRecordPtr : pointer; override;
published
end;
type __apr_pool_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_pool_t;
public
function GetRecordPtr : pointer; override;
published
end;
type __apr_sockaddr_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_sockaddr_t;
public
function GetRecordPtr : pointer; override;
published
procedure setport(const val : apr_port_t);
function getport : apr_port_t;
property port : apr_port_t read getport write setport;
procedure setfamily(const val : apr_int32_t);
function getfamily : apr_int32_t;
property family : apr_int32_t read getfamily write setfamily;
procedure setsalen(const val : apr_socklen_t);
function getsalen : apr_socklen_t;
property salen : apr_socklen_t read getsalen write setsalen;
procedure setipaddr_len(const val : Integer);
function getipaddr_len : Integer;
property ipaddr_len : Integer read getipaddr_len write setipaddr_len;
procedure setaddr_str_len(const val : Integer);
function getaddr_str_len : Integer;
property addr_str_len : Integer read getaddr_str_len write setaddr_str_len;
end;
type __apr_socket_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_socket_t;
public
function GetRecordPtr : pointer; override;
published
end;
type __apr_table_entry_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_table_entry_t;
public
function GetRecordPtr : pointer; override;
published
procedure setkey_checksum(const val : apr_uint32_t);
function getkey_checksum : apr_uint32_t;
property key_checksum : apr_uint32_t read getkey_checksum write setkey_checksum;
end;
type __apr_table_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_table_t;
public
function GetRecordPtr : pointer; override;
published
end;
type __apr_uri_t__Wrapper = class(TDCRecordWrapper)
private
fR : apr_uri_t;
public
function GetRecordPtr : pointer; override;
published
procedure setport(const val : apr_port_t);
function getport : apr_port_t;
property port : apr_port_t read getport write setport;
procedure setproperties(const val : Cardinal);
function getproperties : Cardinal;
property properties : Cardinal read getproperties write setproperties;
end;
type __cmd_parms__Wrapper = class(TDCRecordWrapper)
private
fR : cmd_parms;
public
function GetRecordPtr : pointer; override;
published
procedure setoverride(const val : Integer);
function getoverride : Integer;
property override : Integer read getoverride write setoverride;
end;
type __cmd_parms_struct__Wrapper = class(TDCRecordWrapper)
private
fR : cmd_parms_struct;
public
function GetRecordPtr : pointer; override;
published
procedure setoverride(const val : Integer);
function getoverride : Integer;
property override : Integer read getoverride write setoverride;
end;
type __command_rec__Wrapper = class(TDCRecordWrapper)
private
fR : command_rec;
public
function GetRecordPtr : pointer; override;
published
procedure setreq_override(const val : Integer);
function getreq_override : Integer;
property req_override : Integer read getreq_override write setreq_override;
procedure setargs_how(const val : cmd_how);
function getargs_how : cmd_how;
property args_how : cmd_how read getargs_how write setargs_how;
end;
type __command_struct__Wrapper = class(TDCRecordWrapper)
private
fR : command_struct;
public
function GetRecordPtr : pointer; override;
published
procedure setreq_override(const val : Integer);
function getreq_override : Integer;
property req_override : Integer read getreq_override write setreq_override;
procedure setargs_how(const val : cmd_how);
function getargs_how : cmd_how;
property args_how : cmd_how read getargs_how write setargs_how;
end;
type __conn_rec__Wrapper = class(TDCRecordWrapper)
private
fR : conn_rec;
public
function GetRecordPtr : pointer; override;
published
procedure setflags1(const val : Cardinal);
function getflags1 : Cardinal;
property flags1 : Cardinal read getflags1 write setflags1;
procedure setkeepalive(const val : ap_conn_keepalive_e);
function getkeepalive : ap_conn_keepalive_e;
property keepalive : ap_conn_keepalive_e read getkeepalive write setkeepalive;
procedure setflags2(const val : Cardinal);
function getflags2 : Cardinal;
property flags2 : Cardinal read getflags2 write setflags2;
procedure setkeepalives(const val : Integer);
function getkeepalives : Integer;
property keepalives : Integer read getkeepalives write setkeepalives;
procedure setid(const val : Longint);
function getid : Longint;
property id : Longint read getid write setid;
end;
type __htaccess_result__Wrapper = class(TDCRecordWrapper)
private
fR : htaccess_result;
public
function GetRecordPtr : pointer; override;
published
procedure setoverride(const val : Integer);
function getoverride : Integer;
property override : Integer read getoverride write setoverride;
end;
type __module__Wrapper = class(TDCRecordWrapper)
private
fR : module;
public
function GetRecordPtr : pointer; override;
published
procedure setversion(const val : Integer);
function getversion : Integer;
property version : Integer read getversion write setversion;
procedure setminor_version(const val : Integer);
function getminor_version : Integer;
property minor_version : Integer read getminor_version write setminor_version;
procedure setmodule_index(const val : Integer);
function getmodule_index : Integer;
property module_index : Integer read getmodule_index write setmodule_index;
procedure setmagic(const val : Cardinal);
function getmagic : Cardinal;
property magic : Cardinal read getmagic write setmagic;
end;
type __process_rec__Wrapper = class(TDCRecordWrapper)
private
fR : process_rec;
public
function GetRecordPtr : pointer; override;
published
procedure setargc(const val : Integer);
function getargc : Integer;
property argc : Integer read getargc write setargc;
end;
type __request_rec__Wrapper = class(TDCRecordWrapper)
private
fR : request_rec;
public
function GetRecordPtr : pointer; override;
published
procedure setassbackwards(const val : Integer);
function getassbackwards : Integer;
property assbackwards : Integer read getassbackwards write setassbackwards;
procedure setproxyreq(const val : Integer);
function getproxyreq : Integer;
property proxyreq : Integer read getproxyreq write setproxyreq;
procedure setheader_only(const val : Integer);
function getheader_only : Integer;
property header_only : Integer read getheader_only write setheader_only;
procedure setproto_num(const val : Integer);
function getproto_num : Integer;
property proto_num : Integer read getproto_num write setproto_num;
procedure setstatus(const val : Integer);
function getstatus : Integer;
property status : Integer read getstatus write setstatus;
procedure setmethod_number(const val : Integer);
function getmethod_number : Integer;
property method_number : Integer read getmethod_number write setmethod_number;
procedure setchunked(const val : Integer);
function getchunked : Integer;
property chunked : Integer read getchunked write setchunked;
procedure setread_body(const val : Integer);
function getread_body : Integer;
property read_body : Integer read getread_body write setread_body;
procedure setread_chunked(const val : Integer);
function getread_chunked : Integer;
property read_chunked : Integer read getread_chunked write setread_chunked;
procedure setexpecting_100(const val : Cardinal);
function getexpecting_100 : Cardinal;
property expecting_100 : Cardinal read getexpecting_100 write setexpecting_100;
procedure setno_cache(const val : Integer);
function getno_cache : Integer;
property no_cache : Integer read getno_cache write setno_cache;
procedure setno_local_copy(const val : Integer);
function getno_local_copy : Integer;
property no_local_copy : Integer read getno_local_copy write setno_local_copy;
procedure setused_path_info(const val : Integer);
function getused_path_info : Integer;
property used_path_info : Integer read getused_path_info write setused_path_info;
procedure seteos_sent(const val : Integer);
function geteos_sent : Integer;
property eos_sent : Integer read geteos_sent write seteos_sent;
end;
type __server_addr_rec__Wrapper = class(TDCRecordWrapper)
private
fR : server_addr_rec;
public
function GetRecordPtr : pointer; override;
published
procedure sethost_port(const val : apr_port_t);
function gethost_port : apr_port_t;
property host_port : apr_port_t read gethost_port write sethost_port;
end;
type __server_rec__Wrapper = class(TDCRecordWrapper)
private
fR : server_rec;
public
function GetRecordPtr : pointer; override;
published
procedure setdefn_line_number(const val : Cardinal);
function getdefn_line_number : Cardinal;
property defn_line_number : Cardinal read getdefn_line_number write setdefn_line_number;
procedure setport(const val : apr_port_t);
function getport : apr_port_t;
property port : apr_port_t read getport write setport;
procedure setloglevel(const val : Integer);
function getloglevel : Integer;
property loglevel : Integer read getloglevel write setloglevel;
procedure setis_virtual(const val : Integer);
function getis_virtual : Integer;
property is_virtual : Integer read getis_virtual write setis_virtual;
procedure setkeep_alive_max(const val : Integer);
function getkeep_alive_max : Integer;
property keep_alive_max : Integer read getkeep_alive_max write setkeep_alive_max;
procedure setkeep_alive(const val : Integer);
function getkeep_alive : Integer;
property keep_alive : Integer read getkeep_alive write setkeep_alive;
procedure setpathlen(const val : Integer);
function getpathlen : Integer;
property pathlen : Integer read getpathlen write setpathlen;
procedure setlimit_req_line(const val : Integer);
function getlimit_req_line : Integer;
property limit_req_line : Integer read getlimit_req_line write setlimit_req_line;
procedure setlimit_req_fieldsize(const val : Integer);
function getlimit_req_fieldsize : Integer;
property limit_req_fieldsize : Integer read getlimit_req_fieldsize write setlimit_req_fieldsize;
procedure setlimit_req_fields(const val : Integer);
function getlimit_req_fields : Integer;
property limit_req_fields : Integer read getlimit_req_fields write setlimit_req_fields;
end;
type
{_T0 = function (p0 : Pcmd_parms;
p1 : Pointer;
const p2 : PChar): PChar of object;}

{_T1 = function (p0 : Pcmd_parms;
p1 : Pointer;
p2 : PChar): PChar of object;}

{_T2 = function (p0 : Pcmd_parms;
const p1 : PChar): Integer of object;}

{_T3 = function (p0 : Pcmd_parms;
p1 : Pointer;
const p2 : PChar): PChar of object;}

{_T4 = function (const p0 : Pap_conf_vector_t;
const p1 : PModule): Pointer of object;}

{_T5 = procedure (p0 : Pap_conf_vector_t;
const p1 : PModule;
p2 : Pointer) of object;}

{_T7 = function (p0 : Papr_array_header_t): Pointer of object;}

{_T8 = procedure (p0 : Papr_array_header_t;
const p1 : Papr_array_header_t) of object;}

{_T9 = function (p0 : Papr_pool_t;
const p1 : Papr_array_header_t): Papr_array_header_t of object;}

{_T10 = function (p0 : Papr_pool_t;
const p1 : Papr_array_header_t): Papr_array_header_t of object;}

{_T11 = function (p0 : Papr_pool_t;
const p1 : Papr_array_header_t;
const p2 : Papr_array_header_t): Papr_array_header_t of object;}

{_T12 = function (p0 : Papr_pool_t;
const p1 : Papr_array_header_t;
const p2 : Char): PChar of object;}

{_T13 = function (p0 : Papr_pool_t;
p1 : Integer): Papr_table_t of object;}

{_T14 = function (p0 : Papr_pool_t;
const p1 : Papr_table_t): Papr_table_t of object;}

{_T15 = procedure (p0 : Papr_table_t) of object;}

{_T16 = function (const p0 : Papr_table_t;
p1 : PChar): PChar of object;}

{_T17 = procedure (p0 : Papr_table_t;
const p1 : PChar;
const p2 : PChar) of object;}

{_T18 = procedure (p0 : Papr_table_t;
const p1 : PChar;
const p2 : PChar) of object;}

{_T19 = procedure (p0 : Papr_table_t;
const p1 : PChar) of object;}

{_T20 = procedure (p0 : Papr_table_t;
const p1 : PChar;
const p2 : PChar) of object;}

{_T21 = procedure (p0 : Papr_table_t;
const p1 : PChar;
const p2 : PChar) of object;}

{_T22 = procedure (p0 : Papr_table_t;
const p1 : PChar;
const p2 : PChar) of object;}

{_T23 = procedure (p0 : Papr_table_t;
const p1 : PChar;
const p2 : PChar) of object;}

{_T24 = function (p0 : Papr_pool_t;
const p1 : Papr_table_t;
const p2 : Papr_table_t): Papr_table_t of object;}

{_T25 = procedure (p0 : TCompFunc;
p1 : Pointer;
const p2 : Papr_table_t;
p3 : va_list) of object;}

{_T26 = procedure (p0 : Papr_table_t;
const p1 : Papr_table_t;
p2 : Cardinal) of object;}

{_T27 = function (p0 : Prequest_rec): Integer of object;}

{_T28 = function (p0 : Prequest_rec): Integer of object;}

{_T29 = function (p0 : Prequest_rec): PChar of object;}

{_T30 = function (p0 : Prequest_rec): PChar of object;}

{_T31 = function (p0 : Pconn_rec;
p1 : Pointer;
p2 : Integer;
p3 : PInteger): PChar of object;}

{_T32 = function (p0 : Prequest_rec): PChar of object;}

{_T33 = function (p0 : Papr_pool_t;
const p1 : PChar;
p2 : Prequest_rec): PChar of object;}

{_T34 = function (p0 : Prequest_rec): PChar of object;}

{_T35 = function (const p0 : Prequest_rec): apr_port_t of object;}

{_T36 = function (const p0 : Prequest_rec): apr_off_t of object;}

{_T37 = function (const p0 : Prequest_rec): size_t of object;}

{_T38 = procedure (p0 : Prequest_rec;
p1 : Integer;
const p2 : PChar) of object;}

{_T39 = function (const p0 : PChar): Integer of object;}

{_T40 = function (p0 : Prequest_rec): Integer of object;}

{_T41 = function (p0 : Prequest_rec): PChar of object;}

{_T42 = function (p0 : Prequest_rec): PChar of object;}

{_T43 = function (p0 : Prequest_rec): Integer of object;}

{_T44 = function (p0 : Prequest_rec): Papr_array_header_t of object;}

{_T45 = procedure (p0 : Prequest_rec) of object;}

{_T46 = procedure (p0 : Prequest_rec;
p1 : Integer) of object;}

{_T47 = procedure (p0 : Prequest_rec;
p1 : apr_off_t) of object;}

{_T48 = function (p0 : Prequest_rec): Integer of object;}

{_T49 = function (p0 : Prequest_rec;
p1 : apr_time_t): apr_time_t of object;}

{_T50 = function (p0 : Prequest_rec;
const p1 : PChar): PChar of object;}

{_T51 = function (p0 : Prequest_rec;
p1 : Integer): PChar of object;}

{_T52 = procedure (p0 : Prequest_rec) of object;}

{_T53 = procedure (p0 : Prequest_rec) of object;}

{_T54 = function (p0 : Prequest_rec): Integer of object;}

{_T55 = function (p0 : Papr_file_t;
p1 : Prequest_rec;
p2 : apr_off_t;
p3 : apr_size_t;
p4 : Papr_size_t): apr_status_t of object;}

{_T56 = function (p0 : Papr_pool_t;
const p1 : PChar): Integer of object;}

{_T57 = procedure (p0 : Papr_pool_t) of object;}

{_T59 = procedure (p0 : Pap_method_list_t;
p1 : Pap_method_list_t) of object;}

{_T60 = function (p0 : Pap_method_list_t;
const p1 : PChar): Integer of object;}

{_T61 = procedure (p0 : Pap_method_list_t;
const p1 : PChar) of object;}

{_T62 = procedure (p0 : Pap_method_list_t;
const p1 : PChar) of object;}

{_T63 = procedure (p0 : Pap_method_list_t) of object;}

{_T64 = procedure (p0 : Prequest_rec;
const p1 : PChar) of object;}

{_T65 = function (p0 : Integer;
p1 : Prequest_rec): Integer of object;}

{_T66 = function (const p0 : PChar;
p1 : Prequest_rec): Integer of object;}

{_T67 = function (var p0;
p1 : Integer;
p2 : Prequest_rec): Integer of object;}

{_T68 = function (p0 : Prequest_rec;
const p1 : PChar;
p2 : va_list): Integer of object;}

{_T69 = function (p0 : Prequest_rec): Integer of object;}

_T70 = function (p0 : Integer): Integer of object;

_T71 = function (p0 : Integer): PChar of object;

{_T72 = function (p0 : Prequest_rec;
p1 : Integer): Integer of object;}

{_T73 = function (p0 : Prequest_rec): Integer of object;}

{_T74 = function (p0 : Prequest_rec;
p1 : PChar;
p2 : apr_size_t): Longint of object;}

{_T75 = function (p0 : Prequest_rec): Integer of object;}

{_T76 = procedure (p0 : Prequest_rec) of object;}

{_T77 = procedure (p0 : Prequest_rec) of object;}

{_T78 = procedure (p0 : Prequest_rec) of object;}

{_T79 = function (p0 : Prequest_rec;
const p1 : PPChar): Integer of object;}

{_T80 = function (p0 : PChar;
p1 : Integer;
p2 : Prequest_rec;
p3 : Integer): Integer of object;}

{_T81 = function (const p0 : PChar): Integer of object;}

{_T82 = function (p0 : Papr_pool_t;
p1 : Integer): PChar of object;}

{_T83 = function (p0 : Papr_pool_t;
const p1 : PChar): PChar of object;}

{_T84 = procedure (p0 : ap_HOOK_header_parser_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T85 = function (p0 : Prequest_rec): Integer of object;}

{_T86 = function : Papr_array_header_t of object;}

{_T87 = procedure (p0 : ap_HOOK_pre_config_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T88 = function (p0 : Papr_pool_t;
p1 : Papr_pool_t;
p2 : Papr_pool_t): Integer of object;}

{_T89 = function : Papr_array_header_t of object;}

{_T90 = procedure (p0 : ap_HOOK_post_config_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T91 = function (p0 : Papr_pool_t;
p1 : Papr_pool_t;
p2 : Papr_pool_t;
p3 : Pserver_rec): Integer of object;}

{_T92 = function : Papr_array_header_t of object;}

{_T93 = procedure (p0 : ap_HOOK_open_logs_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T94 = function (p0 : Papr_pool_t;
p1 : Papr_pool_t;
p2 : Papr_pool_t;
p3 : Pserver_rec): Integer of object;}

{_T95 = function : Papr_array_header_t of object;}

{_T96 = procedure (p0 : ap_HOOK_child_init_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T97 = procedure (p0 : Papr_pool_t;
p1 : Pserver_rec) of object;}

{_T98 = function : Papr_array_header_t of object;}

{_T99 = procedure (p0 : ap_HOOK_handler_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T100 = function (p0 : Prequest_rec): Integer of object;}

{_T101 = function : Papr_array_header_t of object;}

{_T102 = procedure (p0 : ap_HOOK_quick_handler_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T103 = function (p0 : Prequest_rec;
p1 : Integer): Integer of object;}

{_T104 = function : Papr_array_header_t of object;}

{_T105 = procedure (p0 : ap_HOOK_optional_fn_retrieve_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

_T106 = procedure  of object;

{_T107 = function : Papr_array_header_t of object;}

{_T108 = procedure (p0 : ap_HOOK_create_connection_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T109 = function (p0 : Papr_pool_t;
p1 : Pserver_rec;
p2 : Papr_socket_t;
p3 : Longint;
p4 : Pointer;
p5 : Papr_bucket_alloc_t): Pconn_rec of object;}

{_T110 = function : Papr_array_header_t of object;}

{_T111 = procedure (p0 : ap_HOOK_pre_connection_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T112 = function (p0 : Pconn_rec;
p1 : Pointer): Integer of object;}

{_T113 = function : Papr_array_header_t of object;}

{_T114 = procedure (p0 : ap_HOOK_process_connection_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T115 = function (p0 : Pconn_rec): Integer of object;}

{_T116 = function : Papr_array_header_t of object;}

{_T117 = procedure (p0 : ap_HOOK_get_mgmt_items_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T118 = function (p0 : Papr_pool_t;
const p1 : PChar;
p2 : Papr_hash_t): Integer of object;}

{_T119 = function : Papr_array_header_t of object;}

{_T120 = procedure (p0 : ap_HOOK_error_log_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T121 = procedure (const p0 : PChar;
p1 : Integer;
p2 : Integer;
p3 : apr_status_t;
const p4 : Pserver_rec;
const p5 : Prequest_rec;
p6 : Papr_pool_t;
const p7 : PChar) of object;}

{_T122 = function : Papr_array_header_t of object;}

{_T123 = procedure (p0 : ap_HOOK_post_read_request_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T124 = function (p0 : Prequest_rec): Integer of object;}

{_T125 = function : Papr_array_header_t of object;}

{_T126 = procedure (p0 : ap_HOOK_log_transaction_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T127 = function (p0 : Prequest_rec): Integer of object;}

{_T128 = function : Papr_array_header_t of object;}

{_T129 = procedure (p0 : ap_HOOK_http_method_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T130 = function (const p0 : Prequest_rec): PChar of object;}

{_T131 = function : Papr_array_header_t of object;}

{_T132 = procedure (p0 : ap_HOOK_default_port_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T133 = function (const p0 : Prequest_rec): apr_port_t of object;}

{_T134 = function : Papr_array_header_t of object;}

{_T135 = procedure (p0 : ap_HOOK_create_request_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T136 = function (p0 : Prequest_rec): Integer of object;}

{_T137 = function : Papr_array_header_t of object;}

{_T138 = procedure (p0 : ap_HOOK_translate_name_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T139 = function (p0 : Prequest_rec): Integer of object;}

{_T140 = function : Papr_array_header_t of object;}

{_T141 = procedure (p0 : ap_HOOK_map_to_storage_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T142 = function (p0 : Prequest_rec): Integer of object;}

{_T143 = function : Papr_array_header_t of object;}

{_T144 = procedure (p0 : ap_HOOK_check_user_id_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T145 = function (p0 : Prequest_rec): Integer of object;}

{_T146 = function : Papr_array_header_t of object;}

{_T147 = procedure (p0 : ap_HOOK_fixups_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T148 = function (p0 : Prequest_rec): Integer of object;}

{_T149 = function : Papr_array_header_t of object;}

{_T150 = procedure (p0 : ap_HOOK_type_checker_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T151 = function (p0 : Prequest_rec): Integer of object;}

{_T152 = function : Papr_array_header_t of object;}

{_T153 = procedure (p0 : ap_HOOK_access_checker_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T154 = function (p0 : Prequest_rec): Integer of object;}

{_T155 = function : Papr_array_header_t of object;}

{_T156 = procedure (p0 : ap_HOOK_auth_checker_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T157 = function (p0 : Prequest_rec): Integer of object;}

{_T158 = function : Papr_array_header_t of object;}

{_T159 = procedure (p0 : ap_HOOK_insert_filter_t;
const p1 : PPChar;
const p2 : PPChar;
p3 : Integer) of object;}

{_T160 = procedure (p0 : Prequest_rec) of object;}

{_T161 = function : Papr_array_header_t of object;}

{_T162 = function (p0 : Papr_pool_t;
p1 : PChar): PChar of object;}

function __ap_conf_vector_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __ap_configfile_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_configfile_t__Wrapper.setline_number(const val : Cardinal);
begin
ap_configfile_t(GetRecordPtr^).line_number := val;
end;
function __ap_configfile_t__Wrapper.getline_number : Cardinal;
begin
result := ap_configfile_t(GetRecordPtr^).line_number;
end;
function __ap_directive_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_directive_t__Wrapper.setline_num(const val : Integer);
begin
ap_directive_t(GetRecordPtr^).line_num := val;
end;
function __ap_directive_t__Wrapper.getline_num : Integer;
begin
result := ap_directive_t(GetRecordPtr^).line_num;
end;
function __ap_filter_func__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __ap_filter_rec_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __ap_filter_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __ap_LINK_access_checker_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_access_checker_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_access_checker_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_access_checker_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_access_checker_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_auth_checker_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_auth_checker_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_auth_checker_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_auth_checker_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_auth_checker_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_check_user_id_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_check_user_id_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_check_user_id_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_check_user_id_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_check_user_id_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_child_init_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_child_init_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_child_init_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_child_init_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_child_init_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_create_connection_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_create_connection_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_create_connection_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_create_connection_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_create_connection_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_create_request_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_create_request_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_create_request_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_create_request_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_create_request_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_default_port_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_default_port_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_default_port_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_default_port_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_default_port_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_error_log_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_error_log_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_error_log_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_error_log_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_error_log_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_fixups_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_fixups_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_fixups_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_fixups_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_fixups_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_get_mgmt_items_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_get_mgmt_items_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_get_mgmt_items_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_get_mgmt_items_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_get_mgmt_items_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_handler_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_handler_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_handler_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_handler_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_handler_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_header_parser_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_header_parser_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_header_parser_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_header_parser_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_header_parser_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_http_method_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_http_method_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_http_method_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_http_method_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_http_method_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_insert_filter_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_insert_filter_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_insert_filter_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_insert_filter_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_insert_filter_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_log_transaction_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_log_transaction_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_log_transaction_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_log_transaction_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_log_transaction_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_map_to_storage_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_map_to_storage_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_map_to_storage_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_map_to_storage_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_map_to_storage_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_open_logs_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_open_logs_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_open_logs_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_open_logs_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_open_logs_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_optional_fn_retrieve_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_optional_fn_retrieve_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_optional_fn_retrieve_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_optional_fn_retrieve_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_optional_fn_retrieve_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_post_config_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_post_config_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_post_config_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_post_config_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_post_config_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_post_read_request_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_post_read_request_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_post_read_request_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_post_read_request_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_post_read_request_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_pre_config_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_pre_config_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_pre_config_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_pre_config_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_pre_config_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_pre_connection_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_pre_connection_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_pre_connection_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_pre_connection_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_pre_connection_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_process_connection_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_process_connection_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_process_connection_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_process_connection_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_process_connection_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_quick_handler_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_quick_handler_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_quick_handler_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_quick_handler_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_quick_handler_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_translate_name_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_translate_name_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_translate_name_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_translate_name_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_translate_name_t(GetRecordPtr^).nOrder;
end;
function __ap_LINK_type_checker_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ap_LINK_type_checker_t__Wrapper.setnOrder(const val : Integer);
begin
ap_LINK_type_checker_t(GetRecordPtr^).nOrder := val;
end;
function __ap_LINK_type_checker_t__Wrapper.getnOrder : Integer;
begin
result := ap_LINK_type_checker_t(GetRecordPtr^).nOrder;
end;
function __ap_method_list_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __apr_array_header_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __apr_array_header_t__Wrapper.setelt_size(const val : Integer);
begin
apr_array_header_t(GetRecordPtr^).elt_size := val;
end;
function __apr_array_header_t__Wrapper.getelt_size : Integer;
begin
result := apr_array_header_t(GetRecordPtr^).elt_size;
end;
procedure __apr_array_header_t__Wrapper.setnelts(const val : Integer);
begin
apr_array_header_t(GetRecordPtr^).nelts := val;
end;
function __apr_array_header_t__Wrapper.getnelts : Integer;
begin
result := apr_array_header_t(GetRecordPtr^).nelts;
end;
procedure __apr_array_header_t__Wrapper.setnalloc(const val : Integer);
begin
apr_array_header_t(GetRecordPtr^).nalloc := val;
end;
function __apr_array_header_t__Wrapper.getnalloc : Integer;
begin
result := apr_array_header_t(GetRecordPtr^).nalloc;
end;
function __apr_bucket_alloc_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __apr_file_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __apr_finfo_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __apr_finfo_t__Wrapper.setvalid(const val : apr_int32_t);
begin
apr_finfo_t(GetRecordPtr^).valid := val;
end;
function __apr_finfo_t__Wrapper.getvalid : apr_int32_t;
begin
result := apr_finfo_t(GetRecordPtr^).valid;
end;
procedure __apr_finfo_t__Wrapper.setprotection(const val : apr_fileperms_t);
begin
apr_finfo_t(GetRecordPtr^).protection := val;
end;
function __apr_finfo_t__Wrapper.getprotection : apr_fileperms_t;
begin
result := apr_finfo_t(GetRecordPtr^).protection;
end;
procedure __apr_finfo_t__Wrapper.setdevice(const val : apr_dev_t);
begin
apr_finfo_t(GetRecordPtr^).device := val;
end;
function __apr_finfo_t__Wrapper.getdevice : apr_dev_t;
begin
result := apr_finfo_t(GetRecordPtr^).device;
end;
procedure __apr_finfo_t__Wrapper.setnlink(const val : apr_int32_t);
begin
apr_finfo_t(GetRecordPtr^).nlink := val;
end;
function __apr_finfo_t__Wrapper.getnlink : apr_int32_t;
begin
result := apr_finfo_t(GetRecordPtr^).nlink;
end;
function __apr_hash_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __apr_pool_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __apr_sockaddr_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __apr_sockaddr_t__Wrapper.setport(const val : apr_port_t);
begin
apr_sockaddr_t(GetRecordPtr^).port := val;
end;
function __apr_sockaddr_t__Wrapper.getport : apr_port_t;
begin
result := apr_sockaddr_t(GetRecordPtr^).port;
end;
procedure __apr_sockaddr_t__Wrapper.setfamily(const val : apr_int32_t);
begin
apr_sockaddr_t(GetRecordPtr^).family := val;
end;
function __apr_sockaddr_t__Wrapper.getfamily : apr_int32_t;
begin
result := apr_sockaddr_t(GetRecordPtr^).family;
end;
procedure __apr_sockaddr_t__Wrapper.setsalen(const val : apr_socklen_t);
begin
apr_sockaddr_t(GetRecordPtr^).salen := val;
end;
function __apr_sockaddr_t__Wrapper.getsalen : apr_socklen_t;
begin
result := apr_sockaddr_t(GetRecordPtr^).salen;
end;
procedure __apr_sockaddr_t__Wrapper.setipaddr_len(const val : Integer);
begin
apr_sockaddr_t(GetRecordPtr^).ipaddr_len := val;
end;
function __apr_sockaddr_t__Wrapper.getipaddr_len : Integer;
begin
result := apr_sockaddr_t(GetRecordPtr^).ipaddr_len;
end;
procedure __apr_sockaddr_t__Wrapper.setaddr_str_len(const val : Integer);
begin
apr_sockaddr_t(GetRecordPtr^).addr_str_len := val;
end;
function __apr_sockaddr_t__Wrapper.getaddr_str_len : Integer;
begin
result := apr_sockaddr_t(GetRecordPtr^).addr_str_len;
end;
function __apr_socket_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __apr_table_entry_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __apr_table_entry_t__Wrapper.setkey_checksum(const val : apr_uint32_t);
begin
apr_table_entry_t(GetRecordPtr^).key_checksum := val;
end;
function __apr_table_entry_t__Wrapper.getkey_checksum : apr_uint32_t;
begin
result := apr_table_entry_t(GetRecordPtr^).key_checksum;
end;
function __apr_table_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __apr_uri_t__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __apr_uri_t__Wrapper.setport(const val : apr_port_t);
begin
apr_uri_t(GetRecordPtr^).port := val;
end;
function __apr_uri_t__Wrapper.getport : apr_port_t;
begin
result := apr_uri_t(GetRecordPtr^).port;
end;
procedure __apr_uri_t__Wrapper.setproperties(const val : Cardinal);
begin
apr_uri_t(GetRecordPtr^).properties := val;
end;
function __apr_uri_t__Wrapper.getproperties : Cardinal;
begin
result := apr_uri_t(GetRecordPtr^).properties;
end;
function __cmd_parms__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __cmd_parms__Wrapper.setoverride(const val : Integer);
begin
cmd_parms(GetRecordPtr^).override := val;
end;
function __cmd_parms__Wrapper.getoverride : Integer;
begin
result := cmd_parms(GetRecordPtr^).override;
end;
function __cmd_parms_struct__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __cmd_parms_struct__Wrapper.setoverride(const val : Integer);
begin
cmd_parms_struct(GetRecordPtr^).override := val;
end;
function __cmd_parms_struct__Wrapper.getoverride : Integer;
begin
result := cmd_parms_struct(GetRecordPtr^).override;
end;
function __command_rec__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __command_rec__Wrapper.setreq_override(const val : Integer);
begin
command_rec(GetRecordPtr^).req_override := val;
end;
function __command_rec__Wrapper.getreq_override : Integer;
begin
result := command_rec(GetRecordPtr^).req_override;
end;
procedure __command_rec__Wrapper.setargs_how(const val : cmd_how);
begin
command_rec(GetRecordPtr^).args_how := val;
end;
function __command_rec__Wrapper.getargs_how : cmd_how;
begin
result := command_rec(GetRecordPtr^).args_how;
end;
function __command_struct__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __command_struct__Wrapper.setreq_override(const val : Integer);
begin
command_struct(GetRecordPtr^).req_override := val;
end;
function __command_struct__Wrapper.getreq_override : Integer;
begin
result := command_struct(GetRecordPtr^).req_override;
end;
procedure __command_struct__Wrapper.setargs_how(const val : cmd_how);
begin
command_struct(GetRecordPtr^).args_how := val;
end;
function __command_struct__Wrapper.getargs_how : cmd_how;
begin
result := command_struct(GetRecordPtr^).args_how;
end;
function __conn_rec__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __conn_rec__Wrapper.setflags1(const val : Cardinal);
begin
conn_rec(GetRecordPtr^).flags1 := val;
end;
function __conn_rec__Wrapper.getflags1 : Cardinal;
begin
result := conn_rec(GetRecordPtr^).flags1;
end;
procedure __conn_rec__Wrapper.setkeepalive(const val : ap_conn_keepalive_e);
begin
conn_rec(GetRecordPtr^).keepalive := val;
end;
function __conn_rec__Wrapper.getkeepalive : ap_conn_keepalive_e;
begin
result := conn_rec(GetRecordPtr^).keepalive;
end;
procedure __conn_rec__Wrapper.setflags2(const val : Cardinal);
begin
conn_rec(GetRecordPtr^).flags2 := val;
end;
function __conn_rec__Wrapper.getflags2 : Cardinal;
begin
result := conn_rec(GetRecordPtr^).flags2;
end;
procedure __conn_rec__Wrapper.setkeepalives(const val : Integer);
begin
conn_rec(GetRecordPtr^).keepalives := val;
end;
function __conn_rec__Wrapper.getkeepalives : Integer;
begin
result := conn_rec(GetRecordPtr^).keepalives;
end;
procedure __conn_rec__Wrapper.setid(const val : Longint);
begin
conn_rec(GetRecordPtr^).id := val;
end;
function __conn_rec__Wrapper.getid : Longint;
begin
result := conn_rec(GetRecordPtr^).id;
end;
function __htaccess_result__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __htaccess_result__Wrapper.setoverride(const val : Integer);
begin
htaccess_result(GetRecordPtr^).override := val;
end;
function __htaccess_result__Wrapper.getoverride : Integer;
begin
result := htaccess_result(GetRecordPtr^).override;
end;
function __module__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __module__Wrapper.setversion(const val : Integer);
begin
module(GetRecordPtr^).version := val;
end;
function __module__Wrapper.getversion : Integer;
begin
result := module(GetRecordPtr^).version;
end;
procedure __module__Wrapper.setminor_version(const val : Integer);
begin
module(GetRecordPtr^).minor_version := val;
end;
function __module__Wrapper.getminor_version : Integer;
begin
result := module(GetRecordPtr^).minor_version;
end;
procedure __module__Wrapper.setmodule_index(const val : Integer);
begin
module(GetRecordPtr^).module_index := val;
end;
function __module__Wrapper.getmodule_index : Integer;
begin
result := module(GetRecordPtr^).module_index;
end;
procedure __module__Wrapper.setmagic(const val : Cardinal);
begin
module(GetRecordPtr^).magic := val;
end;
function __module__Wrapper.getmagic : Cardinal;
begin
result := module(GetRecordPtr^).magic;
end;
function __process_rec__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __process_rec__Wrapper.setargc(const val : Integer);
begin
process_rec(GetRecordPtr^).argc := val;
end;
function __process_rec__Wrapper.getargc : Integer;
begin
result := process_rec(GetRecordPtr^).argc;
end;
function __request_rec__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __request_rec__Wrapper.setassbackwards(const val : Integer);
begin
request_rec(GetRecordPtr^).assbackwards := val;
end;
function __request_rec__Wrapper.getassbackwards : Integer;
begin
result := request_rec(GetRecordPtr^).assbackwards;
end;
procedure __request_rec__Wrapper.setproxyreq(const val : Integer);
begin
request_rec(GetRecordPtr^).proxyreq := val;
end;
function __request_rec__Wrapper.getproxyreq : Integer;
begin
result := request_rec(GetRecordPtr^).proxyreq;
end;
procedure __request_rec__Wrapper.setheader_only(const val : Integer);
begin
request_rec(GetRecordPtr^).header_only := val;
end;
function __request_rec__Wrapper.getheader_only : Integer;
begin
result := request_rec(GetRecordPtr^).header_only;
end;
procedure __request_rec__Wrapper.setproto_num(const val : Integer);
begin
request_rec(GetRecordPtr^).proto_num := val;
end;
function __request_rec__Wrapper.getproto_num : Integer;
begin
result := request_rec(GetRecordPtr^).proto_num;
end;
procedure __request_rec__Wrapper.setstatus(const val : Integer);
begin
request_rec(GetRecordPtr^).status := val;
end;
function __request_rec__Wrapper.getstatus : Integer;
begin
result := request_rec(GetRecordPtr^).status;
end;
procedure __request_rec__Wrapper.setmethod_number(const val : Integer);
begin
request_rec(GetRecordPtr^).method_number := val;
end;
function __request_rec__Wrapper.getmethod_number : Integer;
begin
result := request_rec(GetRecordPtr^).method_number;
end;
procedure __request_rec__Wrapper.setchunked(const val : Integer);
begin
request_rec(GetRecordPtr^).chunked := val;
end;
function __request_rec__Wrapper.getchunked : Integer;
begin
result := request_rec(GetRecordPtr^).chunked;
end;
procedure __request_rec__Wrapper.setread_body(const val : Integer);
begin
request_rec(GetRecordPtr^).read_body := val;
end;
function __request_rec__Wrapper.getread_body : Integer;
begin
result := request_rec(GetRecordPtr^).read_body;
end;
procedure __request_rec__Wrapper.setread_chunked(const val : Integer);
begin
request_rec(GetRecordPtr^).read_chunked := val;
end;
function __request_rec__Wrapper.getread_chunked : Integer;
begin
result := request_rec(GetRecordPtr^).read_chunked;
end;
procedure __request_rec__Wrapper.setexpecting_100(const val : Cardinal);
begin
request_rec(GetRecordPtr^).expecting_100 := val;
end;
function __request_rec__Wrapper.getexpecting_100 : Cardinal;
begin
result := request_rec(GetRecordPtr^).expecting_100;
end;
procedure __request_rec__Wrapper.setno_cache(const val : Integer);
begin
request_rec(GetRecordPtr^).no_cache := val;
end;
function __request_rec__Wrapper.getno_cache : Integer;
begin
result := request_rec(GetRecordPtr^).no_cache;
end;
procedure __request_rec__Wrapper.setno_local_copy(const val : Integer);
begin
request_rec(GetRecordPtr^).no_local_copy := val;
end;
function __request_rec__Wrapper.getno_local_copy : Integer;
begin
result := request_rec(GetRecordPtr^).no_local_copy;
end;
procedure __request_rec__Wrapper.setused_path_info(const val : Integer);
begin
request_rec(GetRecordPtr^).used_path_info := val;
end;
function __request_rec__Wrapper.getused_path_info : Integer;
begin
result := request_rec(GetRecordPtr^).used_path_info;
end;
procedure __request_rec__Wrapper.seteos_sent(const val : Integer);
begin
request_rec(GetRecordPtr^).eos_sent := val;
end;
function __request_rec__Wrapper.geteos_sent : Integer;
begin
result := request_rec(GetRecordPtr^).eos_sent;
end;
function __server_addr_rec__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __server_addr_rec__Wrapper.sethost_port(const val : apr_port_t);
begin
server_addr_rec(GetRecordPtr^).host_port := val;
end;
function __server_addr_rec__Wrapper.gethost_port : apr_port_t;
begin
result := server_addr_rec(GetRecordPtr^).host_port;
end;
function __server_rec__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __server_rec__Wrapper.setdefn_line_number(const val : Cardinal);
begin
server_rec(GetRecordPtr^).defn_line_number := val;
end;
function __server_rec__Wrapper.getdefn_line_number : Cardinal;
begin
result := server_rec(GetRecordPtr^).defn_line_number;
end;
procedure __server_rec__Wrapper.setport(const val : apr_port_t);
begin
server_rec(GetRecordPtr^).port := val;
end;
function __server_rec__Wrapper.getport : apr_port_t;
begin
result := server_rec(GetRecordPtr^).port;
end;
procedure __server_rec__Wrapper.setloglevel(const val : Integer);
begin
server_rec(GetRecordPtr^).loglevel := val;
end;
function __server_rec__Wrapper.getloglevel : Integer;
begin
result := server_rec(GetRecordPtr^).loglevel;
end;
procedure __server_rec__Wrapper.setis_virtual(const val : Integer);
begin
server_rec(GetRecordPtr^).is_virtual := val;
end;
function __server_rec__Wrapper.getis_virtual : Integer;
begin
result := server_rec(GetRecordPtr^).is_virtual;
end;
procedure __server_rec__Wrapper.setkeep_alive_max(const val : Integer);
begin
server_rec(GetRecordPtr^).keep_alive_max := val;
end;
function __server_rec__Wrapper.getkeep_alive_max : Integer;
begin
result := server_rec(GetRecordPtr^).keep_alive_max;
end;
procedure __server_rec__Wrapper.setkeep_alive(const val : Integer);
begin
server_rec(GetRecordPtr^).keep_alive := val;
end;
function __server_rec__Wrapper.getkeep_alive : Integer;
begin
result := server_rec(GetRecordPtr^).keep_alive;
end;
procedure __server_rec__Wrapper.setpathlen(const val : Integer);
begin
server_rec(GetRecordPtr^).pathlen := val;
end;
function __server_rec__Wrapper.getpathlen : Integer;
begin
result := server_rec(GetRecordPtr^).pathlen;
end;
procedure __server_rec__Wrapper.setlimit_req_line(const val : Integer);
begin
server_rec(GetRecordPtr^).limit_req_line := val;
end;
function __server_rec__Wrapper.getlimit_req_line : Integer;
begin
result := server_rec(GetRecordPtr^).limit_req_line;
end;
procedure __server_rec__Wrapper.setlimit_req_fieldsize(const val : Integer);
begin
server_rec(GetRecordPtr^).limit_req_fieldsize := val;
end;
function __server_rec__Wrapper.getlimit_req_fieldsize : Integer;
begin
result := server_rec(GetRecordPtr^).limit_req_fieldsize;
end;
procedure __server_rec__Wrapper.setlimit_req_fields(const val : Integer);
begin
server_rec(GetRecordPtr^).limit_req_fields := val;
end;
function __server_rec__Wrapper.getlimit_req_fields : Integer;
begin
result := server_rec(GetRecordPtr^).limit_req_fields;
end;
function _ap_conf_vector_t_ : IDispatch;
begin
  result := __ap_conf_vector_t__Wrapper.Create;
end;
function _ap_configfile_t_ : IDispatch;
begin
  result := __ap_configfile_t__Wrapper.Create;
end;
function _ap_directive_t_ : IDispatch;
begin
  result := __ap_directive_t__Wrapper.Create;
end;
function _ap_filter_func_ : IDispatch;
begin
  result := __ap_filter_func__Wrapper.Create;
end;
function _ap_filter_rec_t_ : IDispatch;
begin
  result := __ap_filter_rec_t__Wrapper.Create;
end;
function _ap_filter_t_ : IDispatch;
begin
  result := __ap_filter_t__Wrapper.Create;
end;
function _ap_LINK_access_checker_t_ : IDispatch;
begin
  result := __ap_LINK_access_checker_t__Wrapper.Create;
end;
function _ap_LINK_auth_checker_t_ : IDispatch;
begin
  result := __ap_LINK_auth_checker_t__Wrapper.Create;
end;
function _ap_LINK_check_user_id_t_ : IDispatch;
begin
  result := __ap_LINK_check_user_id_t__Wrapper.Create;
end;
function _ap_LINK_child_init_t_ : IDispatch;
begin
  result := __ap_LINK_child_init_t__Wrapper.Create;
end;
function _ap_LINK_create_connection_t_ : IDispatch;
begin
  result := __ap_LINK_create_connection_t__Wrapper.Create;
end;
function _ap_LINK_create_request_t_ : IDispatch;
begin
  result := __ap_LINK_create_request_t__Wrapper.Create;
end;
function _ap_LINK_default_port_t_ : IDispatch;
begin
  result := __ap_LINK_default_port_t__Wrapper.Create;
end;
function _ap_LINK_error_log_t_ : IDispatch;
begin
  result := __ap_LINK_error_log_t__Wrapper.Create;
end;
function _ap_LINK_fixups_t_ : IDispatch;
begin
  result := __ap_LINK_fixups_t__Wrapper.Create;
end;
function _ap_LINK_get_mgmt_items_t_ : IDispatch;
begin
  result := __ap_LINK_get_mgmt_items_t__Wrapper.Create;
end;
function _ap_LINK_handler_t_ : IDispatch;
begin
  result := __ap_LINK_handler_t__Wrapper.Create;
end;
function _ap_LINK_header_parser_t_ : IDispatch;
begin
  result := __ap_LINK_header_parser_t__Wrapper.Create;
end;
function _ap_LINK_http_method_t_ : IDispatch;
begin
  result := __ap_LINK_http_method_t__Wrapper.Create;
end;
function _ap_LINK_insert_filter_t_ : IDispatch;
begin
  result := __ap_LINK_insert_filter_t__Wrapper.Create;
end;
function _ap_LINK_log_transaction_t_ : IDispatch;
begin
  result := __ap_LINK_log_transaction_t__Wrapper.Create;
end;
function _ap_LINK_map_to_storage_t_ : IDispatch;
begin
  result := __ap_LINK_map_to_storage_t__Wrapper.Create;
end;
function _ap_LINK_open_logs_t_ : IDispatch;
begin
  result := __ap_LINK_open_logs_t__Wrapper.Create;
end;
function _ap_LINK_optional_fn_retrieve_t_ : IDispatch;
begin
  result := __ap_LINK_optional_fn_retrieve_t__Wrapper.Create;
end;
function _ap_LINK_post_config_t_ : IDispatch;
begin
  result := __ap_LINK_post_config_t__Wrapper.Create;
end;
function _ap_LINK_post_read_request_t_ : IDispatch;
begin
  result := __ap_LINK_post_read_request_t__Wrapper.Create;
end;
function _ap_LINK_pre_config_t_ : IDispatch;
begin
  result := __ap_LINK_pre_config_t__Wrapper.Create;
end;
function _ap_LINK_pre_connection_t_ : IDispatch;
begin
  result := __ap_LINK_pre_connection_t__Wrapper.Create;
end;
function _ap_LINK_process_connection_t_ : IDispatch;
begin
  result := __ap_LINK_process_connection_t__Wrapper.Create;
end;
function _ap_LINK_quick_handler_t_ : IDispatch;
begin
  result := __ap_LINK_quick_handler_t__Wrapper.Create;
end;
function _ap_LINK_translate_name_t_ : IDispatch;
begin
  result := __ap_LINK_translate_name_t__Wrapper.Create;
end;
function _ap_LINK_type_checker_t_ : IDispatch;
begin
  result := __ap_LINK_type_checker_t__Wrapper.Create;
end;
function _ap_method_list_t_ : IDispatch;
begin
  result := __ap_method_list_t__Wrapper.Create;
end;
function _apr_array_header_t_ : IDispatch;
begin
  result := __apr_array_header_t__Wrapper.Create;
end;
function _apr_bucket_alloc_t_ : IDispatch;
begin
  result := __apr_bucket_alloc_t__Wrapper.Create;
end;
function _apr_file_t_ : IDispatch;
begin
  result := __apr_file_t__Wrapper.Create;
end;
function _apr_finfo_t_ : IDispatch;
begin
  result := __apr_finfo_t__Wrapper.Create;
end;
function _apr_hash_t_ : IDispatch;
begin
  result := __apr_hash_t__Wrapper.Create;
end;
function _apr_pool_t_ : IDispatch;
begin
  result := __apr_pool_t__Wrapper.Create;
end;
function _apr_sockaddr_t_ : IDispatch;
begin
  result := __apr_sockaddr_t__Wrapper.Create;
end;
function _apr_socket_t_ : IDispatch;
begin
  result := __apr_socket_t__Wrapper.Create;
end;
function _apr_table_entry_t_ : IDispatch;
begin
  result := __apr_table_entry_t__Wrapper.Create;
end;
function _apr_table_t_ : IDispatch;
begin
  result := __apr_table_t__Wrapper.Create;
end;
function _apr_uri_t_ : IDispatch;
begin
  result := __apr_uri_t__Wrapper.Create;
end;
function _cmd_parms_ : IDispatch;
begin
  result := __cmd_parms__Wrapper.Create;
end;
function _cmd_parms_struct_ : IDispatch;
begin
  result := __cmd_parms_struct__Wrapper.Create;
end;
function _command_rec_ : IDispatch;
begin
  result := __command_rec__Wrapper.Create;
end;
function _command_struct_ : IDispatch;
begin
  result := __command_struct__Wrapper.Create;
end;
function _conn_rec_ : IDispatch;
begin
  result := __conn_rec__Wrapper.Create;
end;
function _htaccess_result_ : IDispatch;
begin
  result := __htaccess_result__Wrapper.Create;
end;
function _module_ : IDispatch;
begin
  result := __module__Wrapper.Create;
end;
function _process_rec_ : IDispatch;
begin
  result := __process_rec__Wrapper.Create;
end;
function _request_rec_ : IDispatch;
begin
  result := __request_rec__Wrapper.Create;
end;
function _server_addr_rec_ : IDispatch;
begin
  result := __server_addr_rec__Wrapper.Create;
end;
function _server_rec_ : IDispatch;
begin
  result := __server_rec__Wrapper.Create;
end;

type __ap_conf_vector_t__Wrapper__ = class(__ap_conf_vector_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_conf_vector_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_conf_vector_tToVariant(var R : ap_conf_vector_t) : OleVariant;
var
__rw : __ap_conf_vector_t__Wrapper__;
begin
__rw := __ap_conf_vector_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_conf_vector_t(const V : OleVariant) : ap_conf_vector_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_conf_vector_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_configfile_t__Wrapper__ = class(__ap_configfile_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_configfile_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_configfile_tToVariant(var R : ap_configfile_t) : OleVariant;
var
__rw : __ap_configfile_t__Wrapper__;
begin
__rw := __ap_configfile_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_configfile_t(const V : OleVariant) : ap_configfile_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_configfile_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_directive_t__Wrapper__ = class(__ap_directive_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_directive_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_directive_tToVariant(var R : ap_directive_t) : OleVariant;
var
__rw : __ap_directive_t__Wrapper__;
begin
__rw := __ap_directive_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_directive_t(const V : OleVariant) : ap_directive_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_directive_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_filter_func__Wrapper__ = class(__ap_filter_func__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_filter_func__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_filter_funcToVariant(var R : ap_filter_func) : OleVariant;
var
__rw : __ap_filter_func__Wrapper__;
begin
__rw := __ap_filter_func__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_filter_func(const V : OleVariant) : ap_filter_func;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_filter_func((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_filter_rec_t__Wrapper__ = class(__ap_filter_rec_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_filter_rec_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_filter_rec_tToVariant(var R : ap_filter_rec_t) : OleVariant;
var
__rw : __ap_filter_rec_t__Wrapper__;
begin
__rw := __ap_filter_rec_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_filter_rec_t(const V : OleVariant) : ap_filter_rec_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_filter_rec_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_filter_t__Wrapper__ = class(__ap_filter_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_filter_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_filter_tToVariant(var R : ap_filter_t) : OleVariant;
var
__rw : __ap_filter_t__Wrapper__;
begin
__rw := __ap_filter_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_filter_t(const V : OleVariant) : ap_filter_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_filter_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_access_checker_t__Wrapper__ = class(__ap_LINK_access_checker_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_access_checker_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_access_checker_tToVariant(var R : ap_LINK_access_checker_t) : OleVariant;
var
__rw : __ap_LINK_access_checker_t__Wrapper__;
begin
__rw := __ap_LINK_access_checker_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_access_checker_t(const V : OleVariant) : ap_LINK_access_checker_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_access_checker_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_auth_checker_t__Wrapper__ = class(__ap_LINK_auth_checker_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_auth_checker_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_auth_checker_tToVariant(var R : ap_LINK_auth_checker_t) : OleVariant;
var
__rw : __ap_LINK_auth_checker_t__Wrapper__;
begin
__rw := __ap_LINK_auth_checker_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_auth_checker_t(const V : OleVariant) : ap_LINK_auth_checker_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_auth_checker_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_check_user_id_t__Wrapper__ = class(__ap_LINK_check_user_id_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_check_user_id_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_check_user_id_tToVariant(var R : ap_LINK_check_user_id_t) : OleVariant;
var
__rw : __ap_LINK_check_user_id_t__Wrapper__;
begin
__rw := __ap_LINK_check_user_id_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_check_user_id_t(const V : OleVariant) : ap_LINK_check_user_id_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_check_user_id_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_child_init_t__Wrapper__ = class(__ap_LINK_child_init_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_child_init_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_child_init_tToVariant(var R : ap_LINK_child_init_t) : OleVariant;
var
__rw : __ap_LINK_child_init_t__Wrapper__;
begin
__rw := __ap_LINK_child_init_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_child_init_t(const V : OleVariant) : ap_LINK_child_init_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_child_init_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_create_connection_t__Wrapper__ = class(__ap_LINK_create_connection_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_create_connection_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_create_connection_tToVariant(var R : ap_LINK_create_connection_t) : OleVariant;
var
__rw : __ap_LINK_create_connection_t__Wrapper__;
begin
__rw := __ap_LINK_create_connection_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_create_connection_t(const V : OleVariant) : ap_LINK_create_connection_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_create_connection_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_create_request_t__Wrapper__ = class(__ap_LINK_create_request_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_create_request_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_create_request_tToVariant(var R : ap_LINK_create_request_t) : OleVariant;
var
__rw : __ap_LINK_create_request_t__Wrapper__;
begin
__rw := __ap_LINK_create_request_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_create_request_t(const V : OleVariant) : ap_LINK_create_request_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_create_request_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_default_port_t__Wrapper__ = class(__ap_LINK_default_port_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_default_port_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_default_port_tToVariant(var R : ap_LINK_default_port_t) : OleVariant;
var
__rw : __ap_LINK_default_port_t__Wrapper__;
begin
__rw := __ap_LINK_default_port_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_default_port_t(const V : OleVariant) : ap_LINK_default_port_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_default_port_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_error_log_t__Wrapper__ = class(__ap_LINK_error_log_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_error_log_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_error_log_tToVariant(var R : ap_LINK_error_log_t) : OleVariant;
var
__rw : __ap_LINK_error_log_t__Wrapper__;
begin
__rw := __ap_LINK_error_log_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_error_log_t(const V : OleVariant) : ap_LINK_error_log_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_error_log_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_fixups_t__Wrapper__ = class(__ap_LINK_fixups_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_fixups_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_fixups_tToVariant(var R : ap_LINK_fixups_t) : OleVariant;
var
__rw : __ap_LINK_fixups_t__Wrapper__;
begin
__rw := __ap_LINK_fixups_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_fixups_t(const V : OleVariant) : ap_LINK_fixups_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_fixups_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_get_mgmt_items_t__Wrapper__ = class(__ap_LINK_get_mgmt_items_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_get_mgmt_items_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_get_mgmt_items_tToVariant(var R : ap_LINK_get_mgmt_items_t) : OleVariant;
var
__rw : __ap_LINK_get_mgmt_items_t__Wrapper__;
begin
__rw := __ap_LINK_get_mgmt_items_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_get_mgmt_items_t(const V : OleVariant) : ap_LINK_get_mgmt_items_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_get_mgmt_items_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_handler_t__Wrapper__ = class(__ap_LINK_handler_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_handler_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_handler_tToVariant(var R : ap_LINK_handler_t) : OleVariant;
var
__rw : __ap_LINK_handler_t__Wrapper__;
begin
__rw := __ap_LINK_handler_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_handler_t(const V : OleVariant) : ap_LINK_handler_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_handler_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_header_parser_t__Wrapper__ = class(__ap_LINK_header_parser_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_header_parser_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_header_parser_tToVariant(var R : ap_LINK_header_parser_t) : OleVariant;
var
__rw : __ap_LINK_header_parser_t__Wrapper__;
begin
__rw := __ap_LINK_header_parser_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_header_parser_t(const V : OleVariant) : ap_LINK_header_parser_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_header_parser_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_http_method_t__Wrapper__ = class(__ap_LINK_http_method_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_http_method_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_http_method_tToVariant(var R : ap_LINK_http_method_t) : OleVariant;
var
__rw : __ap_LINK_http_method_t__Wrapper__;
begin
__rw := __ap_LINK_http_method_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_http_method_t(const V : OleVariant) : ap_LINK_http_method_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_http_method_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_insert_filter_t__Wrapper__ = class(__ap_LINK_insert_filter_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_insert_filter_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_insert_filter_tToVariant(var R : ap_LINK_insert_filter_t) : OleVariant;
var
__rw : __ap_LINK_insert_filter_t__Wrapper__;
begin
__rw := __ap_LINK_insert_filter_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_insert_filter_t(const V : OleVariant) : ap_LINK_insert_filter_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_insert_filter_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_log_transaction_t__Wrapper__ = class(__ap_LINK_log_transaction_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_log_transaction_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_log_transaction_tToVariant(var R : ap_LINK_log_transaction_t) : OleVariant;
var
__rw : __ap_LINK_log_transaction_t__Wrapper__;
begin
__rw := __ap_LINK_log_transaction_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_log_transaction_t(const V : OleVariant) : ap_LINK_log_transaction_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_log_transaction_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_map_to_storage_t__Wrapper__ = class(__ap_LINK_map_to_storage_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_map_to_storage_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_map_to_storage_tToVariant(var R : ap_LINK_map_to_storage_t) : OleVariant;
var
__rw : __ap_LINK_map_to_storage_t__Wrapper__;
begin
__rw := __ap_LINK_map_to_storage_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_map_to_storage_t(const V : OleVariant) : ap_LINK_map_to_storage_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_map_to_storage_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_open_logs_t__Wrapper__ = class(__ap_LINK_open_logs_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_open_logs_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_open_logs_tToVariant(var R : ap_LINK_open_logs_t) : OleVariant;
var
__rw : __ap_LINK_open_logs_t__Wrapper__;
begin
__rw := __ap_LINK_open_logs_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_open_logs_t(const V : OleVariant) : ap_LINK_open_logs_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_open_logs_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_optional_fn_retrieve_t__Wrapper__ = class(__ap_LINK_optional_fn_retrieve_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_optional_fn_retrieve_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_optional_fn_retrieve_tToVariant(var R : ap_LINK_optional_fn_retrieve_t) : OleVariant;
var
__rw : __ap_LINK_optional_fn_retrieve_t__Wrapper__;
begin
__rw := __ap_LINK_optional_fn_retrieve_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_optional_fn_retrieve_t(const V : OleVariant) : ap_LINK_optional_fn_retrieve_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_optional_fn_retrieve_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_post_config_t__Wrapper__ = class(__ap_LINK_post_config_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_post_config_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_post_config_tToVariant(var R : ap_LINK_post_config_t) : OleVariant;
var
__rw : __ap_LINK_post_config_t__Wrapper__;
begin
__rw := __ap_LINK_post_config_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_post_config_t(const V : OleVariant) : ap_LINK_post_config_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_post_config_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_post_read_request_t__Wrapper__ = class(__ap_LINK_post_read_request_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_post_read_request_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_post_read_request_tToVariant(var R : ap_LINK_post_read_request_t) : OleVariant;
var
__rw : __ap_LINK_post_read_request_t__Wrapper__;
begin
__rw := __ap_LINK_post_read_request_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_post_read_request_t(const V : OleVariant) : ap_LINK_post_read_request_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_post_read_request_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_pre_config_t__Wrapper__ = class(__ap_LINK_pre_config_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_pre_config_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_pre_config_tToVariant(var R : ap_LINK_pre_config_t) : OleVariant;
var
__rw : __ap_LINK_pre_config_t__Wrapper__;
begin
__rw := __ap_LINK_pre_config_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_pre_config_t(const V : OleVariant) : ap_LINK_pre_config_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_pre_config_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_pre_connection_t__Wrapper__ = class(__ap_LINK_pre_connection_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_pre_connection_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_pre_connection_tToVariant(var R : ap_LINK_pre_connection_t) : OleVariant;
var
__rw : __ap_LINK_pre_connection_t__Wrapper__;
begin
__rw := __ap_LINK_pre_connection_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_pre_connection_t(const V : OleVariant) : ap_LINK_pre_connection_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_pre_connection_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_process_connection_t__Wrapper__ = class(__ap_LINK_process_connection_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_process_connection_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_process_connection_tToVariant(var R : ap_LINK_process_connection_t) : OleVariant;
var
__rw : __ap_LINK_process_connection_t__Wrapper__;
begin
__rw := __ap_LINK_process_connection_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_process_connection_t(const V : OleVariant) : ap_LINK_process_connection_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_process_connection_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_quick_handler_t__Wrapper__ = class(__ap_LINK_quick_handler_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_quick_handler_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_quick_handler_tToVariant(var R : ap_LINK_quick_handler_t) : OleVariant;
var
__rw : __ap_LINK_quick_handler_t__Wrapper__;
begin
__rw := __ap_LINK_quick_handler_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_quick_handler_t(const V : OleVariant) : ap_LINK_quick_handler_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_quick_handler_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_translate_name_t__Wrapper__ = class(__ap_LINK_translate_name_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_translate_name_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_translate_name_tToVariant(var R : ap_LINK_translate_name_t) : OleVariant;
var
__rw : __ap_LINK_translate_name_t__Wrapper__;
begin
__rw := __ap_LINK_translate_name_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_translate_name_t(const V : OleVariant) : ap_LINK_translate_name_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_translate_name_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_LINK_type_checker_t__Wrapper__ = class(__ap_LINK_type_checker_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_LINK_type_checker_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_LINK_type_checker_tToVariant(var R : ap_LINK_type_checker_t) : OleVariant;
var
__rw : __ap_LINK_type_checker_t__Wrapper__;
begin
__rw := __ap_LINK_type_checker_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_LINK_type_checker_t(const V : OleVariant) : ap_LINK_type_checker_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_LINK_type_checker_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ap_method_list_t__Wrapper__ = class(__ap_method_list_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ap_method_list_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertap_method_list_tToVariant(var R : ap_method_list_t) : OleVariant;
var
__rw : __ap_method_list_t__Wrapper__;
begin
__rw := __ap_method_list_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToap_method_list_t(const V : OleVariant) : ap_method_list_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ap_method_list_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_array_header_t__Wrapper__ = class(__apr_array_header_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_array_header_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_array_header_tToVariant(var R : apr_array_header_t) : OleVariant;
var
__rw : __apr_array_header_t__Wrapper__;
begin
__rw := __apr_array_header_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_array_header_t(const V : OleVariant) : apr_array_header_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_array_header_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_bucket_alloc_t__Wrapper__ = class(__apr_bucket_alloc_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_bucket_alloc_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_bucket_alloc_tToVariant(var R : apr_bucket_alloc_t) : OleVariant;
var
__rw : __apr_bucket_alloc_t__Wrapper__;
begin
__rw := __apr_bucket_alloc_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_bucket_alloc_t(const V : OleVariant) : apr_bucket_alloc_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_bucket_alloc_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_file_t__Wrapper__ = class(__apr_file_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_file_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_file_tToVariant(var R : apr_file_t) : OleVariant;
var
__rw : __apr_file_t__Wrapper__;
begin
__rw := __apr_file_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_file_t(const V : OleVariant) : apr_file_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_file_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_finfo_t__Wrapper__ = class(__apr_finfo_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_finfo_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_finfo_tToVariant(var R : apr_finfo_t) : OleVariant;
var
__rw : __apr_finfo_t__Wrapper__;
begin
__rw := __apr_finfo_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_finfo_t(const V : OleVariant) : apr_finfo_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_finfo_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_hash_t__Wrapper__ = class(__apr_hash_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_hash_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_hash_tToVariant(var R : apr_hash_t) : OleVariant;
var
__rw : __apr_hash_t__Wrapper__;
begin
__rw := __apr_hash_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_hash_t(const V : OleVariant) : apr_hash_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_hash_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_pool_t__Wrapper__ = class(__apr_pool_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_pool_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_pool_tToVariant(var R : apr_pool_t) : OleVariant;
var
__rw : __apr_pool_t__Wrapper__;
begin
__rw := __apr_pool_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_pool_t(const V : OleVariant) : apr_pool_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_pool_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_sockaddr_t__Wrapper__ = class(__apr_sockaddr_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_sockaddr_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_sockaddr_tToVariant(var R : apr_sockaddr_t) : OleVariant;
var
__rw : __apr_sockaddr_t__Wrapper__;
begin
__rw := __apr_sockaddr_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_sockaddr_t(const V : OleVariant) : apr_sockaddr_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_sockaddr_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_socket_t__Wrapper__ = class(__apr_socket_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_socket_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_socket_tToVariant(var R : apr_socket_t) : OleVariant;
var
__rw : __apr_socket_t__Wrapper__;
begin
__rw := __apr_socket_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_socket_t(const V : OleVariant) : apr_socket_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_socket_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_table_entry_t__Wrapper__ = class(__apr_table_entry_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_table_entry_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_table_entry_tToVariant(var R : apr_table_entry_t) : OleVariant;
var
__rw : __apr_table_entry_t__Wrapper__;
begin
__rw := __apr_table_entry_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_table_entry_t(const V : OleVariant) : apr_table_entry_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_table_entry_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_table_t__Wrapper__ = class(__apr_table_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_table_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_table_tToVariant(var R : apr_table_t) : OleVariant;
var
__rw : __apr_table_t__Wrapper__;
begin
__rw := __apr_table_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_table_t(const V : OleVariant) : apr_table_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_table_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __apr_uri_t__Wrapper__ = class(__apr_uri_t__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __apr_uri_t__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertapr_uri_tToVariant(var R : apr_uri_t) : OleVariant;
var
__rw : __apr_uri_t__Wrapper__;
begin
__rw := __apr_uri_t__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToapr_uri_t(const V : OleVariant) : apr_uri_t;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := apr_uri_t((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __cmd_parms__Wrapper__ = class(__cmd_parms__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __cmd_parms__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertcmd_parmsToVariant(var R : cmd_parms) : OleVariant;
var
__rw : __cmd_parms__Wrapper__;
begin
__rw := __cmd_parms__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTocmd_parms(const V : OleVariant) : cmd_parms;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := cmd_parms((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __cmd_parms_struct__Wrapper__ = class(__cmd_parms_struct__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __cmd_parms_struct__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertcmd_parms_structToVariant(var R : cmd_parms_struct) : OleVariant;
var
__rw : __cmd_parms_struct__Wrapper__;
begin
__rw := __cmd_parms_struct__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTocmd_parms_struct(const V : OleVariant) : cmd_parms_struct;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := cmd_parms_struct((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __command_rec__Wrapper__ = class(__command_rec__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __command_rec__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertcommand_recToVariant(var R : command_rec) : OleVariant;
var
__rw : __command_rec__Wrapper__;
begin
__rw := __command_rec__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTocommand_rec(const V : OleVariant) : command_rec;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := command_rec((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __command_struct__Wrapper__ = class(__command_struct__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __command_struct__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertcommand_structToVariant(var R : command_struct) : OleVariant;
var
__rw : __command_struct__Wrapper__;
begin
__rw := __command_struct__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTocommand_struct(const V : OleVariant) : command_struct;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := command_struct((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __conn_rec__Wrapper__ = class(__conn_rec__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __conn_rec__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertconn_recToVariant(var R : conn_rec) : OleVariant;
var
__rw : __conn_rec__Wrapper__;
begin
__rw := __conn_rec__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToconn_rec(const V : OleVariant) : conn_rec;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := conn_rec((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __htaccess_result__Wrapper__ = class(__htaccess_result__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __htaccess_result__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Converthtaccess_resultToVariant(var R : htaccess_result) : OleVariant;
var
__rw : __htaccess_result__Wrapper__;
begin
__rw := __htaccess_result__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTohtaccess_result(const V : OleVariant) : htaccess_result;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := htaccess_result((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __module__Wrapper__ = class(__module__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __module__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertmoduleToVariant(var R : module) : OleVariant;
var
__rw : __module__Wrapper__;
begin
__rw := __module__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTomodule(const V : OleVariant) : module;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := module((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __process_rec__Wrapper__ = class(__process_rec__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __process_rec__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertprocess_recToVariant(var R : process_rec) : OleVariant;
var
__rw : __process_rec__Wrapper__;
begin
__rw := __process_rec__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToprocess_rec(const V : OleVariant) : process_rec;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := process_rec((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __request_rec__Wrapper__ = class(__request_rec__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __request_rec__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertrequest_recToVariant(var R : request_rec) : OleVariant;
var
__rw : __request_rec__Wrapper__;
begin
__rw := __request_rec__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTorequest_rec(const V : OleVariant) : request_rec;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := request_rec((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __server_addr_rec__Wrapper__ = class(__server_addr_rec__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __server_addr_rec__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertserver_addr_recToVariant(var R : server_addr_rec) : OleVariant;
var
__rw : __server_addr_rec__Wrapper__;
begin
__rw := __server_addr_rec__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToserver_addr_rec(const V : OleVariant) : server_addr_rec;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := server_addr_rec((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __server_rec__Wrapper__ = class(__server_rec__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __server_rec__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertserver_recToVariant(var R : server_rec) : OleVariant;
var
__rw : __server_rec__Wrapper__;
begin
__rw := __server_rec__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToserver_rec(const V : OleVariant) : server_rec;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := server_rec((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..187] of string = (
'LibHTTPD'
,'LibAPR'
,'MODULE_MAGIC_COOKIE'
,'MODULE_MAGIC_NUMBER_MAJOR'
,'MODULE_MAGIC_NUMBER_MINOR'
,'MODULE_MAGIC_NUMBER'
,'APR_HOOK_REALLY_FIRST'
,'APR_HOOK_FIRST'
,'APR_HOOK_MIDDLE'
,'APR_HOOK_LAST'
,'APR_HOOK_REALLY_LAST'
,'RAW_ARGS'
,'TAKE1'
,'TAKE2'
,'ITERATE'
,'ITERATE2'
,'FLAG'
,'NO_ARGS'
,'TAKE12'
,'TAKE3'
,'TAKE23'
,'TAKE123'
,'TAKE13'
,'OR_NONE'
,'OR_LIMIT'
,'OR_OPTIONS'
,'OR_FILEINFO'
,'OR_AUTHCFG'
,'OR_INDEXES'
,'OR_UNSET'
,'ACCESS_CONF'
,'RSRC_CONF'
,'EXEC_ON_READ'
,'OR_ALL'
,'DECLINE_CMD'
,'OPT_NONE'
,'OPT_INDEXES'
,'OPT_INCLUDES'
,'OPT_SYM_LINKS'
,'OPT_EXECCGI'
,'OPT_UNSET'
,'OPT_INCNOEXEC'
,'OPT_SYM_OWNER'
,'OPT_MULTI'
,'OPT_ALL'
,'REMOTE_HOST'
,'REMOTE_NAME'
,'REMOTE_NOLOOKUP'
,'REMOTE_DOUBLE_REV'
,'SATISFY_ALL'
,'SATISFY_ANY'
,'SATISFY_NOSPEC'
,'AP_MIN_BYTES_TO_WRITE'
,'APR_NOFILE'
,'APR_REG'
,'APR_DIR'
,'APR_CHR'
,'APR_BLK'
,'APR_PIPE'
,'APR_LNK'
,'APR_SOCK'
,'AP_CONN_UNKNOWN'
,'AP_CONN_CLOSE'
,'AP_CONN_KEEPALIVE'
,'APR_BLOCK_READ'
,'APR_NONBLOCK_READ'
,'AP_MODE_READBYTES'
,'AP_MODE_GETLINE'
,'AP_MODE_EATCRLF'
,'AP_MODE_SPECULATIVE'
,'AP_MODE_EXHAUSTIVE'
,'AP_MODE_INIT'
,'AP_FTYPE_RESOURCE'
,'AP_FTYPE_CONTENT_SET'
,'AP_FTYPE_PROTOCOL'
,'AP_FTYPE_TRANSCODE'
,'AP_FTYPE_CONNECTION'
,'AP_FTYPE_NETWORK'
,'SERVER_PROTOCOL'
,'AP_DECLINED'
,'DECLINED'
,'AP_DONE'
,'DONE'
,'AP_OK'
,'OK'
,'RESPONSE_CODES'
,'HTTP_CONTINUE'
,'HTTP_SWITCHING_PROTOCOLS'
,'HTTP_PROCESSING'
,'HTTP_OK'
,'HTTP_CREATED'
,'HTTP_ACCEPTED'
,'HTTP_NON_AUTHORITATIVE'
,'HTTP_NO_CONTENT'
,'HTTP_RESET_CONTENT'
,'HTTP_PARTIAL_CONTENT'
,'HTTP_MULTI_STATUS'
,'HTTP_MULTIPLE_CHOICES'
,'HTTP_MOVED_PERMANENTLY'
,'HTTP_MOVED_TEMPORARILY'
,'HTTP_SEE_OTHER'
,'HTTP_NOT_MODIFIED'
,'HTTP_USE_PROXY'
,'HTTP_TEMPORARY_REDIRECT'
,'HTTP_BAD_REQUEST'
,'HTTP_UNAUTHORIZED'
,'HTTP_PAYMENT_REQUIRED'
,'HTTP_FORBIDDEN'
,'HTTP_NOT_FOUND'
,'HTTP_METHOD_NOT_ALLOWED'
,'HTTP_NOT_ACCEPTABLE'
,'HTTP_PROXY_AUTHENTICATION_REQUIRED'
,'HTTP_REQUEST_TIME_OUT'
,'HTTP_CONFLICT'
,'HTTP_GONE'
,'HTTP_LENGTH_REQUIRED'
,'HTTP_PRECONDITION_FAILED'
,'HTTP_REQUEST_ENTITY_TOO_LARGE'
,'HTTP_REQUEST_URI_TOO_LARGE'
,'HTTP_UNSUPPORTED_MEDIA_TYPE'
,'HTTP_RANGE_NOT_SATISFIABLE'
,'HTTP_EXPECTATION_FAILED'
,'HTTP_UNPROCESSABLE_ENTITY'
,'HTTP_LOCKED'
,'HTTP_FAILED_DEPENDENCY'
,'HTTP_INTERNAL_SERVER_ERROR'
,'HTTP_NOT_IMPLEMENTED'
,'HTTP_BAD_GATEWAY'
,'HTTP_SERVICE_UNAVAILABLE'
,'HTTP_GATEWAY_TIME_OUT'
,'HTTP_VERSION_NOT_SUPPORTED'
,'HTTP_VARIANT_ALSO_VARIES'
,'HTTP_INSUFFICIENT_STORAGE'
,'HTTP_NOT_EXTENDED'
,'M_GET'
,'M_PUT'
,'M_POST'
,'M_DELETE'
,'M_CONNECT'
,'M_OPTIONS'
,'M_TRACE'
,'M_PATCH'
,'M_PROPFIND'
,'M_PROPPATCH'
,'M_MKCOL'
,'M_COPY'
,'M_MOVE'
,'M_LOCK'
,'M_UNLOCK'
,'M_VERSION_CONTROL'
,'M_CHECKOUT'
,'M_UNCHECKOUT'
,'M_CHECKIN'
,'M_UPDATE'
,'M_LABEL'
,'M_REPORT'
,'M_MKWORKSPACE'
,'M_MKACTIVITY'
,'M_BASELINE_CONTROL'
,'M_MERGE'
,'M_INVALID'
,'METHODS'
,'CGI_MAGIC_TYPE'
,'INCLUDES_MAGIC_TYPE'
,'INCLUDES_MAGIC_TYPE3'
,'MAP_FILE_MAGIC_TYPE'
,'ASIS_MAGIC_TYPE'
,'DIR_MAGIC_TYPE'
,'STATUS_MAGIC_TYPE'
,'APLOG_EMERG'
,'APLOG_ALERT'
,'APLOG_CRIT'
,'APLOG_ERR'
,'APLOG_WARNING'
,'APLOG_NOTICE'
,'APLOG_INFO'
,'APLOG_DEBUG'
,'APLOG_LEVELMASK'
,'APLOG_NOERRNO'
,'REQUEST_NO_BODY'
,'REQUEST_CHUNKED_ERROR'
,'REQUEST_CHUNKED_DECHUNK'
,'PROXYREQ_NONE'
,'PROXYREQ_PROXY'
,'PROXYREQ_REVERSE'
,'DEFAULT_VHOST_ADDR'
,'APR_OVERLAP_TABLES_SET'
,'APR_OVERLAP_TABLES_MERGE'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,LibHTTPD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,LibAPR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,MODULE_MAGIC_COOKIE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,MODULE_MAGIC_NUMBER_MAJOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,MODULE_MAGIC_NUMBER_MINOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,MODULE_MAGIC_NUMBER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,APR_HOOK_REALLY_FIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,APR_HOOK_FIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,APR_HOOK_MIDDLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,APR_HOOK_LAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,APR_HOOK_REALLY_LAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,RAW_ARGS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,TAKE1));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,TAKE2));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,ITERATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,ITERATE2));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,FLAG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,NO_ARGS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,TAKE12));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,TAKE3));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,TAKE23));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,TAKE123));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,TAKE13));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,OR_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,OR_LIMIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,OR_OPTIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,OR_FILEINFO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,OR_AUTHCFG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,OR_INDEXES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,OR_UNSET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,ACCESS_CONF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,RSRC_CONF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,EXEC_ON_READ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,OR_ALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,DECLINE_CMD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,OPT_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,OPT_INDEXES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,OPT_INCLUDES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,OPT_SYM_LINKS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,OPT_EXECCGI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,OPT_UNSET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,OPT_INCNOEXEC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,OPT_SYM_OWNER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,OPT_MULTI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,OPT_ALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,REMOTE_HOST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,REMOTE_NAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,REMOTE_NOLOOKUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,REMOTE_DOUBLE_REV));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,SATISFY_ALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,SATISFY_ANY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,SATISFY_NOSPEC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,AP_MIN_BYTES_TO_WRITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,APR_NOFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,APR_REG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,APR_DIR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,APR_CHR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,APR_BLK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,APR_PIPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,APR_LNK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,APR_SOCK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,AP_CONN_UNKNOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,AP_CONN_CLOSE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,AP_CONN_KEEPALIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,APR_BLOCK_READ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,APR_NONBLOCK_READ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,AP_MODE_READBYTES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,AP_MODE_GETLINE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,AP_MODE_EATCRLF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,AP_MODE_SPECULATIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,AP_MODE_EXHAUSTIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,AP_MODE_INIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,AP_FTYPE_RESOURCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,AP_FTYPE_CONTENT_SET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,AP_FTYPE_PROTOCOL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,AP_FTYPE_TRANSCODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,AP_FTYPE_CONNECTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,AP_FTYPE_NETWORK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,SERVER_PROTOCOL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,AP_DECLINED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,DECLINED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,AP_DONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,DONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,AP_OK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,OK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,RESPONSE_CODES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,HTTP_CONTINUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,HTTP_SWITCHING_PROTOCOLS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,HTTP_PROCESSING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,HTTP_OK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,HTTP_CREATED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,HTTP_ACCEPTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,HTTP_NON_AUTHORITATIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,HTTP_NO_CONTENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,HTTP_RESET_CONTENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,HTTP_PARTIAL_CONTENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,HTTP_MULTI_STATUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,HTTP_MULTIPLE_CHOICES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,HTTP_MOVED_PERMANENTLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,HTTP_MOVED_TEMPORARILY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,HTTP_SEE_OTHER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,HTTP_NOT_MODIFIED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,HTTP_USE_PROXY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,HTTP_TEMPORARY_REDIRECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,HTTP_BAD_REQUEST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[105] ,HTTP_UNAUTHORIZED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[106] ,HTTP_PAYMENT_REQUIRED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[107] ,HTTP_FORBIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[108] ,HTTP_NOT_FOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[109] ,HTTP_METHOD_NOT_ALLOWED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[110] ,HTTP_NOT_ACCEPTABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[111] ,HTTP_PROXY_AUTHENTICATION_REQUIRED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[112] ,HTTP_REQUEST_TIME_OUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[113] ,HTTP_CONFLICT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[114] ,HTTP_GONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[115] ,HTTP_LENGTH_REQUIRED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[116] ,HTTP_PRECONDITION_FAILED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[117] ,HTTP_REQUEST_ENTITY_TOO_LARGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[118] ,HTTP_REQUEST_URI_TOO_LARGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[119] ,HTTP_UNSUPPORTED_MEDIA_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[120] ,HTTP_RANGE_NOT_SATISFIABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[121] ,HTTP_EXPECTATION_FAILED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[122] ,HTTP_UNPROCESSABLE_ENTITY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[123] ,HTTP_LOCKED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[124] ,HTTP_FAILED_DEPENDENCY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[125] ,HTTP_INTERNAL_SERVER_ERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[126] ,HTTP_NOT_IMPLEMENTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[127] ,HTTP_BAD_GATEWAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[128] ,HTTP_SERVICE_UNAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[129] ,HTTP_GATEWAY_TIME_OUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[130] ,HTTP_VERSION_NOT_SUPPORTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[131] ,HTTP_VARIANT_ALSO_VARIES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[132] ,HTTP_INSUFFICIENT_STORAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[133] ,HTTP_NOT_EXTENDED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[134] ,M_GET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[135] ,M_PUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[136] ,M_POST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[137] ,M_DELETE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[138] ,M_CONNECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[139] ,M_OPTIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[140] ,M_TRACE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[141] ,M_PATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[142] ,M_PROPFIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[143] ,M_PROPPATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[144] ,M_MKCOL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[145] ,M_COPY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[146] ,M_MOVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[147] ,M_LOCK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[148] ,M_UNLOCK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[149] ,M_VERSION_CONTROL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[150] ,M_CHECKOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[151] ,M_UNCHECKOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[152] ,M_CHECKIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[153] ,M_UPDATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[154] ,M_LABEL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[155] ,M_REPORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[156] ,M_MKWORKSPACE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[157] ,M_MKACTIVITY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[158] ,M_BASELINE_CONTROL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[159] ,M_MERGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[160] ,M_INVALID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[161] ,METHODS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[162] ,CGI_MAGIC_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[163] ,INCLUDES_MAGIC_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[164] ,INCLUDES_MAGIC_TYPE3));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[165] ,MAP_FILE_MAGIC_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[166] ,ASIS_MAGIC_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[167] ,DIR_MAGIC_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[168] ,STATUS_MAGIC_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[169] ,APLOG_EMERG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[170] ,APLOG_ALERT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[171] ,APLOG_CRIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[172] ,APLOG_ERR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[173] ,APLOG_WARNING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[174] ,APLOG_NOTICE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[175] ,APLOG_INFO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[176] ,APLOG_DEBUG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[177] ,APLOG_LEVELMASK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[178] ,APLOG_NOERRNO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[179] ,REQUEST_NO_BODY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[180] ,REQUEST_CHUNKED_ERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[181] ,REQUEST_CHUNKED_DECHUNK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[182] ,PROXYREQ_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[183] ,PROXYREQ_PROXY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[184] ,PROXYREQ_REVERSE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[185] ,DEFAULT_VHOST_ADDR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[186] ,APR_OVERLAP_TABLES_SET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[187] ,APR_OVERLAP_TABLES_MERGE));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..57] of string = (
'ap_conf_vector_t'
,'ap_configfile_t'
,'ap_directive_t'
,'ap_filter_func'
,'ap_filter_rec_t'
,'ap_filter_t'
,'ap_LINK_access_checker_t'
,'ap_LINK_auth_checker_t'
,'ap_LINK_check_user_id_t'
,'ap_LINK_child_init_t'
,'ap_LINK_create_connection_t'
,'ap_LINK_create_request_t'
,'ap_LINK_default_port_t'
,'ap_LINK_error_log_t'
,'ap_LINK_fixups_t'
,'ap_LINK_get_mgmt_items_t'
,'ap_LINK_handler_t'
,'ap_LINK_header_parser_t'
,'ap_LINK_http_method_t'
,'ap_LINK_insert_filter_t'
,'ap_LINK_log_transaction_t'
,'ap_LINK_map_to_storage_t'
,'ap_LINK_open_logs_t'
,'ap_LINK_optional_fn_retrieve_t'
,'ap_LINK_post_config_t'
,'ap_LINK_post_read_request_t'
,'ap_LINK_pre_config_t'
,'ap_LINK_pre_connection_t'
,'ap_LINK_process_connection_t'
,'ap_LINK_quick_handler_t'
,'ap_LINK_translate_name_t'
,'ap_LINK_type_checker_t'
,'ap_method_list_t'
,'apr_array_header_t'
,'apr_bucket_alloc_t'
,'apr_file_t'
,'apr_finfo_t'
,'apr_hash_t'
,'apr_pool_t'
,'apr_sockaddr_t'
,'apr_socket_t'
,'apr_table_entry_t'
,'apr_table_t'
,'apr_uri_t'
,'cmd_parms'
,'cmd_parms_struct'
,'command_rec'
,'command_struct'
,'conn_rec'
,'htaccess_result'
,'module'
,'process_rec'
,'request_rec'
,'server_addr_rec'
,'server_rec'
,'ap_index_of_response'
,'ap_get_status_line'
,'ap_run_optional_fn_retrieve'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_ap_conf_vector_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_ap_configfile_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(_ap_directive_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[3],Addr(_ap_filter_func_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[4],Addr(_ap_filter_rec_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[5],Addr(_ap_filter_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[6],Addr(_ap_LINK_access_checker_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[7],Addr(_ap_LINK_auth_checker_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[8],Addr(_ap_LINK_check_user_id_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[9],Addr(_ap_LINK_child_init_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[10],Addr(_ap_LINK_create_connection_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[11],Addr(_ap_LINK_create_request_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[12],Addr(_ap_LINK_default_port_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[13],Addr(_ap_LINK_error_log_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[14],Addr(_ap_LINK_fixups_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[15],Addr(_ap_LINK_get_mgmt_items_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[16],Addr(_ap_LINK_handler_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[17],Addr(_ap_LINK_header_parser_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[18],Addr(_ap_LINK_http_method_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[19],Addr(_ap_LINK_insert_filter_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[20],Addr(_ap_LINK_log_transaction_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[21],Addr(_ap_LINK_map_to_storage_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[22],Addr(_ap_LINK_open_logs_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[23],Addr(_ap_LINK_optional_fn_retrieve_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[24],Addr(_ap_LINK_post_config_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[25],Addr(_ap_LINK_post_read_request_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[26],Addr(_ap_LINK_pre_config_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[27],Addr(_ap_LINK_pre_connection_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[28],Addr(_ap_LINK_process_connection_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[29],Addr(_ap_LINK_quick_handler_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[30],Addr(_ap_LINK_translate_name_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[31],Addr(_ap_LINK_type_checker_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[32],Addr(_ap_method_list_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[33],Addr(_apr_array_header_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[34],Addr(_apr_bucket_alloc_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[35],Addr(_apr_file_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[36],Addr(_apr_finfo_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[37],Addr(_apr_hash_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[38],Addr(_apr_pool_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[39],Addr(_apr_sockaddr_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[40],Addr(_apr_socket_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[41],Addr(_apr_table_entry_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[42],Addr(_apr_table_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[43],Addr(_apr_uri_t_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[44],Addr(_cmd_parms_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[45],Addr(_cmd_parms_struct_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[46],Addr(_command_rec_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[47],Addr(_command_struct_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[48],Addr(_conn_rec_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[49],Addr(_htaccess_result_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[50],Addr(_module_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[51],Addr(_process_rec_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[52],Addr(_request_rec_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[53],Addr(_server_addr_rec_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[54],Addr(_server_rec_)));
RegisterProc(nil,MethodNames[55],mtProc,TypeInfo(_T70),[
TypeInfo(Integer),TypeInfo(Integer)],Addr(ap_index_of_response),cStdCall);

RegisterProc(nil,MethodNames[56],mtProc,TypeInfo(_T71),[
TypeInfo(Integer),TypeInfoPChar],Addr(ap_get_status_line),cStdCall);

RegisterProc(nil,MethodNames[57],mtProc,TypeInfo(_T106),NoParams,Addr(ap_run_optional_fn_retrieve),cStdCall);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'ap_set_string_slot',mtProc,TypeInfo(_T0),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPChar,TypeInfoPChar],Addr(ap_set_string_slot),cCdecl)}

{RegisterProc(nil,'ap_set_int_slot',mtProc,TypeInfo(_T1),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPChar,TypeInfoPChar],Addr(ap_set_int_slot),cCdecl)}

{RegisterProc(nil,'ap_method_is_limited',mtProc,TypeInfo(_T2),[
TypeInfoPointer,
TypeInfoPChar,TypeInfo(Integer)],Addr(ap_method_is_limited),cStdCall)}

{RegisterProc(nil,'ap_set_string_slot_lower',mtProc,TypeInfo(_T3),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPChar,TypeInfoPChar],Addr(ap_set_string_slot_lower),cCdecl)}

{RegisterProc(nil,'ap_get_module_config',mtProc,TypeInfo(_T4),[
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(ap_get_module_config),cRegister)}

{RegisterProc(nil,'ap_set_module_config',mtProc,TypeInfo(_T5),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer],Addr(ap_set_module_config),cRegister)}

{RegisterProc(nil,'apr_array_push',mtProc,TypeInfo(_T7),[
TypeInfoPointer,TypeInfoPointer],Addr(apr_array_push),cStdCall)}

{RegisterProc(nil,'apr_array_cat',mtProc,TypeInfo(_T8),[
TypeInfoPointer,
TypeInfoPointer],Addr(apr_array_cat),cStdCall)}

{RegisterProc(nil,'apr_array_copy',mtProc,TypeInfo(_T9),[
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(apr_array_copy),cStdCall)}

{RegisterProc(nil,'apr_array_copy_hdr',mtProc,TypeInfo(_T10),[
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(apr_array_copy_hdr),cStdCall)}

{RegisterProc(nil,'apr_array_append',mtProc,TypeInfo(_T11),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(apr_array_append),cStdCall)}

{RegisterProc(nil,'apr_array_pstrcat',mtProc,TypeInfo(_T12),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Char),TypeInfoPChar],Addr(apr_array_pstrcat),cStdCall)}

{RegisterProc(nil,'apr_table_make',mtProc,TypeInfo(_T13),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(apr_table_make),cStdCall)}

{RegisterProc(nil,'apr_table_copy',mtProc,TypeInfo(_T14),[
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(apr_table_copy),cStdCall)}

{RegisterProc(nil,'apr_table_clear',mtProc,TypeInfo(_T15),[
TypeInfoPointer],Addr(apr_table_clear),cStdCall)}

{RegisterProc(nil,'apr_table_get',mtProc,TypeInfo(_T16),[
TypeInfoPointer,
TypeInfoPChar,TypeInfoPChar],Addr(apr_table_get),cStdCall)}

{RegisterProc(nil,'apr_table_set',mtProc,TypeInfo(_T17),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPChar],Addr(apr_table_set),cStdCall)}

{RegisterProc(nil,'apr_table_setn',mtProc,TypeInfo(_T18),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPChar],Addr(apr_table_setn),cStdCall)}

{RegisterProc(nil,'apr_table_unset',mtProc,TypeInfo(_T19),[
TypeInfoPointer,
TypeInfoPChar],Addr(apr_table_unset),cStdCall)}

{RegisterProc(nil,'apr_table_merge',mtProc,TypeInfo(_T20),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPChar],Addr(apr_table_merge),cStdCall)}

{RegisterProc(nil,'apr_table_mergen',mtProc,TypeInfo(_T21),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPChar],Addr(apr_table_mergen),cStdCall)}

{RegisterProc(nil,'apr_table_add',mtProc,TypeInfo(_T22),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPChar],Addr(apr_table_add),cStdCall)}

{RegisterProc(nil,'apr_table_addn',mtProc,TypeInfo(_T23),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPChar],Addr(apr_table_addn),cStdCall)}

{RegisterProc(nil,'apr_table_overlay',mtProc,TypeInfo(_T24),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(apr_table_overlay),cStdCall)}

{RegisterProc(nil,'apr_table_vdo',mtProc,TypeInfo(_T25),[
TypeInfo(TCompFunc),
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPChar],Addr(apr_table_vdo),cStdCall)}

{RegisterProc(nil,'apr_table_overlap',mtProc,TypeInfo(_T26),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Cardinal)],Addr(apr_table_overlap),cStdCall)}

{RegisterProc(nil,'ap_allow_options',mtProc,TypeInfo(_T27),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_allow_options),cStdCall)}

{RegisterProc(nil,'ap_allow_overrides',mtProc,TypeInfo(_T28),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_allow_overrides),cStdCall)}

{RegisterProc(nil,'ap_default_type',mtProc,TypeInfo(_T29),[
TypeInfoPointer,TypeInfoPChar],Addr(ap_default_type),cStdCall)}

{RegisterProc(nil,'ap_document_root',mtProc,TypeInfo(_T30),[
TypeInfoPointer,TypeInfoPChar],Addr(ap_document_root),cStdCall)}

{RegisterProc(nil,'ap_get_remote_host',mtProc,TypeInfo(_T31),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),
TypeInfoPointer,TypeInfoPChar],Addr(ap_get_remote_host),cStdCall)}

{RegisterProc(nil,'ap_get_remote_logname',mtProc,TypeInfo(_T32),[
TypeInfoPointer,TypeInfoPChar],Addr(ap_get_remote_logname),cStdCall)}

{RegisterProc(nil,'ap_construct_url',mtProc,TypeInfo(_T33),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPointer,TypeInfoPChar],Addr(ap_construct_url),cStdCall)}

{RegisterProc(nil,'ap_get_server_name',mtProc,TypeInfo(_T34),[
TypeInfoPointer,TypeInfoPChar],Addr(ap_get_server_name),cStdCall)}

{RegisterProc(nil,'ap_get_server_port',mtProc,TypeInfo(_T35),[
TypeInfoPointer,TypeInfo(apr_port_t)],Addr(ap_get_server_port),cStdCall)}

{RegisterProc(nil,'ap_get_limit_req_body',mtProc,TypeInfo(_T36),[
TypeInfoPointer,TypeInfo(apr_off_t)],Addr(ap_get_limit_req_body),cStdCall)}

{RegisterProc(nil,'ap_get_limit_xml_body',mtProc,TypeInfo(_T37),[
TypeInfoPointer,TypeInfo(size_t)],Addr(ap_get_limit_xml_body),cStdCall)}

{RegisterProc(nil,'ap_custom_response',mtProc,TypeInfo(_T38),[
TypeInfoPointer,
TypeInfo(Integer),
TypeInfoPChar],Addr(ap_custom_response),cStdCall)}

{RegisterProc(nil,'ap_exists_config_define',mtProc,TypeInfo(_T39),[
TypeInfoPChar,TypeInfo(Integer)],Addr(ap_exists_config_define),cStdCall)}

{RegisterProc(nil,'ap_core_translate',mtProc,TypeInfo(_T40),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_core_translate),cCdecl)}

{RegisterProc(nil,'ap_auth_type',mtProc,TypeInfo(_T41),[
TypeInfoPointer,TypeInfoPChar],Addr(ap_auth_type),cStdCall)}

{RegisterProc(nil,'ap_auth_name',mtProc,TypeInfo(_T42),[
TypeInfoPointer,TypeInfoPChar],Addr(ap_auth_name),cStdCall)}

{RegisterProc(nil,'ap_satisfies',mtProc,TypeInfo(_T43),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_satisfies),cStdCall)}

{RegisterProc(nil,'ap_requires',mtProc,TypeInfo(_T44),[
TypeInfoPointer,TypeInfoPointer],Addr(ap_requires),cStdCall)}

{RegisterProc(nil,'ap_finalize_request_protocol',mtProc,TypeInfo(_T45),[
TypeInfoPointer],Addr(ap_finalize_request_protocol),cStdCall)}

{RegisterProc(nil,'ap_send_error_response',mtProc,TypeInfo(_T46),[
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_send_error_response),cStdCall)}

{RegisterProc(nil,'ap_set_content_length',mtProc,TypeInfo(_T47),[
TypeInfoPointer,
TypeInfo(apr_off_t)],Addr(ap_set_content_length),cStdCall)}

{RegisterProc(nil,'ap_set_keepalive',mtProc,TypeInfo(_T48),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_set_keepalive),cStdCall)}

{RegisterProc(nil,'ap_rationalize_mtime',mtProc,TypeInfo(_T49),[
TypeInfoPointer,
TypeInfo(apr_time_t),TypeInfo(apr_time_t)],Addr(ap_rationalize_mtime),cStdCall)}

{RegisterProc(nil,'ap_make_content_type',mtProc,TypeInfo(_T50),[
TypeInfoPointer,
TypeInfoPChar,TypeInfoPChar],Addr(ap_make_content_type),cStdCall)}

{RegisterProc(nil,'ap_make_etag',mtProc,TypeInfo(_T51),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPChar],Addr(ap_make_etag),cStdCall)}

{RegisterProc(nil,'ap_set_etag',mtProc,TypeInfo(_T52),[
TypeInfoPointer],Addr(ap_set_etag),cStdCall)}

{RegisterProc(nil,'ap_set_last_modified',mtProc,TypeInfo(_T53),[
TypeInfoPointer],Addr(ap_set_last_modified),cStdCall)}

{RegisterProc(nil,'ap_meets_conditions',mtProc,TypeInfo(_T54),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_meets_conditions),cStdCall)}

{RegisterProc(nil,'ap_send_fd',mtProc,TypeInfo(_T55),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(apr_off_t),
TypeInfo(apr_size_t),
TypeInfoPointer,TypeInfo(apr_status_t)],Addr(ap_send_fd),cStdCall)}

{RegisterProc(nil,'ap_method_register',mtProc,TypeInfo(_T56),[
TypeInfoPointer,
TypeInfoPChar,TypeInfo(Integer)],Addr(ap_method_register),cStdCall)}

{RegisterProc(nil,'ap_method_registry_init',mtProc,TypeInfo(_T57),[
TypeInfoPointer],Addr(ap_method_registry_init),cStdCall)}

{RegisterProc(nil,'ap_copy_method_list',mtProc,TypeInfo(_T59),[
TypeInfoPointer,
TypeInfoPointer],Addr(ap_copy_method_list),cStdCall)}

{RegisterProc(nil,'ap_method_in_list',mtProc,TypeInfo(_T60),[
TypeInfoPointer,
TypeInfoPChar,TypeInfo(Integer)],Addr(ap_method_in_list),cStdCall)}

{RegisterProc(nil,'ap_method_list_add',mtProc,TypeInfo(_T61),[
TypeInfoPointer,
TypeInfoPChar],Addr(ap_method_list_add),cStdCall)}

{RegisterProc(nil,'ap_method_list_remove',mtProc,TypeInfo(_T62),[
TypeInfoPointer,
TypeInfoPChar],Addr(ap_method_list_remove),cStdCall)}

{RegisterProc(nil,'ap_clear_method_list',mtProc,TypeInfo(_T63),[
TypeInfoPointer],Addr(ap_clear_method_list),cStdCall)}

{RegisterProc(nil,'ap_set_content_type',mtProc,TypeInfo(_T64),[
TypeInfoPointer,
TypeInfoPChar],Addr(ap_set_content_type),cStdCall)}

{RegisterProc(nil,'ap_rputc',mtProc,TypeInfo(_T65),[
TypeInfo(Integer),
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_rputc),cStdCall)}

{RegisterProc(nil,'ap_rputs',mtProc,TypeInfo(_T66),[
TypeInfoPChar,
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_rputs),cStdCall)}

{RegisterProc(nil,'ap_rwrite',mtProc,TypeInfo(_T67),[
TypeInfoUntyped,
TypeInfo(Integer),
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_rwrite),cStdCall)}

{RegisterProc(nil,'ap_vrprintf',mtProc,TypeInfo(_T68),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Integer)],Addr(ap_vrprintf),cStdCall)}

{RegisterProc(nil,'ap_rflush',mtProc,TypeInfo(_T69),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_rflush),cStdCall)}

{RegisterProc(nil,'ap_setup_client_block',mtProc,TypeInfo(_T72),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(ap_setup_client_block),cStdCall)}

{RegisterProc(nil,'ap_should_client_block',mtProc,TypeInfo(_T73),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_should_client_block),cStdCall)}

{RegisterProc(nil,'ap_get_client_block',mtProc,TypeInfo(_T74),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfo(apr_size_t),TypeInfo(Longint)],Addr(ap_get_client_block),cStdCall)}

{RegisterProc(nil,'ap_discard_request_body',mtProc,TypeInfo(_T75),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_discard_request_body),cStdCall)}

{RegisterProc(nil,'ap_note_auth_failure',mtProc,TypeInfo(_T76),[
TypeInfoPointer],Addr(ap_note_auth_failure),cStdCall)}

{RegisterProc(nil,'ap_note_basic_auth_failure',mtProc,TypeInfo(_T77),[
TypeInfoPointer],Addr(ap_note_basic_auth_failure),cStdCall)}

{RegisterProc(nil,'ap_note_digest_auth_failure',mtProc,TypeInfo(_T78),[
TypeInfoPointer],Addr(ap_note_digest_auth_failure),cStdCall)}

{RegisterProc(nil,'ap_get_basic_auth_pw',mtProc,TypeInfo(_T79),[
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_get_basic_auth_pw),cStdCall)}

{RegisterProc(nil,'ap_getline',mtProc,TypeInfo(_T80),[
TypeInfoPChar,
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(ap_getline),cStdCall)}

{RegisterProc(nil,'ap_method_number_of',mtProc,TypeInfo(_T81),[
TypeInfoPChar,TypeInfo(Integer)],Addr(ap_method_number_of),cStdCall)}

{RegisterProc(nil,'ap_method_name_of',mtProc,TypeInfo(_T82),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPChar],Addr(ap_method_name_of),cStdCall)}

{RegisterProc(nil,'ap_server_root_relative',mtProc,TypeInfo(_T83),[
TypeInfoPointer,
TypeInfoPChar,TypeInfoPChar],Addr(ap_server_root_relative),cStdCall)}

{RegisterProc(nil,'ap_hook_header_parser',mtProc,TypeInfo(_T84),[
TypeInfo(ap_HOOK_header_parser_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_header_parser),cStdCall)}

{RegisterProc(nil,'ap_run_header_parser',mtProc,TypeInfo(_T85),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_header_parser),cStdCall)}

{RegisterProc(nil,'ap_hook_get_header_parser',mtProc,TypeInfo(_T86),[TypeInfoPointer],Addr(ap_hook_get_header_parser),cStdCall)}

{RegisterProc(nil,'ap_hook_pre_config',mtProc,TypeInfo(_T87),[
TypeInfo(ap_HOOK_pre_config_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_pre_config),cStdCall)}

{RegisterProc(nil,'ap_run_pre_config',mtProc,TypeInfo(_T88),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_pre_config),cStdCall)}

{RegisterProc(nil,'ap_hook_get_pre_config',mtProc,TypeInfo(_T89),[TypeInfoPointer],Addr(ap_hook_get_pre_config),cStdCall)}

{RegisterProc(nil,'ap_hook_post_config',mtProc,TypeInfo(_T90),[
TypeInfo(ap_HOOK_post_config_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_post_config),cStdCall)}

{RegisterProc(nil,'ap_run_post_config',mtProc,TypeInfo(_T91),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_post_config),cStdCall)}

{RegisterProc(nil,'ap_hook_get_post_config',mtProc,TypeInfo(_T92),[TypeInfoPointer],Addr(ap_hook_get_post_config),cStdCall)}

{RegisterProc(nil,'ap_hook_open_logs',mtProc,TypeInfo(_T93),[
TypeInfo(ap_HOOK_open_logs_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_open_logs),cStdCall)}

{RegisterProc(nil,'ap_run_open_logs',mtProc,TypeInfo(_T94),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_open_logs),cStdCall)}

{RegisterProc(nil,'ap_hook_get_open_logs',mtProc,TypeInfo(_T95),[TypeInfoPointer],Addr(ap_hook_get_open_logs),cStdCall)}

{RegisterProc(nil,'ap_hook_child_init',mtProc,TypeInfo(_T96),[
TypeInfo(ap_HOOK_child_init_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_child_init),cStdCall)}

{RegisterProc(nil,'ap_run_child_init',mtProc,TypeInfo(_T97),[
TypeInfoPointer,
TypeInfoPointer],Addr(ap_run_child_init),cStdCall)}

{RegisterProc(nil,'ap_hook_get_child_init',mtProc,TypeInfo(_T98),[TypeInfoPointer],Addr(ap_hook_get_child_init),cStdCall)}

{RegisterProc(nil,'ap_hook_handler',mtProc,TypeInfo(_T99),[
TypeInfo(ap_HOOK_handler_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_handler),cStdCall)}

{RegisterProc(nil,'ap_run_handler',mtProc,TypeInfo(_T100),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_handler),cStdCall)}

{RegisterProc(nil,'ap_hook_get_handler',mtProc,TypeInfo(_T101),[TypeInfoPointer],Addr(ap_hook_get_handler),cStdCall)}

{RegisterProc(nil,'ap_hook_quick_handler',mtProc,TypeInfo(_T102),[
TypeInfo(ap_HOOK_quick_handler_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_quick_handler),cStdCall)}

{RegisterProc(nil,'ap_run_quick_handler',mtProc,TypeInfo(_T103),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(ap_run_quick_handler),cStdCall)}

{RegisterProc(nil,'ap_hook_get_quick_handler',mtProc,TypeInfo(_T104),[TypeInfoPointer],Addr(ap_hook_get_quick_handler),cStdCall)}

{RegisterProc(nil,'ap_hook_optional_fn_retrieve',mtProc,TypeInfo(_T105),[
TypeInfo(ap_HOOK_optional_fn_retrieve_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_optional_fn_retrieve),cStdCall)}

{RegisterProc(nil,'ap_hook_get_optional_fn_retrieve',mtProc,TypeInfo(_T107),[TypeInfoPointer],Addr(ap_hook_get_optional_fn_retrieve),cStdCall)}

{RegisterProc(nil,'ap_hook_create_connection',mtProc,TypeInfo(_T108),[
TypeInfo(ap_HOOK_create_connection_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_create_connection),cStdCall)}

{RegisterProc(nil,'ap_run_create_connection',mtProc,TypeInfo(_T109),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Longint),
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(ap_run_create_connection),cStdCall)}

{RegisterProc(nil,'ap_hook_get_create_connection',mtProc,TypeInfo(_T110),[TypeInfoPointer],Addr(ap_hook_get_create_connection),cStdCall)}

{RegisterProc(nil,'ap_hook_pre_connection',mtProc,TypeInfo(_T111),[
TypeInfo(ap_HOOK_pre_connection_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_pre_connection),cStdCall)}

{RegisterProc(nil,'ap_run_pre_connection',mtProc,TypeInfo(_T112),[
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_pre_connection),cStdCall)}

{RegisterProc(nil,'ap_hook_get_pre_connection',mtProc,TypeInfo(_T113),[TypeInfoPointer],Addr(ap_hook_get_pre_connection),cStdCall)}

{RegisterProc(nil,'ap_hook_process_connection',mtProc,TypeInfo(_T114),[
TypeInfo(ap_HOOK_process_connection_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_process_connection),cStdCall)}

{RegisterProc(nil,'ap_run_process_connection',mtProc,TypeInfo(_T115),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_process_connection),cStdCall)}

{RegisterProc(nil,'ap_hook_get_process_connection',mtProc,TypeInfo(_T116),[TypeInfoPointer],Addr(ap_hook_get_process_connection),cStdCall)}

{RegisterProc(nil,'ap_hook_get_mgmt_items',mtProc,TypeInfo(_T117),[
TypeInfo(ap_HOOK_get_mgmt_items_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_get_mgmt_items),cStdCall)}

{RegisterProc(nil,'ap_run_get_mgmt_items',mtProc,TypeInfo(_T118),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_get_mgmt_items),cStdCall)}

{RegisterProc(nil,'ap_hook_get_get_mgmt_items',mtProc,TypeInfo(_T119),[TypeInfoPointer],Addr(ap_hook_get_get_mgmt_items),cStdCall)}

{RegisterProc(nil,'ap_hook_error_log',mtProc,TypeInfo(_T120),[
TypeInfo(ap_HOOK_error_log_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_error_log),cStdCall)}

{RegisterProc(nil,'ap_run_error_log',mtProc,TypeInfo(_T121),[
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(apr_status_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPChar],Addr(ap_run_error_log),cStdCall)}

{RegisterProc(nil,'ap_hook_get_error_log',mtProc,TypeInfo(_T122),[TypeInfoPointer],Addr(ap_hook_get_error_log),cStdCall)}

{RegisterProc(nil,'ap_hook_post_read_request',mtProc,TypeInfo(_T123),[
TypeInfo(ap_HOOK_post_read_request_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_post_read_request),cStdCall)}

{RegisterProc(nil,'ap_run_post_read_request',mtProc,TypeInfo(_T124),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_post_read_request),cStdCall)}

{RegisterProc(nil,'ap_hook_get_post_read_request',mtProc,TypeInfo(_T125),[TypeInfoPointer],Addr(ap_hook_get_post_read_request),cStdCall)}

{RegisterProc(nil,'ap_hook_log_transaction',mtProc,TypeInfo(_T126),[
TypeInfo(ap_HOOK_log_transaction_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_log_transaction),cStdCall)}

{RegisterProc(nil,'ap_run_log_transaction',mtProc,TypeInfo(_T127),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_log_transaction),cStdCall)}

{RegisterProc(nil,'ap_hook_get_log_transaction',mtProc,TypeInfo(_T128),[TypeInfoPointer],Addr(ap_hook_get_log_transaction),cStdCall)}

{RegisterProc(nil,'ap_hook_http_method',mtProc,TypeInfo(_T129),[
TypeInfo(ap_HOOK_http_method_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_http_method),cStdCall)}

{RegisterProc(nil,'ap_run_http_method',mtProc,TypeInfo(_T130),[
TypeInfoPointer,TypeInfoPChar],Addr(ap_run_http_method),cStdCall)}

{RegisterProc(nil,'ap_hook_get_http_method',mtProc,TypeInfo(_T131),[TypeInfoPointer],Addr(ap_hook_get_http_method),cStdCall)}

{RegisterProc(nil,'ap_hook_default_port',mtProc,TypeInfo(_T132),[
TypeInfo(ap_HOOK_default_port_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_default_port),cStdCall)}

{RegisterProc(nil,'ap_run_default_port',mtProc,TypeInfo(_T133),[
TypeInfoPointer,TypeInfo(apr_port_t)],Addr(ap_run_default_port),cStdCall)}

{RegisterProc(nil,'ap_hook_get_default_port',mtProc,TypeInfo(_T134),[TypeInfoPointer],Addr(ap_hook_get_default_port),cStdCall)}

{RegisterProc(nil,'ap_hook_create_request',mtProc,TypeInfo(_T135),[
TypeInfo(ap_HOOK_create_request_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_create_request),cStdCall)}

{RegisterProc(nil,'ap_run_create_request',mtProc,TypeInfo(_T136),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_create_request),cStdCall)}

{RegisterProc(nil,'ap_hook_get_create_request',mtProc,TypeInfo(_T137),[TypeInfoPointer],Addr(ap_hook_get_create_request),cStdCall)}

{RegisterProc(nil,'ap_hook_translate_name',mtProc,TypeInfo(_T138),[
TypeInfo(ap_HOOK_translate_name_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_translate_name),cStdCall)}

{RegisterProc(nil,'ap_run_translate_name',mtProc,TypeInfo(_T139),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_translate_name),cStdCall)}

{RegisterProc(nil,'ap_hook_get_translate_name',mtProc,TypeInfo(_T140),[TypeInfoPointer],Addr(ap_hook_get_translate_name),cStdCall)}

{RegisterProc(nil,'ap_hook_map_to_storage',mtProc,TypeInfo(_T141),[
TypeInfo(ap_HOOK_map_to_storage_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_map_to_storage),cStdCall)}

{RegisterProc(nil,'ap_run_map_to_storage',mtProc,TypeInfo(_T142),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_map_to_storage),cStdCall)}

{RegisterProc(nil,'ap_hook_get_map_to_storage',mtProc,TypeInfo(_T143),[TypeInfoPointer],Addr(ap_hook_get_map_to_storage),cStdCall)}

{RegisterProc(nil,'ap_hook_check_user_id',mtProc,TypeInfo(_T144),[
TypeInfo(ap_HOOK_check_user_id_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_check_user_id),cStdCall)}

{RegisterProc(nil,'ap_run_check_user_id',mtProc,TypeInfo(_T145),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_check_user_id),cStdCall)}

{RegisterProc(nil,'ap_hook_get_check_user_id',mtProc,TypeInfo(_T146),[TypeInfoPointer],Addr(ap_hook_get_check_user_id),cStdCall)}

{RegisterProc(nil,'ap_hook_fixups',mtProc,TypeInfo(_T147),[
TypeInfo(ap_HOOK_fixups_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_fixups),cStdCall)}

{RegisterProc(nil,'ap_run_fixups',mtProc,TypeInfo(_T148),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_fixups),cStdCall)}

{RegisterProc(nil,'ap_hook_get_fixups',mtProc,TypeInfo(_T149),[TypeInfoPointer],Addr(ap_hook_get_fixups),cStdCall)}

{RegisterProc(nil,'ap_hook_type_checker',mtProc,TypeInfo(_T150),[
TypeInfo(ap_HOOK_type_checker_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_type_checker),cStdCall)}

{RegisterProc(nil,'ap_run_type_checker',mtProc,TypeInfo(_T151),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_type_checker),cStdCall)}

{RegisterProc(nil,'ap_hook_get_type_checker',mtProc,TypeInfo(_T152),[TypeInfoPointer],Addr(ap_hook_get_type_checker),cStdCall)}

{RegisterProc(nil,'ap_hook_access_checker',mtProc,TypeInfo(_T153),[
TypeInfo(ap_HOOK_access_checker_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_access_checker),cStdCall)}

{RegisterProc(nil,'ap_run_access_checker',mtProc,TypeInfo(_T154),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_access_checker),cStdCall)}

{RegisterProc(nil,'ap_hook_get_access_checker',mtProc,TypeInfo(_T155),[TypeInfoPointer],Addr(ap_hook_get_access_checker),cStdCall)}

{RegisterProc(nil,'ap_hook_auth_checker',mtProc,TypeInfo(_T156),[
TypeInfo(ap_HOOK_auth_checker_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_auth_checker),cStdCall)}

{RegisterProc(nil,'ap_run_auth_checker',mtProc,TypeInfo(_T157),[
TypeInfoPointer,TypeInfo(Integer)],Addr(ap_run_auth_checker),cStdCall)}

{RegisterProc(nil,'ap_hook_get_auth_checker',mtProc,TypeInfo(_T158),[TypeInfoPointer],Addr(ap_hook_get_auth_checker),cStdCall)}

{RegisterProc(nil,'ap_hook_insert_filter',mtProc,TypeInfo(_T159),[
TypeInfo(ap_HOOK_insert_filter_t),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer)],Addr(ap_hook_insert_filter),cStdCall)}

{RegisterProc(nil,'ap_run_insert_filter',mtProc,TypeInfo(_T160),[
TypeInfoPointer],Addr(ap_run_insert_filter),cStdCall)}

{RegisterProc(nil,'ap_hook_get_insert_filter',mtProc,TypeInfo(_T161),[TypeInfoPointer],Addr(ap_hook_get_insert_filter),cStdCall)}

{RegisterProc(nil,'apr_pstrdup',mtProc,TypeInfo(_T162),[
TypeInfoPointer,
TypeInfoPChar,TypeInfoPChar],Addr(apr_pstrdup),cStdCall)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
