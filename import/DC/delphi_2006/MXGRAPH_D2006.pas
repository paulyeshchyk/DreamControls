{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit MXGRAPH_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  SysUtils,
  Windows,
  Controls,
  StdCtrls,
  Graphics,
  DB,
  Classes,
  Grids,
  Dialogs,
  Mxstore,
  MXBUTTON,
  Mxconsts,
  MXDB,
  Forms,
  ExtCtrls,
  CHART,
  SERIES,
  TEENGINE,
  TEEPROCS,
  MXGRID,
  MXGRAPH;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : TCustomDecisionGraph) of object;

function __DC__GetTCustomDecisionGraph__DecisionSource(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomDecisionGraph(Instance).DecisionSource);
end;

procedure __DC__SetTCustomDecisionGraph__DecisionSource(Instance : TObject; Params : PVariantArgList);
begin
TCustomDecisionGraph(Instance).DecisionSource:=TDecisionSource(VarToObject(OleVariant(Params^[0])));
end;

procedure __RegisterProps;
begin
RegisterProperty(TCustomDecisionGraph,'DecisionSource',__DC__GetTCustomDecisionGraph__DecisionSource,__DC__SetTCustomDecisionGraph__DecisionSource);
end;

const __ConstNames0 : array[0..2] of string = (
'stNormal'
,'stTemplate'
,'st1D'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,stNormal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,stTemplate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,st1D));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..2] of TClass = (
TCustomDecisionGraph,
TDecisionGraph,
TDecisionGraphDataLink
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegisterProc(TDecisionGraphDataLink,'Create',mtConstructor,TypeInfo(_T0),[
TypeInfo(TCustomDecisionGraph)],Addr(TDecisionGraphDataLink.Create),cRegister);

end;
initialization
_mreg_0;
RegisterEvent(TypeInfo(TDimEvent),[
TypeInfo(TObject),
TypeInfo(Integer)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
