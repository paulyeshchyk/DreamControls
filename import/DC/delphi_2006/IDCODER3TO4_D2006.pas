{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IDCODER3TO4_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  IdCoder,
  IdCoder3to4;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
{_T0 = procedure (const p0 : string;
var p1 : TIdDecodeTable) of object;}

_T1 = procedure (p0 : Cardinal;
var p1 : Byte;
var p2 : Byte;
var p3 : Byte) of object;

_T2 = procedure (const p0 : Byte;
const p1 : Byte;
const p2 : Byte;
var p3 : Cardinal) of object;

procedure __RegisterProps;
begin
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..1] of TClass = (
TIdDecoder4to3,
TIdEncoder3to4
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TIdDecoder4to3,'DecodeUnit',TypeInfo(_T1),[
TypeInfo(Cardinal),
TypeInfo(Byte),
TypeInfo(Byte),
TypeInfo(Byte)],Addr(TIdDecoder4to3.DecodeUnit));

RegRegisterMethod(TIdEncoder3to4,'EncodeUnit',TypeInfo(_T2),[
TypeInfo(Byte),
TypeInfo(Byte),
TypeInfo(Byte),
TypeInfo(Cardinal)],Addr(TIdEncoder3to4.EncodeUnit));

end;
initialization
_mreg_0;
{RegisterProc(TIdDecoder4to3,'ConstructDecodeTable',mtClassMethod,TypeInfo(_T0),[
TypeInfo(string),
TypeInfo(TIdDecodeTable)],Addr(TIdDecoder4to3.ConstructDecodeTable),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
