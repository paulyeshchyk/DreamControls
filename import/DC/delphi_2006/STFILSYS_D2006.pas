{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit STFILSYS_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  ActiveX,
  SysUtils,
  Classes,
  IStreams,
  TypInfo,
  ToolsAPI,
  WideStrings,
  StFilSys;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure  of object;

_T1 = _T0;

_T2 = procedure (p0 : TComponent;
p1 : TComponent;
const p2 : string) of object;

_T3 = procedure (const p0 : string;
const p1 : string) of object;

_T4 = procedure (p0 : TActiveTStringsProperty) of object;

_T5 = _T0;

_T6 = function (const p0 : string;
p1 : TComponent;
const p2 : string): TActiveTStringsProperty of object;

{_T7 = function (const p0 : string;
p1 : Integer): IStream of object;}

_T8 = function (const p0 : string): Longint of object;

_T9 = function (const p0 : string;
const p1 : string): Boolean of object;

_T10 = function (const p0 : string): Boolean of object;

_T11 = function : Boolean of object;

_T12 = _T10;

_T13 = _T10;

_T14 = function (const p0 : string): string of object;

_T15 = _T14;

_T16 = function : string of object;

function __DC__GetTActiveTStringsProperty__Component(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TActiveTStringsProperty(Instance).Component);
end;

procedure __DC__SetTActiveTStringsProperty__Component(Instance : TObject; Params : PVariantArgList);
begin
TActiveTStringsProperty(Instance).Component:=TComponent(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTActiveTStringsProperty__PropertyName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TActiveTStringsProperty(Instance).PropertyName;
end;

procedure __DC__SetTActiveTStringsProperty__PropertyName(Instance : TObject; Params : PVariantArgList);
begin
TActiveTStringsProperty(Instance).PropertyName:=OleVariant(Params^[0]);
end;

function __DC__GetTActiveTStringsProperty__DiskAge(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TActiveTStringsProperty(Instance).DiskAge;
end;

procedure __DC__SetTActiveTStringsProperty__DiskAge(Instance : TObject; Params : PVariantArgList);
begin
TActiveTStringsProperty(Instance).DiskAge:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TActiveTStringsProperty,'Component',__DC__GetTActiveTStringsProperty__Component,__DC__SetTActiveTStringsProperty__Component);
RegisterProperty(TActiveTStringsProperty,'PropertyName',__DC__GetTActiveTStringsProperty__PropertyName,__DC__SetTActiveTStringsProperty__PropertyName);
RegisterProperty(TActiveTStringsProperty,'DiskAge',__DC__GetTActiveTStringsProperty__DiskAge,__DC__SetTActiveTStringsProperty__DiskAge);
end;

function __DC__GetStFilSys__StringsFileSystem(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(StFilSys.StringsFileSystem);
end;

procedure __DC__SetStFilSys__StringsFileSystem(Instance : TObject; Params : PVariantArgList);
begin
TObject(StFilSys.StringsFileSystem):=(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetStFilSys__StringsFileSystemIndex(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := StFilSys.StringsFileSystemIndex;
end;

procedure __DC__SetStFilSys__StringsFileSystemIndex(Instance : TObject; Params : PVariantArgList);
begin
StFilSys.StringsFileSystemIndex:=OleVariant(Params^[0]);
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('StringsFileSystem',__DC__GetStFilSys__StringsFileSystem,__DC__SetStFilSys__StringsFileSystem));
__RegisteredVars.Add(RegisterVar('StringsFileSystemIndex',__DC__GetStFilSys__StringsFileSystemIndex,__DC__SetStFilSys__StringsFileSystemIndex));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

const __ConstNames0 : array[0..0] of string = (
'sTStringsFileSystem'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,sTStringsFileSystem));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..5] of TClass = (
TActiveTStringsProperty,
TOTAFormNotifier,
TOTAModuleNotifier,
TOTANotifier,
TStringsFileSystem,
TStringsStream
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..1] of string = (
'Register'
,'Unregister'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),NoParams,Addr(Register),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),NoParams,Addr(Unregister),cRegister);

RegisterProc(TActiveTStringsProperty,'CreateNew',mtConstructor,TypeInfo(_T2),[
TypeInfo(TComponent),
TypeInfo(TComponent),
TypeInfo(string)],Addr(TActiveTStringsProperty.CreateNew),cRegister);

RegRegisterMethod(TActiveTStringsProperty,'RenameComponent',TypeInfo(_T3),[
TypeInfo(string),
TypeInfo(string)],Addr(TActiveTStringsProperty.RenameComponent));

RegisterProc(TOTANotifier,'Create',mtConstructor,TypeInfo(_T4),[
TypeInfo(TActiveTStringsProperty)],Addr(TOTANotifier.Create),cRegister);

RegisterProc(TStringsFileSystem,'Create',mtConstructor,TypeInfo(_T5),NoParams,Addr(TStringsFileSystem.Create),cRegister);

RegRegisterMethod(TStringsFileSystem,'GetTStringsProperty',TypeInfo(_T6),[
TypeInfo(string),
TypeInfo(TComponent),
TypeInfo(string),TypeInfo(TActiveTStringsProperty)],Addr(TStringsFileSystem.GetTStringsProperty));

RegRegisterMethod(TStringsFileSystem,'FileAge',TypeInfo(_T8),[
TypeInfo(string),TypeInfo(Longint)],Addr(TStringsFileSystem.FileAge));

RegRegisterMethod(TStringsFileSystem,'RenameFile',TypeInfo(_T9),[
TypeInfo(string),
TypeInfo(string),TypeInfo(Boolean)],Addr(TStringsFileSystem.RenameFile));

RegRegisterMethod(TStringsFileSystem,'IsReadonly',TypeInfo(_T10),[
TypeInfo(string),TypeInfo(Boolean)],Addr(TStringsFileSystem.IsReadonly));

RegRegisterMethod(TStringsFileSystem,'IsFileBased',TypeInfo(_T11),[TypeInfo(Boolean)],Addr(TStringsFileSystem.IsFileBased));

RegRegisterMethod(TStringsFileSystem,'DeleteFile',TypeInfo(_T12),[
TypeInfo(string),TypeInfo(Boolean)],Addr(TStringsFileSystem.DeleteFile));

RegRegisterMethod(TStringsFileSystem,'FileExists',TypeInfo(_T13),[
TypeInfo(string),TypeInfo(Boolean)],Addr(TStringsFileSystem.FileExists));

RegRegisterMethod(TStringsFileSystem,'GetTempFileName',TypeInfo(_T14),[
TypeInfo(string),TypeInfo(string)],Addr(TStringsFileSystem.GetTempFileName));

RegRegisterMethod(TStringsFileSystem,'GetBackupFileName',TypeInfo(_T15),[
TypeInfo(string),TypeInfo(string)],Addr(TStringsFileSystem.GetBackupFileName));

RegRegisterMethod(TStringsFileSystem,'GetIDString',TypeInfo(_T16),[TypeInfo(string)],Addr(TStringsFileSystem.GetIDString));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegRegisterMethod(TStringsFileSystem,'GetFileStream',TypeInfo(_T7),[
TypeInfo(string),
TypeInfo(Integer),TypeInfo(IStream)],Addr(TStringsFileSystem.GetFileStream))}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
