{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit NSAPI_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  WinSock,
  Nsapi;
function ConvertcinfoToVariant(var R : cinfo) : OleVariant;
function ConvertVariantTocinfo(const V : OleVariant) : cinfo;
function Convertconf_global_vars_sToVariant(var R : conf_global_vars_s) : OleVariant;
function ConvertVariantToconf_global_vars_s(const V : OleVariant) : conf_global_vars_s;
function Convertdaemon_sToVariant(var R : daemon_s) : OleVariant;
function ConvertVariantTodaemon_s(const V : OleVariant) : daemon_s;
function Convertdir_sToVariant(var R : dir_s) : OleVariant;
function ConvertVariantTodir_s(const V : OleVariant) : dir_s;
function ConvertdirectiveToVariant(var R : directive) : OleVariant;
function ConvertVariantTodirective(const V : OleVariant) : directive;
function Convertdirent_sToVariant(var R : dirent_s) : OleVariant;
function ConvertVariantTodirent_s(const V : OleVariant) : dirent_s;
function ConvertdtableToVariant(var R : dtable) : OleVariant;
function ConvertVariantTodtable(const V : OleVariant) : dtable;
function Convertfile_sToVariant(var R : file_s) : OleVariant;
function ConvertVariantTofile_s(const V : OleVariant) : file_s;
function ConvertfilebufToVariant(var R : filebuf) : OleVariant;
function ConvertVariantTofilebuf(const V : OleVariant) : filebuf;
function ConvertfilebufferToVariant(var R : filebuffer) : OleVariant;
function ConvertVariantTofilebuffer(const V : OleVariant) : filebuffer;
function Converthttpd_objectToVariant(var R : httpd_object) : OleVariant;
function ConvertVariantTohttpd_object(const V : OleVariant) : httpd_object;
function Converthttpd_objsetToVariant(var R : httpd_objset) : OleVariant;
function ConvertVariantTohttpd_objset(const V : OleVariant) : httpd_objset;
function Convertmultiple_domainsToVariant(var R : multiple_domains) : OleVariant;
function ConvertVariantTomultiple_domains(const V : OleVariant) : multiple_domains;
function ConvertnetbufToVariant(var R : netbuf) : OleVariant;
function ConvertVariantTonetbuf(const V : OleVariant) : netbuf;
function Convertpb_entryToVariant(var R : pb_entry) : OleVariant;
function ConvertVariantTopb_entry(const V : OleVariant) : pb_entry;
function Convertpb_paramToVariant(var R : pb_param) : OleVariant;
function ConvertVariantTopb_param(const V : OleVariant) : pb_param;
function ConvertpblockToVariant(var R : pblock) : OleVariant;
function ConvertVariantTopblock(const V : OleVariant) : pblock;
function ConvertRequestToVariant(var R : Request) : OleVariant;
function ConvertVariantToRequest(const V : OleVariant) : Request;
function ConvertSessionToVariant(var R : Session) : OleVariant;
function ConvertVariantToSession(const V : OleVariant) : Session;
function Convertshmem_sToVariant(var R : shmem_s) : OleVariant;
function ConvertVariantToshmem_s(const V : OleVariant) : shmem_s;
function ConvertStatToVariant(var R : Stat) : OleVariant;
function ConvertVariantToStat(const V : OleVariant) : Stat;
function ConvertSYS_DIRENTToVariant(var R : SYS_DIRENT) : OleVariant;
function ConvertVariantToSYS_DIRENT(const V : OleVariant) : SYS_DIRENT;
function ConvertTCInfoToVariant(var R : TCInfo) : OleVariant;
function ConvertVariantToTCInfo(const V : OleVariant) : TCInfo;
function ConvertTConfGlobalVarsToVariant(var R : TConfGlobalVars) : OleVariant;
function ConvertVariantToTConfGlobalVars(const V : OleVariant) : TConfGlobalVars;
function ConvertTDaemonToVariant(var R : TDaemon) : OleVariant;
function ConvertVariantToTDaemon(const V : OleVariant) : TDaemon;
function ConvertTDirToVariant(var R : TDir) : OleVariant;
function ConvertVariantToTDir(const V : OleVariant) : TDir;
function ConvertTDirectiveToVariant(var R : TDirective) : OleVariant;
function ConvertVariantToTDirective(const V : OleVariant) : TDirective;
function ConvertTDirEntToVariant(var R : TDirEnt) : OleVariant;
function ConvertVariantToTDirEnt(const V : OleVariant) : TDirEnt;
function ConvertTDtableToVariant(var R : TDtable) : OleVariant;
function ConvertVariantToTDtable(const V : OleVariant) : TDtable;
function ConvertTFileToVariant(var R : TFile) : OleVariant;
function ConvertVariantToTFile(const V : OleVariant) : TFile;
function ConvertTFileBufferToVariant(var R : TFileBuffer) : OleVariant;
function ConvertVariantToTFileBuffer(const V : OleVariant) : TFileBuffer;
function ConvertTFuncStructToVariant(var R : TFuncStruct) : OleVariant;
function ConvertVariantToTFuncStruct(const V : OleVariant) : TFuncStruct;
function ConvertTHttpdObjectToVariant(var R : THttpdObject) : OleVariant;
function ConvertVariantToTHttpdObject(const V : OleVariant) : THttpdObject;
function ConvertTHttpdObjSetToVariant(var R : THttpdObjSet) : OleVariant;
function ConvertVariantToTHttpdObjSet(const V : OleVariant) : THttpdObjSet;
function ConverttmToVariant(var R : tm) : OleVariant;
function ConvertVariantTotm(const V : OleVariant) : tm;
function ConvertTMultipleDomainsToVariant(var R : TMultipleDomains) : OleVariant;
function ConvertVariantToTMultipleDomains(const V : OleVariant) : TMultipleDomains;
function ConvertTNetBufToVariant(var R : TNetBuf) : OleVariant;
function ConvertVariantToTNetBuf(const V : OleVariant) : TNetBuf;
function ConvertTPbEntryToVariant(var R : TPbEntry) : OleVariant;
function ConvertVariantToTPbEntry(const V : OleVariant) : TPbEntry;
function ConvertTPblockToVariant(var R : TPblock) : OleVariant;
function ConvertVariantToTPblock(const V : OleVariant) : TPblock;
function ConvertTPbParamToVariant(var R : TPbParam) : OleVariant;
function ConvertVariantToTPbParam(const V : OleVariant) : TPbParam;
function ConvertTRequestToVariant(var R : TRequest) : OleVariant;
function ConvertVariantToTRequest(const V : OleVariant) : TRequest;
function ConvertTSessionToVariant(var R : TSession) : OleVariant;
function ConvertVariantToTSession(const V : OleVariant) : TSession;
function ConvertTShMemToVariant(var R : TShMem) : OleVariant;
function ConvertVariantToTShMem(const V : OleVariant) : TShMem;
function ConvertTSockAddrToVariant(var R : TSockAddr) : OleVariant;
function ConvertVariantToTSockAddr(const V : OleVariant) : TSockAddr;
function ConvertTStatToVariant(var R : TStat) : OleVariant;
function ConvertVariantToTStat(const V : OleVariant) : TStat;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __cinfo__Wrapper = class(TDCRecordWrapper)
private
fR : cinfo;
public
function GetRecordPtr : pointer; override;
published
end;
type __conf_global_vars_s__Wrapper = class(TDCRecordWrapper)
private
fR : conf_global_vars_s;
public
function GetRecordPtr : pointer; override;
published
procedure setVport(const val : Integer);
function getVport : Integer;
property Vport : Integer read getVport write setVport;
procedure setVpool_max(const val : Integer);
function getVpool_max : Integer;
property Vpool_max : Integer read getVpool_max write setVpool_max;
procedure setVpool_min(const val : Integer);
function getVpool_min : Integer;
property Vpool_min : Integer read getVpool_min write setVpool_min;
procedure setVpool_life(const val : Integer);
function getVpool_life : Integer;
property Vpool_life : Integer read getVpool_life write setVpool_life;
procedure setVpool_maxthreads(const val : Integer);
function getVpool_maxthreads : Integer;
property Vpool_maxthreads : Integer read getVpool_maxthreads write setVpool_maxthreads;
procedure setVpool_minthreads(const val : Integer);
function getVpool_minthreads : Integer;
property Vpool_minthreads : Integer read getVpool_minthreads write setVpool_minthreads;
end;
type __daemon_s__Wrapper = class(TDCRecordWrapper)
private
fR : daemon_s;
public
function GetRecordPtr : pointer; override;
published
procedure setport(const val : Integer);
function getport : Integer;
property port : Integer read getport write setport;
procedure setmaxprocs(const val : Integer);
function getmaxprocs : Integer;
property maxprocs : Integer read getmaxprocs write setmaxprocs;
procedure setminprocs(const val : Integer);
function getminprocs : Integer;
property minprocs : Integer read getminprocs write setminprocs;
procedure setproclife(const val : Integer);
function getproclife : Integer;
property proclife : Integer read getproclife write setproclife;
procedure setmaxthreads(const val : Integer);
function getmaxthreads : Integer;
property maxthreads : Integer read getmaxthreads write setmaxthreads;
procedure setminthreads(const val : Integer);
function getminthreads : Integer;
property minthreads : Integer read getminthreads write setminthreads;
end;
type __dir_s__Wrapper = class(TDCRecordWrapper)
private
fR : dir_s;
public
function GetRecordPtr : pointer; override;
published
procedure setdp(const val : THandle);
function getdp : THandle;
property dp : THandle read getdp write setdp;
end;
type __directive__Wrapper = class(TDCRecordWrapper)
private
fR : directive;
public
function GetRecordPtr : pointer; override;
published
end;
type __dirent_s__Wrapper = class(TDCRecordWrapper)
private
fR : dirent_s;
public
function GetRecordPtr : pointer; override;
published
end;
type __dtable__Wrapper = class(TDCRecordWrapper)
private
fR : dtable;
public
function GetRecordPtr : pointer; override;
published
procedure setni(const val : Integer);
function getni : Integer;
property ni : Integer read getni write setni;
end;
type __file_s__Wrapper = class(TDCRecordWrapper)
private
fR : file_s;
public
function GetRecordPtr : pointer; override;
published
procedure setfh(const val : THandle);
function getfh : THandle;
property fh : THandle read getfh write setfh;
procedure setflsem(const val : Semaphore);
function getflsem : Semaphore;
property flsem : Semaphore read getflsem write setflsem;
end;
type __filebuf__Wrapper = class(TDCRecordWrapper)
private
fR : filebuf;
public
function GetRecordPtr : pointer; override;
published
procedure setfdmap(const val : THandle);
function getfdmap : THandle;
property fdmap : THandle read getfdmap write setfdmap;
procedure setlen(const val : Integer);
function getlen : Integer;
property len : Integer read getlen write setlen;
procedure setcursize(const val : Integer);
function getcursize : Integer;
property cursize : Integer read getcursize write setcursize;
procedure setpos(const val : Integer);
function getpos : Integer;
property pos : Integer read getpos write setpos;
end;
type __filebuffer__Wrapper = class(TDCRecordWrapper)
private
fR : filebuffer;
public
function GetRecordPtr : pointer; override;
published
procedure setfdmap(const val : THandle);
function getfdmap : THandle;
property fdmap : THandle read getfdmap write setfdmap;
procedure setlen(const val : Integer);
function getlen : Integer;
property len : Integer read getlen write setlen;
procedure setcursize(const val : Integer);
function getcursize : Integer;
property cursize : Integer read getcursize write setcursize;
procedure setpos(const val : Integer);
function getpos : Integer;
property pos : Integer read getpos write setpos;
end;
type __httpd_object__Wrapper = class(TDCRecordWrapper)
private
fR : httpd_object;
public
function GetRecordPtr : pointer; override;
published
procedure setnd(const val : Integer);
function getnd : Integer;
property nd : Integer read getnd write setnd;
end;
type __httpd_objset__Wrapper = class(TDCRecordWrapper)
private
fR : httpd_objset;
public
function GetRecordPtr : pointer; override;
published
procedure setpos(const val : Integer);
function getpos : Integer;
property pos : Integer read getpos write setpos;
end;
type __multiple_domains__Wrapper = class(TDCRecordWrapper)
private
fR : multiple_domains;
public
function GetRecordPtr : pointer; override;
published
procedure setsd(const val : SYS_NETFD);
function getsd : SYS_NETFD;
property sd : SYS_NETFD read getsd write setsd;
procedure setthreads(const val : Integer);
function getthreads : Integer;
property threads : Integer read getthreads write setthreads;
procedure setAddressNumber(const val : Integer);
function getAddressNumber : Integer;
property AddressNumber : Integer read getAddressNumber write setAddressNumber;
end;
type __netbuf__Wrapper = class(TDCRecordWrapper)
private
fR : netbuf;
public
function GetRecordPtr : pointer; override;
published
procedure setsd(const val : SYS_NETFD);
function getsd : SYS_NETFD;
property sd : SYS_NETFD read getsd write setsd;
procedure setpos(const val : Integer);
function getpos : Integer;
property pos : Integer read getpos write setpos;
procedure setcursize(const val : Integer);
function getcursize : Integer;
property cursize : Integer read getcursize write setcursize;
procedure setmaxsize(const val : Integer);
function getmaxsize : Integer;
property maxsize : Integer read getmaxsize write setmaxsize;
procedure setrdtimeout(const val : Integer);
function getrdtimeout : Integer;
property rdtimeout : Integer read getrdtimeout write setrdtimeout;
end;
type __pb_entry__Wrapper = class(TDCRecordWrapper)
private
fR : pb_entry;
public
function GetRecordPtr : pointer; override;
published
end;
type __pb_param__Wrapper = class(TDCRecordWrapper)
private
fR : pb_param;
public
function GetRecordPtr : pointer; override;
published
end;
type __pblock__Wrapper = class(TDCRecordWrapper)
private
fR : pblock;
public
function GetRecordPtr : pointer; override;
published
procedure sethsize(const val : Integer);
function gethsize : Integer;
property hsize : Integer read gethsize write sethsize;
end;
type __Request__Wrapper = class(TDCRecordWrapper)
private
fR : Request;
public
function GetRecordPtr : pointer; override;
published
procedure setloadhdrs(const val : Integer);
function getloadhdrs : Integer;
property loadhdrs : Integer read getloadhdrs write setloadhdrs;
procedure setsenthdrs(const val : Integer);
function getsenthdrs : Integer;
property senthdrs : Integer read getsenthdrs write setsenthdrs;
procedure setaclstate(const val : Integer);
function getaclstate : Integer;
property aclstate : Integer read getaclstate write setaclstate;
procedure setacldirno(const val : Integer);
function getacldirno : Integer;
property acldirno : Integer read getacldirno write setacldirno;
procedure setrequest_is_cacheable(const val : BOOL);
function getrequest_is_cacheable : BOOL;
property request_is_cacheable : BOOL read getrequest_is_cacheable write setrequest_is_cacheable;
procedure setdirective_is_cacheable(const val : BOOL);
function getdirective_is_cacheable : BOOL;
property directive_is_cacheable : BOOL read getdirective_is_cacheable write setdirective_is_cacheable;
procedure setcached_headers_len(const val : Integer);
function getcached_headers_len : Integer;
property cached_headers_len : Integer read getcached_headers_len write setcached_headers_len;
end;
type __Session__Wrapper = class(TDCRecordWrapper)
private
fR : Session;
public
function GetRecordPtr : pointer; override;
published
procedure setcsd(const val : SYS_NETFD);
function getcsd : SYS_NETFD;
property csd : SYS_NETFD read getcsd write setcsd;
procedure setcsd_open(const val : Integer);
function getcsd_open : Integer;
property csd_open : Integer read getcsd_open write setcsd_open;
end;
type __shmem_s__Wrapper = class(TDCRecordWrapper)
private
fR : shmem_s;
public
function GetRecordPtr : pointer; override;
published
procedure setfdmap(const val : THandle);
function getfdmap : THandle;
property fdmap : THandle read getfdmap write setfdmap;
procedure setsize(const val : Integer);
function getsize : Integer;
property size : Integer read getsize write setsize;
end;
type __Stat__Wrapper = class(TDCRecordWrapper)
private
fR : Stat;
public
function GetRecordPtr : pointer; override;
published
procedure setst_dev(const val : Word);
function getst_dev : Word;
property st_dev : Word read getst_dev write setst_dev;
procedure setst_ino(const val : Word);
function getst_ino : Word;
property st_ino : Word read getst_ino write setst_ino;
procedure setst_mode(const val : Word);
function getst_mode : Word;
property st_mode : Word read getst_mode write setst_mode;
procedure setst_nlink(const val : SmallInt);
function getst_nlink : SmallInt;
property st_nlink : SmallInt read getst_nlink write setst_nlink;
procedure setst_uid(const val : SmallInt);
function getst_uid : SmallInt;
property st_uid : SmallInt read getst_uid write setst_uid;
procedure setst_gid(const val : SmallInt);
function getst_gid : SmallInt;
property st_gid : SmallInt read getst_gid write setst_gid;
procedure setst_rdev(const val : Word);
function getst_rdev : Word;
property st_rdev : Word read getst_rdev write setst_rdev;
procedure setst_size(const val : Longint);
function getst_size : Longint;
property st_size : Longint read getst_size write setst_size;
procedure setst_atime(const val : Longint);
function getst_atime : Longint;
property st_atime : Longint read getst_atime write setst_atime;
procedure setst_mtime(const val : Longint);
function getst_mtime : Longint;
property st_mtime : Longint read getst_mtime write setst_mtime;
procedure setst_ctime(const val : Longint);
function getst_ctime : Longint;
property st_ctime : Longint read getst_ctime write setst_ctime;
end;
type __SYS_DIRENT__Wrapper = class(TDCRecordWrapper)
private
fR : SYS_DIRENT;
public
function GetRecordPtr : pointer; override;
published
procedure setdp(const val : THandle);
function getdp : THandle;
property dp : THandle read getdp write setdp;
end;
type __TCInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TCInfo;
public
function GetRecordPtr : pointer; override;
published
end;
type __TConfGlobalVars__Wrapper = class(TDCRecordWrapper)
private
fR : TConfGlobalVars;
public
function GetRecordPtr : pointer; override;
published
procedure setVport(const val : Integer);
function getVport : Integer;
property Vport : Integer read getVport write setVport;
procedure setVpool_max(const val : Integer);
function getVpool_max : Integer;
property Vpool_max : Integer read getVpool_max write setVpool_max;
procedure setVpool_min(const val : Integer);
function getVpool_min : Integer;
property Vpool_min : Integer read getVpool_min write setVpool_min;
procedure setVpool_life(const val : Integer);
function getVpool_life : Integer;
property Vpool_life : Integer read getVpool_life write setVpool_life;
procedure setVpool_maxthreads(const val : Integer);
function getVpool_maxthreads : Integer;
property Vpool_maxthreads : Integer read getVpool_maxthreads write setVpool_maxthreads;
procedure setVpool_minthreads(const val : Integer);
function getVpool_minthreads : Integer;
property Vpool_minthreads : Integer read getVpool_minthreads write setVpool_minthreads;
end;
type __TDaemon__Wrapper = class(TDCRecordWrapper)
private
fR : TDaemon;
public
function GetRecordPtr : pointer; override;
published
procedure setport(const val : Integer);
function getport : Integer;
property port : Integer read getport write setport;
procedure setmaxprocs(const val : Integer);
function getmaxprocs : Integer;
property maxprocs : Integer read getmaxprocs write setmaxprocs;
procedure setminprocs(const val : Integer);
function getminprocs : Integer;
property minprocs : Integer read getminprocs write setminprocs;
procedure setproclife(const val : Integer);
function getproclife : Integer;
property proclife : Integer read getproclife write setproclife;
procedure setmaxthreads(const val : Integer);
function getmaxthreads : Integer;
property maxthreads : Integer read getmaxthreads write setmaxthreads;
procedure setminthreads(const val : Integer);
function getminthreads : Integer;
property minthreads : Integer read getminthreads write setminthreads;
end;
type __TDir__Wrapper = class(TDCRecordWrapper)
private
fR : TDir;
public
function GetRecordPtr : pointer; override;
published
procedure setdp(const val : THandle);
function getdp : THandle;
property dp : THandle read getdp write setdp;
end;
type __TDirective__Wrapper = class(TDCRecordWrapper)
private
fR : TDirective;
public
function GetRecordPtr : pointer; override;
published
end;
type __TDirEnt__Wrapper = class(TDCRecordWrapper)
private
fR : TDirEnt;
public
function GetRecordPtr : pointer; override;
published
end;
type __TDtable__Wrapper = class(TDCRecordWrapper)
private
fR : TDtable;
public
function GetRecordPtr : pointer; override;
published
procedure setni(const val : Integer);
function getni : Integer;
property ni : Integer read getni write setni;
end;
type __TFile__Wrapper = class(TDCRecordWrapper)
private
fR : TFile;
public
function GetRecordPtr : pointer; override;
published
procedure setfh(const val : THandle);
function getfh : THandle;
property fh : THandle read getfh write setfh;
procedure setflsem(const val : Semaphore);
function getflsem : Semaphore;
property flsem : Semaphore read getflsem write setflsem;
end;
type __TFileBuffer__Wrapper = class(TDCRecordWrapper)
private
fR : TFileBuffer;
public
function GetRecordPtr : pointer; override;
published
procedure setfdmap(const val : THandle);
function getfdmap : THandle;
property fdmap : THandle read getfdmap write setfdmap;
procedure setlen(const val : Integer);
function getlen : Integer;
property len : Integer read getlen write setlen;
procedure setcursize(const val : Integer);
function getcursize : Integer;
property cursize : Integer read getcursize write setcursize;
procedure setpos(const val : Integer);
function getpos : Integer;
property pos : Integer read getpos write setpos;
end;
type __TFuncStruct__Wrapper = class(TDCRecordWrapper)
private
fR : TFuncStruct;
public
function GetRecordPtr : pointer; override;
published
end;
type __THttpdObject__Wrapper = class(TDCRecordWrapper)
private
fR : THttpdObject;
public
function GetRecordPtr : pointer; override;
published
procedure setnd(const val : Integer);
function getnd : Integer;
property nd : Integer read getnd write setnd;
end;
type __THttpdObjSet__Wrapper = class(TDCRecordWrapper)
private
fR : THttpdObjSet;
public
function GetRecordPtr : pointer; override;
published
procedure setpos(const val : Integer);
function getpos : Integer;
property pos : Integer read getpos write setpos;
end;
type __tm__Wrapper = class(TDCRecordWrapper)
private
fR : tm;
public
function GetRecordPtr : pointer; override;
published
procedure settm_sec(const val : Integer);
function gettm_sec : Integer;
property tm_sec : Integer read gettm_sec write settm_sec;
procedure settm_min(const val : Integer);
function gettm_min : Integer;
property tm_min : Integer read gettm_min write settm_min;
procedure settm_hour(const val : Integer);
function gettm_hour : Integer;
property tm_hour : Integer read gettm_hour write settm_hour;
procedure settm_mday(const val : Integer);
function gettm_mday : Integer;
property tm_mday : Integer read gettm_mday write settm_mday;
procedure settm_mon(const val : Integer);
function gettm_mon : Integer;
property tm_mon : Integer read gettm_mon write settm_mon;
procedure settm_year(const val : Integer);
function gettm_year : Integer;
property tm_year : Integer read gettm_year write settm_year;
procedure settm_wday(const val : Integer);
function gettm_wday : Integer;
property tm_wday : Integer read gettm_wday write settm_wday;
procedure settm_yday(const val : Integer);
function gettm_yday : Integer;
property tm_yday : Integer read gettm_yday write settm_yday;
procedure settm_isdst(const val : Integer);
function gettm_isdst : Integer;
property tm_isdst : Integer read gettm_isdst write settm_isdst;
end;
type __TMultipleDomains__Wrapper = class(TDCRecordWrapper)
private
fR : TMultipleDomains;
public
function GetRecordPtr : pointer; override;
published
procedure setsd(const val : SYS_NETFD);
function getsd : SYS_NETFD;
property sd : SYS_NETFD read getsd write setsd;
procedure setthreads(const val : Integer);
function getthreads : Integer;
property threads : Integer read getthreads write setthreads;
procedure setAddressNumber(const val : Integer);
function getAddressNumber : Integer;
property AddressNumber : Integer read getAddressNumber write setAddressNumber;
end;
type __TNetBuf__Wrapper = class(TDCRecordWrapper)
private
fR : TNetBuf;
public
function GetRecordPtr : pointer; override;
published
procedure setsd(const val : SYS_NETFD);
function getsd : SYS_NETFD;
property sd : SYS_NETFD read getsd write setsd;
procedure setpos(const val : Integer);
function getpos : Integer;
property pos : Integer read getpos write setpos;
procedure setcursize(const val : Integer);
function getcursize : Integer;
property cursize : Integer read getcursize write setcursize;
procedure setmaxsize(const val : Integer);
function getmaxsize : Integer;
property maxsize : Integer read getmaxsize write setmaxsize;
procedure setrdtimeout(const val : Integer);
function getrdtimeout : Integer;
property rdtimeout : Integer read getrdtimeout write setrdtimeout;
end;
type __TPbEntry__Wrapper = class(TDCRecordWrapper)
private
fR : TPbEntry;
public
function GetRecordPtr : pointer; override;
published
end;
type __TPblock__Wrapper = class(TDCRecordWrapper)
private
fR : TPblock;
public
function GetRecordPtr : pointer; override;
published
procedure sethsize(const val : Integer);
function gethsize : Integer;
property hsize : Integer read gethsize write sethsize;
end;
type __TPbParam__Wrapper = class(TDCRecordWrapper)
private
fR : TPbParam;
public
function GetRecordPtr : pointer; override;
published
end;
type __TRequest__Wrapper = class(TDCRecordWrapper)
private
fR : TRequest;
public
function GetRecordPtr : pointer; override;
published
procedure setloadhdrs(const val : Integer);
function getloadhdrs : Integer;
property loadhdrs : Integer read getloadhdrs write setloadhdrs;
procedure setsenthdrs(const val : Integer);
function getsenthdrs : Integer;
property senthdrs : Integer read getsenthdrs write setsenthdrs;
procedure setaclstate(const val : Integer);
function getaclstate : Integer;
property aclstate : Integer read getaclstate write setaclstate;
procedure setacldirno(const val : Integer);
function getacldirno : Integer;
property acldirno : Integer read getacldirno write setacldirno;
procedure setrequest_is_cacheable(const val : BOOL);
function getrequest_is_cacheable : BOOL;
property request_is_cacheable : BOOL read getrequest_is_cacheable write setrequest_is_cacheable;
procedure setdirective_is_cacheable(const val : BOOL);
function getdirective_is_cacheable : BOOL;
property directive_is_cacheable : BOOL read getdirective_is_cacheable write setdirective_is_cacheable;
procedure setcached_headers_len(const val : Integer);
function getcached_headers_len : Integer;
property cached_headers_len : Integer read getcached_headers_len write setcached_headers_len;
end;
type __TSession__Wrapper = class(TDCRecordWrapper)
private
fR : TSession;
public
function GetRecordPtr : pointer; override;
published
procedure setcsd(const val : SYS_NETFD);
function getcsd : SYS_NETFD;
property csd : SYS_NETFD read getcsd write setcsd;
procedure setcsd_open(const val : Integer);
function getcsd_open : Integer;
property csd_open : Integer read getcsd_open write setcsd_open;
end;
type __TShMem__Wrapper = class(TDCRecordWrapper)
private
fR : TShMem;
public
function GetRecordPtr : pointer; override;
published
procedure setfdmap(const val : THandle);
function getfdmap : THandle;
property fdmap : THandle read getfdmap write setfdmap;
procedure setsize(const val : Integer);
function getsize : Integer;
property size : Integer read getsize write setsize;
end;
type __TStat__Wrapper = class(TDCRecordWrapper)
private
fR : TStat;
public
function GetRecordPtr : pointer; override;
published
procedure setst_dev(const val : Word);
function getst_dev : Word;
property st_dev : Word read getst_dev write setst_dev;
procedure setst_ino(const val : Word);
function getst_ino : Word;
property st_ino : Word read getst_ino write setst_ino;
procedure setst_mode(const val : Word);
function getst_mode : Word;
property st_mode : Word read getst_mode write setst_mode;
procedure setst_nlink(const val : SmallInt);
function getst_nlink : SmallInt;
property st_nlink : SmallInt read getst_nlink write setst_nlink;
procedure setst_uid(const val : SmallInt);
function getst_uid : SmallInt;
property st_uid : SmallInt read getst_uid write setst_uid;
procedure setst_gid(const val : SmallInt);
function getst_gid : SmallInt;
property st_gid : SmallInt read getst_gid write setst_gid;
procedure setst_rdev(const val : Word);
function getst_rdev : Word;
property st_rdev : Word read getst_rdev write setst_rdev;
procedure setst_size(const val : Longint);
function getst_size : Longint;
property st_size : Longint read getst_size write setst_size;
procedure setst_atime(const val : Longint);
function getst_atime : Longint;
property st_atime : Longint read getst_atime write setst_atime;
procedure setst_mtime(const val : Longint);
function getst_mtime : Longint;
property st_mtime : Longint read getst_mtime write setst_mtime;
procedure setst_ctime(const val : Longint);
function getst_ctime : Longint;
property st_ctime : Longint read getst_ctime write setst_ctime;
end;
type __TSockAddr__Wrapper = class(TDCRecordWrapper)
private
fR : TSockAddr;
public
function GetRecordPtr : pointer; override;
published
procedure setsin_family(const val : u_short);
function getsin_family : u_short;
property sin_family : u_short read getsin_family write setsin_family;
procedure setsin_port(const val : u_short);
function getsin_port : u_short;
property sin_port : u_short read getsin_port write setsin_port;
procedure setsa_family(const val : u_short);
function getsa_family : u_short;
property sa_family : u_short read getsa_family write setsa_family;
end;
type
{_T0 = function (p0 : PChar;
p1 : PChar): Integer of object;}

{_T1 = function (p0 : PChar;
p1 : PChar;
p2 : Integer): Integer of object;}

{_T2 = function (p0 : PChar;
p1 : PChar): Integer of object;}

{_T3 = function (p0 : PChar;
p1 : PChar;
p2 : Integer): Integer of object;}

_T4 = function : PChar of object;

_T5 = _T4;

_T6 = function : Boolean of object;

_T7 = _T6;

{_T8 = procedure (p0 : PChar) of object;}

_T9 = function (p0 : Integer): Pointer of object;

_T10 = _T9;

_T11 = _T9;

_T12 = _T9;

_T13 = function (p0 : Pointer;
p1 : Integer): Pointer of object;

_T14 = _T13;

_T15 = procedure (p0 : Pointer) of object;

_T16 = _T15;

{_T17 = function (p0 : PChar): PChar of object;}

{_T18 = function (p0 : PChar): PChar of object;}

_T19 = _T9;

_T20 = _T9;

_T21 = _T9;

_T22 = _T9;

_T23 = _T13;

_T24 = _T13;

_T25 = _T15;

_T26 = _T15;

{_T27 = function (p0 : PChar): PChar of object;}

{_T28 = function (p0 : PChar): PChar of object;}

{_T29 = procedure (p0 : TMagnusAtRestart;
p1 : Pointer) of object;}

_T30 = function : PPoolHandle of object;

_T31 = procedure (p0 : PPoolHandle) of object;

_T32 = function : BOOL of object;

_T33 = function (p0 : PPoolHandle;
p1 : Integer): Pointer of object;

_T34 = procedure (p0 : PPoolHandle;
p1 : Pointer) of object;

_T35 = function (p0 : PPoolHandle;
p1 : Integer;
p2 : Integer): Pointer of object;

_T36 = function (p0 : PPoolHandle;
p1 : Pointer;
p2 : Integer): Pointer of object;

{_T37 = function (p0 : PPoolHandle;
p1 : PChar): PChar of object;}

{_T38 = function (p0 : PChar;
p1 : Integer): Semaphore of object;}

_T39 = procedure (p0 : Semaphore) of object;

_T40 = function (p0 : Semaphore): Integer of object;

_T41 = _T40;

_T42 = _T40;

_T43 = function : CRITICAL of object;

_T44 = procedure (p0 : CRITICAL) of object;

_T45 = _T44;

_T46 = _T44;

_T47 = function (p0 : CRITICAL): CONDVAR of object;

_T48 = procedure (p0 : CONDVAR) of object;

_T49 = _T48;

_T50 = _T48;

{_T51 = procedure (p0 : PChar) of object;}

{_T52 = procedure (p0 : PChar) of object;}

{_T53 = function (p0 : PChar): BOOL of object;}

{_T55 = function (p0 : PChar;
p1 : PChar): BOOL of object;}

{_T56 = function (p0 : PChar): BOOL of object;}

{_T57 = function (p0 : SYS_FILE;
p1 : Pointer;
p2 : Integer): Integer of object;}

{_T58 = function (p0 : SYS_FILE;
p1 : Pointer;
p2 : Integer): Integer of object;}

{_T59 = function (p0 : PChar): SYS_FILE of object;}

{_T60 = function (p0 : PChar): SYS_FILE of object;}

{_T61 = function (p0 : PChar): SYS_FILE of object;}

{_T62 = function (p0 : PChar): SYS_FILE of object;}

{_T63 = procedure (p0 : SYS_FILE) of object;}

_T64 = function : Integer of object;

_T65 = _T4;

_T66 = _T4;

{_T67 = function (p0 : SYS_FILE;
p1 : Longint;
p2 : Longint): Longint of object;}

{_T68 = function (p0 : SYS_FILE;
p1 : Pointer;
p2 : Integer): Integer of object;}

{_T69 = function (p0 : SYS_FILE;
p1 : Pointer;
p2 : Integer): Integer of object;}

_T70 = _T64;

_T71 = _T4;

_T72 = _T4;

{_T73 = function (p0 : SYS_FILE): Integer of object;}

{_T74 = function (p0 : SYS_FILE): Integer of object;}

{_T75 = function (p0 : SYS_FILE): Integer of object;}

{_T76 = function (p0 : SYS_FILE;
p1 : Integer): Integer of object;}

{_T77 = procedure (p0 : PChar;
p1 : PChar) of object;}

{_T78 = function (p0 : PChar): SYS_DIR of object;}

{_T79 = function (p0 : SYS_DIR): PDirEnt of object;}

{_T80 = procedure (p0 : SYS_DIR) of object;}

{_T81 = function (p0 : PChar): Integer of object;}

{_T82 = function (p0 : PChar): Integer of object;}

{_T83 = function (p0 : PChar): Integer of object;}

{_T84 = function (p0 : PChar;
p1 : PChar): PPbParam of object;}

{_T85 = function (p0 : PPbParam): Integer of object;}

{_T86 = function (p0 : Integer): PPblock of object;}

{_T87 = procedure (p0 : PPblock) of object;}

{_T88 = function (p0 : PChar;
p1 : PPblock): PPbParam of object;}

{_T89 = function (p0 : PChar;
p1 : PPblock): PChar of object;}

{_T90 = function (p0 : PChar;
p1 : PPblock): PPbParam of object;}

{_T91 = function (p0 : PChar;
p1 : PChar;
p2 : PPblock): PPbParam of object;}

{_T92 = function (p0 : PChar;
p1 : Integer;
p2 : PPblock): PPbParam of object;}

{_T93 = procedure (p0 : PPbParam;
p1 : PPblock) of object;}

{_T94 = function (p0 : PChar;
p1 : PPblock): Integer of object;}

{_T95 = function (p0 : PPblock;
p1 : PChar): PChar of object;}

{_T96 = procedure (p0 : PPblock;
p1 : PPblock) of object;}

{_T97 = function (p0 : PPblock): PPblock of object;}

{_T98 = function (p0 : PPblock;
p1 : PPCharArray): PPCharArray of object;}

{_T99 = function (p0 : PChar;
p1 : PPblock;
p2 : BOOL): PPbParam of object;}

_T100 = function (p0 : Integer;
p1 : Integer;
p2 : Integer): SYS_NETFD of object;

_T101 = function (p0 : SYS_NETFD;
p1 : Integer;
p2 : Integer;
p3 : Pointer;
var p4 : Integer): Integer of object;

_T102 = function (p0 : SYS_NETFD;
p1 : Integer;
p2 : Integer;
p3 : Pointer;
p4 : Integer): Integer of object;

_T103 = function (p0 : SYS_NETFD;
p1 : Integer): Integer of object;

{_T104 = function (p0 : PChar;
p1 : Integer): SYS_NETFD of object;}

{_T105 = function (p0 : Integer;
p1 : PFDSet;
p2 : PFDSet;
p3 : PFDSet;
p4 : PTimeVal): Integer of object;}

_T106 = function (p0 : SYS_NETFD;
p1 : Pointer;
p2 : Integer): Integer of object;

_T107 = function (p0 : SYS_NETFD;
p1 : Integer;
p2 : Pointer): Integer of object;

_T108 = function (p0 : SYS_NETFD;
const p1 : IDispatch;
var p2 : Integer): Integer of object;

_T109 = function (p0 : SYS_NETFD): Integer of object;

_T110 = function (p0 : SYS_NETFD;
const p1 : IDispatch;
p2 : Integer): Integer of object;

{_T111 = function (p0 : SYS_NETFD;
p1 : PSockAddr;
p2 : PInteger): SYS_NETFD of object;}

{_T112 = function (p0 : SYS_NETFD;
p1 : PChar;
p2 : Integer;
p3 : Integer): Integer of object;}

{_T113 = function (p0 : SYS_NETFD;
p1 : PChar;
p2 : Integer): Integer of object;}

_T114 = function (p0 : SYS_NETFD): BOOL of object;

{_T115 = function (p0 : PChar;
p1 : BOOL): PChar of object;}

{_T116 = function (p0 : PNetBuf): Integer of object;}

{_T117 = function (p0 : PFileBuffer): Integer of object;}

{_T118 = function (p0 : PFileBuffer): Integer of object;}

{_T119 = function (p0 : SYS_FILE;
p1 : Integer): PFileBuffer of object;}

{_T120 = function (p0 : SYS_NETFD;
p1 : Integer): PNetBuf of object;}

{_T121 = function (p0 : SYS_FILE;
p1 : caddr_t;
p2 : Integer;
p3 : Integer): PFileBuffer of object;}

{_T122 = procedure (p0 : PFileBuffer;
p1 : BOOL) of object;}

{_T125 = function (p0 : PFileBuffer;
p1 : Integer): Integer of object;}

{_T126 = function (p0 : PNetBuf;
p1 : Integer): Integer of object;}

{_T127 = function (p0 : PFileBuffer;
p1 : Integer): Integer of object;}

{_T128 = procedure (p0 : PFileBuffer) of object;}

{_T129 = procedure (p0 : PNetBuf) of object;}

{_T130 = procedure (p0 : PFileBuffer) of object;}

{_T131 = function (p0 : PFileBuffer;
p1 : Integer): Integer of object;}

{_T132 = function (p0 : PNetBuf;
p1 : Integer): Integer of object;}

{_T133 = function (p0 : PFileBuffer;
p1 : Integer): Integer of object;}

{_T134 = function (p0 : PNetBuf;
p1 : SYS_NETFD;
p2 : Integer): Integer of object;}

{_T135 = function (p0 : PFileBuffer;
p1 : SYS_NETFD): Integer of object;}

{_T136 = function (p0 : PFileBuffer;
p1 : SYS_NETFD;
p2 : Integer): Integer of object;}

{_T137 = function (p0 : PNetBuf;
p1 : SYS_FILE;
p2 : Integer): Integer of object;}

{_T138 = function (p0 : SYS_NETFD;
p1 : PSockAddrIn): PSession of object;}

{_T139 = procedure (p0 : PSession) of object;}

{_T140 = function (p0 : PSession): PChar of object;}

{_T141 = function (p0 : PSession): PChar of object;}

{_T142 = function (p0 : PSession;
p1 : BOOL): PChar of object;}

{_T143 = function (p0 : PChar): Char of object;}

_T144 = procedure  of object;

_T145 = _T144;

{_T146 = function (p0 : PChar): PChar of object;}

{_T147 = function (p0 : PChar): PCInfo of object;}

{_T148 = function (p0 : PChar): PCInfo of object;}

{_T149 = function (p0 : PChar;
p1 : PChar;
var p2 : PASSWD): PChar of object;}

_T150 = _T144;

{_T151 = function : SYS_FILE of object;}

{_T152 = function (p0 : PChar): Integer of object;}

{_T153 = function (p0 : PChar;
p1 : PChar): Integer of object;}

{_T154 = function (p0 : PChar;
p1 : PChar): Integer of object;}

{_T155 = function (p0 : PChar;
p1 : PChar): Integer of object;}

{_T156 = function (p0 : PChar;
p1 : Integer;
p2 : BOOL): PShMem of object;}

{_T157 = procedure (p0 : PShMem) of object;}

{_T158 = function (p0 : Integer;
p1 : Integer;
p2 : TSysThreadFunc;
p3 : Pointer): SYS_THREAD of object;}

_T159 = function : SYS_THREAD of object;

_T160 = _T144;

_T161 = _T159;

_T162 = procedure (p0 : SYS_THREAD) of object;

_T163 = procedure (p0 : Integer) of object;

{_T164 = procedure (p0 : PChar) of object;}

_T165 = _T163;

_T166 = _T64;

_T167 = _T9;

_T168 = procedure (p0 : Integer;
p1 : Pointer) of object;

_T169 = _T15;

{_T170 = procedure (p0 : TDaemonAtRestart;
p1 : Pointer) of object;}

_T171 = function : pid_t of object;

{_T172 = function (p0 : PFileBuffer;
p1 : Integer;
p2 : Integer;
p3 : PChar): Integer of object;}

{_T173 = function (p0 : PPCharArray;
p1 : Integer;
var p2 : Integer): PPCharArray of object;}

{_T174 = function (p0 : PChar;
p1 : PChar): PChar of object;}

{_T175 = procedure (p0 : PPCharArray;
p1 : PChar;
p2 : PChar) of object;}

{_T176 = procedure (p0 : PPCharArray) of object;}

{_T177 = function (p0 : PPCharArray;
p1 : PPCharArray): PPCharArray of object;}

{_T178 = function (p0 : PPCharArray;
p1 : PChar): PChar of object;}

_T179 = _T4;

{_T180 = function (p0 : PChar): Integer of object;}

{_T181 = function (p0 : PChar;
p1 : PChar;
p2 : PChar): BOOL of object;}

{_T182 = function (p0 : PChar): BOOL of object;}

{_T185 = function (p0 : PChar;
p1 : PChar): Integer of object;}

{_T186 = function (p0 : PChar): BOOL of object;}

{_T187 = procedure (p0 : PChar) of object;}

{_T188 = procedure (p0 : PChar) of object;}

{_T189 = function (p0 : PChar;
p1 : PChar): PChar of object;}

{_T190 = function (p0 : PChar;
p1 : PChar): PChar of object;}

{_T191 = function (p0 : PChar): PChar of object;}

{_T192 = function (p0 : PChar): Integer of object;}

{_T193 = function (p0 : Integer;
p1 : PChar): Integer of object;}

{_T194 = procedure (p0 : PChar;
p1 : BOOL) of object;}

{_T196 = function (p0 : Integer;
p1 : PPblock): PHttpdObject of object;}

{_T197 = procedure (p0 : PHttpdObject) of object;}

{_T198 = procedure (p0 : Integer;
p1 : PPblock;
p2 : PPblock;
p3 : PHttpdObject) of object;}

{_T199 = function (p0 : PDirective;
p1 : PSession;
p2 : Pointer): Integer of object;}

{_T200 = function (p0 : PFileBuffer;
p1 : PChar;
p2 : PHttpdObjSet): PHttpdObjSet of object;}

{_T201 = function : PHttpdObjSet of object;}

{_T202 = procedure (p0 : PHttpdObjSet) of object;}

{_T203 = procedure (p0 : PHttpdObjSet) of object;}

{_T204 = function (p0 : PPblock;
p1 : PHttpdObjSet): PHttpdObjSet of object;}

{_T205 = procedure (p0 : PHttpdObject;
p1 : PHttpdObjSet) of object;}

{_T206 = procedure (p0 : PPblock;
p1 : PHttpdObjSet) of object;}

{_T207 = function (p0 : PChar;
p1 : PHttpdObjSet;
p2 : PHttpdObjSet): PHttpdObject of object;}

{_T208 = function (p0 : PChar;
p1 : PHttpdObjSet;
p2 : PHttpdObjSet): PHttpdObject of object;}

{_T209 = function (p0 : PHttpdObjSet;
p1 : PHttpdObjSet;
p2 : Integer): PHttpdObjSet of object;}

{_T210 = function (p0 : PChar;
p1 : PHttpdObjSet;
p2 : PChar): PHttpdObjSet of object;}

{_T211 = procedure (p0 : PHttpdObjSet;
p1 : HKEY;
p2 : PChar;
p3 : DWORD) of object;}

{_T212 = function (p0 : PHttpdObject;
p1 : HKEY;
p2 : PChar;
p3 : DWORD): BOOL of object;}

{_T213 = function (p0 : PHttpdObject;
p1 : PPblock;
p2 : PPblock;
p3 : HKEY;
p4 : PChar;
p5 : DWORD;
p6 : DWORD;
var p7 : DWORD;
p8 : BOOL): BOOL of object;}

{_T214 = function (var p0 : PPblock;
p1 : HKEY;
p2 : PChar;
p3 : DWORD;
p4 : DWORD;
p5 : DWORD): BOOL of object;}

{_T215 = function (p0 : PChar): Integer of object;}

{_T216 = function (p0 : Integer;
p1 : PChar;
p2 : PChar;
p3 : Integer;
p4 : Integer;
p5 : PPblock): Integer of object;}

{_T217 = function (p0 : PPbEntry;
var p1 : PChar;
var p2 : PChar): Integer of object;}

{_T218 = function (p0 : HKEY;
p1 : PChar;
p2 : PChar): BOOL of object;}

_T219 = _T4;

_T220 = function : PPASSWD of object;

_T221 = _T64;

_T222 = _T64;

_T223 = _T64;

_T224 = _T64;

_T225 = _T64;

_T226 = _T4;

_T227 = _T4;

{_T228 = function : PHttpdObjSet of object;}

_T229 = function : Pointer of object;

_T230 = _T4;

_T231 = _T4;

_T232 = _T4;

{_T233 = function (p0 : PChar): PChar of object;}

_T234 = _T144;

{_T235 = function : PConfGlobalVars of object;}

{_T236 = procedure (p0 : PDaemon) of object;}

{_T237 = function (p0 : PChar): BOOL of object;}

{_T238 = function : PRequest of object;}

{_T239 = procedure (p0 : PRequest) of object;}

{_T240 = function (p0 : PChar;
p1 : PRequest): PRequest of object;}

{_T241 = function (p0 : PChar;
p1 : PPCharArray;
p2 : PSession;
p3 : PRequest): Integer of object;}

{_T242 = function (p0 : PSession;
p1 : PRequest): Integer of object;}

{_T243 = function (p0 : PChar;
p1 : PRequest): PStat of object;}

{_T244 = procedure (p0 : PSession) of object;}

{_T245 = function (p0 : PChar;
p1 : PSession): PChar of object;}

{_T246 = function (p0 : PNetBuf;
p1 : PSession;
var p2 : Integer): PRequest of object;}

{_T247 = function (p0 : PNetBuf;
p1 : PSession;
var p2 : Integer): PRequest of object;}

{_T248 = function (p0 : PChar;
p1 : PRequest;
p2 : PSession): Integer of object;}

{_T249 = function (p0 : PChar;
p1 : PRequest;
p2 : PSession): Integer of object;}

{_T250 = function (p0 : PSession;
p1 : PNetBuf;
p2 : PChar;
p3 : PPblock): Integer of object;}

{_T251 = function (p0 : PSession;
p1 : PNetBuf;
p2 : PChar;
p3 : PPblock): Integer of object;}

{_T252 = function (p0 : PSession;
p1 : PRequest): Integer of object;}

{_T253 = function (p0 : PSession;
p1 : PRequest): Integer of object;}

{_T254 = function (p0 : PPblock): PPCharArray of object;}

{_T255 = procedure (p0 : PSession;
p1 : PRequest;
p2 : Integer;
p3 : PChar) of object;}

{_T256 = procedure (p0 : PSession;
p1 : PRequest;
p2 : Integer;
p3 : PChar) of object;}

{_T259 = function (p0 : PPblock;
p1 : PChar;
var p2 : Integer;
p3 : Integer): PChar of object;}

{_T260 = procedure (p0 : PSession;
p1 : PRequest) of object;}

{_T261 = procedure (p0 : PSession;
p1 : PRequest) of object;}

{_T262 = procedure (p0 : PSession) of object;}

{_T263 = procedure (p0 : PSession) of object;}

{_T264 = function (p0 : PChar;
p1 : PChar): PChar of object;}

{_T265 = function (p0 : PChar;
p1 : PChar;
p2 : PSession;
p3 : PRequest): PChar of object;}

{_T266 = function (p0 : PChar;
p1 : PChar): PChar of object;}

{_T267 = function (p0 : PChar;
p1 : PChar;
p2 : PSession;
p3 : PRequest): PChar of object;}

_T268 = _T163;

_T269 = _T163;

_T270 = _T144;

{_T271 = function (p0 : PChar): TFunction of object;}

{_T272 = function (p0 : PPblock;
p1 : PSession;
p2 : PRequest): Integer of object;}

{_T273 = function (p0 : PChar;
p1 : TFunction): PFuncStruct of object;}

{_T274 = function (p0 : PChar): string of object;}

function __cinfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __conf_global_vars_s__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __conf_global_vars_s__Wrapper.setVport(const val : Integer);
begin
conf_global_vars_s(GetRecordPtr^).Vport := val;
end;
function __conf_global_vars_s__Wrapper.getVport : Integer;
begin
result := conf_global_vars_s(GetRecordPtr^).Vport;
end;
procedure __conf_global_vars_s__Wrapper.setVpool_max(const val : Integer);
begin
conf_global_vars_s(GetRecordPtr^).Vpool_max := val;
end;
function __conf_global_vars_s__Wrapper.getVpool_max : Integer;
begin
result := conf_global_vars_s(GetRecordPtr^).Vpool_max;
end;
procedure __conf_global_vars_s__Wrapper.setVpool_min(const val : Integer);
begin
conf_global_vars_s(GetRecordPtr^).Vpool_min := val;
end;
function __conf_global_vars_s__Wrapper.getVpool_min : Integer;
begin
result := conf_global_vars_s(GetRecordPtr^).Vpool_min;
end;
procedure __conf_global_vars_s__Wrapper.setVpool_life(const val : Integer);
begin
conf_global_vars_s(GetRecordPtr^).Vpool_life := val;
end;
function __conf_global_vars_s__Wrapper.getVpool_life : Integer;
begin
result := conf_global_vars_s(GetRecordPtr^).Vpool_life;
end;
procedure __conf_global_vars_s__Wrapper.setVpool_maxthreads(const val : Integer);
begin
conf_global_vars_s(GetRecordPtr^).Vpool_maxthreads := val;
end;
function __conf_global_vars_s__Wrapper.getVpool_maxthreads : Integer;
begin
result := conf_global_vars_s(GetRecordPtr^).Vpool_maxthreads;
end;
procedure __conf_global_vars_s__Wrapper.setVpool_minthreads(const val : Integer);
begin
conf_global_vars_s(GetRecordPtr^).Vpool_minthreads := val;
end;
function __conf_global_vars_s__Wrapper.getVpool_minthreads : Integer;
begin
result := conf_global_vars_s(GetRecordPtr^).Vpool_minthreads;
end;
function __daemon_s__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __daemon_s__Wrapper.setport(const val : Integer);
begin
daemon_s(GetRecordPtr^).port := val;
end;
function __daemon_s__Wrapper.getport : Integer;
begin
result := daemon_s(GetRecordPtr^).port;
end;
procedure __daemon_s__Wrapper.setmaxprocs(const val : Integer);
begin
daemon_s(GetRecordPtr^).maxprocs := val;
end;
function __daemon_s__Wrapper.getmaxprocs : Integer;
begin
result := daemon_s(GetRecordPtr^).maxprocs;
end;
procedure __daemon_s__Wrapper.setminprocs(const val : Integer);
begin
daemon_s(GetRecordPtr^).minprocs := val;
end;
function __daemon_s__Wrapper.getminprocs : Integer;
begin
result := daemon_s(GetRecordPtr^).minprocs;
end;
procedure __daemon_s__Wrapper.setproclife(const val : Integer);
begin
daemon_s(GetRecordPtr^).proclife := val;
end;
function __daemon_s__Wrapper.getproclife : Integer;
begin
result := daemon_s(GetRecordPtr^).proclife;
end;
procedure __daemon_s__Wrapper.setmaxthreads(const val : Integer);
begin
daemon_s(GetRecordPtr^).maxthreads := val;
end;
function __daemon_s__Wrapper.getmaxthreads : Integer;
begin
result := daemon_s(GetRecordPtr^).maxthreads;
end;
procedure __daemon_s__Wrapper.setminthreads(const val : Integer);
begin
daemon_s(GetRecordPtr^).minthreads := val;
end;
function __daemon_s__Wrapper.getminthreads : Integer;
begin
result := daemon_s(GetRecordPtr^).minthreads;
end;
function __dir_s__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __dir_s__Wrapper.setdp(const val : THandle);
begin
dir_s(GetRecordPtr^).dp := val;
end;
function __dir_s__Wrapper.getdp : THandle;
begin
result := dir_s(GetRecordPtr^).dp;
end;
function __directive__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __dirent_s__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __dtable__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __dtable__Wrapper.setni(const val : Integer);
begin
dtable(GetRecordPtr^).ni := val;
end;
function __dtable__Wrapper.getni : Integer;
begin
result := dtable(GetRecordPtr^).ni;
end;
function __file_s__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __file_s__Wrapper.setfh(const val : THandle);
begin
file_s(GetRecordPtr^).fh := val;
end;
function __file_s__Wrapper.getfh : THandle;
begin
result := file_s(GetRecordPtr^).fh;
end;
procedure __file_s__Wrapper.setflsem(const val : Semaphore);
begin
file_s(GetRecordPtr^).flsem := val;
end;
function __file_s__Wrapper.getflsem : Semaphore;
begin
result := file_s(GetRecordPtr^).flsem;
end;
function __filebuf__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __filebuf__Wrapper.setfdmap(const val : THandle);
begin
filebuf(GetRecordPtr^).fdmap := val;
end;
function __filebuf__Wrapper.getfdmap : THandle;
begin
result := filebuf(GetRecordPtr^).fdmap;
end;
procedure __filebuf__Wrapper.setlen(const val : Integer);
begin
filebuf(GetRecordPtr^).len := val;
end;
function __filebuf__Wrapper.getlen : Integer;
begin
result := filebuf(GetRecordPtr^).len;
end;
procedure __filebuf__Wrapper.setcursize(const val : Integer);
begin
filebuf(GetRecordPtr^).cursize := val;
end;
function __filebuf__Wrapper.getcursize : Integer;
begin
result := filebuf(GetRecordPtr^).cursize;
end;
procedure __filebuf__Wrapper.setpos(const val : Integer);
begin
filebuf(GetRecordPtr^).pos := val;
end;
function __filebuf__Wrapper.getpos : Integer;
begin
result := filebuf(GetRecordPtr^).pos;
end;
function __filebuffer__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __filebuffer__Wrapper.setfdmap(const val : THandle);
begin
filebuffer(GetRecordPtr^).fdmap := val;
end;
function __filebuffer__Wrapper.getfdmap : THandle;
begin
result := filebuffer(GetRecordPtr^).fdmap;
end;
procedure __filebuffer__Wrapper.setlen(const val : Integer);
begin
filebuffer(GetRecordPtr^).len := val;
end;
function __filebuffer__Wrapper.getlen : Integer;
begin
result := filebuffer(GetRecordPtr^).len;
end;
procedure __filebuffer__Wrapper.setcursize(const val : Integer);
begin
filebuffer(GetRecordPtr^).cursize := val;
end;
function __filebuffer__Wrapper.getcursize : Integer;
begin
result := filebuffer(GetRecordPtr^).cursize;
end;
procedure __filebuffer__Wrapper.setpos(const val : Integer);
begin
filebuffer(GetRecordPtr^).pos := val;
end;
function __filebuffer__Wrapper.getpos : Integer;
begin
result := filebuffer(GetRecordPtr^).pos;
end;
function __httpd_object__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __httpd_object__Wrapper.setnd(const val : Integer);
begin
httpd_object(GetRecordPtr^).nd := val;
end;
function __httpd_object__Wrapper.getnd : Integer;
begin
result := httpd_object(GetRecordPtr^).nd;
end;
function __httpd_objset__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __httpd_objset__Wrapper.setpos(const val : Integer);
begin
httpd_objset(GetRecordPtr^).pos := val;
end;
function __httpd_objset__Wrapper.getpos : Integer;
begin
result := httpd_objset(GetRecordPtr^).pos;
end;
function __multiple_domains__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __multiple_domains__Wrapper.setsd(const val : SYS_NETFD);
begin
multiple_domains(GetRecordPtr^).sd := val;
end;
function __multiple_domains__Wrapper.getsd : SYS_NETFD;
begin
result := multiple_domains(GetRecordPtr^).sd;
end;
procedure __multiple_domains__Wrapper.setthreads(const val : Integer);
begin
multiple_domains(GetRecordPtr^).threads := val;
end;
function __multiple_domains__Wrapper.getthreads : Integer;
begin
result := multiple_domains(GetRecordPtr^).threads;
end;
procedure __multiple_domains__Wrapper.setAddressNumber(const val : Integer);
begin
multiple_domains(GetRecordPtr^).AddressNumber := val;
end;
function __multiple_domains__Wrapper.getAddressNumber : Integer;
begin
result := multiple_domains(GetRecordPtr^).AddressNumber;
end;
function __netbuf__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __netbuf__Wrapper.setsd(const val : SYS_NETFD);
begin
netbuf(GetRecordPtr^).sd := val;
end;
function __netbuf__Wrapper.getsd : SYS_NETFD;
begin
result := netbuf(GetRecordPtr^).sd;
end;
procedure __netbuf__Wrapper.setpos(const val : Integer);
begin
netbuf(GetRecordPtr^).pos := val;
end;
function __netbuf__Wrapper.getpos : Integer;
begin
result := netbuf(GetRecordPtr^).pos;
end;
procedure __netbuf__Wrapper.setcursize(const val : Integer);
begin
netbuf(GetRecordPtr^).cursize := val;
end;
function __netbuf__Wrapper.getcursize : Integer;
begin
result := netbuf(GetRecordPtr^).cursize;
end;
procedure __netbuf__Wrapper.setmaxsize(const val : Integer);
begin
netbuf(GetRecordPtr^).maxsize := val;
end;
function __netbuf__Wrapper.getmaxsize : Integer;
begin
result := netbuf(GetRecordPtr^).maxsize;
end;
procedure __netbuf__Wrapper.setrdtimeout(const val : Integer);
begin
netbuf(GetRecordPtr^).rdtimeout := val;
end;
function __netbuf__Wrapper.getrdtimeout : Integer;
begin
result := netbuf(GetRecordPtr^).rdtimeout;
end;
function __pb_entry__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __pb_param__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __pblock__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __pblock__Wrapper.sethsize(const val : Integer);
begin
pblock(GetRecordPtr^).hsize := val;
end;
function __pblock__Wrapper.gethsize : Integer;
begin
result := pblock(GetRecordPtr^).hsize;
end;
function __Request__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __Request__Wrapper.setloadhdrs(const val : Integer);
begin
Request(GetRecordPtr^).loadhdrs := val;
end;
function __Request__Wrapper.getloadhdrs : Integer;
begin
result := Request(GetRecordPtr^).loadhdrs;
end;
procedure __Request__Wrapper.setsenthdrs(const val : Integer);
begin
Request(GetRecordPtr^).senthdrs := val;
end;
function __Request__Wrapper.getsenthdrs : Integer;
begin
result := Request(GetRecordPtr^).senthdrs;
end;
procedure __Request__Wrapper.setaclstate(const val : Integer);
begin
Request(GetRecordPtr^).aclstate := val;
end;
function __Request__Wrapper.getaclstate : Integer;
begin
result := Request(GetRecordPtr^).aclstate;
end;
procedure __Request__Wrapper.setacldirno(const val : Integer);
begin
Request(GetRecordPtr^).acldirno := val;
end;
function __Request__Wrapper.getacldirno : Integer;
begin
result := Request(GetRecordPtr^).acldirno;
end;
procedure __Request__Wrapper.setrequest_is_cacheable(const val : BOOL);
begin
Request(GetRecordPtr^).request_is_cacheable := val;
end;
function __Request__Wrapper.getrequest_is_cacheable : BOOL;
begin
result := Request(GetRecordPtr^).request_is_cacheable;
end;
procedure __Request__Wrapper.setdirective_is_cacheable(const val : BOOL);
begin
Request(GetRecordPtr^).directive_is_cacheable := val;
end;
function __Request__Wrapper.getdirective_is_cacheable : BOOL;
begin
result := Request(GetRecordPtr^).directive_is_cacheable;
end;
procedure __Request__Wrapper.setcached_headers_len(const val : Integer);
begin
Request(GetRecordPtr^).cached_headers_len := val;
end;
function __Request__Wrapper.getcached_headers_len : Integer;
begin
result := Request(GetRecordPtr^).cached_headers_len;
end;
function __Session__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __Session__Wrapper.setcsd(const val : SYS_NETFD);
begin
Session(GetRecordPtr^).csd := val;
end;
function __Session__Wrapper.getcsd : SYS_NETFD;
begin
result := Session(GetRecordPtr^).csd;
end;
procedure __Session__Wrapper.setcsd_open(const val : Integer);
begin
Session(GetRecordPtr^).csd_open := val;
end;
function __Session__Wrapper.getcsd_open : Integer;
begin
result := Session(GetRecordPtr^).csd_open;
end;
function __shmem_s__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __shmem_s__Wrapper.setfdmap(const val : THandle);
begin
shmem_s(GetRecordPtr^).fdmap := val;
end;
function __shmem_s__Wrapper.getfdmap : THandle;
begin
result := shmem_s(GetRecordPtr^).fdmap;
end;
procedure __shmem_s__Wrapper.setsize(const val : Integer);
begin
shmem_s(GetRecordPtr^).size := val;
end;
function __shmem_s__Wrapper.getsize : Integer;
begin
result := shmem_s(GetRecordPtr^).size;
end;
function __Stat__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __Stat__Wrapper.setst_dev(const val : Word);
begin
Stat(GetRecordPtr^).st_dev := val;
end;
function __Stat__Wrapper.getst_dev : Word;
begin
result := Stat(GetRecordPtr^).st_dev;
end;
procedure __Stat__Wrapper.setst_ino(const val : Word);
begin
Stat(GetRecordPtr^).st_ino := val;
end;
function __Stat__Wrapper.getst_ino : Word;
begin
result := Stat(GetRecordPtr^).st_ino;
end;
procedure __Stat__Wrapper.setst_mode(const val : Word);
begin
Stat(GetRecordPtr^).st_mode := val;
end;
function __Stat__Wrapper.getst_mode : Word;
begin
result := Stat(GetRecordPtr^).st_mode;
end;
procedure __Stat__Wrapper.setst_nlink(const val : SmallInt);
begin
Stat(GetRecordPtr^).st_nlink := val;
end;
function __Stat__Wrapper.getst_nlink : SmallInt;
begin
result := Stat(GetRecordPtr^).st_nlink;
end;
procedure __Stat__Wrapper.setst_uid(const val : SmallInt);
begin
Stat(GetRecordPtr^).st_uid := val;
end;
function __Stat__Wrapper.getst_uid : SmallInt;
begin
result := Stat(GetRecordPtr^).st_uid;
end;
procedure __Stat__Wrapper.setst_gid(const val : SmallInt);
begin
Stat(GetRecordPtr^).st_gid := val;
end;
function __Stat__Wrapper.getst_gid : SmallInt;
begin
result := Stat(GetRecordPtr^).st_gid;
end;
procedure __Stat__Wrapper.setst_rdev(const val : Word);
begin
Stat(GetRecordPtr^).st_rdev := val;
end;
function __Stat__Wrapper.getst_rdev : Word;
begin
result := Stat(GetRecordPtr^).st_rdev;
end;
procedure __Stat__Wrapper.setst_size(const val : Longint);
begin
Stat(GetRecordPtr^).st_size := val;
end;
function __Stat__Wrapper.getst_size : Longint;
begin
result := Stat(GetRecordPtr^).st_size;
end;
procedure __Stat__Wrapper.setst_atime(const val : Longint);
begin
Stat(GetRecordPtr^).st_atime := val;
end;
function __Stat__Wrapper.getst_atime : Longint;
begin
result := Stat(GetRecordPtr^).st_atime;
end;
procedure __Stat__Wrapper.setst_mtime(const val : Longint);
begin
Stat(GetRecordPtr^).st_mtime := val;
end;
function __Stat__Wrapper.getst_mtime : Longint;
begin
result := Stat(GetRecordPtr^).st_mtime;
end;
procedure __Stat__Wrapper.setst_ctime(const val : Longint);
begin
Stat(GetRecordPtr^).st_ctime := val;
end;
function __Stat__Wrapper.getst_ctime : Longint;
begin
result := Stat(GetRecordPtr^).st_ctime;
end;
function __SYS_DIRENT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SYS_DIRENT__Wrapper.setdp(const val : THandle);
begin
SYS_DIRENT(GetRecordPtr^).dp := val;
end;
function __SYS_DIRENT__Wrapper.getdp : THandle;
begin
result := SYS_DIRENT(GetRecordPtr^).dp;
end;
function __TCInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TConfGlobalVars__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TConfGlobalVars__Wrapper.setVport(const val : Integer);
begin
TConfGlobalVars(GetRecordPtr^).Vport := val;
end;
function __TConfGlobalVars__Wrapper.getVport : Integer;
begin
result := TConfGlobalVars(GetRecordPtr^).Vport;
end;
procedure __TConfGlobalVars__Wrapper.setVpool_max(const val : Integer);
begin
TConfGlobalVars(GetRecordPtr^).Vpool_max := val;
end;
function __TConfGlobalVars__Wrapper.getVpool_max : Integer;
begin
result := TConfGlobalVars(GetRecordPtr^).Vpool_max;
end;
procedure __TConfGlobalVars__Wrapper.setVpool_min(const val : Integer);
begin
TConfGlobalVars(GetRecordPtr^).Vpool_min := val;
end;
function __TConfGlobalVars__Wrapper.getVpool_min : Integer;
begin
result := TConfGlobalVars(GetRecordPtr^).Vpool_min;
end;
procedure __TConfGlobalVars__Wrapper.setVpool_life(const val : Integer);
begin
TConfGlobalVars(GetRecordPtr^).Vpool_life := val;
end;
function __TConfGlobalVars__Wrapper.getVpool_life : Integer;
begin
result := TConfGlobalVars(GetRecordPtr^).Vpool_life;
end;
procedure __TConfGlobalVars__Wrapper.setVpool_maxthreads(const val : Integer);
begin
TConfGlobalVars(GetRecordPtr^).Vpool_maxthreads := val;
end;
function __TConfGlobalVars__Wrapper.getVpool_maxthreads : Integer;
begin
result := TConfGlobalVars(GetRecordPtr^).Vpool_maxthreads;
end;
procedure __TConfGlobalVars__Wrapper.setVpool_minthreads(const val : Integer);
begin
TConfGlobalVars(GetRecordPtr^).Vpool_minthreads := val;
end;
function __TConfGlobalVars__Wrapper.getVpool_minthreads : Integer;
begin
result := TConfGlobalVars(GetRecordPtr^).Vpool_minthreads;
end;
function __TDaemon__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDaemon__Wrapper.setport(const val : Integer);
begin
TDaemon(GetRecordPtr^).port := val;
end;
function __TDaemon__Wrapper.getport : Integer;
begin
result := TDaemon(GetRecordPtr^).port;
end;
procedure __TDaemon__Wrapper.setmaxprocs(const val : Integer);
begin
TDaemon(GetRecordPtr^).maxprocs := val;
end;
function __TDaemon__Wrapper.getmaxprocs : Integer;
begin
result := TDaemon(GetRecordPtr^).maxprocs;
end;
procedure __TDaemon__Wrapper.setminprocs(const val : Integer);
begin
TDaemon(GetRecordPtr^).minprocs := val;
end;
function __TDaemon__Wrapper.getminprocs : Integer;
begin
result := TDaemon(GetRecordPtr^).minprocs;
end;
procedure __TDaemon__Wrapper.setproclife(const val : Integer);
begin
TDaemon(GetRecordPtr^).proclife := val;
end;
function __TDaemon__Wrapper.getproclife : Integer;
begin
result := TDaemon(GetRecordPtr^).proclife;
end;
procedure __TDaemon__Wrapper.setmaxthreads(const val : Integer);
begin
TDaemon(GetRecordPtr^).maxthreads := val;
end;
function __TDaemon__Wrapper.getmaxthreads : Integer;
begin
result := TDaemon(GetRecordPtr^).maxthreads;
end;
procedure __TDaemon__Wrapper.setminthreads(const val : Integer);
begin
TDaemon(GetRecordPtr^).minthreads := val;
end;
function __TDaemon__Wrapper.getminthreads : Integer;
begin
result := TDaemon(GetRecordPtr^).minthreads;
end;
function __TDir__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDir__Wrapper.setdp(const val : THandle);
begin
TDir(GetRecordPtr^).dp := val;
end;
function __TDir__Wrapper.getdp : THandle;
begin
result := TDir(GetRecordPtr^).dp;
end;
function __TDirective__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TDirEnt__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TDtable__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDtable__Wrapper.setni(const val : Integer);
begin
TDtable(GetRecordPtr^).ni := val;
end;
function __TDtable__Wrapper.getni : Integer;
begin
result := TDtable(GetRecordPtr^).ni;
end;
function __TFile__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFile__Wrapper.setfh(const val : THandle);
begin
TFile(GetRecordPtr^).fh := val;
end;
function __TFile__Wrapper.getfh : THandle;
begin
result := TFile(GetRecordPtr^).fh;
end;
procedure __TFile__Wrapper.setflsem(const val : Semaphore);
begin
TFile(GetRecordPtr^).flsem := val;
end;
function __TFile__Wrapper.getflsem : Semaphore;
begin
result := TFile(GetRecordPtr^).flsem;
end;
function __TFileBuffer__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFileBuffer__Wrapper.setfdmap(const val : THandle);
begin
TFileBuffer(GetRecordPtr^).fdmap := val;
end;
function __TFileBuffer__Wrapper.getfdmap : THandle;
begin
result := TFileBuffer(GetRecordPtr^).fdmap;
end;
procedure __TFileBuffer__Wrapper.setlen(const val : Integer);
begin
TFileBuffer(GetRecordPtr^).len := val;
end;
function __TFileBuffer__Wrapper.getlen : Integer;
begin
result := TFileBuffer(GetRecordPtr^).len;
end;
procedure __TFileBuffer__Wrapper.setcursize(const val : Integer);
begin
TFileBuffer(GetRecordPtr^).cursize := val;
end;
function __TFileBuffer__Wrapper.getcursize : Integer;
begin
result := TFileBuffer(GetRecordPtr^).cursize;
end;
procedure __TFileBuffer__Wrapper.setpos(const val : Integer);
begin
TFileBuffer(GetRecordPtr^).pos := val;
end;
function __TFileBuffer__Wrapper.getpos : Integer;
begin
result := TFileBuffer(GetRecordPtr^).pos;
end;
function __TFuncStruct__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __THttpdObject__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __THttpdObject__Wrapper.setnd(const val : Integer);
begin
THttpdObject(GetRecordPtr^).nd := val;
end;
function __THttpdObject__Wrapper.getnd : Integer;
begin
result := THttpdObject(GetRecordPtr^).nd;
end;
function __THttpdObjSet__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __THttpdObjSet__Wrapper.setpos(const val : Integer);
begin
THttpdObjSet(GetRecordPtr^).pos := val;
end;
function __THttpdObjSet__Wrapper.getpos : Integer;
begin
result := THttpdObjSet(GetRecordPtr^).pos;
end;
function __tm__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tm__Wrapper.settm_sec(const val : Integer);
begin
tm(GetRecordPtr^).tm_sec := val;
end;
function __tm__Wrapper.gettm_sec : Integer;
begin
result := tm(GetRecordPtr^).tm_sec;
end;
procedure __tm__Wrapper.settm_min(const val : Integer);
begin
tm(GetRecordPtr^).tm_min := val;
end;
function __tm__Wrapper.gettm_min : Integer;
begin
result := tm(GetRecordPtr^).tm_min;
end;
procedure __tm__Wrapper.settm_hour(const val : Integer);
begin
tm(GetRecordPtr^).tm_hour := val;
end;
function __tm__Wrapper.gettm_hour : Integer;
begin
result := tm(GetRecordPtr^).tm_hour;
end;
procedure __tm__Wrapper.settm_mday(const val : Integer);
begin
tm(GetRecordPtr^).tm_mday := val;
end;
function __tm__Wrapper.gettm_mday : Integer;
begin
result := tm(GetRecordPtr^).tm_mday;
end;
procedure __tm__Wrapper.settm_mon(const val : Integer);
begin
tm(GetRecordPtr^).tm_mon := val;
end;
function __tm__Wrapper.gettm_mon : Integer;
begin
result := tm(GetRecordPtr^).tm_mon;
end;
procedure __tm__Wrapper.settm_year(const val : Integer);
begin
tm(GetRecordPtr^).tm_year := val;
end;
function __tm__Wrapper.gettm_year : Integer;
begin
result := tm(GetRecordPtr^).tm_year;
end;
procedure __tm__Wrapper.settm_wday(const val : Integer);
begin
tm(GetRecordPtr^).tm_wday := val;
end;
function __tm__Wrapper.gettm_wday : Integer;
begin
result := tm(GetRecordPtr^).tm_wday;
end;
procedure __tm__Wrapper.settm_yday(const val : Integer);
begin
tm(GetRecordPtr^).tm_yday := val;
end;
function __tm__Wrapper.gettm_yday : Integer;
begin
result := tm(GetRecordPtr^).tm_yday;
end;
procedure __tm__Wrapper.settm_isdst(const val : Integer);
begin
tm(GetRecordPtr^).tm_isdst := val;
end;
function __tm__Wrapper.gettm_isdst : Integer;
begin
result := tm(GetRecordPtr^).tm_isdst;
end;
function __TMultipleDomains__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TMultipleDomains__Wrapper.setsd(const val : SYS_NETFD);
begin
TMultipleDomains(GetRecordPtr^).sd := val;
end;
function __TMultipleDomains__Wrapper.getsd : SYS_NETFD;
begin
result := TMultipleDomains(GetRecordPtr^).sd;
end;
procedure __TMultipleDomains__Wrapper.setthreads(const val : Integer);
begin
TMultipleDomains(GetRecordPtr^).threads := val;
end;
function __TMultipleDomains__Wrapper.getthreads : Integer;
begin
result := TMultipleDomains(GetRecordPtr^).threads;
end;
procedure __TMultipleDomains__Wrapper.setAddressNumber(const val : Integer);
begin
TMultipleDomains(GetRecordPtr^).AddressNumber := val;
end;
function __TMultipleDomains__Wrapper.getAddressNumber : Integer;
begin
result := TMultipleDomains(GetRecordPtr^).AddressNumber;
end;
function __TNetBuf__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TNetBuf__Wrapper.setsd(const val : SYS_NETFD);
begin
TNetBuf(GetRecordPtr^).sd := val;
end;
function __TNetBuf__Wrapper.getsd : SYS_NETFD;
begin
result := TNetBuf(GetRecordPtr^).sd;
end;
procedure __TNetBuf__Wrapper.setpos(const val : Integer);
begin
TNetBuf(GetRecordPtr^).pos := val;
end;
function __TNetBuf__Wrapper.getpos : Integer;
begin
result := TNetBuf(GetRecordPtr^).pos;
end;
procedure __TNetBuf__Wrapper.setcursize(const val : Integer);
begin
TNetBuf(GetRecordPtr^).cursize := val;
end;
function __TNetBuf__Wrapper.getcursize : Integer;
begin
result := TNetBuf(GetRecordPtr^).cursize;
end;
procedure __TNetBuf__Wrapper.setmaxsize(const val : Integer);
begin
TNetBuf(GetRecordPtr^).maxsize := val;
end;
function __TNetBuf__Wrapper.getmaxsize : Integer;
begin
result := TNetBuf(GetRecordPtr^).maxsize;
end;
procedure __TNetBuf__Wrapper.setrdtimeout(const val : Integer);
begin
TNetBuf(GetRecordPtr^).rdtimeout := val;
end;
function __TNetBuf__Wrapper.getrdtimeout : Integer;
begin
result := TNetBuf(GetRecordPtr^).rdtimeout;
end;
function __TPbEntry__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TPblock__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TPblock__Wrapper.sethsize(const val : Integer);
begin
TPblock(GetRecordPtr^).hsize := val;
end;
function __TPblock__Wrapper.gethsize : Integer;
begin
result := TPblock(GetRecordPtr^).hsize;
end;
function __TPbParam__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TRequest__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRequest__Wrapper.setloadhdrs(const val : Integer);
begin
TRequest(GetRecordPtr^).loadhdrs := val;
end;
function __TRequest__Wrapper.getloadhdrs : Integer;
begin
result := TRequest(GetRecordPtr^).loadhdrs;
end;
procedure __TRequest__Wrapper.setsenthdrs(const val : Integer);
begin
TRequest(GetRecordPtr^).senthdrs := val;
end;
function __TRequest__Wrapper.getsenthdrs : Integer;
begin
result := TRequest(GetRecordPtr^).senthdrs;
end;
procedure __TRequest__Wrapper.setaclstate(const val : Integer);
begin
TRequest(GetRecordPtr^).aclstate := val;
end;
function __TRequest__Wrapper.getaclstate : Integer;
begin
result := TRequest(GetRecordPtr^).aclstate;
end;
procedure __TRequest__Wrapper.setacldirno(const val : Integer);
begin
TRequest(GetRecordPtr^).acldirno := val;
end;
function __TRequest__Wrapper.getacldirno : Integer;
begin
result := TRequest(GetRecordPtr^).acldirno;
end;
procedure __TRequest__Wrapper.setrequest_is_cacheable(const val : BOOL);
begin
TRequest(GetRecordPtr^).request_is_cacheable := val;
end;
function __TRequest__Wrapper.getrequest_is_cacheable : BOOL;
begin
result := TRequest(GetRecordPtr^).request_is_cacheable;
end;
procedure __TRequest__Wrapper.setdirective_is_cacheable(const val : BOOL);
begin
TRequest(GetRecordPtr^).directive_is_cacheable := val;
end;
function __TRequest__Wrapper.getdirective_is_cacheable : BOOL;
begin
result := TRequest(GetRecordPtr^).directive_is_cacheable;
end;
procedure __TRequest__Wrapper.setcached_headers_len(const val : Integer);
begin
TRequest(GetRecordPtr^).cached_headers_len := val;
end;
function __TRequest__Wrapper.getcached_headers_len : Integer;
begin
result := TRequest(GetRecordPtr^).cached_headers_len;
end;
function __TSession__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSession__Wrapper.setcsd(const val : SYS_NETFD);
begin
TSession(GetRecordPtr^).csd := val;
end;
function __TSession__Wrapper.getcsd : SYS_NETFD;
begin
result := TSession(GetRecordPtr^).csd;
end;
procedure __TSession__Wrapper.setcsd_open(const val : Integer);
begin
TSession(GetRecordPtr^).csd_open := val;
end;
function __TSession__Wrapper.getcsd_open : Integer;
begin
result := TSession(GetRecordPtr^).csd_open;
end;
function __TShMem__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TShMem__Wrapper.setfdmap(const val : THandle);
begin
TShMem(GetRecordPtr^).fdmap := val;
end;
function __TShMem__Wrapper.getfdmap : THandle;
begin
result := TShMem(GetRecordPtr^).fdmap;
end;
procedure __TShMem__Wrapper.setsize(const val : Integer);
begin
TShMem(GetRecordPtr^).size := val;
end;
function __TShMem__Wrapper.getsize : Integer;
begin
result := TShMem(GetRecordPtr^).size;
end;
function __TStat__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TStat__Wrapper.setst_dev(const val : Word);
begin
TStat(GetRecordPtr^).st_dev := val;
end;
function __TStat__Wrapper.getst_dev : Word;
begin
result := TStat(GetRecordPtr^).st_dev;
end;
procedure __TStat__Wrapper.setst_ino(const val : Word);
begin
TStat(GetRecordPtr^).st_ino := val;
end;
function __TStat__Wrapper.getst_ino : Word;
begin
result := TStat(GetRecordPtr^).st_ino;
end;
procedure __TStat__Wrapper.setst_mode(const val : Word);
begin
TStat(GetRecordPtr^).st_mode := val;
end;
function __TStat__Wrapper.getst_mode : Word;
begin
result := TStat(GetRecordPtr^).st_mode;
end;
procedure __TStat__Wrapper.setst_nlink(const val : SmallInt);
begin
TStat(GetRecordPtr^).st_nlink := val;
end;
function __TStat__Wrapper.getst_nlink : SmallInt;
begin
result := TStat(GetRecordPtr^).st_nlink;
end;
procedure __TStat__Wrapper.setst_uid(const val : SmallInt);
begin
TStat(GetRecordPtr^).st_uid := val;
end;
function __TStat__Wrapper.getst_uid : SmallInt;
begin
result := TStat(GetRecordPtr^).st_uid;
end;
procedure __TStat__Wrapper.setst_gid(const val : SmallInt);
begin
TStat(GetRecordPtr^).st_gid := val;
end;
function __TStat__Wrapper.getst_gid : SmallInt;
begin
result := TStat(GetRecordPtr^).st_gid;
end;
procedure __TStat__Wrapper.setst_rdev(const val : Word);
begin
TStat(GetRecordPtr^).st_rdev := val;
end;
function __TStat__Wrapper.getst_rdev : Word;
begin
result := TStat(GetRecordPtr^).st_rdev;
end;
procedure __TStat__Wrapper.setst_size(const val : Longint);
begin
TStat(GetRecordPtr^).st_size := val;
end;
function __TStat__Wrapper.getst_size : Longint;
begin
result := TStat(GetRecordPtr^).st_size;
end;
procedure __TStat__Wrapper.setst_atime(const val : Longint);
begin
TStat(GetRecordPtr^).st_atime := val;
end;
function __TStat__Wrapper.getst_atime : Longint;
begin
result := TStat(GetRecordPtr^).st_atime;
end;
procedure __TStat__Wrapper.setst_mtime(const val : Longint);
begin
TStat(GetRecordPtr^).st_mtime := val;
end;
function __TStat__Wrapper.getst_mtime : Longint;
begin
result := TStat(GetRecordPtr^).st_mtime;
end;
procedure __TStat__Wrapper.setst_ctime(const val : Longint);
begin
TStat(GetRecordPtr^).st_ctime := val;
end;
function __TStat__Wrapper.getst_ctime : Longint;
begin
result := TStat(GetRecordPtr^).st_ctime;
end;
function _cinfo_ : IDispatch;
begin
  result := __cinfo__Wrapper.Create;
end;
function _conf_global_vars_s_ : IDispatch;
begin
  result := __conf_global_vars_s__Wrapper.Create;
end;
function _daemon_s_ : IDispatch;
begin
  result := __daemon_s__Wrapper.Create;
end;
function _dir_s_ : IDispatch;
begin
  result := __dir_s__Wrapper.Create;
end;
function _directive_ : IDispatch;
begin
  result := __directive__Wrapper.Create;
end;
function _dirent_s_ : IDispatch;
begin
  result := __dirent_s__Wrapper.Create;
end;
function _dtable_ : IDispatch;
begin
  result := __dtable__Wrapper.Create;
end;
function _file_s_ : IDispatch;
begin
  result := __file_s__Wrapper.Create;
end;
function _filebuf_ : IDispatch;
begin
  result := __filebuf__Wrapper.Create;
end;
function _filebuffer_ : IDispatch;
begin
  result := __filebuffer__Wrapper.Create;
end;
function _httpd_object_ : IDispatch;
begin
  result := __httpd_object__Wrapper.Create;
end;
function _httpd_objset_ : IDispatch;
begin
  result := __httpd_objset__Wrapper.Create;
end;
function _multiple_domains_ : IDispatch;
begin
  result := __multiple_domains__Wrapper.Create;
end;
function _netbuf_ : IDispatch;
begin
  result := __netbuf__Wrapper.Create;
end;
function _pb_entry_ : IDispatch;
begin
  result := __pb_entry__Wrapper.Create;
end;
function _pb_param_ : IDispatch;
begin
  result := __pb_param__Wrapper.Create;
end;
function _pblock_ : IDispatch;
begin
  result := __pblock__Wrapper.Create;
end;
function _Request_ : IDispatch;
begin
  result := __Request__Wrapper.Create;
end;
function _Session_ : IDispatch;
begin
  result := __Session__Wrapper.Create;
end;
function _shmem_s_ : IDispatch;
begin
  result := __shmem_s__Wrapper.Create;
end;
function _Stat_ : IDispatch;
begin
  result := __Stat__Wrapper.Create;
end;
function _SYS_DIRENT_ : IDispatch;
begin
  result := __SYS_DIRENT__Wrapper.Create;
end;
function _TCInfo_ : IDispatch;
begin
  result := __TCInfo__Wrapper.Create;
end;
function _TConfGlobalVars_ : IDispatch;
begin
  result := __TConfGlobalVars__Wrapper.Create;
end;
function _TDaemon_ : IDispatch;
begin
  result := __TDaemon__Wrapper.Create;
end;
function _TDir_ : IDispatch;
begin
  result := __TDir__Wrapper.Create;
end;
function _TDirective_ : IDispatch;
begin
  result := __TDirective__Wrapper.Create;
end;
function _TDirEnt_ : IDispatch;
begin
  result := __TDirEnt__Wrapper.Create;
end;
function _TDtable_ : IDispatch;
begin
  result := __TDtable__Wrapper.Create;
end;
function _TFile_ : IDispatch;
begin
  result := __TFile__Wrapper.Create;
end;
function _TFileBuffer_ : IDispatch;
begin
  result := __TFileBuffer__Wrapper.Create;
end;
function _TFuncStruct_ : IDispatch;
begin
  result := __TFuncStruct__Wrapper.Create;
end;
function _THttpdObject_ : IDispatch;
begin
  result := __THttpdObject__Wrapper.Create;
end;
function _THttpdObjSet_ : IDispatch;
begin
  result := __THttpdObjSet__Wrapper.Create;
end;
function _tm_ : IDispatch;
begin
  result := __tm__Wrapper.Create;
end;
function _TMultipleDomains_ : IDispatch;
begin
  result := __TMultipleDomains__Wrapper.Create;
end;
function _TNetBuf_ : IDispatch;
begin
  result := __TNetBuf__Wrapper.Create;
end;
function _TPbEntry_ : IDispatch;
begin
  result := __TPbEntry__Wrapper.Create;
end;
function _TPblock_ : IDispatch;
begin
  result := __TPblock__Wrapper.Create;
end;
function _TPbParam_ : IDispatch;
begin
  result := __TPbParam__Wrapper.Create;
end;
function _TRequest_ : IDispatch;
begin
  result := __TRequest__Wrapper.Create;
end;
function _TSession_ : IDispatch;
begin
  result := __TSession__Wrapper.Create;
end;
function _TShMem_ : IDispatch;
begin
  result := __TShMem__Wrapper.Create;
end;
function _TStat_ : IDispatch;
begin
  result := __TStat__Wrapper.Create;
end;
function __TSockAddr__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSockAddr__Wrapper.setsin_family(const val : u_short);
begin
TSockAddr(GetRecordPtr^).sin_family := val;
end;
function __TSockAddr__Wrapper.getsin_family : u_short;
begin
result := TSockAddr(GetRecordPtr^).sin_family;
end;
procedure __TSockAddr__Wrapper.setsin_port(const val : u_short);
begin
TSockAddr(GetRecordPtr^).sin_port := val;
end;
function __TSockAddr__Wrapper.getsin_port : u_short;
begin
result := TSockAddr(GetRecordPtr^).sin_port;
end;
procedure __TSockAddr__Wrapper.setsa_family(const val : u_short);
begin
TSockAddr(GetRecordPtr^).sa_family := val;
end;
function __TSockAddr__Wrapper.getsa_family : u_short;
begin
result := TSockAddr(GetRecordPtr^).sa_family;
end;
function ____net_getpeername__Wrapper(p0 : SYS_NETFD;
const p1 : IDispatch;
var p2 : Integer): Integer;
var
__p1 : ^TSockAddr;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := net_getpeername(p0,__p1^,p2);
end;

function ____net_bind__Wrapper(p0 : SYS_NETFD;
const p1 : IDispatch;
p2 : Integer): Integer;
var
__p1 : ^TSockAddr;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := net_bind(p0,__p1^,p2);
end;


type __cinfo__Wrapper__ = class(__cinfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __cinfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertcinfoToVariant(var R : cinfo) : OleVariant;
var
__rw : __cinfo__Wrapper__;
begin
__rw := __cinfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTocinfo(const V : OleVariant) : cinfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := cinfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __conf_global_vars_s__Wrapper__ = class(__conf_global_vars_s__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __conf_global_vars_s__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertconf_global_vars_sToVariant(var R : conf_global_vars_s) : OleVariant;
var
__rw : __conf_global_vars_s__Wrapper__;
begin
__rw := __conf_global_vars_s__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToconf_global_vars_s(const V : OleVariant) : conf_global_vars_s;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := conf_global_vars_s((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __daemon_s__Wrapper__ = class(__daemon_s__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __daemon_s__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertdaemon_sToVariant(var R : daemon_s) : OleVariant;
var
__rw : __daemon_s__Wrapper__;
begin
__rw := __daemon_s__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTodaemon_s(const V : OleVariant) : daemon_s;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := daemon_s((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __dir_s__Wrapper__ = class(__dir_s__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __dir_s__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertdir_sToVariant(var R : dir_s) : OleVariant;
var
__rw : __dir_s__Wrapper__;
begin
__rw := __dir_s__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTodir_s(const V : OleVariant) : dir_s;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := dir_s((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __directive__Wrapper__ = class(__directive__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __directive__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertdirectiveToVariant(var R : directive) : OleVariant;
var
__rw : __directive__Wrapper__;
begin
__rw := __directive__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTodirective(const V : OleVariant) : directive;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := directive((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __dirent_s__Wrapper__ = class(__dirent_s__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __dirent_s__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertdirent_sToVariant(var R : dirent_s) : OleVariant;
var
__rw : __dirent_s__Wrapper__;
begin
__rw := __dirent_s__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTodirent_s(const V : OleVariant) : dirent_s;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := dirent_s((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __dtable__Wrapper__ = class(__dtable__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __dtable__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertdtableToVariant(var R : dtable) : OleVariant;
var
__rw : __dtable__Wrapper__;
begin
__rw := __dtable__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTodtable(const V : OleVariant) : dtable;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := dtable((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __file_s__Wrapper__ = class(__file_s__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __file_s__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertfile_sToVariant(var R : file_s) : OleVariant;
var
__rw : __file_s__Wrapper__;
begin
__rw := __file_s__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTofile_s(const V : OleVariant) : file_s;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := file_s((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __filebuf__Wrapper__ = class(__filebuf__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __filebuf__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertfilebufToVariant(var R : filebuf) : OleVariant;
var
__rw : __filebuf__Wrapper__;
begin
__rw := __filebuf__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTofilebuf(const V : OleVariant) : filebuf;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := filebuf((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __filebuffer__Wrapper__ = class(__filebuffer__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __filebuffer__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertfilebufferToVariant(var R : filebuffer) : OleVariant;
var
__rw : __filebuffer__Wrapper__;
begin
__rw := __filebuffer__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTofilebuffer(const V : OleVariant) : filebuffer;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := filebuffer((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __httpd_object__Wrapper__ = class(__httpd_object__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __httpd_object__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Converthttpd_objectToVariant(var R : httpd_object) : OleVariant;
var
__rw : __httpd_object__Wrapper__;
begin
__rw := __httpd_object__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTohttpd_object(const V : OleVariant) : httpd_object;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := httpd_object((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __httpd_objset__Wrapper__ = class(__httpd_objset__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __httpd_objset__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Converthttpd_objsetToVariant(var R : httpd_objset) : OleVariant;
var
__rw : __httpd_objset__Wrapper__;
begin
__rw := __httpd_objset__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTohttpd_objset(const V : OleVariant) : httpd_objset;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := httpd_objset((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __multiple_domains__Wrapper__ = class(__multiple_domains__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __multiple_domains__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertmultiple_domainsToVariant(var R : multiple_domains) : OleVariant;
var
__rw : __multiple_domains__Wrapper__;
begin
__rw := __multiple_domains__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTomultiple_domains(const V : OleVariant) : multiple_domains;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := multiple_domains((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __netbuf__Wrapper__ = class(__netbuf__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __netbuf__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertnetbufToVariant(var R : netbuf) : OleVariant;
var
__rw : __netbuf__Wrapper__;
begin
__rw := __netbuf__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTonetbuf(const V : OleVariant) : netbuf;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := netbuf((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __pb_entry__Wrapper__ = class(__pb_entry__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __pb_entry__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertpb_entryToVariant(var R : pb_entry) : OleVariant;
var
__rw : __pb_entry__Wrapper__;
begin
__rw := __pb_entry__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTopb_entry(const V : OleVariant) : pb_entry;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := pb_entry((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __pb_param__Wrapper__ = class(__pb_param__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __pb_param__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertpb_paramToVariant(var R : pb_param) : OleVariant;
var
__rw : __pb_param__Wrapper__;
begin
__rw := __pb_param__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTopb_param(const V : OleVariant) : pb_param;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := pb_param((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __pblock__Wrapper__ = class(__pblock__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __pblock__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertpblockToVariant(var R : pblock) : OleVariant;
var
__rw : __pblock__Wrapper__;
begin
__rw := __pblock__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTopblock(const V : OleVariant) : pblock;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := pblock((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __Request__Wrapper__ = class(__Request__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __Request__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertRequestToVariant(var R : Request) : OleVariant;
var
__rw : __Request__Wrapper__;
begin
__rw := __Request__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToRequest(const V : OleVariant) : Request;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := Request((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __Session__Wrapper__ = class(__Session__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __Session__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSessionToVariant(var R : Session) : OleVariant;
var
__rw : __Session__Wrapper__;
begin
__rw := __Session__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSession(const V : OleVariant) : Session;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := Session((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __shmem_s__Wrapper__ = class(__shmem_s__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __shmem_s__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertshmem_sToVariant(var R : shmem_s) : OleVariant;
var
__rw : __shmem_s__Wrapper__;
begin
__rw := __shmem_s__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToshmem_s(const V : OleVariant) : shmem_s;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := shmem_s((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __Stat__Wrapper__ = class(__Stat__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __Stat__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertStatToVariant(var R : Stat) : OleVariant;
var
__rw : __Stat__Wrapper__;
begin
__rw := __Stat__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToStat(const V : OleVariant) : Stat;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := Stat((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SYS_DIRENT__Wrapper__ = class(__SYS_DIRENT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SYS_DIRENT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSYS_DIRENTToVariant(var R : SYS_DIRENT) : OleVariant;
var
__rw : __SYS_DIRENT__Wrapper__;
begin
__rw := __SYS_DIRENT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSYS_DIRENT(const V : OleVariant) : SYS_DIRENT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SYS_DIRENT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCInfo__Wrapper__ = class(__TCInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCInfoToVariant(var R : TCInfo) : OleVariant;
var
__rw : __TCInfo__Wrapper__;
begin
__rw := __TCInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCInfo(const V : OleVariant) : TCInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TConfGlobalVars__Wrapper__ = class(__TConfGlobalVars__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TConfGlobalVars__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTConfGlobalVarsToVariant(var R : TConfGlobalVars) : OleVariant;
var
__rw : __TConfGlobalVars__Wrapper__;
begin
__rw := __TConfGlobalVars__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTConfGlobalVars(const V : OleVariant) : TConfGlobalVars;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TConfGlobalVars((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDaemon__Wrapper__ = class(__TDaemon__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDaemon__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDaemonToVariant(var R : TDaemon) : OleVariant;
var
__rw : __TDaemon__Wrapper__;
begin
__rw := __TDaemon__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDaemon(const V : OleVariant) : TDaemon;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDaemon((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDir__Wrapper__ = class(__TDir__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDir__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDirToVariant(var R : TDir) : OleVariant;
var
__rw : __TDir__Wrapper__;
begin
__rw := __TDir__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDir(const V : OleVariant) : TDir;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDir((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDirective__Wrapper__ = class(__TDirective__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDirective__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDirectiveToVariant(var R : TDirective) : OleVariant;
var
__rw : __TDirective__Wrapper__;
begin
__rw := __TDirective__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDirective(const V : OleVariant) : TDirective;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDirective((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDirEnt__Wrapper__ = class(__TDirEnt__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDirEnt__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDirEntToVariant(var R : TDirEnt) : OleVariant;
var
__rw : __TDirEnt__Wrapper__;
begin
__rw := __TDirEnt__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDirEnt(const V : OleVariant) : TDirEnt;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDirEnt((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDtable__Wrapper__ = class(__TDtable__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDtable__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDtableToVariant(var R : TDtable) : OleVariant;
var
__rw : __TDtable__Wrapper__;
begin
__rw := __TDtable__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDtable(const V : OleVariant) : TDtable;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDtable((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFile__Wrapper__ = class(__TFile__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFile__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFileToVariant(var R : TFile) : OleVariant;
var
__rw : __TFile__Wrapper__;
begin
__rw := __TFile__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFile(const V : OleVariant) : TFile;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFile((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFileBuffer__Wrapper__ = class(__TFileBuffer__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFileBuffer__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFileBufferToVariant(var R : TFileBuffer) : OleVariant;
var
__rw : __TFileBuffer__Wrapper__;
begin
__rw := __TFileBuffer__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFileBuffer(const V : OleVariant) : TFileBuffer;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFileBuffer((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFuncStruct__Wrapper__ = class(__TFuncStruct__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFuncStruct__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFuncStructToVariant(var R : TFuncStruct) : OleVariant;
var
__rw : __TFuncStruct__Wrapper__;
begin
__rw := __TFuncStruct__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFuncStruct(const V : OleVariant) : TFuncStruct;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFuncStruct((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __THttpdObject__Wrapper__ = class(__THttpdObject__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __THttpdObject__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTHttpdObjectToVariant(var R : THttpdObject) : OleVariant;
var
__rw : __THttpdObject__Wrapper__;
begin
__rw := __THttpdObject__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTHttpdObject(const V : OleVariant) : THttpdObject;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := THttpdObject((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __THttpdObjSet__Wrapper__ = class(__THttpdObjSet__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __THttpdObjSet__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTHttpdObjSetToVariant(var R : THttpdObjSet) : OleVariant;
var
__rw : __THttpdObjSet__Wrapper__;
begin
__rw := __THttpdObjSet__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTHttpdObjSet(const V : OleVariant) : THttpdObjSet;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := THttpdObjSet((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tm__Wrapper__ = class(__tm__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tm__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttmToVariant(var R : tm) : OleVariant;
var
__rw : __tm__Wrapper__;
begin
__rw := __tm__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotm(const V : OleVariant) : tm;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tm((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TMultipleDomains__Wrapper__ = class(__TMultipleDomains__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TMultipleDomains__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTMultipleDomainsToVariant(var R : TMultipleDomains) : OleVariant;
var
__rw : __TMultipleDomains__Wrapper__;
begin
__rw := __TMultipleDomains__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTMultipleDomains(const V : OleVariant) : TMultipleDomains;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TMultipleDomains((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TNetBuf__Wrapper__ = class(__TNetBuf__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TNetBuf__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTNetBufToVariant(var R : TNetBuf) : OleVariant;
var
__rw : __TNetBuf__Wrapper__;
begin
__rw := __TNetBuf__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTNetBuf(const V : OleVariant) : TNetBuf;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TNetBuf((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPbEntry__Wrapper__ = class(__TPbEntry__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPbEntry__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPbEntryToVariant(var R : TPbEntry) : OleVariant;
var
__rw : __TPbEntry__Wrapper__;
begin
__rw := __TPbEntry__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPbEntry(const V : OleVariant) : TPbEntry;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPbEntry((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPblock__Wrapper__ = class(__TPblock__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPblock__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPblockToVariant(var R : TPblock) : OleVariant;
var
__rw : __TPblock__Wrapper__;
begin
__rw := __TPblock__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPblock(const V : OleVariant) : TPblock;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPblock((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPbParam__Wrapper__ = class(__TPbParam__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPbParam__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPbParamToVariant(var R : TPbParam) : OleVariant;
var
__rw : __TPbParam__Wrapper__;
begin
__rw := __TPbParam__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPbParam(const V : OleVariant) : TPbParam;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPbParam((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TRequest__Wrapper__ = class(__TRequest__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRequest__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRequestToVariant(var R : TRequest) : OleVariant;
var
__rw : __TRequest__Wrapper__;
begin
__rw := __TRequest__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRequest(const V : OleVariant) : TRequest;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRequest((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSession__Wrapper__ = class(__TSession__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSession__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSessionToVariant(var R : TSession) : OleVariant;
var
__rw : __TSession__Wrapper__;
begin
__rw := __TSession__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSession(const V : OleVariant) : TSession;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSession((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TShMem__Wrapper__ = class(__TShMem__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TShMem__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTShMemToVariant(var R : TShMem) : OleVariant;
var
__rw : __TShMem__Wrapper__;
begin
__rw := __TShMem__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTShMem(const V : OleVariant) : TShMem;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TShMem((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSockAddr__Wrapper__ = class(__TSockAddr__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSockAddr__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSockAddrToVariant(var R : TSockAddr) : OleVariant;
var
__rw : __TSockAddr__Wrapper__;
begin
__rw := __TSockAddr__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSockAddr(const V : OleVariant) : TSockAddr;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSockAddr((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TStat__Wrapper__ = class(__TStat__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TStat__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTStatToVariant(var R : TStat) : OleVariant;
var
__rw : __TStat__Wrapper__;
begin
__rw := __TStat__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTStat(const V : OleVariant) : TStat;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TStat((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..111] of string = (
'PROXY_VERSION_DEF'
,'PROXY_VERSION_STRING'
,'ADMSERV_VERSION_DEF'
,'ADMSERV_VERSION_STRING'
,'PERSONAL_VERSION_DEF'
,'PERSONAL_VERSION_STRING'
,'CATALOG_VERSION_DEF'
,'CATALOG_VERSION_STRING'
,'RDS_VERSION_DEF'
,'RDS_VERSION_STRING'
,'ENTERPRISE_VERSION_DEF'
,'ENTERPRISE_VERSION_STRING'
,'NEWS_VERSION_STRING'
,'BATMAN_VERSION_DEF'
,'BATMAN_VERSION_STRING'
,'DAEMON_LISTEN_SIZE'
,'MAGNUS_ERROR_LEN'
,'CR'
,'LF'
,'ENDLINE'
,'ENTERPRISE_VERSION'
,'PERSONAL_VERSION'
,'CATALOG_VERSION'
,'RDS_VERSION'
,'SEM_ERROR'
,'SEM_MAXVALUE'
,'IO_OKAY'
,'IO_ERROR'
,'IO_EOF'
,'FILE_BUFFERSIZE'
,'SYS_ERROR_FD'
,'SYS_STDERR'
,'ERROR_PIPE'
,'FILE_PATHSEP'
,'FILE_PARENT'
,'NET_BUFFERSIZE'
,'NET_READ_TIMEOUT'
,'NET_WRITE_TIMEOUT'
,'NET_INFINITE_TIMEOUT'
,'NET_ZERO_TIMEOUT'
,'SSL_HANDSHAKE_TIMEOUT'
,'SYS_NET_ERRORFD'
,'SESSION_HASHSIZE'
,'MCC_MT_MAGIC'
,'MCC_MT_MAGIC_LEN'
,'NCC_MT_MAGIC'
,'NCC_MT_MAGIC_LEN'
,'CINFO_SEPARATOR'
,'CINFO_MAX_LEN'
,'CINFO_HASHSIZE'
,'MAX_ERROR_LEN'
,'LOG_WARN'
,'LOG_MISCONFIG'
,'LOG_SECURITY'
,'LOG_FAILURE'
,'LOG_CATASTROPHE'
,'LOG_INFORM'
,'ERR_TIMEFMT'
,'ERRORS_TO_SYSLOG'
,'NON_SXP'
,'INVALID_SXP'
,'VALID_SXP'
,'NON_WILDPAT'
,'VALID_WILDPAT'
,'NON_REGEXP'
,'VALID_REGEXP'
,'SYS_THREAD_ERROR'
,'SYSTHREAD_DEFAULT_PRIORITY'
,'CHILD_EMPTY_SLOT'
,'CHILD_AWAIT_CONNECT'
,'CHILD_PROCESSING'
,'CHILD_READING'
,'CHILD_WRITING'
,'CHILD_RESOLVING'
,'CHILD_DONE_PROCESSING'
,'CHILD_DONE_READING'
,'CHILD_DONE_WRITING'
,'CHILD_DONE_RESOLVING'
,'MAX_IP_DOMAINS'
,'OBJSET_INCSIZE'
,'MAX_DIRECTIVE_LEN'
,'PARAMETER_HASH_SIZE'
,'CONF_MAXLEN'
,'DEFAULT_PORT'
,'DEFAULT_POOL_MAX'
,'REQ_HASHSIZE'
,'REQ_MAX_LINE'
,'REQ_PROCEED'
,'REQ_ABORTED'
,'REQ_NOACTION'
,'REQ_EXIT'
,'REQ_RESTART'
,'HTTP_DATE_LEN'
,'HTTP_DATE_FMT'
,'HTTP_DEFAULT_KEEPALIVE_TIMEOUT'
,'HTTP_MAX_HEADERS'
,'PROTOCOL_OK'
,'PROTOCOL_CREATED'
,'PROTOCOL_NO_RESPONSE'
,'PROTOCOL_PARTIAL_CONTENT'
,'PROTOCOL_REDIRECT'
,'PROTOCOL_NOT_MODIFIED'
,'PROTOCOL_BAD_REQUEST'
,'PROTOCOL_UNAUTHORIZED'
,'PROTOCOL_FORBIDDEN'
,'PROTOCOL_NOT_FOUND'
,'PROTOCOL_PROXY_UNAUTHORIZED'
,'PROTOCOL_SERVER_ERROR'
,'PROTOCOL_NOT_IMPLEMENTED'
,'HTTP_PORT'
,'HTTP_URL'
,'NUM_HASH'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,PROXY_VERSION_DEF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,PROXY_VERSION_STRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,ADMSERV_VERSION_DEF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,ADMSERV_VERSION_STRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,PERSONAL_VERSION_DEF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,PERSONAL_VERSION_STRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,CATALOG_VERSION_DEF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,CATALOG_VERSION_STRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,RDS_VERSION_DEF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,RDS_VERSION_STRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,ENTERPRISE_VERSION_DEF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,ENTERPRISE_VERSION_STRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,NEWS_VERSION_STRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,BATMAN_VERSION_DEF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,BATMAN_VERSION_STRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,DAEMON_LISTEN_SIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,MAGNUS_ERROR_LEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,CR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,LF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,ENDLINE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,ENTERPRISE_VERSION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,PERSONAL_VERSION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,CATALOG_VERSION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,RDS_VERSION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,SEM_ERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,SEM_MAXVALUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,IO_OKAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,IO_ERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,IO_EOF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,FILE_BUFFERSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,Integer(SYS_ERROR_FD)));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,Integer(SYS_STDERR)));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,ERROR_PIPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,FILE_PATHSEP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,FILE_PARENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,NET_BUFFERSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,NET_READ_TIMEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,NET_WRITE_TIMEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,NET_INFINITE_TIMEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,NET_ZERO_TIMEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,SSL_HANDSHAKE_TIMEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,SYS_NET_ERRORFD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,SESSION_HASHSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,MCC_MT_MAGIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,MCC_MT_MAGIC_LEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,NCC_MT_MAGIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,NCC_MT_MAGIC_LEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,CINFO_SEPARATOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,CINFO_MAX_LEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,CINFO_HASHSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,MAX_ERROR_LEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,LOG_WARN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,LOG_MISCONFIG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,LOG_SECURITY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,LOG_FAILURE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,LOG_CATASTROPHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,LOG_INFORM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,ERR_TIMEFMT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,ERRORS_TO_SYSLOG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,NON_SXP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,INVALID_SXP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,VALID_SXP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,NON_WILDPAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,VALID_WILDPAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,NON_REGEXP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,VALID_REGEXP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,Integer(SYS_THREAD_ERROR)));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,SYSTHREAD_DEFAULT_PRIORITY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,CHILD_EMPTY_SLOT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,CHILD_AWAIT_CONNECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,CHILD_PROCESSING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,CHILD_READING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,CHILD_WRITING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,CHILD_RESOLVING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,CHILD_DONE_PROCESSING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,CHILD_DONE_READING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,CHILD_DONE_WRITING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,CHILD_DONE_RESOLVING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,MAX_IP_DOMAINS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,OBJSET_INCSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,MAX_DIRECTIVE_LEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,PARAMETER_HASH_SIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,CONF_MAXLEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,DEFAULT_PORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,DEFAULT_POOL_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,REQ_HASHSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,REQ_MAX_LINE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,REQ_PROCEED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,REQ_ABORTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,REQ_NOACTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,REQ_EXIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,REQ_RESTART));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,HTTP_DATE_LEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,HTTP_DATE_FMT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,HTTP_DEFAULT_KEEPALIVE_TIMEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,HTTP_MAX_HEADERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,PROTOCOL_OK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,PROTOCOL_CREATED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,PROTOCOL_NO_RESPONSE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,PROTOCOL_PARTIAL_CONTENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,PROTOCOL_REDIRECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,PROTOCOL_NOT_MODIFIED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,PROTOCOL_BAD_REQUEST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,PROTOCOL_UNAUTHORIZED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,PROTOCOL_FORBIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[105] ,PROTOCOL_NOT_FOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[106] ,PROTOCOL_PROXY_UNAUTHORIZED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[107] ,PROTOCOL_SERVER_ERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[108] ,PROTOCOL_NOT_IMPLEMENTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[109] ,HTTP_PORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[110] ,HTTP_URL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[111] ,NUM_HASH));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..130] of string = (
'cinfo'
,'conf_global_vars_s'
,'daemon_s'
,'dir_s'
,'directive'
,'dirent_s'
,'dtable'
,'file_s'
,'filebuf'
,'filebuffer'
,'httpd_object'
,'httpd_objset'
,'multiple_domains'
,'netbuf'
,'pb_entry'
,'pb_param'
,'pblock'
,'Request'
,'Session'
,'shmem_s'
,'Stat'
,'SYS_DIRENT'
,'TCInfo'
,'TConfGlobalVars'
,'TDaemon'
,'TDir'
,'TDirective'
,'TDirEnt'
,'TDtable'
,'TFile'
,'TFileBuffer'
,'TFuncStruct'
,'THttpdObject'
,'THttpdObjSet'
,'tm'
,'TMultipleDomains'
,'TNetBuf'
,'TPbEntry'
,'TPblock'
,'TPbParam'
,'TRequest'
,'TSession'
,'TShMem'
,'TStat'
,'system_version'
,'MAGNUS_VERSION_STRING'
,'server_fasttrack'
,'server_enterprise'
,'MALLOC'
,'system_malloc'
,'CALLOC'
,'system_calloc'
,'REALLOC'
,'system_realloc'
,'FREE'
,'system_free'
,'PERM_MALLOC'
,'system_malloc_perm'
,'PERM_CALLOC'
,'system_calloc_perm'
,'PERM_REALLOC'
,'system_realloc_perm'
,'PERM_FREE'
,'system_free_perm'
,'pool_create'
,'pool_destroy'
,'pool_enabled'
,'pool_malloc'
,'pool_free'
,'pool_calloc'
,'pool_realloc'
,'sem_terminate'
,'sem_grab'
,'sem_tgrab'
,'sem_release'
,'crit_init'
,'crit_enter'
,'crit_exit'
,'crit_terminate'
,'condvar_init'
,'condvar_wait'
,'condvar_notify'
,'condvar_terminate'
,'system_nocoredumps'
,'system_winsockerr'
,'system_winerr'
,'file_notfound'
,'system_errmsg'
,'system_errmsg_fn'
,'net_socket'
,'net_getsockopt'
,'net_setsockopt'
,'net_listen'
,'net_connect'
,'net_ioctl'
,'net_getpeername'
,'net_close'
,'net_bind'
,'net_isalive'
,'cinfo_init'
,'cinfo_terminate'
,'ereport_terminate'
,'systhread_current'
,'systhread_yield'
,'systhread_attach'
,'systhread_terminate'
,'systhread_sleep'
,'systhread_timerset'
,'systhread_newkey'
,'systhread_getdata'
,'systhread_setdata'
,'_ntdaemon_run'
,'child_fork'
,'util_hostname'
,'GetProductKey'
,'userpw'
,'pool_max'
,'pool_min'
,'pool_life'
,'pool_maxthreads'
,'pool_minthreads'
,'server_hostname'
,'root_object'
,'acl_root'
,'master_error_log'
,'server_root'
,'server_id'
,'conf_terminate'
,'protocol_set_keepalive_timeout'
,'http_set_keepalive_timeout'
,'func_init'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_cinfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_conf_global_vars_s_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(_daemon_s_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[3],Addr(_dir_s_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[4],Addr(_directive_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[5],Addr(_dirent_s_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[6],Addr(_dtable_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[7],Addr(_file_s_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[8],Addr(_filebuf_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[9],Addr(_filebuffer_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[10],Addr(_httpd_object_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[11],Addr(_httpd_objset_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[12],Addr(_multiple_domains_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[13],Addr(_netbuf_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[14],Addr(_pb_entry_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[15],Addr(_pb_param_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[16],Addr(_pblock_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[17],Addr(_Request_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[18],Addr(_Session_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[19],Addr(_shmem_s_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[20],Addr(_Stat_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[21],Addr(_SYS_DIRENT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[22],Addr(_TCInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[23],Addr(_TConfGlobalVars_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[24],Addr(_TDaemon_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[25],Addr(_TDir_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[26],Addr(_TDirective_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[27],Addr(_TDirEnt_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[28],Addr(_TDtable_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[29],Addr(_TFile_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[30],Addr(_TFileBuffer_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[31],Addr(_TFuncStruct_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[32],Addr(_THttpdObject_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[33],Addr(_THttpdObjSet_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[34],Addr(_tm_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[35],Addr(_TMultipleDomains_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[36],Addr(_TNetBuf_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[37],Addr(_TPbEntry_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[38],Addr(_TPblock_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[39],Addr(_TPbParam_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[40],Addr(_TRequest_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[41],Addr(_TSession_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[42],Addr(_TShMem_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[43],Addr(_TStat_)));
RegisterProc(nil,MethodNames[44],mtProc,TypeInfo(_T4),[TypeInfoPChar],Addr(system_version),cCdecl);

RegisterProc(nil,MethodNames[45],mtProc,TypeInfo(_T5),[TypeInfoPChar],Addr(MAGNUS_VERSION_STRING),cCdecl);

RegisterProc(nil,MethodNames[46],mtProc,TypeInfo(_T6),[TypeInfo(Boolean)],Addr(server_fasttrack),cRegister);

RegisterProc(nil,MethodNames[47],mtProc,TypeInfo(_T7),[TypeInfo(Boolean)],Addr(server_enterprise),cRegister);

RegisterProc(nil,MethodNames[48],mtProc,TypeInfo(_T9),[
TypeInfo(Integer),TypeInfoPointer],Addr(MALLOC),cCdecl);

RegisterProc(nil,MethodNames[49],mtProc,TypeInfo(_T10),[
TypeInfo(Integer),TypeInfoPointer],Addr(system_malloc),cCdecl);

RegisterProc(nil,MethodNames[50],mtProc,TypeInfo(_T11),[
TypeInfo(Integer),TypeInfoPointer],Addr(CALLOC),cCdecl);

RegisterProc(nil,MethodNames[51],mtProc,TypeInfo(_T12),[
TypeInfo(Integer),TypeInfoPointer],Addr(system_calloc),cCdecl);

RegisterProc(nil,MethodNames[52],mtProc,TypeInfo(_T13),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(REALLOC),cCdecl);

RegisterProc(nil,MethodNames[53],mtProc,TypeInfo(_T14),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(system_realloc),cCdecl);

RegisterProc(nil,MethodNames[54],mtProc,TypeInfo(_T15),[
TypeInfoPointer],Addr(FREE),cCdecl);

RegisterProc(nil,MethodNames[55],mtProc,TypeInfo(_T16),[
TypeInfoPointer],Addr(system_free),cCdecl);

RegisterProc(nil,MethodNames[56],mtProc,TypeInfo(_T19),[
TypeInfo(Integer),TypeInfoPointer],Addr(PERM_MALLOC),cCdecl);

RegisterProc(nil,MethodNames[57],mtProc,TypeInfo(_T20),[
TypeInfo(Integer),TypeInfoPointer],Addr(system_malloc_perm),cCdecl);

RegisterProc(nil,MethodNames[58],mtProc,TypeInfo(_T21),[
TypeInfo(Integer),TypeInfoPointer],Addr(PERM_CALLOC),cCdecl);

RegisterProc(nil,MethodNames[59],mtProc,TypeInfo(_T22),[
TypeInfo(Integer),TypeInfoPointer],Addr(system_calloc_perm),cCdecl);

RegisterProc(nil,MethodNames[60],mtProc,TypeInfo(_T23),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(PERM_REALLOC),cCdecl);

RegisterProc(nil,MethodNames[61],mtProc,TypeInfo(_T24),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(system_realloc_perm),cCdecl);

RegisterProc(nil,MethodNames[62],mtProc,TypeInfo(_T25),[
TypeInfoPointer],Addr(PERM_FREE),cCdecl);

RegisterProc(nil,MethodNames[63],mtProc,TypeInfo(_T26),[
TypeInfoPointer],Addr(system_free_perm),cCdecl);

RegisterProc(nil,MethodNames[64],mtProc,TypeInfo(_T30),[TypeInfoPointer],Addr(pool_create),cCdecl);

RegisterProc(nil,MethodNames[65],mtProc,TypeInfo(_T31),[
TypeInfoPointer],Addr(pool_destroy),cCdecl);

RegisterProc(nil,MethodNames[66],mtProc,TypeInfo(_T32),[TypeInfo(BOOL)],Addr(pool_enabled),cCdecl);

RegisterProc(nil,MethodNames[67],mtProc,TypeInfo(_T33),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(pool_malloc),cCdecl);

RegisterProc(nil,MethodNames[68],mtProc,TypeInfo(_T34),[
TypeInfoPointer,
TypeInfoPointer],Addr(pool_free),cCdecl);

RegisterProc(nil,MethodNames[69],mtProc,TypeInfo(_T35),[
TypeInfoPointer,
TypeInfo(Integer),
TypeInfo(Integer),TypeInfoPointer],Addr(pool_calloc),cCdecl);

RegisterProc(nil,MethodNames[70],mtProc,TypeInfo(_T36),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(pool_realloc),cCdecl);

RegisterProc(nil,MethodNames[71],mtProc,TypeInfo(_T39),[
TypeInfo(Semaphore)],Addr(sem_terminate),cCdecl);

RegisterProc(nil,MethodNames[72],mtProc,TypeInfo(_T40),[
TypeInfo(Semaphore),TypeInfo(Integer)],Addr(sem_grab),cCdecl);

RegisterProc(nil,MethodNames[73],mtProc,TypeInfo(_T41),[
TypeInfo(Semaphore),TypeInfo(Integer)],Addr(sem_tgrab),cCdecl);

RegisterProc(nil,MethodNames[74],mtProc,TypeInfo(_T42),[
TypeInfo(Semaphore),TypeInfo(Integer)],Addr(sem_release),cCdecl);

RegisterProc(nil,MethodNames[75],mtProc,TypeInfo(_T43),[TypeInfoPointer],Addr(crit_init),cCdecl);

RegisterProc(nil,MethodNames[76],mtProc,TypeInfo(_T44),[
TypeInfoPointer],Addr(crit_enter),cCdecl);

RegisterProc(nil,MethodNames[77],mtProc,TypeInfo(_T45),[
TypeInfoPointer],Addr(crit_exit),cCdecl);

RegisterProc(nil,MethodNames[78],mtProc,TypeInfo(_T46),[
TypeInfoPointer],Addr(crit_terminate),cCdecl);

RegisterProc(nil,MethodNames[79],mtProc,TypeInfo(_T47),[
TypeInfoPointer,TypeInfoPointer],Addr(condvar_init),cCdecl);

RegisterProc(nil,MethodNames[80],mtProc,TypeInfo(_T48),[
TypeInfoPointer],Addr(condvar_wait),cCdecl);

RegisterProc(nil,MethodNames[81],mtProc,TypeInfo(_T49),[
TypeInfoPointer],Addr(condvar_notify),cCdecl);

RegisterProc(nil,MethodNames[82],mtProc,TypeInfo(_T50),[
TypeInfoPointer],Addr(condvar_terminate),cCdecl);

RegisterProc(nil,MethodNames[83],mtProc,TypeInfo(_T64),[TypeInfo(Integer)],Addr(system_nocoredumps),cCdecl);

RegisterProc(nil,MethodNames[84],mtProc,TypeInfo(_T65),[TypeInfoPChar],Addr(system_winsockerr),cCdecl);

RegisterProc(nil,MethodNames[85],mtProc,TypeInfo(_T66),[TypeInfoPChar],Addr(system_winerr),cCdecl);

RegisterProc(nil,MethodNames[86],mtProc,TypeInfo(_T70),[TypeInfo(Integer)],Addr(file_notfound),cCdecl);

RegisterProc(nil,MethodNames[87],mtProc,TypeInfo(_T71),[TypeInfoPChar],Addr(system_errmsg),cCdecl);

RegisterProc(nil,MethodNames[88],mtProc,TypeInfo(_T72),[TypeInfoPChar],Addr(system_errmsg_fn),cCdecl);

RegisterProc(nil,MethodNames[89],mtProc,TypeInfo(_T100),[
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(SYS_NETFD)],Addr(net_socket),cCdecl);

RegisterProc(nil,MethodNames[90],mtProc,TypeInfo(_T101),[
TypeInfo(SYS_NETFD),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(net_getsockopt),cCdecl);

RegisterProc(nil,MethodNames[91],mtProc,TypeInfo(_T102),[
TypeInfo(SYS_NETFD),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(net_setsockopt),cCdecl);

RegisterProc(nil,MethodNames[92],mtProc,TypeInfo(_T103),[
TypeInfo(SYS_NETFD),
TypeInfo(Integer),TypeInfo(Integer)],Addr(net_listen),cCdecl);

RegisterProc(nil,MethodNames[93],mtProc,TypeInfo(_T106),[
TypeInfo(SYS_NETFD),
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(net_connect),cCdecl);

RegisterProc(nil,MethodNames[94],mtProc,TypeInfo(_T107),[
TypeInfo(SYS_NETFD),
TypeInfo(Integer),
TypeInfoPointer,TypeInfo(Integer)],Addr(net_ioctl),cCdecl);

RegisterProc(nil,MethodNames[95],mtProc,TypeInfo(_T108),[
TypeInfo(SYS_NETFD),
TypeInfo(IDispatch),
TypeInfo(Integer),TypeInfo(Integer)],Addr(____net_getpeername__Wrapper),cRegister);

RegisterProc(nil,MethodNames[96],mtProc,TypeInfo(_T109),[
TypeInfo(SYS_NETFD),TypeInfo(Integer)],Addr(net_close),cCdecl);

RegisterProc(nil,MethodNames[97],mtProc,TypeInfo(_T110),[
TypeInfo(SYS_NETFD),
TypeInfo(IDispatch),
TypeInfo(Integer),TypeInfo(Integer)],Addr(____net_bind__Wrapper),cRegister);

RegisterProc(nil,MethodNames[98],mtProc,TypeInfo(_T114),[
TypeInfo(SYS_NETFD),TypeInfo(BOOL)],Addr(net_isalive),cCdecl);

RegisterProc(nil,MethodNames[99],mtProc,TypeInfo(_T144),NoParams,Addr(cinfo_init),cCdecl);

RegisterProc(nil,MethodNames[100],mtProc,TypeInfo(_T145),NoParams,Addr(cinfo_terminate),cCdecl);

RegisterProc(nil,MethodNames[101],mtProc,TypeInfo(_T150),NoParams,Addr(ereport_terminate),cCdecl);

RegisterProc(nil,MethodNames[102],mtProc,TypeInfo(_T159),[TypeInfoPointer],Addr(systhread_current),cRegister);

RegisterProc(nil,MethodNames[103],mtProc,TypeInfo(_T160),NoParams,Addr(systhread_yield),cCdecl);

RegisterProc(nil,MethodNames[104],mtProc,TypeInfo(_T161),[TypeInfoPointer],Addr(systhread_attach),cCdecl);

RegisterProc(nil,MethodNames[105],mtProc,TypeInfo(_T162),[
TypeInfoPointer],Addr(systhread_terminate),cRegister);

RegisterProc(nil,MethodNames[106],mtProc,TypeInfo(_T163),[
TypeInfo(Integer)],Addr(systhread_sleep),cCdecl);

RegisterProc(nil,MethodNames[107],mtProc,TypeInfo(_T165),[
TypeInfo(Integer)],Addr(systhread_timerset),cCdecl);

RegisterProc(nil,MethodNames[108],mtProc,TypeInfo(_T166),[TypeInfo(Integer)],Addr(systhread_newkey),cCdecl);

RegisterProc(nil,MethodNames[109],mtProc,TypeInfo(_T167),[
TypeInfo(Integer),TypeInfoPointer],Addr(systhread_getdata),cCdecl);

RegisterProc(nil,MethodNames[110],mtProc,TypeInfo(_T168),[
TypeInfo(Integer),
TypeInfoPointer],Addr(systhread_setdata),cCdecl);

RegisterProc(nil,MethodNames[111],mtProc,TypeInfo(_T169),[
TypeInfoPointer],Addr(_ntdaemon_run),cCdecl);

RegisterProc(nil,MethodNames[112],mtProc,TypeInfo(_T171),[TypeInfo(pid_t)],Addr(child_fork),cRegister);

RegisterProc(nil,MethodNames[113],mtProc,TypeInfo(_T179),[TypeInfoPChar],Addr(util_hostname),cCdecl);

RegisterProc(nil,MethodNames[114],mtProc,TypeInfo(_T219),[TypeInfoPChar],Addr(GetProductKey),cCdecl);

RegisterProc(nil,MethodNames[115],mtProc,TypeInfo(_T220),[TypeInfoPointer],Addr(userpw),cRegister);

RegisterProc(nil,MethodNames[116],mtProc,TypeInfo(_T221),[TypeInfo(Integer)],Addr(pool_max),cRegister);

RegisterProc(nil,MethodNames[117],mtProc,TypeInfo(_T222),[TypeInfo(Integer)],Addr(pool_min),cRegister);

RegisterProc(nil,MethodNames[118],mtProc,TypeInfo(_T223),[TypeInfo(Integer)],Addr(pool_life),cRegister);

RegisterProc(nil,MethodNames[119],mtProc,TypeInfo(_T224),[TypeInfo(Integer)],Addr(pool_maxthreads),cRegister);

RegisterProc(nil,MethodNames[120],mtProc,TypeInfo(_T225),[TypeInfo(Integer)],Addr(pool_minthreads),cRegister);

RegisterProc(nil,MethodNames[121],mtProc,TypeInfo(_T226),[TypeInfoPChar],Addr(server_hostname),cRegister);

RegisterProc(nil,MethodNames[122],mtProc,TypeInfo(_T227),[TypeInfoPChar],Addr(root_object),cRegister);

RegisterProc(nil,MethodNames[123],mtProc,TypeInfo(_T229),[TypeInfoPointer],Addr(acl_root),cRegister);

RegisterProc(nil,MethodNames[124],mtProc,TypeInfo(_T230),[TypeInfoPChar],Addr(master_error_log),cRegister);

RegisterProc(nil,MethodNames[125],mtProc,TypeInfo(_T231),[TypeInfoPChar],Addr(server_root),cRegister);

RegisterProc(nil,MethodNames[126],mtProc,TypeInfo(_T232),[TypeInfoPChar],Addr(server_id),cRegister);

RegisterProc(nil,MethodNames[127],mtProc,TypeInfo(_T234),NoParams,Addr(conf_terminate),cCdecl);

RegisterProc(nil,MethodNames[128],mtProc,TypeInfo(_T268),[
TypeInfo(Integer)],Addr(protocol_set_keepalive_timeout),cCdecl);

RegisterProc(nil,MethodNames[129],mtProc,TypeInfo(_T269),[
TypeInfo(Integer)],Addr(http_set_keepalive_timeout),cCdecl);

RegisterProc(nil,MethodNames[130],mtProc,TypeInfo(_T270),NoParams,Addr(func_init),cCdecl);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'strcasecmp',mtProc,TypeInfo(_T0),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Integer)],Addr(strcasecmp),cCdecl)}

{RegisterProc(nil,'strncasecmp',mtProc,TypeInfo(_T1),[
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(Integer)],Addr(strncasecmp),cCdecl)}

{RegisterProc(nil,'util_strcasecmp',mtProc,TypeInfo(_T2),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Integer)],Addr(util_strcasecmp),cCdecl)}

{RegisterProc(nil,'util_strncasecmp',mtProc,TypeInfo(_T3),[
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(Integer)],Addr(util_strncasecmp),cCdecl)}

{RegisterProc(nil,'system_version_set',mtProc,TypeInfo(_T8),[
TypeInfoPChar],Addr(system_version_set),cCdecl)}

{RegisterProc(nil,'STRDUP',mtProc,TypeInfo(_T17),[
TypeInfoPChar,TypeInfoPChar],Addr(STRDUP),cCdecl)}

{RegisterProc(nil,'system_strdup',mtProc,TypeInfo(_T18),[
TypeInfoPChar,TypeInfoPChar],Addr(system_strdup),cCdecl)}

{RegisterProc(nil,'PERM_STRDUP',mtProc,TypeInfo(_T27),[
TypeInfoPChar,TypeInfoPChar],Addr(PERM_STRDUP),cCdecl)}

{RegisterProc(nil,'system_strdup_perm',mtProc,TypeInfo(_T28),[
TypeInfoPChar,TypeInfoPChar],Addr(system_strdup_perm),cCdecl)}

{RegisterProc(nil,'magnus_atrestart',mtProc,TypeInfo(_T29),[
TypeInfo(TMagnusAtRestart),
TypeInfoPointer],Addr(magnus_atrestart),cCdecl)}

{RegisterProc(nil,'pool_strdup',mtProc,TypeInfo(_T37),[
TypeInfoPointer,
TypeInfoPChar,TypeInfoPChar],Addr(pool_strdup),cCdecl)}

{RegisterProc(nil,'sem_init',mtProc,TypeInfo(_T38),[
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(Semaphore)],Addr(sem_init),cCdecl)}

{RegisterProc(nil,'CONVERT_TO_PRINTABLE_FORMAT',mtProc,TypeInfo(_T51),[
TypeInfoPChar],Addr(CONVERT_TO_PRINTABLE_FORMAT),cRegister)}

{RegisterProc(nil,'CONVERT_TO_NATIVE_FS',mtProc,TypeInfo(_T52),[
TypeInfoPChar],Addr(CONVERT_TO_NATIVE_FS),cRegister)}

{RegisterProc(nil,'system_chdir',mtProc,TypeInfo(_T53),[
TypeInfoPChar,TypeInfo(BOOL)],Addr(system_chdir),cStdCall)}

{RegisterProc(nil,'system_rename',mtProc,TypeInfo(_T55),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(BOOL)],Addr(system_rename),cRegister)}

{RegisterProc(nil,'system_unlink',mtProc,TypeInfo(_T56),[
TypeInfoPChar,TypeInfo(BOOL)],Addr(system_unlink),cRegister)}

{RegisterProc(nil,'system_fread',mtProc,TypeInfo(_T57),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(system_fread),cCdecl)}

{RegisterProc(nil,'system_pread',mtProc,TypeInfo(_T58),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(system_pread),cCdecl)}

{RegisterProc(nil,'system_fopenRO',mtProc,TypeInfo(_T59),[
TypeInfoPChar,TypeInfoPointer],Addr(system_fopenRO),cCdecl)}

{RegisterProc(nil,'system_fopenWA',mtProc,TypeInfo(_T60),[
TypeInfoPChar,TypeInfoPointer],Addr(system_fopenWA),cCdecl)}

{RegisterProc(nil,'system_fopenRW',mtProc,TypeInfo(_T61),[
TypeInfoPChar,TypeInfoPointer],Addr(system_fopenRW),cCdecl)}

{RegisterProc(nil,'system_fopenWT',mtProc,TypeInfo(_T62),[
TypeInfoPChar,TypeInfoPointer],Addr(system_fopenWT),cCdecl)}

{RegisterProc(nil,'system_fclose',mtProc,TypeInfo(_T63),[
TypeInfoPointer],Addr(system_fclose),cCdecl)}

{RegisterProc(nil,'system_lseek',mtProc,TypeInfo(_T67),[
TypeInfoPointer,
TypeInfo(Longint),
TypeInfo(Longint),TypeInfo(Longint)],Addr(system_lseek),cRegister)}

{RegisterProc(nil,'system_fwrite',mtProc,TypeInfo(_T68),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(system_fwrite),cCdecl)}

{RegisterProc(nil,'system_fwrite_atomic',mtProc,TypeInfo(_T69),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(system_fwrite_atomic),cCdecl)}

{RegisterProc(nil,'system_initlock',mtProc,TypeInfo(_T73),[
TypeInfoPointer,TypeInfo(Integer)],Addr(system_initlock),cCdecl)}

{RegisterProc(nil,'system_flock',mtProc,TypeInfo(_T74),[
TypeInfoPointer,TypeInfo(Integer)],Addr(system_flock),cRegister)}

{RegisterProc(nil,'system_ulock',mtProc,TypeInfo(_T75),[
TypeInfoPointer,TypeInfo(Integer)],Addr(system_ulock),cRegister)}

{RegisterProc(nil,'file_setinherit',mtProc,TypeInfo(_T76),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(file_setinherit),cCdecl)}

{RegisterProc(nil,'file_unix2local',mtProc,TypeInfo(_T77),[
TypeInfoPChar,
TypeInfoPChar],Addr(file_unix2local),cCdecl)}

{RegisterProc(nil,'dir_open',mtProc,TypeInfo(_T78),[
TypeInfoPChar,TypeInfoPointer],Addr(dir_open),cCdecl)}

{RegisterProc(nil,'dir_read',mtProc,TypeInfo(_T79),[
TypeInfoPointer,TypeInfoPointer],Addr(dir_read),cCdecl)}

{RegisterProc(nil,'dir_close',mtProc,TypeInfo(_T80),[
TypeInfoPointer],Addr(dir_close),cCdecl)}

{RegisterProc(nil,'dir_create',mtProc,TypeInfo(_T81),[
TypeInfoPChar,TypeInfo(Integer)],Addr(dir_create),cRegister)}

{RegisterProc(nil,'dir_remove',mtProc,TypeInfo(_T82),[
TypeInfoPChar,TypeInfo(Integer)],Addr(dir_remove),cRegister)}

{RegisterProc(nil,'dir_create_all',mtProc,TypeInfo(_T83),[
TypeInfoPChar,TypeInfo(Integer)],Addr(dir_create_all),cCdecl)}

{RegisterProc(nil,'param_create',mtProc,TypeInfo(_T84),[
TypeInfoPChar,
TypeInfoPChar,TypeInfoPointer],Addr(param_create),cCdecl)}

{RegisterProc(nil,'param_free',mtProc,TypeInfo(_T85),[
TypeInfoPointer,TypeInfo(Integer)],Addr(param_free),cCdecl)}

{RegisterProc(nil,'pblock_create',mtProc,TypeInfo(_T86),[
TypeInfo(Integer),TypeInfoPointer],Addr(pblock_create),cCdecl)}

{RegisterProc(nil,'pblock_free',mtProc,TypeInfo(_T87),[
TypeInfoPointer],Addr(pblock_free),cCdecl)}

{RegisterProc(nil,'pblock_find',mtProc,TypeInfo(_T88),[
TypeInfoPChar,
TypeInfoPointer,TypeInfoPointer],Addr(pblock_find),cRegister)}

{RegisterProc(nil,'pblock_findval',mtProc,TypeInfo(_T89),[
TypeInfoPChar,
TypeInfoPointer,TypeInfoPChar],Addr(pblock_findval),cCdecl)}

{RegisterProc(nil,'pblock_remove',mtProc,TypeInfo(_T90),[
TypeInfoPChar,
TypeInfoPointer,TypeInfoPointer],Addr(pblock_remove),cRegister)}

{RegisterProc(nil,'pblock_nvinsert',mtProc,TypeInfo(_T91),[
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPointer,TypeInfoPointer],Addr(pblock_nvinsert),cCdecl)}

{RegisterProc(nil,'pblock_nninsert',mtProc,TypeInfo(_T92),[
TypeInfoPChar,
TypeInfo(Integer),
TypeInfoPointer,TypeInfoPointer],Addr(pblock_nninsert),cCdecl)}

{RegisterProc(nil,'pblock_pinsert',mtProc,TypeInfo(_T93),[
TypeInfoPointer,
TypeInfoPointer],Addr(pblock_pinsert),cCdecl)}

{RegisterProc(nil,'pblock_str2pblock',mtProc,TypeInfo(_T94),[
TypeInfoPChar,
TypeInfoPointer,TypeInfo(Integer)],Addr(pblock_str2pblock),cCdecl)}

{RegisterProc(nil,'pblock_pblock2str',mtProc,TypeInfo(_T95),[
TypeInfoPointer,
TypeInfoPChar,TypeInfoPChar],Addr(pblock_pblock2str),cCdecl)}

{RegisterProc(nil,'pblock_copy',mtProc,TypeInfo(_T96),[
TypeInfoPointer,
TypeInfoPointer],Addr(pblock_copy),cCdecl)}

{RegisterProc(nil,'pblock_dup',mtProc,TypeInfo(_T97),[
TypeInfoPointer,TypeInfoPointer],Addr(pblock_dup),cCdecl)}

{RegisterProc(nil,'pblock_pb2env',mtProc,TypeInfo(_T98),[
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(pblock_pb2env),cRegister)}

{RegisterProc(nil,'_pblock_fr',mtProc,TypeInfo(_T99),[
TypeInfoPChar,
TypeInfoPointer,
TypeInfo(BOOL),TypeInfoPointer],Addr(_pblock_fr),cCdecl)}

{RegisterProc(nil,'net_create_listener',mtProc,TypeInfo(_T104),[
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(SYS_NETFD)],Addr(net_create_listener),cCdecl)}

{RegisterProc(nil,'net_select',mtProc,TypeInfo(_T105),[
TypeInfo(Integer),
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(net_select),cCdecl)}

{RegisterProc(nil,'net_accept',mtProc,TypeInfo(_T111),[
TypeInfo(SYS_NETFD),
TypeInfoPointer,
TypeInfoPointer,TypeInfo(SYS_NETFD)],Addr(net_accept),cCdecl)}

{RegisterProc(nil,'net_read',mtProc,TypeInfo(_T112),[
TypeInfo(SYS_NETFD),
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(Integer)],Addr(net_read),cCdecl)}

{RegisterProc(nil,'net_write',mtProc,TypeInfo(_T113),[
TypeInfo(SYS_NETFD),
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(Integer)],Addr(net_write),cCdecl)}

{RegisterProc(nil,'net_ip2host',mtProc,TypeInfo(_T115),[
TypeInfoPChar,
TypeInfo(BOOL),TypeInfoPChar],Addr(net_ip2host),cCdecl)}

{RegisterProc(nil,'netbuf_getc',mtProc,TypeInfo(_T116),[
TypeInfoPointer,TypeInfo(Integer)],Addr(netbuf_getc),cRegister)}

{RegisterProc(nil,'filebuf_getc',mtProc,TypeInfo(_T117),[
TypeInfoPointer,TypeInfo(Integer)],Addr(filebuf_getc),cRegister)}

{RegisterProc(nil,'pipebuf_getc',mtProc,TypeInfo(_T118),[
TypeInfoPointer,TypeInfo(Integer)],Addr(pipebuf_getc),cRegister)}

{RegisterProc(nil,'filebuf_open',mtProc,TypeInfo(_T119),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(filebuf_open),cCdecl)}

{RegisterProc(nil,'netbuf_open',mtProc,TypeInfo(_T120),[
TypeInfo(SYS_NETFD),
TypeInfo(Integer),TypeInfoPointer],Addr(netbuf_open),cCdecl)}

{RegisterProc(nil,'filebuf_create',mtProc,TypeInfo(_T121),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(Integer),TypeInfoPointer],Addr(filebuf_create),cCdecl)}

{RegisterProc(nil,'filebuf_close_buffer',mtProc,TypeInfo(_T122),[
TypeInfoPointer,
TypeInfo(BOOL)],Addr(filebuf_close_buffer),cCdecl)}

{RegisterProc(nil,'filebuf_next',mtProc,TypeInfo(_T125),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(filebuf_next),cCdecl)}

{RegisterProc(nil,'netbuf_next',mtProc,TypeInfo(_T126),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(netbuf_next),cCdecl)}

{RegisterProc(nil,'pipebuf_next',mtProc,TypeInfo(_T127),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(pipebuf_next),cCdecl)}

{RegisterProc(nil,'filebuf_close',mtProc,TypeInfo(_T128),[
TypeInfoPointer],Addr(filebuf_close),cCdecl)}

{RegisterProc(nil,'netbuf_close',mtProc,TypeInfo(_T129),[
TypeInfoPointer],Addr(netbuf_close),cCdecl)}

{RegisterProc(nil,'pipebuf_close',mtProc,TypeInfo(_T130),[
TypeInfoPointer],Addr(pipebuf_close),cCdecl)}

{RegisterProc(nil,'filebuf_grab',mtProc,TypeInfo(_T131),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(filebuf_grab),cCdecl)}

{RegisterProc(nil,'netbuf_grab',mtProc,TypeInfo(_T132),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(netbuf_grab),cCdecl)}

{RegisterProc(nil,'pipebuf_grab',mtProc,TypeInfo(_T133),[
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(pipebuf_grab),cCdecl)}

{RegisterProc(nil,'netbuf_buf2sd',mtProc,TypeInfo(_T134),[
TypeInfoPointer,
TypeInfo(SYS_NETFD),
TypeInfo(Integer),TypeInfo(Integer)],Addr(netbuf_buf2sd),cCdecl)}

{RegisterProc(nil,'filebuf_buf2sd',mtProc,TypeInfo(_T135),[
TypeInfoPointer,
TypeInfo(SYS_NETFD),TypeInfo(Integer)],Addr(filebuf_buf2sd),cCdecl)}

{RegisterProc(nil,'pipebuf_buf2sd',mtProc,TypeInfo(_T136),[
TypeInfoPointer,
TypeInfo(SYS_NETFD),
TypeInfo(Integer),TypeInfo(Integer)],Addr(pipebuf_buf2sd),cCdecl)}

{RegisterProc(nil,'pipebuf_netbuf2sd',mtProc,TypeInfo(_T137),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(Integer)],Addr(pipebuf_netbuf2sd),cCdecl)}

{RegisterProc(nil,'session_create',mtProc,TypeInfo(_T138),[
TypeInfo(SYS_NETFD),
TypeInfoPointer,TypeInfoPointer],Addr(session_create),cCdecl)}

{RegisterProc(nil,'session_free',mtProc,TypeInfo(_T139),[
TypeInfoPointer],Addr(session_free),cRegister)}

{RegisterProc(nil,'session_dns',mtProc,TypeInfo(_T140),[
TypeInfoPointer,TypeInfoPChar],Addr(session_dns),cRegister)}

{RegisterProc(nil,'session_maxdns',mtProc,TypeInfo(_T141),[
TypeInfoPointer,TypeInfoPChar],Addr(session_maxdns),cRegister)}

{RegisterProc(nil,'session_dns_lookup',mtProc,TypeInfo(_T142),[
TypeInfoPointer,
TypeInfo(BOOL),TypeInfoPChar],Addr(session_dns_lookup),cCdecl)}

{RegisterProc(nil,'CINFO_HASH',mtProc,TypeInfo(_T143),[
TypeInfoPChar,TypeInfo(Char)],Addr(CINFO_HASH),cRegister)}

{RegisterProc(nil,'cinfo_merge',mtProc,TypeInfo(_T146),[
TypeInfoPChar,TypeInfoPChar],Addr(cinfo_merge),cCdecl)}

{RegisterProc(nil,'cinfo_find',mtProc,TypeInfo(_T147),[
TypeInfoPChar,TypeInfoPointer],Addr(cinfo_find),cCdecl)}

{RegisterProc(nil,'cinfo_lookup',mtProc,TypeInfo(_T148),[
TypeInfoPChar,TypeInfoPointer],Addr(cinfo_lookup),cCdecl)}

{RegisterProc(nil,'ereport_init',mtProc,TypeInfo(_T149),[
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPointer,TypeInfoPChar],Addr(ereport_init),cCdecl)}

{RegisterProc(nil,'ereport_getfd',mtProc,TypeInfo(_T151),[TypeInfoPointer],Addr(ereport_getfd),cCdecl)}

{RegisterProc(nil,'shexp_valid',mtProc,TypeInfo(_T152),[
TypeInfoPChar,TypeInfo(Integer)],Addr(shexp_valid),cCdecl)}

{RegisterProc(nil,'shexp_match',mtProc,TypeInfo(_T153),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Integer)],Addr(shexp_match),cCdecl)}

{RegisterProc(nil,'shexp_cmp',mtProc,TypeInfo(_T154),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Integer)],Addr(shexp_cmp),cCdecl)}

{RegisterProc(nil,'shexp_casecmp',mtProc,TypeInfo(_T155),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Integer)],Addr(shexp_casecmp),cCdecl)}

{RegisterProc(nil,'shmem_alloc',mtProc,TypeInfo(_T156),[
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(BOOL),TypeInfoPointer],Addr(shmem_alloc),cCdecl)}

{RegisterProc(nil,'shmem_free',mtProc,TypeInfo(_T157),[
TypeInfoPointer],Addr(shmem_free),cCdecl)}

{RegisterProc(nil,'systhread_start',mtProc,TypeInfo(_T158),[
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(TSysThreadFunc),
TypeInfoPointer,TypeInfoPointer],Addr(systhread_start),cCdecl)}

{RegisterProc(nil,'systhread_init',mtProc,TypeInfo(_T164),[
TypeInfoPChar],Addr(systhread_init),cCdecl)}

{RegisterProc(nil,'daemon_atrestart',mtProc,TypeInfo(_T170),[
TypeInfo(TDaemonAtRestart),
TypeInfoPointer],Addr(daemon_atrestart),cCdecl)}

{RegisterProc(nil,'util_getline',mtProc,TypeInfo(_T172),[
TypeInfoPointer,
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfoPChar,TypeInfo(Integer)],Addr(util_getline),cCdecl)}

{RegisterProc(nil,'util_env_create',mtProc,TypeInfo(_T173),[
TypeInfoPointer,
TypeInfo(Integer),
TypeInfo(Integer),TypeInfoPointer],Addr(util_env_create),cCdecl)}

{RegisterProc(nil,'util_env_str',mtProc,TypeInfo(_T174),[
TypeInfoPChar,
TypeInfoPChar,TypeInfoPChar],Addr(util_env_str),cCdecl)}

{RegisterProc(nil,'util_env_replace',mtProc,TypeInfo(_T175),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPChar],Addr(util_env_replace),cCdecl)}

{RegisterProc(nil,'util_env_free',mtProc,TypeInfo(_T176),[
TypeInfoPointer],Addr(util_env_free),cCdecl)}

{RegisterProc(nil,'util_env_copy',mtProc,TypeInfo(_T177),[
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(util_env_copy),cCdecl)}

{RegisterProc(nil,'util_env_find',mtProc,TypeInfo(_T178),[
TypeInfoPointer,
TypeInfoPChar,TypeInfoPChar],Addr(util_env_find),cCdecl)}

{RegisterProc(nil,'util_chdir2path',mtProc,TypeInfo(_T180),[
TypeInfoPChar,TypeInfo(Integer)],Addr(util_chdir2path),cRegister)}

{RegisterProc(nil,'util_is_mozilla',mtProc,TypeInfo(_T181),[
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPChar,TypeInfo(BOOL)],Addr(util_is_mozilla),cCdecl)}

{RegisterProc(nil,'util_is_url',mtProc,TypeInfo(_T182),[
TypeInfoPChar,TypeInfo(BOOL)],Addr(util_is_url),cCdecl)}

{RegisterProc(nil,'util_str_time_equal',mtProc,TypeInfo(_T185),[
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Integer)],Addr(util_str_time_equal),cCdecl)}

{RegisterProc(nil,'util_uri_is_evil',mtProc,TypeInfo(_T186),[
TypeInfoPChar,TypeInfo(BOOL)],Addr(util_uri_is_evil),cCdecl)}

{RegisterProc(nil,'util_uri_parse',mtProc,TypeInfo(_T187),[
TypeInfoPChar],Addr(util_uri_parse),cCdecl)}

{RegisterProc(nil,'util_uri_unescape',mtProc,TypeInfo(_T188),[
TypeInfoPChar],Addr(util_uri_unescape),cCdecl)}

{RegisterProc(nil,'util_uri_escape',mtProc,TypeInfo(_T189),[
TypeInfoPChar,
TypeInfoPChar,TypeInfoPChar],Addr(util_uri_escape),cCdecl)}

{RegisterProc(nil,'util_url_escape',mtProc,TypeInfo(_T190),[
TypeInfoPChar,
TypeInfoPChar,TypeInfoPChar],Addr(util_url_escape),cCdecl)}

{RegisterProc(nil,'util_sh_escape',mtProc,TypeInfo(_T191),[
TypeInfoPChar,TypeInfoPChar],Addr(util_sh_escape),cCdecl)}

{RegisterProc(nil,'util_mime_separator',mtProc,TypeInfo(_T192),[
TypeInfoPChar,TypeInfo(Integer)],Addr(util_mime_separator),cRegister)}

{RegisterProc(nil,'util_itoa',mtProc,TypeInfo(_T193),[
TypeInfo(Integer),
TypeInfoPChar,TypeInfo(Integer)],Addr(util_itoa),cRegister)}

{RegisterProc(nil,'util_delete_directory',mtProc,TypeInfo(_T194),[
TypeInfoPChar,
TypeInfo(BOOL)],Addr(util_delete_directory),cCdecl)}

{RegisterProc(nil,'object_create',mtProc,TypeInfo(_T196),[
TypeInfo(Integer),
TypeInfoPointer,TypeInfoPointer],Addr(object_create),cCdecl)}

{RegisterProc(nil,'object_free',mtProc,TypeInfo(_T197),[
TypeInfoPointer],Addr(object_free),cCdecl)}

{RegisterProc(nil,'object_add_directive',mtProc,TypeInfo(_T198),[
TypeInfo(Integer),
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer],Addr(object_add_directive),cCdecl)}

{RegisterProc(nil,'object_execute',mtProc,TypeInfo(_T199),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(object_execute),cCdecl)}

{RegisterProc(nil,'objset_scan_buffer',mtProc,TypeInfo(_T200),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPointer,TypeInfoPointer],Addr(objset_scan_buffer),cCdecl)}

{RegisterProc(nil,'objset_create',mtProc,TypeInfo(_T201),[TypeInfoPointer],Addr(objset_create),cCdecl)}

{RegisterProc(nil,'objset_free',mtProc,TypeInfo(_T202),[
TypeInfoPointer],Addr(objset_free),cCdecl)}

{RegisterProc(nil,'objset_free_setonly',mtProc,TypeInfo(_T203),[
TypeInfoPointer],Addr(objset_free_setonly),cCdecl)}

{RegisterProc(nil,'objset_new_object',mtProc,TypeInfo(_T204),[
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(objset_new_object),cCdecl)}

{RegisterProc(nil,'objset_add_object',mtProc,TypeInfo(_T205),[
TypeInfoPointer,
TypeInfoPointer],Addr(objset_add_object),cCdecl)}

{RegisterProc(nil,'objset_add_init',mtProc,TypeInfo(_T206),[
TypeInfoPointer,
TypeInfoPointer],Addr(objset_add_init),cCdecl)}

{RegisterProc(nil,'objset_findbyname',mtProc,TypeInfo(_T207),[
TypeInfoPChar,
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(objset_findbyname),cCdecl)}

{RegisterProc(nil,'objset_findbyppath',mtProc,TypeInfo(_T208),[
TypeInfoPChar,
TypeInfoPointer,
TypeInfoPointer,TypeInfoPointer],Addr(objset_findbyppath),cCdecl)}

{RegisterProc(nil,'objset_copydirs',mtProc,TypeInfo(_T209),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(objset_copydirs),cCdecl)}

{RegisterProc(nil,'objset_scan_registry',mtProc,TypeInfo(_T210),[
TypeInfoPChar,
TypeInfoPointer,
TypeInfoPChar,TypeInfoPointer],Addr(objset_scan_registry),cCdecl)}

{RegisterProc(nil,'ProcessObject',mtProc,TypeInfo(_T211),[
TypeInfoPointer,
TypeInfo(HKEY),
TypeInfoPChar,
TypeInfo(DWORD)],Addr(ProcessObject),cCdecl)}

{RegisterProc(nil,'ProcessClient',mtProc,TypeInfo(_T212),[
TypeInfoPointer,
TypeInfo(HKEY),
TypeInfoPChar,
TypeInfo(DWORD),TypeInfo(BOOL)],Addr(ProcessClient),cCdecl)}

{RegisterProc(nil,'ProcessDirective',mtProc,TypeInfo(_T213),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(HKEY),
TypeInfoPChar,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(BOOL),TypeInfo(BOOL)],Addr(ProcessDirective),cCdecl)}

{RegisterProc(nil,'ProcessFunction',mtProc,TypeInfo(_T214),[
TypeInfoPointer,
TypeInfo(HKEY),
TypeInfoPChar,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(BOOL)],Addr(ProcessFunction),cCdecl)}

{RegisterProc(nil,'_ntverify_parameter',mtProc,TypeInfo(_T215),[
TypeInfoPChar,TypeInfo(Integer)],Addr(_ntverify_parameter),cCdecl)}

{RegisterProc(nil,'ntpblock_str2pblock',mtProc,TypeInfo(_T216),[
TypeInfo(Integer),
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfoPointer,TypeInfo(Integer)],Addr(ntpblock_str2pblock),cCdecl)}

{RegisterProc(nil,'ntpblock_pblock2str',mtProc,TypeInfo(_T217),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPChar,TypeInfo(Integer)],Addr(ntpblock_pblock2str),cCdecl)}

{RegisterProc(nil,'ClearConfigurationParameters',mtProc,TypeInfo(_T218),[
TypeInfo(HKEY),
TypeInfoPChar,
TypeInfoPChar,TypeInfo(BOOL)],Addr(ClearConfigurationParameters),cCdecl)}

{RegisterProc(nil,'std_os',mtProc,TypeInfo(_T228),[TypeInfoPointer],Addr(std_os),cRegister)}

{RegisterProc(nil,'conf_init',mtProc,TypeInfo(_T233),[
TypeInfoPChar,TypeInfoPChar],Addr(conf_init),cCdecl)}

{RegisterProc(nil,'conf_getglobals',mtProc,TypeInfo(_T235),[TypeInfoPointer],Addr(conf_getglobals),cCdecl)}

{RegisterProc(nil,'conf_vars2daemon',mtProc,TypeInfo(_T236),[
TypeInfoPointer],Addr(conf_vars2daemon),cCdecl)}

{RegisterProc(nil,'GetDomainAddresses',mtProc,TypeInfo(_T237),[
TypeInfoPChar,TypeInfo(BOOL)],Addr(GetDomainAddresses),cCdecl)}

{RegisterProc(nil,'request_create',mtProc,TypeInfo(_T238),[TypeInfoPointer],Addr(request_create),cCdecl)}

{RegisterProc(nil,'request_free',mtProc,TypeInfo(_T239),[
TypeInfoPointer],Addr(request_free),cCdecl)}

{RegisterProc(nil,'request_restart_internal',mtProc,TypeInfo(_T240),[
TypeInfoPChar,
TypeInfoPointer,TypeInfoPointer],Addr(request_restart_internal),cCdecl)}

{RegisterProc(nil,'request_header',mtProc,TypeInfo(_T241),[
TypeInfoPChar,
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(request_header),cCdecl)}

{RegisterProc(nil,'request_loadheaders',mtProc,TypeInfo(_T242),[
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(request_loadheaders),cRegister)}

{RegisterProc(nil,'request_stat_path',mtProc,TypeInfo(_T243),[
TypeInfoPChar,
TypeInfoPointer,TypeInfoPointer],Addr(request_stat_path),cCdecl)}

{RegisterProc(nil,'request_handle',mtProc,TypeInfo(_T244),[
TypeInfoPointer],Addr(request_handle),cCdecl)}

{RegisterProc(nil,'request_translate_uri',mtProc,TypeInfo(_T245),[
TypeInfoPChar,
TypeInfoPointer,TypeInfoPChar],Addr(request_translate_uri),cCdecl)}

{RegisterProc(nil,'protocol_find_request',mtProc,TypeInfo(_T246),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(protocol_find_request),cCdecl)}

{RegisterProc(nil,'http_find_request',mtProc,TypeInfo(_T247),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),TypeInfoPointer],Addr(http_find_request),cCdecl)}

{RegisterProc(nil,'protocol_parse_request',mtProc,TypeInfo(_T248),[
TypeInfoPChar,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(protocol_parse_request),cCdecl)}

{RegisterProc(nil,'http_parse_request',mtProc,TypeInfo(_T249),[
TypeInfoPChar,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(http_parse_request),cCdecl)}

{RegisterProc(nil,'protocol_scan_headers',mtProc,TypeInfo(_T250),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPointer,TypeInfo(Integer)],Addr(protocol_scan_headers),cCdecl)}

{RegisterProc(nil,'http_scan_headers',mtProc,TypeInfo(_T251),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPChar,
TypeInfoPointer,TypeInfo(Integer)],Addr(http_scan_headers),cCdecl)}

{RegisterProc(nil,'protocol_start_response',mtProc,TypeInfo(_T252),[
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(protocol_start_response),cCdecl)}

{RegisterProc(nil,'http_start_response',mtProc,TypeInfo(_T253),[
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(http_start_response),cCdecl)}

{RegisterProc(nil,'http_hdrs2env',mtProc,TypeInfo(_T254),[
TypeInfoPointer,TypeInfoPointer],Addr(http_hdrs2env),cCdecl)}

{RegisterProc(nil,'protocol_status',mtProc,TypeInfo(_T255),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),
TypeInfoPChar],Addr(protocol_status),cCdecl)}

{RegisterProc(nil,'http_status',mtProc,TypeInfo(_T256),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Integer),
TypeInfoPChar],Addr(http_status),cCdecl)}

{RegisterProc(nil,'http_dump822',mtProc,TypeInfo(_T259),[
TypeInfoPointer,
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(Integer),TypeInfoPChar],Addr(http_dump822),cCdecl)}

{RegisterProc(nil,'protocol_finish_request',mtProc,TypeInfo(_T260),[
TypeInfoPointer,
TypeInfoPointer],Addr(protocol_finish_request),cCdecl)}

{RegisterProc(nil,'http_finish_request',mtProc,TypeInfo(_T261),[
TypeInfoPointer,
TypeInfoPointer],Addr(http_finish_request),cCdecl)}

{RegisterProc(nil,'protocol_handle_session',mtProc,TypeInfo(_T262),[
TypeInfoPointer],Addr(protocol_handle_session),cCdecl)}

{RegisterProc(nil,'http_handle_session',mtProc,TypeInfo(_T263),[
TypeInfoPointer],Addr(http_handle_session),cCdecl)}

{RegisterProc(nil,'protocol_uri2url',mtProc,TypeInfo(_T264),[
TypeInfoPChar,
TypeInfoPChar,TypeInfoPChar],Addr(protocol_uri2url),cCdecl)}

{RegisterProc(nil,'protocol_uri2url_dynamic',mtProc,TypeInfo(_T265),[
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPointer,
TypeInfoPointer,TypeInfoPChar],Addr(protocol_uri2url_dynamic),cCdecl)}

{RegisterProc(nil,'http_uri2url',mtProc,TypeInfo(_T266),[
TypeInfoPChar,
TypeInfoPChar,TypeInfoPChar],Addr(http_uri2url),cCdecl)}

{RegisterProc(nil,'http_uri2url_dynamic',mtProc,TypeInfo(_T267),[
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPointer,
TypeInfoPointer,TypeInfoPChar],Addr(http_uri2url_dynamic),cCdecl)}

{RegisterProc(nil,'func_find',mtProc,TypeInfo(_T271),[
TypeInfoPChar,TypeInfo(TFunction)],Addr(func_find),cCdecl)}

{RegisterProc(nil,'func_exec',mtProc,TypeInfo(_T272),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Integer)],Addr(func_exec),cCdecl)}

{RegisterProc(nil,'func_insert',mtProc,TypeInfo(_T273),[
TypeInfoPChar,
TypeInfo(TFunction),TypeInfoPointer],Addr(func_insert),cRegister)}

{RegisterProc(nil,'NSstr2String',mtProc,TypeInfo(_T274),[
TypeInfoPChar,TypeInfo(string)],Addr(NSstr2String),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
