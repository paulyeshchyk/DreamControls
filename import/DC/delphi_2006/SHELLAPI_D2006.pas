{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit SHELLAPI_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  Types,
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  ShellAPI;
function Convert_AppBarDataToVariant(var R : _AppBarData) : OleVariant;
function ConvertVariantTo_AppBarData(const V : OleVariant) : _AppBarData;
function Convert_DRAGINFOToVariant(var R : _DRAGINFO) : OleVariant;
function ConvertVariantTo_DRAGINFO(const V : OleVariant) : _DRAGINFO;
function Convert_DRAGINFOAToVariant(var R : _DRAGINFOA) : OleVariant;
function ConvertVariantTo_DRAGINFOA(const V : OleVariant) : _DRAGINFOA;
function Convert_DRAGINFOWToVariant(var R : _DRAGINFOW) : OleVariant;
function ConvertVariantTo_DRAGINFOW(const V : OleVariant) : _DRAGINFOW;
function Convert_NOTIFYICONDATAToVariant(var R : _NOTIFYICONDATA) : OleVariant;
function ConvertVariantTo_NOTIFYICONDATA(const V : OleVariant) : _NOTIFYICONDATA;
function Convert_NOTIFYICONDATAAToVariant(var R : _NOTIFYICONDATAA) : OleVariant;
function ConvertVariantTo_NOTIFYICONDATAA(const V : OleVariant) : _NOTIFYICONDATAA;
function Convert_NOTIFYICONDATAWToVariant(var R : _NOTIFYICONDATAW) : OleVariant;
function ConvertVariantTo_NOTIFYICONDATAW(const V : OleVariant) : _NOTIFYICONDATAW;
function Convert_SHELLEXECUTEINFOToVariant(var R : _SHELLEXECUTEINFO) : OleVariant;
function ConvertVariantTo_SHELLEXECUTEINFO(const V : OleVariant) : _SHELLEXECUTEINFO;
function Convert_SHELLEXECUTEINFOAToVariant(var R : _SHELLEXECUTEINFOA) : OleVariant;
function ConvertVariantTo_SHELLEXECUTEINFOA(const V : OleVariant) : _SHELLEXECUTEINFOA;
function Convert_SHELLEXECUTEINFOWToVariant(var R : _SHELLEXECUTEINFOW) : OleVariant;
function ConvertVariantTo_SHELLEXECUTEINFOW(const V : OleVariant) : _SHELLEXECUTEINFOW;
function Convert_SHFILEINFOToVariant(var R : _SHFILEINFO) : OleVariant;
function ConvertVariantTo_SHFILEINFO(const V : OleVariant) : _SHFILEINFO;
function Convert_SHFILEINFOAToVariant(var R : _SHFILEINFOA) : OleVariant;
function ConvertVariantTo_SHFILEINFOA(const V : OleVariant) : _SHFILEINFOA;
function Convert_SHFILEINFOWToVariant(var R : _SHFILEINFOW) : OleVariant;
function ConvertVariantTo_SHFILEINFOW(const V : OleVariant) : _SHFILEINFOW;
function Convert_SHFILEOPSTRUCTToVariant(var R : _SHFILEOPSTRUCT) : OleVariant;
function ConvertVariantTo_SHFILEOPSTRUCT(const V : OleVariant) : _SHFILEOPSTRUCT;
function Convert_SHFILEOPSTRUCTAToVariant(var R : _SHFILEOPSTRUCTA) : OleVariant;
function ConvertVariantTo_SHFILEOPSTRUCTA(const V : OleVariant) : _SHFILEOPSTRUCTA;
function Convert_SHFILEOPSTRUCTWToVariant(var R : _SHFILEOPSTRUCTW) : OleVariant;
function ConvertVariantTo_SHFILEOPSTRUCTW(const V : OleVariant) : _SHFILEOPSTRUCTW;
function Convert_SHNAMEMAPPINGToVariant(var R : _SHNAMEMAPPING) : OleVariant;
function ConvertVariantTo_SHNAMEMAPPING(const V : OleVariant) : _SHNAMEMAPPING;
function Convert_SHNAMEMAPPINGAToVariant(var R : _SHNAMEMAPPINGA) : OleVariant;
function ConvertVariantTo_SHNAMEMAPPINGA(const V : OleVariant) : _SHNAMEMAPPINGA;
function Convert_SHNAMEMAPPINGWToVariant(var R : _SHNAMEMAPPINGW) : OleVariant;
function ConvertVariantTo_SHNAMEMAPPINGW(const V : OleVariant) : _SHNAMEMAPPINGW;
function ConvertAPPBARDATAToVariant(var R : APPBARDATA) : OleVariant;
function ConvertVariantToAPPBARDATA(const V : OleVariant) : APPBARDATA;
function ConvertNOTIFYICONDATAToVariant(var R : NOTIFYICONDATA) : OleVariant;
function ConvertVariantToNOTIFYICONDATA(const V : OleVariant) : NOTIFYICONDATA;
function ConvertNOTIFYICONDATAAToVariant(var R : NOTIFYICONDATAA) : OleVariant;
function ConvertVariantToNOTIFYICONDATAA(const V : OleVariant) : NOTIFYICONDATAA;
function ConvertNOTIFYICONDATAWToVariant(var R : NOTIFYICONDATAW) : OleVariant;
function ConvertVariantToNOTIFYICONDATAW(const V : OleVariant) : NOTIFYICONDATAW;
function ConvertSHELLEXECUTEINFOToVariant(var R : SHELLEXECUTEINFO) : OleVariant;
function ConvertVariantToSHELLEXECUTEINFO(const V : OleVariant) : SHELLEXECUTEINFO;
function ConvertSHELLEXECUTEINFOAToVariant(var R : SHELLEXECUTEINFOA) : OleVariant;
function ConvertVariantToSHELLEXECUTEINFOA(const V : OleVariant) : SHELLEXECUTEINFOA;
function ConvertSHELLEXECUTEINFOWToVariant(var R : SHELLEXECUTEINFOW) : OleVariant;
function ConvertVariantToSHELLEXECUTEINFOW(const V : OleVariant) : SHELLEXECUTEINFOW;
function ConvertSHFILEINFOToVariant(var R : SHFILEINFO) : OleVariant;
function ConvertVariantToSHFILEINFO(const V : OleVariant) : SHFILEINFO;
function ConvertSHFILEINFOAToVariant(var R : SHFILEINFOA) : OleVariant;
function ConvertVariantToSHFILEINFOA(const V : OleVariant) : SHFILEINFOA;
function ConvertSHFILEINFOWToVariant(var R : SHFILEINFOW) : OleVariant;
function ConvertVariantToSHFILEINFOW(const V : OleVariant) : SHFILEINFOW;
function ConvertSHFILEOPSTRUCTToVariant(var R : SHFILEOPSTRUCT) : OleVariant;
function ConvertVariantToSHFILEOPSTRUCT(const V : OleVariant) : SHFILEOPSTRUCT;
function ConvertSHFILEOPSTRUCTAToVariant(var R : SHFILEOPSTRUCTA) : OleVariant;
function ConvertVariantToSHFILEOPSTRUCTA(const V : OleVariant) : SHFILEOPSTRUCTA;
function ConvertSHFILEOPSTRUCTWToVariant(var R : SHFILEOPSTRUCTW) : OleVariant;
function ConvertVariantToSHFILEOPSTRUCTW(const V : OleVariant) : SHFILEOPSTRUCTW;
function ConvertSHNAMEMAPPINGToVariant(var R : SHNAMEMAPPING) : OleVariant;
function ConvertVariantToSHNAMEMAPPING(const V : OleVariant) : SHNAMEMAPPING;
function ConvertSHNAMEMAPPINGAToVariant(var R : SHNAMEMAPPINGA) : OleVariant;
function ConvertVariantToSHNAMEMAPPINGA(const V : OleVariant) : SHNAMEMAPPINGA;
function ConvertSHNAMEMAPPINGWToVariant(var R : SHNAMEMAPPINGW) : OleVariant;
function ConvertVariantToSHNAMEMAPPINGW(const V : OleVariant) : SHNAMEMAPPINGW;
function ConvertTAppBarDataToVariant(var R : TAppBarData) : OleVariant;
function ConvertVariantToTAppBarData(const V : OleVariant) : TAppBarData;
function ConvertTDragInfoAToVariant(var R : TDragInfoA) : OleVariant;
function ConvertVariantToTDragInfoA(const V : OleVariant) : TDragInfoA;
function ConvertTDragInfoWToVariant(var R : TDragInfoW) : OleVariant;
function ConvertVariantToTDragInfoW(const V : OleVariant) : TDragInfoW;
function ConvertTNotifyIconDataToVariant(var R : TNotifyIconData) : OleVariant;
function ConvertVariantToTNotifyIconData(const V : OleVariant) : TNotifyIconData;
function ConvertTNotifyIconDataAToVariant(var R : TNotifyIconDataA) : OleVariant;
function ConvertVariantToTNotifyIconDataA(const V : OleVariant) : TNotifyIconDataA;
function ConvertTNotifyIconDataWToVariant(var R : TNotifyIconDataW) : OleVariant;
function ConvertVariantToTNotifyIconDataW(const V : OleVariant) : TNotifyIconDataW;
function ConvertTPointToVariant(var R : TPoint) : OleVariant;
function ConvertVariantToTPoint(const V : OleVariant) : TPoint;
function ConvertTShellExecuteInfoToVariant(var R : TShellExecuteInfo) : OleVariant;
function ConvertVariantToTShellExecuteInfo(const V : OleVariant) : TShellExecuteInfo;
function ConvertTShellExecuteInfoAToVariant(var R : TShellExecuteInfoA) : OleVariant;
function ConvertVariantToTShellExecuteInfoA(const V : OleVariant) : TShellExecuteInfoA;
function ConvertTShellExecuteInfoWToVariant(var R : TShellExecuteInfoW) : OleVariant;
function ConvertVariantToTShellExecuteInfoW(const V : OleVariant) : TShellExecuteInfoW;
function ConvertTSHFileInfoToVariant(var R : TSHFileInfo) : OleVariant;
function ConvertVariantToTSHFileInfo(const V : OleVariant) : TSHFileInfo;
function ConvertTSHFileInfoAToVariant(var R : TSHFileInfoA) : OleVariant;
function ConvertVariantToTSHFileInfoA(const V : OleVariant) : TSHFileInfoA;
function ConvertTSHFileInfoWToVariant(var R : TSHFileInfoW) : OleVariant;
function ConvertVariantToTSHFileInfoW(const V : OleVariant) : TSHFileInfoW;
function ConvertTSHFileOpStructToVariant(var R : TSHFileOpStruct) : OleVariant;
function ConvertVariantToTSHFileOpStruct(const V : OleVariant) : TSHFileOpStruct;
function ConvertTSHFileOpStructAToVariant(var R : TSHFileOpStructA) : OleVariant;
function ConvertVariantToTSHFileOpStructA(const V : OleVariant) : TSHFileOpStructA;
function ConvertTSHFileOpStructWToVariant(var R : TSHFileOpStructW) : OleVariant;
function ConvertVariantToTSHFileOpStructW(const V : OleVariant) : TSHFileOpStructW;
function ConvertTSHNameMappingToVariant(var R : TSHNameMapping) : OleVariant;
function ConvertVariantToTSHNameMapping(const V : OleVariant) : TSHNameMapping;
function ConvertTSHNameMappingAToVariant(var R : TSHNameMappingA) : OleVariant;
function ConvertVariantToTSHNameMappingA(const V : OleVariant) : TSHNameMappingA;
function ConvertTSHNameMappingWToVariant(var R : TSHNameMappingW) : OleVariant;
function ConvertVariantToTSHNameMappingW(const V : OleVariant) : TSHNameMappingW;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type ___AppBarData__Wrapper = class(TDCRecordWrapper)
private
fR : _AppBarData;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setuEdge(const val : UINT);
function getuEdge : UINT;
property uEdge : UINT read getuEdge write setuEdge;
procedure setlParam(const val : lParam);
function getlParam : lParam;
property lParam : lParam read getlParam write setlParam;
end;
type ___DRAGINFO__Wrapper = class(TDCRecordWrapper)
private
fR : _DRAGINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setuSize(const val : UINT);
function getuSize : UINT;
property uSize : UINT read getuSize write setuSize;
procedure setfNC(const val : BOOL);
function getfNC : BOOL;
property fNC : BOOL read getfNC write setfNC;
procedure setgrfKeyState(const val : DWORD);
function getgrfKeyState : DWORD;
property grfKeyState : DWORD read getgrfKeyState write setgrfKeyState;
end;
type ___DRAGINFOA__Wrapper = class(TDCRecordWrapper)
private
fR : _DRAGINFOA;
public
function GetRecordPtr : pointer; override;
published
procedure setuSize(const val : UINT);
function getuSize : UINT;
property uSize : UINT read getuSize write setuSize;
procedure setfNC(const val : BOOL);
function getfNC : BOOL;
property fNC : BOOL read getfNC write setfNC;
procedure setgrfKeyState(const val : DWORD);
function getgrfKeyState : DWORD;
property grfKeyState : DWORD read getgrfKeyState write setgrfKeyState;
end;
type ___DRAGINFOW__Wrapper = class(TDCRecordWrapper)
private
fR : _DRAGINFOW;
public
function GetRecordPtr : pointer; override;
published
procedure setuSize(const val : UINT);
function getuSize : UINT;
property uSize : UINT read getuSize write setuSize;
procedure setfNC(const val : BOOL);
function getfNC : BOOL;
property fNC : BOOL read getfNC write setfNC;
procedure setgrfKeyState(const val : DWORD);
function getgrfKeyState : DWORD;
property grfKeyState : DWORD read getgrfKeyState write setgrfKeyState;
end;
type ___NOTIFYICONDATA__Wrapper = class(TDCRecordWrapper)
private
fR : _NOTIFYICONDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuID(const val : UINT);
function getuID : UINT;
property uID : UINT read getuID write setuID;
procedure setuFlags(const val : UINT);
function getuFlags : UINT;
property uFlags : UINT read getuFlags write setuFlags;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setdwStateMask(const val : DWORD);
function getdwStateMask : DWORD;
property dwStateMask : DWORD read getdwStateMask write setdwStateMask;
procedure setuTimeout(const val : UINT);
function getuTimeout : UINT;
property uTimeout : UINT read getuTimeout write setuTimeout;
procedure setdwInfoFlags(const val : DWORD);
function getdwInfoFlags : DWORD;
property dwInfoFlags : DWORD read getdwInfoFlags write setdwInfoFlags;
end;
type ___NOTIFYICONDATAA__Wrapper = class(TDCRecordWrapper)
private
fR : _NOTIFYICONDATAA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuID(const val : UINT);
function getuID : UINT;
property uID : UINT read getuID write setuID;
procedure setuFlags(const val : UINT);
function getuFlags : UINT;
property uFlags : UINT read getuFlags write setuFlags;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setdwStateMask(const val : DWORD);
function getdwStateMask : DWORD;
property dwStateMask : DWORD read getdwStateMask write setdwStateMask;
procedure setuTimeout(const val : UINT);
function getuTimeout : UINT;
property uTimeout : UINT read getuTimeout write setuTimeout;
procedure setdwInfoFlags(const val : DWORD);
function getdwInfoFlags : DWORD;
property dwInfoFlags : DWORD read getdwInfoFlags write setdwInfoFlags;
end;
type ___NOTIFYICONDATAW__Wrapper = class(TDCRecordWrapper)
private
fR : _NOTIFYICONDATAW;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuID(const val : UINT);
function getuID : UINT;
property uID : UINT read getuID write setuID;
procedure setuFlags(const val : UINT);
function getuFlags : UINT;
property uFlags : UINT read getuFlags write setuFlags;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setdwStateMask(const val : DWORD);
function getdwStateMask : DWORD;
property dwStateMask : DWORD read getdwStateMask write setdwStateMask;
procedure setuTimeout(const val : UINT);
function getuTimeout : UINT;
property uTimeout : UINT read getuTimeout write setuTimeout;
procedure setdwInfoFlags(const val : DWORD);
function getdwInfoFlags : DWORD;
property dwInfoFlags : DWORD read getdwInfoFlags write setdwInfoFlags;
end;
type ___SHELLEXECUTEINFO__Wrapper = class(TDCRecordWrapper)
private
fR : _SHELLEXECUTEINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : ULONG);
function getfMask : ULONG;
property fMask : ULONG read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure sethInstApp(const val : HINST);
function gethInstApp : HINST;
property hInstApp : HINST read gethInstApp write sethInstApp;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure setHICON(const val : THandle);
function getHICON : THandle;
property HICON : THandle read getHICON write setHICON;
procedure sethProcess(const val : THandle);
function gethProcess : THandle;
property hProcess : THandle read gethProcess write sethProcess;
end;
type ___SHELLEXECUTEINFOA__Wrapper = class(TDCRecordWrapper)
private
fR : _SHELLEXECUTEINFOA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : ULONG);
function getfMask : ULONG;
property fMask : ULONG read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure sethInstApp(const val : HINST);
function gethInstApp : HINST;
property hInstApp : HINST read gethInstApp write sethInstApp;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure setHICON(const val : THandle);
function getHICON : THandle;
property HICON : THandle read getHICON write setHICON;
procedure sethProcess(const val : THandle);
function gethProcess : THandle;
property hProcess : THandle read gethProcess write sethProcess;
end;
type ___SHELLEXECUTEINFOW__Wrapper = class(TDCRecordWrapper)
private
fR : _SHELLEXECUTEINFOW;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : ULONG);
function getfMask : ULONG;
property fMask : ULONG read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure sethInstApp(const val : HINST);
function gethInstApp : HINST;
property hInstApp : HINST read gethInstApp write sethInstApp;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure setHICON(const val : THandle);
function getHICON : THandle;
property HICON : THandle read getHICON write setHICON;
procedure sethProcess(const val : THandle);
function gethProcess : THandle;
property hProcess : THandle read gethProcess write sethProcess;
end;
type ___SHFILEINFO__Wrapper = class(TDCRecordWrapper)
private
fR : _SHFILEINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setiIcon(const val : Integer);
function getiIcon : Integer;
property iIcon : Integer read getiIcon write setiIcon;
procedure setdwAttributes(const val : DWORD);
function getdwAttributes : DWORD;
property dwAttributes : DWORD read getdwAttributes write setdwAttributes;
end;
type ___SHFILEINFOA__Wrapper = class(TDCRecordWrapper)
private
fR : _SHFILEINFOA;
public
function GetRecordPtr : pointer; override;
published
procedure setiIcon(const val : Integer);
function getiIcon : Integer;
property iIcon : Integer read getiIcon write setiIcon;
procedure setdwAttributes(const val : DWORD);
function getdwAttributes : DWORD;
property dwAttributes : DWORD read getdwAttributes write setdwAttributes;
end;
type ___SHFILEINFOW__Wrapper = class(TDCRecordWrapper)
private
fR : _SHFILEINFOW;
public
function GetRecordPtr : pointer; override;
published
procedure setiIcon(const val : Integer);
function getiIcon : Integer;
property iIcon : Integer read getiIcon write setiIcon;
procedure setdwAttributes(const val : DWORD);
function getdwAttributes : DWORD;
property dwAttributes : DWORD read getdwAttributes write setdwAttributes;
end;
type ___SHFILEOPSTRUCT__Wrapper = class(TDCRecordWrapper)
private
fR : _SHFILEOPSTRUCT;
public
function GetRecordPtr : pointer; override;
published
procedure setwFunc(const val : UINT);
function getwFunc : UINT;
property wFunc : UINT read getwFunc write setwFunc;
procedure setfFlags(const val : FILEOP_FLAGS);
function getfFlags : FILEOP_FLAGS;
property fFlags : FILEOP_FLAGS read getfFlags write setfFlags;
procedure setfAnyOperationsAborted(const val : BOOL);
function getfAnyOperationsAborted : BOOL;
property fAnyOperationsAborted : BOOL read getfAnyOperationsAborted write setfAnyOperationsAborted;
end;
type ___SHFILEOPSTRUCTA__Wrapper = class(TDCRecordWrapper)
private
fR : _SHFILEOPSTRUCTA;
public
function GetRecordPtr : pointer; override;
published
procedure setwFunc(const val : UINT);
function getwFunc : UINT;
property wFunc : UINT read getwFunc write setwFunc;
procedure setfFlags(const val : FILEOP_FLAGS);
function getfFlags : FILEOP_FLAGS;
property fFlags : FILEOP_FLAGS read getfFlags write setfFlags;
procedure setfAnyOperationsAborted(const val : BOOL);
function getfAnyOperationsAborted : BOOL;
property fAnyOperationsAborted : BOOL read getfAnyOperationsAborted write setfAnyOperationsAborted;
end;
type ___SHFILEOPSTRUCTW__Wrapper = class(TDCRecordWrapper)
private
fR : _SHFILEOPSTRUCTW;
public
function GetRecordPtr : pointer; override;
published
procedure setwFunc(const val : UINT);
function getwFunc : UINT;
property wFunc : UINT read getwFunc write setwFunc;
procedure setfFlags(const val : FILEOP_FLAGS);
function getfFlags : FILEOP_FLAGS;
property fFlags : FILEOP_FLAGS read getfFlags write setfFlags;
procedure setfAnyOperationsAborted(const val : BOOL);
function getfAnyOperationsAborted : BOOL;
property fAnyOperationsAborted : BOOL read getfAnyOperationsAborted write setfAnyOperationsAborted;
end;
type ___SHNAMEMAPPING__Wrapper = class(TDCRecordWrapper)
private
fR : _SHNAMEMAPPING;
public
function GetRecordPtr : pointer; override;
published
procedure setcchOldPath(const val : Integer);
function getcchOldPath : Integer;
property cchOldPath : Integer read getcchOldPath write setcchOldPath;
procedure setcchNewPath(const val : Integer);
function getcchNewPath : Integer;
property cchNewPath : Integer read getcchNewPath write setcchNewPath;
end;
type ___SHNAMEMAPPINGA__Wrapper = class(TDCRecordWrapper)
private
fR : _SHNAMEMAPPINGA;
public
function GetRecordPtr : pointer; override;
published
procedure setcchOldPath(const val : Integer);
function getcchOldPath : Integer;
property cchOldPath : Integer read getcchOldPath write setcchOldPath;
procedure setcchNewPath(const val : Integer);
function getcchNewPath : Integer;
property cchNewPath : Integer read getcchNewPath write setcchNewPath;
end;
type ___SHNAMEMAPPINGW__Wrapper = class(TDCRecordWrapper)
private
fR : _SHNAMEMAPPINGW;
public
function GetRecordPtr : pointer; override;
published
procedure setcchOldPath(const val : Integer);
function getcchOldPath : Integer;
property cchOldPath : Integer read getcchOldPath write setcchOldPath;
procedure setcchNewPath(const val : Integer);
function getcchNewPath : Integer;
property cchNewPath : Integer read getcchNewPath write setcchNewPath;
end;
type __APPBARDATA__Wrapper = class(TDCRecordWrapper)
private
fR : APPBARDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setuEdge(const val : UINT);
function getuEdge : UINT;
property uEdge : UINT read getuEdge write setuEdge;
procedure setlParam(const val : lParam);
function getlParam : lParam;
property lParam : lParam read getlParam write setlParam;
end;
type __NOTIFYICONDATA__Wrapper = class(TDCRecordWrapper)
private
fR : NOTIFYICONDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuID(const val : UINT);
function getuID : UINT;
property uID : UINT read getuID write setuID;
procedure setuFlags(const val : UINT);
function getuFlags : UINT;
property uFlags : UINT read getuFlags write setuFlags;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setdwStateMask(const val : DWORD);
function getdwStateMask : DWORD;
property dwStateMask : DWORD read getdwStateMask write setdwStateMask;
procedure setuTimeout(const val : UINT);
function getuTimeout : UINT;
property uTimeout : UINT read getuTimeout write setuTimeout;
procedure setdwInfoFlags(const val : DWORD);
function getdwInfoFlags : DWORD;
property dwInfoFlags : DWORD read getdwInfoFlags write setdwInfoFlags;
end;
type __NOTIFYICONDATAA__Wrapper = class(TDCRecordWrapper)
private
fR : NOTIFYICONDATAA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuID(const val : UINT);
function getuID : UINT;
property uID : UINT read getuID write setuID;
procedure setuFlags(const val : UINT);
function getuFlags : UINT;
property uFlags : UINT read getuFlags write setuFlags;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setdwStateMask(const val : DWORD);
function getdwStateMask : DWORD;
property dwStateMask : DWORD read getdwStateMask write setdwStateMask;
procedure setuTimeout(const val : UINT);
function getuTimeout : UINT;
property uTimeout : UINT read getuTimeout write setuTimeout;
procedure setdwInfoFlags(const val : DWORD);
function getdwInfoFlags : DWORD;
property dwInfoFlags : DWORD read getdwInfoFlags write setdwInfoFlags;
end;
type __NOTIFYICONDATAW__Wrapper = class(TDCRecordWrapper)
private
fR : NOTIFYICONDATAW;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuID(const val : UINT);
function getuID : UINT;
property uID : UINT read getuID write setuID;
procedure setuFlags(const val : UINT);
function getuFlags : UINT;
property uFlags : UINT read getuFlags write setuFlags;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setdwStateMask(const val : DWORD);
function getdwStateMask : DWORD;
property dwStateMask : DWORD read getdwStateMask write setdwStateMask;
procedure setuTimeout(const val : UINT);
function getuTimeout : UINT;
property uTimeout : UINT read getuTimeout write setuTimeout;
procedure setdwInfoFlags(const val : DWORD);
function getdwInfoFlags : DWORD;
property dwInfoFlags : DWORD read getdwInfoFlags write setdwInfoFlags;
end;
type __SHELLEXECUTEINFO__Wrapper = class(TDCRecordWrapper)
private
fR : SHELLEXECUTEINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : ULONG);
function getfMask : ULONG;
property fMask : ULONG read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure sethInstApp(const val : HINST);
function gethInstApp : HINST;
property hInstApp : HINST read gethInstApp write sethInstApp;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure setHICON(const val : THandle);
function getHICON : THandle;
property HICON : THandle read getHICON write setHICON;
procedure sethProcess(const val : THandle);
function gethProcess : THandle;
property hProcess : THandle read gethProcess write sethProcess;
end;
type __SHELLEXECUTEINFOA__Wrapper = class(TDCRecordWrapper)
private
fR : SHELLEXECUTEINFOA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : ULONG);
function getfMask : ULONG;
property fMask : ULONG read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure sethInstApp(const val : HINST);
function gethInstApp : HINST;
property hInstApp : HINST read gethInstApp write sethInstApp;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure setHICON(const val : THandle);
function getHICON : THandle;
property HICON : THandle read getHICON write setHICON;
procedure sethProcess(const val : THandle);
function gethProcess : THandle;
property hProcess : THandle read gethProcess write sethProcess;
end;
type __SHELLEXECUTEINFOW__Wrapper = class(TDCRecordWrapper)
private
fR : SHELLEXECUTEINFOW;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : ULONG);
function getfMask : ULONG;
property fMask : ULONG read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure sethInstApp(const val : HINST);
function gethInstApp : HINST;
property hInstApp : HINST read gethInstApp write sethInstApp;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure setHICON(const val : THandle);
function getHICON : THandle;
property HICON : THandle read getHICON write setHICON;
procedure sethProcess(const val : THandle);
function gethProcess : THandle;
property hProcess : THandle read gethProcess write sethProcess;
end;
type __SHFILEINFO__Wrapper = class(TDCRecordWrapper)
private
fR : SHFILEINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setiIcon(const val : Integer);
function getiIcon : Integer;
property iIcon : Integer read getiIcon write setiIcon;
procedure setdwAttributes(const val : DWORD);
function getdwAttributes : DWORD;
property dwAttributes : DWORD read getdwAttributes write setdwAttributes;
end;
type __SHFILEINFOA__Wrapper = class(TDCRecordWrapper)
private
fR : SHFILEINFOA;
public
function GetRecordPtr : pointer; override;
published
procedure setiIcon(const val : Integer);
function getiIcon : Integer;
property iIcon : Integer read getiIcon write setiIcon;
procedure setdwAttributes(const val : DWORD);
function getdwAttributes : DWORD;
property dwAttributes : DWORD read getdwAttributes write setdwAttributes;
end;
type __SHFILEINFOW__Wrapper = class(TDCRecordWrapper)
private
fR : SHFILEINFOW;
public
function GetRecordPtr : pointer; override;
published
procedure setiIcon(const val : Integer);
function getiIcon : Integer;
property iIcon : Integer read getiIcon write setiIcon;
procedure setdwAttributes(const val : DWORD);
function getdwAttributes : DWORD;
property dwAttributes : DWORD read getdwAttributes write setdwAttributes;
end;
type __SHFILEOPSTRUCT__Wrapper = class(TDCRecordWrapper)
private
fR : SHFILEOPSTRUCT;
public
function GetRecordPtr : pointer; override;
published
procedure setwFunc(const val : UINT);
function getwFunc : UINT;
property wFunc : UINT read getwFunc write setwFunc;
procedure setfFlags(const val : FILEOP_FLAGS);
function getfFlags : FILEOP_FLAGS;
property fFlags : FILEOP_FLAGS read getfFlags write setfFlags;
procedure setfAnyOperationsAborted(const val : BOOL);
function getfAnyOperationsAborted : BOOL;
property fAnyOperationsAborted : BOOL read getfAnyOperationsAborted write setfAnyOperationsAborted;
end;
type __SHFILEOPSTRUCTA__Wrapper = class(TDCRecordWrapper)
private
fR : SHFILEOPSTRUCTA;
public
function GetRecordPtr : pointer; override;
published
procedure setwFunc(const val : UINT);
function getwFunc : UINT;
property wFunc : UINT read getwFunc write setwFunc;
procedure setfFlags(const val : FILEOP_FLAGS);
function getfFlags : FILEOP_FLAGS;
property fFlags : FILEOP_FLAGS read getfFlags write setfFlags;
procedure setfAnyOperationsAborted(const val : BOOL);
function getfAnyOperationsAborted : BOOL;
property fAnyOperationsAborted : BOOL read getfAnyOperationsAborted write setfAnyOperationsAborted;
end;
type __SHFILEOPSTRUCTW__Wrapper = class(TDCRecordWrapper)
private
fR : SHFILEOPSTRUCTW;
public
function GetRecordPtr : pointer; override;
published
procedure setwFunc(const val : UINT);
function getwFunc : UINT;
property wFunc : UINT read getwFunc write setwFunc;
procedure setfFlags(const val : FILEOP_FLAGS);
function getfFlags : FILEOP_FLAGS;
property fFlags : FILEOP_FLAGS read getfFlags write setfFlags;
procedure setfAnyOperationsAborted(const val : BOOL);
function getfAnyOperationsAborted : BOOL;
property fAnyOperationsAborted : BOOL read getfAnyOperationsAborted write setfAnyOperationsAborted;
end;
type __SHNAMEMAPPING__Wrapper = class(TDCRecordWrapper)
private
fR : SHNAMEMAPPING;
public
function GetRecordPtr : pointer; override;
published
procedure setcchOldPath(const val : Integer);
function getcchOldPath : Integer;
property cchOldPath : Integer read getcchOldPath write setcchOldPath;
procedure setcchNewPath(const val : Integer);
function getcchNewPath : Integer;
property cchNewPath : Integer read getcchNewPath write setcchNewPath;
end;
type __SHNAMEMAPPINGA__Wrapper = class(TDCRecordWrapper)
private
fR : SHNAMEMAPPINGA;
public
function GetRecordPtr : pointer; override;
published
procedure setcchOldPath(const val : Integer);
function getcchOldPath : Integer;
property cchOldPath : Integer read getcchOldPath write setcchOldPath;
procedure setcchNewPath(const val : Integer);
function getcchNewPath : Integer;
property cchNewPath : Integer read getcchNewPath write setcchNewPath;
end;
type __SHNAMEMAPPINGW__Wrapper = class(TDCRecordWrapper)
private
fR : SHNAMEMAPPINGW;
public
function GetRecordPtr : pointer; override;
published
procedure setcchOldPath(const val : Integer);
function getcchOldPath : Integer;
property cchOldPath : Integer read getcchOldPath write setcchOldPath;
procedure setcchNewPath(const val : Integer);
function getcchNewPath : Integer;
property cchNewPath : Integer read getcchNewPath write setcchNewPath;
end;
type __TAppBarData__Wrapper = class(TDCRecordWrapper)
private
fR : TAppBarData;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setuEdge(const val : UINT);
function getuEdge : UINT;
property uEdge : UINT read getuEdge write setuEdge;
procedure setlParam(const val : lParam);
function getlParam : lParam;
property lParam : lParam read getlParam write setlParam;
end;
type __TDragInfoA__Wrapper = class(TDCRecordWrapper)
private
fR : TDragInfoA;
public
function GetRecordPtr : pointer; override;
published
procedure setuSize(const val : UINT);
function getuSize : UINT;
property uSize : UINT read getuSize write setuSize;
procedure setfNC(const val : BOOL);
function getfNC : BOOL;
property fNC : BOOL read getfNC write setfNC;
procedure setgrfKeyState(const val : DWORD);
function getgrfKeyState : DWORD;
property grfKeyState : DWORD read getgrfKeyState write setgrfKeyState;
end;
type __TDragInfoW__Wrapper = class(TDCRecordWrapper)
private
fR : TDragInfoW;
public
function GetRecordPtr : pointer; override;
published
procedure setuSize(const val : UINT);
function getuSize : UINT;
property uSize : UINT read getuSize write setuSize;
procedure setfNC(const val : BOOL);
function getfNC : BOOL;
property fNC : BOOL read getfNC write setfNC;
procedure setgrfKeyState(const val : DWORD);
function getgrfKeyState : DWORD;
property grfKeyState : DWORD read getgrfKeyState write setgrfKeyState;
end;
type __TNotifyIconData__Wrapper = class(TDCRecordWrapper)
private
fR : TNotifyIconData;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuID(const val : UINT);
function getuID : UINT;
property uID : UINT read getuID write setuID;
procedure setuFlags(const val : UINT);
function getuFlags : UINT;
property uFlags : UINT read getuFlags write setuFlags;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setdwStateMask(const val : DWORD);
function getdwStateMask : DWORD;
property dwStateMask : DWORD read getdwStateMask write setdwStateMask;
procedure setuTimeout(const val : UINT);
function getuTimeout : UINT;
property uTimeout : UINT read getuTimeout write setuTimeout;
procedure setdwInfoFlags(const val : DWORD);
function getdwInfoFlags : DWORD;
property dwInfoFlags : DWORD read getdwInfoFlags write setdwInfoFlags;
end;
type __TNotifyIconDataA__Wrapper = class(TDCRecordWrapper)
private
fR : TNotifyIconDataA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuID(const val : UINT);
function getuID : UINT;
property uID : UINT read getuID write setuID;
procedure setuFlags(const val : UINT);
function getuFlags : UINT;
property uFlags : UINT read getuFlags write setuFlags;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setdwStateMask(const val : DWORD);
function getdwStateMask : DWORD;
property dwStateMask : DWORD read getdwStateMask write setdwStateMask;
procedure setuTimeout(const val : UINT);
function getuTimeout : UINT;
property uTimeout : UINT read getuTimeout write setuTimeout;
procedure setdwInfoFlags(const val : DWORD);
function getdwInfoFlags : DWORD;
property dwInfoFlags : DWORD read getdwInfoFlags write setdwInfoFlags;
end;
type __TNotifyIconDataW__Wrapper = class(TDCRecordWrapper)
private
fR : TNotifyIconDataW;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setuID(const val : UINT);
function getuID : UINT;
property uID : UINT read getuID write setuID;
procedure setuFlags(const val : UINT);
function getuFlags : UINT;
property uFlags : UINT read getuFlags write setuFlags;
procedure setuCallbackMessage(const val : UINT);
function getuCallbackMessage : UINT;
property uCallbackMessage : UINT read getuCallbackMessage write setuCallbackMessage;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setdwStateMask(const val : DWORD);
function getdwStateMask : DWORD;
property dwStateMask : DWORD read getdwStateMask write setdwStateMask;
procedure setuTimeout(const val : UINT);
function getuTimeout : UINT;
property uTimeout : UINT read getuTimeout write setuTimeout;
procedure setdwInfoFlags(const val : DWORD);
function getdwInfoFlags : DWORD;
property dwInfoFlags : DWORD read getdwInfoFlags write setdwInfoFlags;
end;
type __TShellExecuteInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TShellExecuteInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : ULONG);
function getfMask : ULONG;
property fMask : ULONG read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure sethInstApp(const val : HINST);
function gethInstApp : HINST;
property hInstApp : HINST read gethInstApp write sethInstApp;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure setHICON(const val : THandle);
function getHICON : THandle;
property HICON : THandle read getHICON write setHICON;
procedure sethProcess(const val : THandle);
function gethProcess : THandle;
property hProcess : THandle read gethProcess write sethProcess;
end;
type __TShellExecuteInfoA__Wrapper = class(TDCRecordWrapper)
private
fR : TShellExecuteInfoA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : ULONG);
function getfMask : ULONG;
property fMask : ULONG read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure sethInstApp(const val : HINST);
function gethInstApp : HINST;
property hInstApp : HINST read gethInstApp write sethInstApp;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure setHICON(const val : THandle);
function getHICON : THandle;
property HICON : THandle read getHICON write setHICON;
procedure sethProcess(const val : THandle);
function gethProcess : THandle;
property hProcess : THandle read gethProcess write sethProcess;
end;
type __TShellExecuteInfoW__Wrapper = class(TDCRecordWrapper)
private
fR : TShellExecuteInfoW;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : ULONG);
function getfMask : ULONG;
property fMask : ULONG read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure sethInstApp(const val : HINST);
function gethInstApp : HINST;
property hInstApp : HINST read gethInstApp write sethInstApp;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure setHICON(const val : THandle);
function getHICON : THandle;
property HICON : THandle read getHICON write setHICON;
procedure sethProcess(const val : THandle);
function gethProcess : THandle;
property hProcess : THandle read gethProcess write sethProcess;
end;
type __TSHFileInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TSHFileInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setiIcon(const val : Integer);
function getiIcon : Integer;
property iIcon : Integer read getiIcon write setiIcon;
procedure setdwAttributes(const val : DWORD);
function getdwAttributes : DWORD;
property dwAttributes : DWORD read getdwAttributes write setdwAttributes;
end;
type __TSHFileInfoA__Wrapper = class(TDCRecordWrapper)
private
fR : TSHFileInfoA;
public
function GetRecordPtr : pointer; override;
published
procedure setiIcon(const val : Integer);
function getiIcon : Integer;
property iIcon : Integer read getiIcon write setiIcon;
procedure setdwAttributes(const val : DWORD);
function getdwAttributes : DWORD;
property dwAttributes : DWORD read getdwAttributes write setdwAttributes;
end;
type __TSHFileInfoW__Wrapper = class(TDCRecordWrapper)
private
fR : TSHFileInfoW;
public
function GetRecordPtr : pointer; override;
published
procedure setiIcon(const val : Integer);
function getiIcon : Integer;
property iIcon : Integer read getiIcon write setiIcon;
procedure setdwAttributes(const val : DWORD);
function getdwAttributes : DWORD;
property dwAttributes : DWORD read getdwAttributes write setdwAttributes;
end;
type __TSHFileOpStruct__Wrapper = class(TDCRecordWrapper)
private
fR : TSHFileOpStruct;
public
function GetRecordPtr : pointer; override;
published
procedure setwFunc(const val : UINT);
function getwFunc : UINT;
property wFunc : UINT read getwFunc write setwFunc;
procedure setfFlags(const val : FILEOP_FLAGS);
function getfFlags : FILEOP_FLAGS;
property fFlags : FILEOP_FLAGS read getfFlags write setfFlags;
procedure setfAnyOperationsAborted(const val : BOOL);
function getfAnyOperationsAborted : BOOL;
property fAnyOperationsAborted : BOOL read getfAnyOperationsAborted write setfAnyOperationsAborted;
end;
type __TSHFileOpStructA__Wrapper = class(TDCRecordWrapper)
private
fR : TSHFileOpStructA;
public
function GetRecordPtr : pointer; override;
published
procedure setwFunc(const val : UINT);
function getwFunc : UINT;
property wFunc : UINT read getwFunc write setwFunc;
procedure setfFlags(const val : FILEOP_FLAGS);
function getfFlags : FILEOP_FLAGS;
property fFlags : FILEOP_FLAGS read getfFlags write setfFlags;
procedure setfAnyOperationsAborted(const val : BOOL);
function getfAnyOperationsAborted : BOOL;
property fAnyOperationsAborted : BOOL read getfAnyOperationsAborted write setfAnyOperationsAborted;
end;
type __TSHFileOpStructW__Wrapper = class(TDCRecordWrapper)
private
fR : TSHFileOpStructW;
public
function GetRecordPtr : pointer; override;
published
procedure setwFunc(const val : UINT);
function getwFunc : UINT;
property wFunc : UINT read getwFunc write setwFunc;
procedure setfFlags(const val : FILEOP_FLAGS);
function getfFlags : FILEOP_FLAGS;
property fFlags : FILEOP_FLAGS read getfFlags write setfFlags;
procedure setfAnyOperationsAborted(const val : BOOL);
function getfAnyOperationsAborted : BOOL;
property fAnyOperationsAborted : BOOL read getfAnyOperationsAborted write setfAnyOperationsAborted;
end;
type __TSHNameMapping__Wrapper = class(TDCRecordWrapper)
private
fR : TSHNameMapping;
public
function GetRecordPtr : pointer; override;
published
procedure setcchOldPath(const val : Integer);
function getcchOldPath : Integer;
property cchOldPath : Integer read getcchOldPath write setcchOldPath;
procedure setcchNewPath(const val : Integer);
function getcchNewPath : Integer;
property cchNewPath : Integer read getcchNewPath write setcchNewPath;
end;
type __TSHNameMappingA__Wrapper = class(TDCRecordWrapper)
private
fR : TSHNameMappingA;
public
function GetRecordPtr : pointer; override;
published
procedure setcchOldPath(const val : Integer);
function getcchOldPath : Integer;
property cchOldPath : Integer read getcchOldPath write setcchOldPath;
procedure setcchNewPath(const val : Integer);
function getcchNewPath : Integer;
property cchNewPath : Integer read getcchNewPath write setcchNewPath;
end;
type __TSHNameMappingW__Wrapper = class(TDCRecordWrapper)
private
fR : TSHNameMappingW;
public
function GetRecordPtr : pointer; override;
published
procedure setcchOldPath(const val : Integer);
function getcchOldPath : Integer;
property cchOldPath : Integer read getcchOldPath write setcchOldPath;
procedure setcchNewPath(const val : Integer);
function getcchNewPath : Integer;
property cchNewPath : Integer read getcchNewPath write setcchNewPath;
end;
type __TPoint__Wrapper = class(TDCRecordWrapper)
private
fR : TPoint;
public
function GetRecordPtr : pointer; override;
published
procedure setX(const val : Longint);
function getX : Longint;
property X : Longint read getX write setX;
procedure setY(const val : Longint);
function getY : Longint;
property Y : Longint read getY write setY;
end;
type
{_T0 = function (p0 : HDROP;
p1 : UINT;
p2 : PChar;
p3 : UINT): UINT of object;}

{_T1 = function (p0 : HDROP;
p1 : UINT;
p2 : PAnsiChar;
p3 : UINT): UINT of object;}

{_T2 = function (p0 : HDROP;
p1 : UINT;
p2 : PWideChar;
p3 : UINT): UINT of object;}

_T3 = function (p0 : HDROP;
const p1 : IDispatch): BOOL of object;

_T4 = procedure (p0 : HDROP) of object;

_T5 = procedure (p0 : HWND;
p1 : BOOL) of object;

_T6 = function (p0 : HWND;
p1 : PChar;
p2 : PChar;
p3 : PChar;
p4 : PChar;
p5 : Integer): HINST of object;

{_T7 = function (p0 : HWND;
p1 : PAnsiChar;
p2 : PAnsiChar;
p3 : PAnsiChar;
p4 : PAnsiChar;
p5 : Integer): HINST of object;}

{_T8 = function (p0 : HWND;
p1 : PWideChar;
p2 : PWideChar;
p3 : PWideChar;
p4 : PWideChar;
p5 : Integer): HINST of object;}

{_T9 = function (p0 : PChar;
p1 : PChar;
p2 : PChar): HINST of object;}

{_T10 = function (p0 : PAnsiChar;
p1 : PAnsiChar;
p2 : PAnsiChar): HINST of object;}

{_T11 = function (p0 : PWideChar;
p1 : PWideChar;
p2 : PWideChar): HINST of object;}

{_T12 = function (p0 : LPCWSTR;
var p1 : Integer): PPWideChar of object;}

{_T13 = function (p0 : HWND;
p1 : PChar;
p2 : PChar;
p3 : HICON): Integer of object;}

{_T14 = function (p0 : HWND;
p1 : PAnsiChar;
p2 : PAnsiChar;
p3 : HICON): Integer of object;}

{_T15 = function (p0 : HWND;
p1 : PWideChar;
p2 : PWideChar;
p3 : HICON): Integer of object;}

_T16 = function (p0 : HINST;
p1 : HICON): HICON of object;

{_T17 = function (p0 : HINST;
p1 : PChar;
var p2 : Word): HICON of object;}

{_T18 = function (p0 : HINST;
p1 : PAnsiChar;
var p2 : Word): HICON of object;}

{_T19 = function (p0 : HINST;
p1 : PWideChar;
var p2 : Word): HICON of object;}

{_T20 = function (p0 : HINST;
p1 : PChar;
p2 : UINT): HICON of object;}

{_T21 = function (p0 : HINST;
p1 : PAnsiChar;
p2 : UINT): HICON of object;}

{_T22 = function (p0 : HINST;
p1 : PWideChar;
p2 : UINT): HICON of object;}

_T23 = function (p0 : DWORD;
const p1 : IDispatch): UINT of object;

{_T24 = function (p0 : PChar;
p1 : UINT): DWORD of object;}

{_T25 = function (p0 : PAnsiChar;
p1 : UINT): DWORD of object;}

{_T26 = function (p0 : PWideChar;
p1 : UINT): DWORD of object;}

{_T27 = function (p0 : PChar;
p1 : Integer;
var p2 : HICON;
var p3 : HICON;
p4 : UINT): UINT of object;}

{_T28 = function (p0 : PAnsiChar;
p1 : Integer;
var p2 : HICON;
var p3 : HICON;
p4 : UINT): UINT of object;}

{_T29 = function (p0 : PWideChar;
p1 : Integer;
var p2 : HICON;
var p3 : HICON;
p4 : UINT): UINT of object;}

_T30 = function (const p0 : IDispatch): Integer of object;

_T31 = _T30;

_T32 = _T30;

_T33 = procedure (p0 : THandle) of object;

{_T34 = function (p0 : PShellExecuteInfo): BOOL of object;}

{_T35 = function (p0 : PShellExecuteInfoA): BOOL of object;}

{_T36 = function (p0 : PShellExecuteInfoW): BOOL of object;}

{_T37 = function (p0 : DWORD;
p1 : PNotifyIconData): BOOL of object;}

{_T38 = function (p0 : DWORD;
p1 : PNotifyIconDataA): BOOL of object;}

{_T39 = function (p0 : DWORD;
p1 : PNotifyIconDataW): BOOL of object;}

function ___AppBarData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___AppBarData__Wrapper.setcbSize(const val : DWORD);
begin
_AppBarData(GetRecordPtr^).cbSize := val;
end;
function ___AppBarData__Wrapper.getcbSize : DWORD;
begin
result := _AppBarData(GetRecordPtr^).cbSize;
end;
procedure ___AppBarData__Wrapper.setuCallbackMessage(const val : UINT);
begin
_AppBarData(GetRecordPtr^).uCallbackMessage := val;
end;
function ___AppBarData__Wrapper.getuCallbackMessage : UINT;
begin
result := _AppBarData(GetRecordPtr^).uCallbackMessage;
end;
procedure ___AppBarData__Wrapper.setuEdge(const val : UINT);
begin
_AppBarData(GetRecordPtr^).uEdge := val;
end;
function ___AppBarData__Wrapper.getuEdge : UINT;
begin
result := _AppBarData(GetRecordPtr^).uEdge;
end;
procedure ___AppBarData__Wrapper.setlParam(const val : lParam);
begin
_AppBarData(GetRecordPtr^).lParam := val;
end;
function ___AppBarData__Wrapper.getlParam : lParam;
begin
result := _AppBarData(GetRecordPtr^).lParam;
end;
function ___DRAGINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___DRAGINFO__Wrapper.setuSize(const val : UINT);
begin
_DRAGINFO(GetRecordPtr^).uSize := val;
end;
function ___DRAGINFO__Wrapper.getuSize : UINT;
begin
result := _DRAGINFO(GetRecordPtr^).uSize;
end;
procedure ___DRAGINFO__Wrapper.setfNC(const val : BOOL);
begin
_DRAGINFO(GetRecordPtr^).fNC := val;
end;
function ___DRAGINFO__Wrapper.getfNC : BOOL;
begin
result := _DRAGINFO(GetRecordPtr^).fNC;
end;
procedure ___DRAGINFO__Wrapper.setgrfKeyState(const val : DWORD);
begin
_DRAGINFO(GetRecordPtr^).grfKeyState := val;
end;
function ___DRAGINFO__Wrapper.getgrfKeyState : DWORD;
begin
result := _DRAGINFO(GetRecordPtr^).grfKeyState;
end;
function ___DRAGINFOA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___DRAGINFOA__Wrapper.setuSize(const val : UINT);
begin
_DRAGINFOA(GetRecordPtr^).uSize := val;
end;
function ___DRAGINFOA__Wrapper.getuSize : UINT;
begin
result := _DRAGINFOA(GetRecordPtr^).uSize;
end;
procedure ___DRAGINFOA__Wrapper.setfNC(const val : BOOL);
begin
_DRAGINFOA(GetRecordPtr^).fNC := val;
end;
function ___DRAGINFOA__Wrapper.getfNC : BOOL;
begin
result := _DRAGINFOA(GetRecordPtr^).fNC;
end;
procedure ___DRAGINFOA__Wrapper.setgrfKeyState(const val : DWORD);
begin
_DRAGINFOA(GetRecordPtr^).grfKeyState := val;
end;
function ___DRAGINFOA__Wrapper.getgrfKeyState : DWORD;
begin
result := _DRAGINFOA(GetRecordPtr^).grfKeyState;
end;
function ___DRAGINFOW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___DRAGINFOW__Wrapper.setuSize(const val : UINT);
begin
_DRAGINFOW(GetRecordPtr^).uSize := val;
end;
function ___DRAGINFOW__Wrapper.getuSize : UINT;
begin
result := _DRAGINFOW(GetRecordPtr^).uSize;
end;
procedure ___DRAGINFOW__Wrapper.setfNC(const val : BOOL);
begin
_DRAGINFOW(GetRecordPtr^).fNC := val;
end;
function ___DRAGINFOW__Wrapper.getfNC : BOOL;
begin
result := _DRAGINFOW(GetRecordPtr^).fNC;
end;
procedure ___DRAGINFOW__Wrapper.setgrfKeyState(const val : DWORD);
begin
_DRAGINFOW(GetRecordPtr^).grfKeyState := val;
end;
function ___DRAGINFOW__Wrapper.getgrfKeyState : DWORD;
begin
result := _DRAGINFOW(GetRecordPtr^).grfKeyState;
end;
function ___NOTIFYICONDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___NOTIFYICONDATA__Wrapper.setcbSize(const val : DWORD);
begin
_NOTIFYICONDATA(GetRecordPtr^).cbSize := val;
end;
function ___NOTIFYICONDATA__Wrapper.getcbSize : DWORD;
begin
result := _NOTIFYICONDATA(GetRecordPtr^).cbSize;
end;
procedure ___NOTIFYICONDATA__Wrapper.setuID(const val : UINT);
begin
_NOTIFYICONDATA(GetRecordPtr^).uID := val;
end;
function ___NOTIFYICONDATA__Wrapper.getuID : UINT;
begin
result := _NOTIFYICONDATA(GetRecordPtr^).uID;
end;
procedure ___NOTIFYICONDATA__Wrapper.setuFlags(const val : UINT);
begin
_NOTIFYICONDATA(GetRecordPtr^).uFlags := val;
end;
function ___NOTIFYICONDATA__Wrapper.getuFlags : UINT;
begin
result := _NOTIFYICONDATA(GetRecordPtr^).uFlags;
end;
procedure ___NOTIFYICONDATA__Wrapper.setuCallbackMessage(const val : UINT);
begin
_NOTIFYICONDATA(GetRecordPtr^).uCallbackMessage := val;
end;
function ___NOTIFYICONDATA__Wrapper.getuCallbackMessage : UINT;
begin
result := _NOTIFYICONDATA(GetRecordPtr^).uCallbackMessage;
end;
procedure ___NOTIFYICONDATA__Wrapper.setdwState(const val : DWORD);
begin
_NOTIFYICONDATA(GetRecordPtr^).dwState := val;
end;
function ___NOTIFYICONDATA__Wrapper.getdwState : DWORD;
begin
result := _NOTIFYICONDATA(GetRecordPtr^).dwState;
end;
procedure ___NOTIFYICONDATA__Wrapper.setdwStateMask(const val : DWORD);
begin
_NOTIFYICONDATA(GetRecordPtr^).dwStateMask := val;
end;
function ___NOTIFYICONDATA__Wrapper.getdwStateMask : DWORD;
begin
result := _NOTIFYICONDATA(GetRecordPtr^).dwStateMask;
end;
procedure ___NOTIFYICONDATA__Wrapper.setuTimeout(const val : UINT);
begin
_NOTIFYICONDATA(GetRecordPtr^).uTimeout := val;
end;
function ___NOTIFYICONDATA__Wrapper.getuTimeout : UINT;
begin
result := _NOTIFYICONDATA(GetRecordPtr^).uTimeout;
end;
procedure ___NOTIFYICONDATA__Wrapper.setdwInfoFlags(const val : DWORD);
begin
_NOTIFYICONDATA(GetRecordPtr^).dwInfoFlags := val;
end;
function ___NOTIFYICONDATA__Wrapper.getdwInfoFlags : DWORD;
begin
result := _NOTIFYICONDATA(GetRecordPtr^).dwInfoFlags;
end;
function ___NOTIFYICONDATAA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___NOTIFYICONDATAA__Wrapper.setcbSize(const val : DWORD);
begin
_NOTIFYICONDATAA(GetRecordPtr^).cbSize := val;
end;
function ___NOTIFYICONDATAA__Wrapper.getcbSize : DWORD;
begin
result := _NOTIFYICONDATAA(GetRecordPtr^).cbSize;
end;
procedure ___NOTIFYICONDATAA__Wrapper.setuID(const val : UINT);
begin
_NOTIFYICONDATAA(GetRecordPtr^).uID := val;
end;
function ___NOTIFYICONDATAA__Wrapper.getuID : UINT;
begin
result := _NOTIFYICONDATAA(GetRecordPtr^).uID;
end;
procedure ___NOTIFYICONDATAA__Wrapper.setuFlags(const val : UINT);
begin
_NOTIFYICONDATAA(GetRecordPtr^).uFlags := val;
end;
function ___NOTIFYICONDATAA__Wrapper.getuFlags : UINT;
begin
result := _NOTIFYICONDATAA(GetRecordPtr^).uFlags;
end;
procedure ___NOTIFYICONDATAA__Wrapper.setuCallbackMessage(const val : UINT);
begin
_NOTIFYICONDATAA(GetRecordPtr^).uCallbackMessage := val;
end;
function ___NOTIFYICONDATAA__Wrapper.getuCallbackMessage : UINT;
begin
result := _NOTIFYICONDATAA(GetRecordPtr^).uCallbackMessage;
end;
procedure ___NOTIFYICONDATAA__Wrapper.setdwState(const val : DWORD);
begin
_NOTIFYICONDATAA(GetRecordPtr^).dwState := val;
end;
function ___NOTIFYICONDATAA__Wrapper.getdwState : DWORD;
begin
result := _NOTIFYICONDATAA(GetRecordPtr^).dwState;
end;
procedure ___NOTIFYICONDATAA__Wrapper.setdwStateMask(const val : DWORD);
begin
_NOTIFYICONDATAA(GetRecordPtr^).dwStateMask := val;
end;
function ___NOTIFYICONDATAA__Wrapper.getdwStateMask : DWORD;
begin
result := _NOTIFYICONDATAA(GetRecordPtr^).dwStateMask;
end;
procedure ___NOTIFYICONDATAA__Wrapper.setuTimeout(const val : UINT);
begin
_NOTIFYICONDATAA(GetRecordPtr^).uTimeout := val;
end;
function ___NOTIFYICONDATAA__Wrapper.getuTimeout : UINT;
begin
result := _NOTIFYICONDATAA(GetRecordPtr^).uTimeout;
end;
procedure ___NOTIFYICONDATAA__Wrapper.setdwInfoFlags(const val : DWORD);
begin
_NOTIFYICONDATAA(GetRecordPtr^).dwInfoFlags := val;
end;
function ___NOTIFYICONDATAA__Wrapper.getdwInfoFlags : DWORD;
begin
result := _NOTIFYICONDATAA(GetRecordPtr^).dwInfoFlags;
end;
function ___NOTIFYICONDATAW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___NOTIFYICONDATAW__Wrapper.setcbSize(const val : DWORD);
begin
_NOTIFYICONDATAW(GetRecordPtr^).cbSize := val;
end;
function ___NOTIFYICONDATAW__Wrapper.getcbSize : DWORD;
begin
result := _NOTIFYICONDATAW(GetRecordPtr^).cbSize;
end;
procedure ___NOTIFYICONDATAW__Wrapper.setuID(const val : UINT);
begin
_NOTIFYICONDATAW(GetRecordPtr^).uID := val;
end;
function ___NOTIFYICONDATAW__Wrapper.getuID : UINT;
begin
result := _NOTIFYICONDATAW(GetRecordPtr^).uID;
end;
procedure ___NOTIFYICONDATAW__Wrapper.setuFlags(const val : UINT);
begin
_NOTIFYICONDATAW(GetRecordPtr^).uFlags := val;
end;
function ___NOTIFYICONDATAW__Wrapper.getuFlags : UINT;
begin
result := _NOTIFYICONDATAW(GetRecordPtr^).uFlags;
end;
procedure ___NOTIFYICONDATAW__Wrapper.setuCallbackMessage(const val : UINT);
begin
_NOTIFYICONDATAW(GetRecordPtr^).uCallbackMessage := val;
end;
function ___NOTIFYICONDATAW__Wrapper.getuCallbackMessage : UINT;
begin
result := _NOTIFYICONDATAW(GetRecordPtr^).uCallbackMessage;
end;
procedure ___NOTIFYICONDATAW__Wrapper.setdwState(const val : DWORD);
begin
_NOTIFYICONDATAW(GetRecordPtr^).dwState := val;
end;
function ___NOTIFYICONDATAW__Wrapper.getdwState : DWORD;
begin
result := _NOTIFYICONDATAW(GetRecordPtr^).dwState;
end;
procedure ___NOTIFYICONDATAW__Wrapper.setdwStateMask(const val : DWORD);
begin
_NOTIFYICONDATAW(GetRecordPtr^).dwStateMask := val;
end;
function ___NOTIFYICONDATAW__Wrapper.getdwStateMask : DWORD;
begin
result := _NOTIFYICONDATAW(GetRecordPtr^).dwStateMask;
end;
procedure ___NOTIFYICONDATAW__Wrapper.setuTimeout(const val : UINT);
begin
_NOTIFYICONDATAW(GetRecordPtr^).uTimeout := val;
end;
function ___NOTIFYICONDATAW__Wrapper.getuTimeout : UINT;
begin
result := _NOTIFYICONDATAW(GetRecordPtr^).uTimeout;
end;
procedure ___NOTIFYICONDATAW__Wrapper.setdwInfoFlags(const val : DWORD);
begin
_NOTIFYICONDATAW(GetRecordPtr^).dwInfoFlags := val;
end;
function ___NOTIFYICONDATAW__Wrapper.getdwInfoFlags : DWORD;
begin
result := _NOTIFYICONDATAW(GetRecordPtr^).dwInfoFlags;
end;
function ___SHELLEXECUTEINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHELLEXECUTEINFO__Wrapper.setcbSize(const val : DWORD);
begin
_SHELLEXECUTEINFO(GetRecordPtr^).cbSize := val;
end;
function ___SHELLEXECUTEINFO__Wrapper.getcbSize : DWORD;
begin
result := _SHELLEXECUTEINFO(GetRecordPtr^).cbSize;
end;
procedure ___SHELLEXECUTEINFO__Wrapper.setfMask(const val : ULONG);
begin
_SHELLEXECUTEINFO(GetRecordPtr^).fMask := val;
end;
function ___SHELLEXECUTEINFO__Wrapper.getfMask : ULONG;
begin
result := _SHELLEXECUTEINFO(GetRecordPtr^).fMask;
end;
procedure ___SHELLEXECUTEINFO__Wrapper.setnShow(const val : Integer);
begin
_SHELLEXECUTEINFO(GetRecordPtr^).nShow := val;
end;
function ___SHELLEXECUTEINFO__Wrapper.getnShow : Integer;
begin
result := _SHELLEXECUTEINFO(GetRecordPtr^).nShow;
end;
procedure ___SHELLEXECUTEINFO__Wrapper.sethInstApp(const val : HINST);
begin
_SHELLEXECUTEINFO(GetRecordPtr^).hInstApp := val;
end;
function ___SHELLEXECUTEINFO__Wrapper.gethInstApp : HINST;
begin
result := _SHELLEXECUTEINFO(GetRecordPtr^).hInstApp;
end;
procedure ___SHELLEXECUTEINFO__Wrapper.setdwHotKey(const val : DWORD);
begin
_SHELLEXECUTEINFO(GetRecordPtr^).dwHotKey := val;
end;
function ___SHELLEXECUTEINFO__Wrapper.getdwHotKey : DWORD;
begin
result := _SHELLEXECUTEINFO(GetRecordPtr^).dwHotKey;
end;
procedure ___SHELLEXECUTEINFO__Wrapper.setHICON(const val : THandle);
begin
_SHELLEXECUTEINFO(GetRecordPtr^).HICON := val;
end;
function ___SHELLEXECUTEINFO__Wrapper.getHICON : THandle;
begin
result := _SHELLEXECUTEINFO(GetRecordPtr^).HICON;
end;
procedure ___SHELLEXECUTEINFO__Wrapper.sethProcess(const val : THandle);
begin
_SHELLEXECUTEINFO(GetRecordPtr^).hProcess := val;
end;
function ___SHELLEXECUTEINFO__Wrapper.gethProcess : THandle;
begin
result := _SHELLEXECUTEINFO(GetRecordPtr^).hProcess;
end;
function ___SHELLEXECUTEINFOA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHELLEXECUTEINFOA__Wrapper.setcbSize(const val : DWORD);
begin
_SHELLEXECUTEINFOA(GetRecordPtr^).cbSize := val;
end;
function ___SHELLEXECUTEINFOA__Wrapper.getcbSize : DWORD;
begin
result := _SHELLEXECUTEINFOA(GetRecordPtr^).cbSize;
end;
procedure ___SHELLEXECUTEINFOA__Wrapper.setfMask(const val : ULONG);
begin
_SHELLEXECUTEINFOA(GetRecordPtr^).fMask := val;
end;
function ___SHELLEXECUTEINFOA__Wrapper.getfMask : ULONG;
begin
result := _SHELLEXECUTEINFOA(GetRecordPtr^).fMask;
end;
procedure ___SHELLEXECUTEINFOA__Wrapper.setnShow(const val : Integer);
begin
_SHELLEXECUTEINFOA(GetRecordPtr^).nShow := val;
end;
function ___SHELLEXECUTEINFOA__Wrapper.getnShow : Integer;
begin
result := _SHELLEXECUTEINFOA(GetRecordPtr^).nShow;
end;
procedure ___SHELLEXECUTEINFOA__Wrapper.sethInstApp(const val : HINST);
begin
_SHELLEXECUTEINFOA(GetRecordPtr^).hInstApp := val;
end;
function ___SHELLEXECUTEINFOA__Wrapper.gethInstApp : HINST;
begin
result := _SHELLEXECUTEINFOA(GetRecordPtr^).hInstApp;
end;
procedure ___SHELLEXECUTEINFOA__Wrapper.setdwHotKey(const val : DWORD);
begin
_SHELLEXECUTEINFOA(GetRecordPtr^).dwHotKey := val;
end;
function ___SHELLEXECUTEINFOA__Wrapper.getdwHotKey : DWORD;
begin
result := _SHELLEXECUTEINFOA(GetRecordPtr^).dwHotKey;
end;
procedure ___SHELLEXECUTEINFOA__Wrapper.setHICON(const val : THandle);
begin
_SHELLEXECUTEINFOA(GetRecordPtr^).HICON := val;
end;
function ___SHELLEXECUTEINFOA__Wrapper.getHICON : THandle;
begin
result := _SHELLEXECUTEINFOA(GetRecordPtr^).HICON;
end;
procedure ___SHELLEXECUTEINFOA__Wrapper.sethProcess(const val : THandle);
begin
_SHELLEXECUTEINFOA(GetRecordPtr^).hProcess := val;
end;
function ___SHELLEXECUTEINFOA__Wrapper.gethProcess : THandle;
begin
result := _SHELLEXECUTEINFOA(GetRecordPtr^).hProcess;
end;
function ___SHELLEXECUTEINFOW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHELLEXECUTEINFOW__Wrapper.setcbSize(const val : DWORD);
begin
_SHELLEXECUTEINFOW(GetRecordPtr^).cbSize := val;
end;
function ___SHELLEXECUTEINFOW__Wrapper.getcbSize : DWORD;
begin
result := _SHELLEXECUTEINFOW(GetRecordPtr^).cbSize;
end;
procedure ___SHELLEXECUTEINFOW__Wrapper.setfMask(const val : ULONG);
begin
_SHELLEXECUTEINFOW(GetRecordPtr^).fMask := val;
end;
function ___SHELLEXECUTEINFOW__Wrapper.getfMask : ULONG;
begin
result := _SHELLEXECUTEINFOW(GetRecordPtr^).fMask;
end;
procedure ___SHELLEXECUTEINFOW__Wrapper.setnShow(const val : Integer);
begin
_SHELLEXECUTEINFOW(GetRecordPtr^).nShow := val;
end;
function ___SHELLEXECUTEINFOW__Wrapper.getnShow : Integer;
begin
result := _SHELLEXECUTEINFOW(GetRecordPtr^).nShow;
end;
procedure ___SHELLEXECUTEINFOW__Wrapper.sethInstApp(const val : HINST);
begin
_SHELLEXECUTEINFOW(GetRecordPtr^).hInstApp := val;
end;
function ___SHELLEXECUTEINFOW__Wrapper.gethInstApp : HINST;
begin
result := _SHELLEXECUTEINFOW(GetRecordPtr^).hInstApp;
end;
procedure ___SHELLEXECUTEINFOW__Wrapper.setdwHotKey(const val : DWORD);
begin
_SHELLEXECUTEINFOW(GetRecordPtr^).dwHotKey := val;
end;
function ___SHELLEXECUTEINFOW__Wrapper.getdwHotKey : DWORD;
begin
result := _SHELLEXECUTEINFOW(GetRecordPtr^).dwHotKey;
end;
procedure ___SHELLEXECUTEINFOW__Wrapper.setHICON(const val : THandle);
begin
_SHELLEXECUTEINFOW(GetRecordPtr^).HICON := val;
end;
function ___SHELLEXECUTEINFOW__Wrapper.getHICON : THandle;
begin
result := _SHELLEXECUTEINFOW(GetRecordPtr^).HICON;
end;
procedure ___SHELLEXECUTEINFOW__Wrapper.sethProcess(const val : THandle);
begin
_SHELLEXECUTEINFOW(GetRecordPtr^).hProcess := val;
end;
function ___SHELLEXECUTEINFOW__Wrapper.gethProcess : THandle;
begin
result := _SHELLEXECUTEINFOW(GetRecordPtr^).hProcess;
end;
function ___SHFILEINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHFILEINFO__Wrapper.setiIcon(const val : Integer);
begin
_SHFILEINFO(GetRecordPtr^).iIcon := val;
end;
function ___SHFILEINFO__Wrapper.getiIcon : Integer;
begin
result := _SHFILEINFO(GetRecordPtr^).iIcon;
end;
procedure ___SHFILEINFO__Wrapper.setdwAttributes(const val : DWORD);
begin
_SHFILEINFO(GetRecordPtr^).dwAttributes := val;
end;
function ___SHFILEINFO__Wrapper.getdwAttributes : DWORD;
begin
result := _SHFILEINFO(GetRecordPtr^).dwAttributes;
end;
function ___SHFILEINFOA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHFILEINFOA__Wrapper.setiIcon(const val : Integer);
begin
_SHFILEINFOA(GetRecordPtr^).iIcon := val;
end;
function ___SHFILEINFOA__Wrapper.getiIcon : Integer;
begin
result := _SHFILEINFOA(GetRecordPtr^).iIcon;
end;
procedure ___SHFILEINFOA__Wrapper.setdwAttributes(const val : DWORD);
begin
_SHFILEINFOA(GetRecordPtr^).dwAttributes := val;
end;
function ___SHFILEINFOA__Wrapper.getdwAttributes : DWORD;
begin
result := _SHFILEINFOA(GetRecordPtr^).dwAttributes;
end;
function ___SHFILEINFOW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHFILEINFOW__Wrapper.setiIcon(const val : Integer);
begin
_SHFILEINFOW(GetRecordPtr^).iIcon := val;
end;
function ___SHFILEINFOW__Wrapper.getiIcon : Integer;
begin
result := _SHFILEINFOW(GetRecordPtr^).iIcon;
end;
procedure ___SHFILEINFOW__Wrapper.setdwAttributes(const val : DWORD);
begin
_SHFILEINFOW(GetRecordPtr^).dwAttributes := val;
end;
function ___SHFILEINFOW__Wrapper.getdwAttributes : DWORD;
begin
result := _SHFILEINFOW(GetRecordPtr^).dwAttributes;
end;
function ___SHFILEOPSTRUCT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHFILEOPSTRUCT__Wrapper.setwFunc(const val : UINT);
begin
_SHFILEOPSTRUCT(GetRecordPtr^).wFunc := val;
end;
function ___SHFILEOPSTRUCT__Wrapper.getwFunc : UINT;
begin
result := _SHFILEOPSTRUCT(GetRecordPtr^).wFunc;
end;
procedure ___SHFILEOPSTRUCT__Wrapper.setfFlags(const val : FILEOP_FLAGS);
begin
_SHFILEOPSTRUCT(GetRecordPtr^).fFlags := val;
end;
function ___SHFILEOPSTRUCT__Wrapper.getfFlags : FILEOP_FLAGS;
begin
result := _SHFILEOPSTRUCT(GetRecordPtr^).fFlags;
end;
procedure ___SHFILEOPSTRUCT__Wrapper.setfAnyOperationsAborted(const val : BOOL);
begin
_SHFILEOPSTRUCT(GetRecordPtr^).fAnyOperationsAborted := val;
end;
function ___SHFILEOPSTRUCT__Wrapper.getfAnyOperationsAborted : BOOL;
begin
result := _SHFILEOPSTRUCT(GetRecordPtr^).fAnyOperationsAborted;
end;
function ___SHFILEOPSTRUCTA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHFILEOPSTRUCTA__Wrapper.setwFunc(const val : UINT);
begin
_SHFILEOPSTRUCTA(GetRecordPtr^).wFunc := val;
end;
function ___SHFILEOPSTRUCTA__Wrapper.getwFunc : UINT;
begin
result := _SHFILEOPSTRUCTA(GetRecordPtr^).wFunc;
end;
procedure ___SHFILEOPSTRUCTA__Wrapper.setfFlags(const val : FILEOP_FLAGS);
begin
_SHFILEOPSTRUCTA(GetRecordPtr^).fFlags := val;
end;
function ___SHFILEOPSTRUCTA__Wrapper.getfFlags : FILEOP_FLAGS;
begin
result := _SHFILEOPSTRUCTA(GetRecordPtr^).fFlags;
end;
procedure ___SHFILEOPSTRUCTA__Wrapper.setfAnyOperationsAborted(const val : BOOL);
begin
_SHFILEOPSTRUCTA(GetRecordPtr^).fAnyOperationsAborted := val;
end;
function ___SHFILEOPSTRUCTA__Wrapper.getfAnyOperationsAborted : BOOL;
begin
result := _SHFILEOPSTRUCTA(GetRecordPtr^).fAnyOperationsAborted;
end;
function ___SHFILEOPSTRUCTW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHFILEOPSTRUCTW__Wrapper.setwFunc(const val : UINT);
begin
_SHFILEOPSTRUCTW(GetRecordPtr^).wFunc := val;
end;
function ___SHFILEOPSTRUCTW__Wrapper.getwFunc : UINT;
begin
result := _SHFILEOPSTRUCTW(GetRecordPtr^).wFunc;
end;
procedure ___SHFILEOPSTRUCTW__Wrapper.setfFlags(const val : FILEOP_FLAGS);
begin
_SHFILEOPSTRUCTW(GetRecordPtr^).fFlags := val;
end;
function ___SHFILEOPSTRUCTW__Wrapper.getfFlags : FILEOP_FLAGS;
begin
result := _SHFILEOPSTRUCTW(GetRecordPtr^).fFlags;
end;
procedure ___SHFILEOPSTRUCTW__Wrapper.setfAnyOperationsAborted(const val : BOOL);
begin
_SHFILEOPSTRUCTW(GetRecordPtr^).fAnyOperationsAborted := val;
end;
function ___SHFILEOPSTRUCTW__Wrapper.getfAnyOperationsAborted : BOOL;
begin
result := _SHFILEOPSTRUCTW(GetRecordPtr^).fAnyOperationsAborted;
end;
function ___SHNAMEMAPPING__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHNAMEMAPPING__Wrapper.setcchOldPath(const val : Integer);
begin
_SHNAMEMAPPING(GetRecordPtr^).cchOldPath := val;
end;
function ___SHNAMEMAPPING__Wrapper.getcchOldPath : Integer;
begin
result := _SHNAMEMAPPING(GetRecordPtr^).cchOldPath;
end;
procedure ___SHNAMEMAPPING__Wrapper.setcchNewPath(const val : Integer);
begin
_SHNAMEMAPPING(GetRecordPtr^).cchNewPath := val;
end;
function ___SHNAMEMAPPING__Wrapper.getcchNewPath : Integer;
begin
result := _SHNAMEMAPPING(GetRecordPtr^).cchNewPath;
end;
function ___SHNAMEMAPPINGA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHNAMEMAPPINGA__Wrapper.setcchOldPath(const val : Integer);
begin
_SHNAMEMAPPINGA(GetRecordPtr^).cchOldPath := val;
end;
function ___SHNAMEMAPPINGA__Wrapper.getcchOldPath : Integer;
begin
result := _SHNAMEMAPPINGA(GetRecordPtr^).cchOldPath;
end;
procedure ___SHNAMEMAPPINGA__Wrapper.setcchNewPath(const val : Integer);
begin
_SHNAMEMAPPINGA(GetRecordPtr^).cchNewPath := val;
end;
function ___SHNAMEMAPPINGA__Wrapper.getcchNewPath : Integer;
begin
result := _SHNAMEMAPPINGA(GetRecordPtr^).cchNewPath;
end;
function ___SHNAMEMAPPINGW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHNAMEMAPPINGW__Wrapper.setcchOldPath(const val : Integer);
begin
_SHNAMEMAPPINGW(GetRecordPtr^).cchOldPath := val;
end;
function ___SHNAMEMAPPINGW__Wrapper.getcchOldPath : Integer;
begin
result := _SHNAMEMAPPINGW(GetRecordPtr^).cchOldPath;
end;
procedure ___SHNAMEMAPPINGW__Wrapper.setcchNewPath(const val : Integer);
begin
_SHNAMEMAPPINGW(GetRecordPtr^).cchNewPath := val;
end;
function ___SHNAMEMAPPINGW__Wrapper.getcchNewPath : Integer;
begin
result := _SHNAMEMAPPINGW(GetRecordPtr^).cchNewPath;
end;
function __APPBARDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __APPBARDATA__Wrapper.setcbSize(const val : DWORD);
begin
APPBARDATA(GetRecordPtr^).cbSize := val;
end;
function __APPBARDATA__Wrapper.getcbSize : DWORD;
begin
result := APPBARDATA(GetRecordPtr^).cbSize;
end;
procedure __APPBARDATA__Wrapper.setuCallbackMessage(const val : UINT);
begin
APPBARDATA(GetRecordPtr^).uCallbackMessage := val;
end;
function __APPBARDATA__Wrapper.getuCallbackMessage : UINT;
begin
result := APPBARDATA(GetRecordPtr^).uCallbackMessage;
end;
procedure __APPBARDATA__Wrapper.setuEdge(const val : UINT);
begin
APPBARDATA(GetRecordPtr^).uEdge := val;
end;
function __APPBARDATA__Wrapper.getuEdge : UINT;
begin
result := APPBARDATA(GetRecordPtr^).uEdge;
end;
procedure __APPBARDATA__Wrapper.setlParam(const val : lParam);
begin
APPBARDATA(GetRecordPtr^).lParam := val;
end;
function __APPBARDATA__Wrapper.getlParam : lParam;
begin
result := APPBARDATA(GetRecordPtr^).lParam;
end;
function __NOTIFYICONDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __NOTIFYICONDATA__Wrapper.setcbSize(const val : DWORD);
begin
NOTIFYICONDATA(GetRecordPtr^).cbSize := val;
end;
function __NOTIFYICONDATA__Wrapper.getcbSize : DWORD;
begin
result := NOTIFYICONDATA(GetRecordPtr^).cbSize;
end;
procedure __NOTIFYICONDATA__Wrapper.setuID(const val : UINT);
begin
NOTIFYICONDATA(GetRecordPtr^).uID := val;
end;
function __NOTIFYICONDATA__Wrapper.getuID : UINT;
begin
result := NOTIFYICONDATA(GetRecordPtr^).uID;
end;
procedure __NOTIFYICONDATA__Wrapper.setuFlags(const val : UINT);
begin
NOTIFYICONDATA(GetRecordPtr^).uFlags := val;
end;
function __NOTIFYICONDATA__Wrapper.getuFlags : UINT;
begin
result := NOTIFYICONDATA(GetRecordPtr^).uFlags;
end;
procedure __NOTIFYICONDATA__Wrapper.setuCallbackMessage(const val : UINT);
begin
NOTIFYICONDATA(GetRecordPtr^).uCallbackMessage := val;
end;
function __NOTIFYICONDATA__Wrapper.getuCallbackMessage : UINT;
begin
result := NOTIFYICONDATA(GetRecordPtr^).uCallbackMessage;
end;
procedure __NOTIFYICONDATA__Wrapper.setdwState(const val : DWORD);
begin
NOTIFYICONDATA(GetRecordPtr^).dwState := val;
end;
function __NOTIFYICONDATA__Wrapper.getdwState : DWORD;
begin
result := NOTIFYICONDATA(GetRecordPtr^).dwState;
end;
procedure __NOTIFYICONDATA__Wrapper.setdwStateMask(const val : DWORD);
begin
NOTIFYICONDATA(GetRecordPtr^).dwStateMask := val;
end;
function __NOTIFYICONDATA__Wrapper.getdwStateMask : DWORD;
begin
result := NOTIFYICONDATA(GetRecordPtr^).dwStateMask;
end;
procedure __NOTIFYICONDATA__Wrapper.setuTimeout(const val : UINT);
begin
NOTIFYICONDATA(GetRecordPtr^).uTimeout := val;
end;
function __NOTIFYICONDATA__Wrapper.getuTimeout : UINT;
begin
result := NOTIFYICONDATA(GetRecordPtr^).uTimeout;
end;
procedure __NOTIFYICONDATA__Wrapper.setdwInfoFlags(const val : DWORD);
begin
NOTIFYICONDATA(GetRecordPtr^).dwInfoFlags := val;
end;
function __NOTIFYICONDATA__Wrapper.getdwInfoFlags : DWORD;
begin
result := NOTIFYICONDATA(GetRecordPtr^).dwInfoFlags;
end;
function __NOTIFYICONDATAA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __NOTIFYICONDATAA__Wrapper.setcbSize(const val : DWORD);
begin
NOTIFYICONDATAA(GetRecordPtr^).cbSize := val;
end;
function __NOTIFYICONDATAA__Wrapper.getcbSize : DWORD;
begin
result := NOTIFYICONDATAA(GetRecordPtr^).cbSize;
end;
procedure __NOTIFYICONDATAA__Wrapper.setuID(const val : UINT);
begin
NOTIFYICONDATAA(GetRecordPtr^).uID := val;
end;
function __NOTIFYICONDATAA__Wrapper.getuID : UINT;
begin
result := NOTIFYICONDATAA(GetRecordPtr^).uID;
end;
procedure __NOTIFYICONDATAA__Wrapper.setuFlags(const val : UINT);
begin
NOTIFYICONDATAA(GetRecordPtr^).uFlags := val;
end;
function __NOTIFYICONDATAA__Wrapper.getuFlags : UINT;
begin
result := NOTIFYICONDATAA(GetRecordPtr^).uFlags;
end;
procedure __NOTIFYICONDATAA__Wrapper.setuCallbackMessage(const val : UINT);
begin
NOTIFYICONDATAA(GetRecordPtr^).uCallbackMessage := val;
end;
function __NOTIFYICONDATAA__Wrapper.getuCallbackMessage : UINT;
begin
result := NOTIFYICONDATAA(GetRecordPtr^).uCallbackMessage;
end;
procedure __NOTIFYICONDATAA__Wrapper.setdwState(const val : DWORD);
begin
NOTIFYICONDATAA(GetRecordPtr^).dwState := val;
end;
function __NOTIFYICONDATAA__Wrapper.getdwState : DWORD;
begin
result := NOTIFYICONDATAA(GetRecordPtr^).dwState;
end;
procedure __NOTIFYICONDATAA__Wrapper.setdwStateMask(const val : DWORD);
begin
NOTIFYICONDATAA(GetRecordPtr^).dwStateMask := val;
end;
function __NOTIFYICONDATAA__Wrapper.getdwStateMask : DWORD;
begin
result := NOTIFYICONDATAA(GetRecordPtr^).dwStateMask;
end;
procedure __NOTIFYICONDATAA__Wrapper.setuTimeout(const val : UINT);
begin
NOTIFYICONDATAA(GetRecordPtr^).uTimeout := val;
end;
function __NOTIFYICONDATAA__Wrapper.getuTimeout : UINT;
begin
result := NOTIFYICONDATAA(GetRecordPtr^).uTimeout;
end;
procedure __NOTIFYICONDATAA__Wrapper.setdwInfoFlags(const val : DWORD);
begin
NOTIFYICONDATAA(GetRecordPtr^).dwInfoFlags := val;
end;
function __NOTIFYICONDATAA__Wrapper.getdwInfoFlags : DWORD;
begin
result := NOTIFYICONDATAA(GetRecordPtr^).dwInfoFlags;
end;
function __NOTIFYICONDATAW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __NOTIFYICONDATAW__Wrapper.setcbSize(const val : DWORD);
begin
NOTIFYICONDATAW(GetRecordPtr^).cbSize := val;
end;
function __NOTIFYICONDATAW__Wrapper.getcbSize : DWORD;
begin
result := NOTIFYICONDATAW(GetRecordPtr^).cbSize;
end;
procedure __NOTIFYICONDATAW__Wrapper.setuID(const val : UINT);
begin
NOTIFYICONDATAW(GetRecordPtr^).uID := val;
end;
function __NOTIFYICONDATAW__Wrapper.getuID : UINT;
begin
result := NOTIFYICONDATAW(GetRecordPtr^).uID;
end;
procedure __NOTIFYICONDATAW__Wrapper.setuFlags(const val : UINT);
begin
NOTIFYICONDATAW(GetRecordPtr^).uFlags := val;
end;
function __NOTIFYICONDATAW__Wrapper.getuFlags : UINT;
begin
result := NOTIFYICONDATAW(GetRecordPtr^).uFlags;
end;
procedure __NOTIFYICONDATAW__Wrapper.setuCallbackMessage(const val : UINT);
begin
NOTIFYICONDATAW(GetRecordPtr^).uCallbackMessage := val;
end;
function __NOTIFYICONDATAW__Wrapper.getuCallbackMessage : UINT;
begin
result := NOTIFYICONDATAW(GetRecordPtr^).uCallbackMessage;
end;
procedure __NOTIFYICONDATAW__Wrapper.setdwState(const val : DWORD);
begin
NOTIFYICONDATAW(GetRecordPtr^).dwState := val;
end;
function __NOTIFYICONDATAW__Wrapper.getdwState : DWORD;
begin
result := NOTIFYICONDATAW(GetRecordPtr^).dwState;
end;
procedure __NOTIFYICONDATAW__Wrapper.setdwStateMask(const val : DWORD);
begin
NOTIFYICONDATAW(GetRecordPtr^).dwStateMask := val;
end;
function __NOTIFYICONDATAW__Wrapper.getdwStateMask : DWORD;
begin
result := NOTIFYICONDATAW(GetRecordPtr^).dwStateMask;
end;
procedure __NOTIFYICONDATAW__Wrapper.setuTimeout(const val : UINT);
begin
NOTIFYICONDATAW(GetRecordPtr^).uTimeout := val;
end;
function __NOTIFYICONDATAW__Wrapper.getuTimeout : UINT;
begin
result := NOTIFYICONDATAW(GetRecordPtr^).uTimeout;
end;
procedure __NOTIFYICONDATAW__Wrapper.setdwInfoFlags(const val : DWORD);
begin
NOTIFYICONDATAW(GetRecordPtr^).dwInfoFlags := val;
end;
function __NOTIFYICONDATAW__Wrapper.getdwInfoFlags : DWORD;
begin
result := NOTIFYICONDATAW(GetRecordPtr^).dwInfoFlags;
end;
function __SHELLEXECUTEINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHELLEXECUTEINFO__Wrapper.setcbSize(const val : DWORD);
begin
SHELLEXECUTEINFO(GetRecordPtr^).cbSize := val;
end;
function __SHELLEXECUTEINFO__Wrapper.getcbSize : DWORD;
begin
result := SHELLEXECUTEINFO(GetRecordPtr^).cbSize;
end;
procedure __SHELLEXECUTEINFO__Wrapper.setfMask(const val : ULONG);
begin
SHELLEXECUTEINFO(GetRecordPtr^).fMask := val;
end;
function __SHELLEXECUTEINFO__Wrapper.getfMask : ULONG;
begin
result := SHELLEXECUTEINFO(GetRecordPtr^).fMask;
end;
procedure __SHELLEXECUTEINFO__Wrapper.setnShow(const val : Integer);
begin
SHELLEXECUTEINFO(GetRecordPtr^).nShow := val;
end;
function __SHELLEXECUTEINFO__Wrapper.getnShow : Integer;
begin
result := SHELLEXECUTEINFO(GetRecordPtr^).nShow;
end;
procedure __SHELLEXECUTEINFO__Wrapper.sethInstApp(const val : HINST);
begin
SHELLEXECUTEINFO(GetRecordPtr^).hInstApp := val;
end;
function __SHELLEXECUTEINFO__Wrapper.gethInstApp : HINST;
begin
result := SHELLEXECUTEINFO(GetRecordPtr^).hInstApp;
end;
procedure __SHELLEXECUTEINFO__Wrapper.setdwHotKey(const val : DWORD);
begin
SHELLEXECUTEINFO(GetRecordPtr^).dwHotKey := val;
end;
function __SHELLEXECUTEINFO__Wrapper.getdwHotKey : DWORD;
begin
result := SHELLEXECUTEINFO(GetRecordPtr^).dwHotKey;
end;
procedure __SHELLEXECUTEINFO__Wrapper.setHICON(const val : THandle);
begin
SHELLEXECUTEINFO(GetRecordPtr^).HICON := val;
end;
function __SHELLEXECUTEINFO__Wrapper.getHICON : THandle;
begin
result := SHELLEXECUTEINFO(GetRecordPtr^).HICON;
end;
procedure __SHELLEXECUTEINFO__Wrapper.sethProcess(const val : THandle);
begin
SHELLEXECUTEINFO(GetRecordPtr^).hProcess := val;
end;
function __SHELLEXECUTEINFO__Wrapper.gethProcess : THandle;
begin
result := SHELLEXECUTEINFO(GetRecordPtr^).hProcess;
end;
function __SHELLEXECUTEINFOA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHELLEXECUTEINFOA__Wrapper.setcbSize(const val : DWORD);
begin
SHELLEXECUTEINFOA(GetRecordPtr^).cbSize := val;
end;
function __SHELLEXECUTEINFOA__Wrapper.getcbSize : DWORD;
begin
result := SHELLEXECUTEINFOA(GetRecordPtr^).cbSize;
end;
procedure __SHELLEXECUTEINFOA__Wrapper.setfMask(const val : ULONG);
begin
SHELLEXECUTEINFOA(GetRecordPtr^).fMask := val;
end;
function __SHELLEXECUTEINFOA__Wrapper.getfMask : ULONG;
begin
result := SHELLEXECUTEINFOA(GetRecordPtr^).fMask;
end;
procedure __SHELLEXECUTEINFOA__Wrapper.setnShow(const val : Integer);
begin
SHELLEXECUTEINFOA(GetRecordPtr^).nShow := val;
end;
function __SHELLEXECUTEINFOA__Wrapper.getnShow : Integer;
begin
result := SHELLEXECUTEINFOA(GetRecordPtr^).nShow;
end;
procedure __SHELLEXECUTEINFOA__Wrapper.sethInstApp(const val : HINST);
begin
SHELLEXECUTEINFOA(GetRecordPtr^).hInstApp := val;
end;
function __SHELLEXECUTEINFOA__Wrapper.gethInstApp : HINST;
begin
result := SHELLEXECUTEINFOA(GetRecordPtr^).hInstApp;
end;
procedure __SHELLEXECUTEINFOA__Wrapper.setdwHotKey(const val : DWORD);
begin
SHELLEXECUTEINFOA(GetRecordPtr^).dwHotKey := val;
end;
function __SHELLEXECUTEINFOA__Wrapper.getdwHotKey : DWORD;
begin
result := SHELLEXECUTEINFOA(GetRecordPtr^).dwHotKey;
end;
procedure __SHELLEXECUTEINFOA__Wrapper.setHICON(const val : THandle);
begin
SHELLEXECUTEINFOA(GetRecordPtr^).HICON := val;
end;
function __SHELLEXECUTEINFOA__Wrapper.getHICON : THandle;
begin
result := SHELLEXECUTEINFOA(GetRecordPtr^).HICON;
end;
procedure __SHELLEXECUTEINFOA__Wrapper.sethProcess(const val : THandle);
begin
SHELLEXECUTEINFOA(GetRecordPtr^).hProcess := val;
end;
function __SHELLEXECUTEINFOA__Wrapper.gethProcess : THandle;
begin
result := SHELLEXECUTEINFOA(GetRecordPtr^).hProcess;
end;
function __SHELLEXECUTEINFOW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHELLEXECUTEINFOW__Wrapper.setcbSize(const val : DWORD);
begin
SHELLEXECUTEINFOW(GetRecordPtr^).cbSize := val;
end;
function __SHELLEXECUTEINFOW__Wrapper.getcbSize : DWORD;
begin
result := SHELLEXECUTEINFOW(GetRecordPtr^).cbSize;
end;
procedure __SHELLEXECUTEINFOW__Wrapper.setfMask(const val : ULONG);
begin
SHELLEXECUTEINFOW(GetRecordPtr^).fMask := val;
end;
function __SHELLEXECUTEINFOW__Wrapper.getfMask : ULONG;
begin
result := SHELLEXECUTEINFOW(GetRecordPtr^).fMask;
end;
procedure __SHELLEXECUTEINFOW__Wrapper.setnShow(const val : Integer);
begin
SHELLEXECUTEINFOW(GetRecordPtr^).nShow := val;
end;
function __SHELLEXECUTEINFOW__Wrapper.getnShow : Integer;
begin
result := SHELLEXECUTEINFOW(GetRecordPtr^).nShow;
end;
procedure __SHELLEXECUTEINFOW__Wrapper.sethInstApp(const val : HINST);
begin
SHELLEXECUTEINFOW(GetRecordPtr^).hInstApp := val;
end;
function __SHELLEXECUTEINFOW__Wrapper.gethInstApp : HINST;
begin
result := SHELLEXECUTEINFOW(GetRecordPtr^).hInstApp;
end;
procedure __SHELLEXECUTEINFOW__Wrapper.setdwHotKey(const val : DWORD);
begin
SHELLEXECUTEINFOW(GetRecordPtr^).dwHotKey := val;
end;
function __SHELLEXECUTEINFOW__Wrapper.getdwHotKey : DWORD;
begin
result := SHELLEXECUTEINFOW(GetRecordPtr^).dwHotKey;
end;
procedure __SHELLEXECUTEINFOW__Wrapper.setHICON(const val : THandle);
begin
SHELLEXECUTEINFOW(GetRecordPtr^).HICON := val;
end;
function __SHELLEXECUTEINFOW__Wrapper.getHICON : THandle;
begin
result := SHELLEXECUTEINFOW(GetRecordPtr^).HICON;
end;
procedure __SHELLEXECUTEINFOW__Wrapper.sethProcess(const val : THandle);
begin
SHELLEXECUTEINFOW(GetRecordPtr^).hProcess := val;
end;
function __SHELLEXECUTEINFOW__Wrapper.gethProcess : THandle;
begin
result := SHELLEXECUTEINFOW(GetRecordPtr^).hProcess;
end;
function __SHFILEINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHFILEINFO__Wrapper.setiIcon(const val : Integer);
begin
SHFILEINFO(GetRecordPtr^).iIcon := val;
end;
function __SHFILEINFO__Wrapper.getiIcon : Integer;
begin
result := SHFILEINFO(GetRecordPtr^).iIcon;
end;
procedure __SHFILEINFO__Wrapper.setdwAttributes(const val : DWORD);
begin
SHFILEINFO(GetRecordPtr^).dwAttributes := val;
end;
function __SHFILEINFO__Wrapper.getdwAttributes : DWORD;
begin
result := SHFILEINFO(GetRecordPtr^).dwAttributes;
end;
function __SHFILEINFOA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHFILEINFOA__Wrapper.setiIcon(const val : Integer);
begin
SHFILEINFOA(GetRecordPtr^).iIcon := val;
end;
function __SHFILEINFOA__Wrapper.getiIcon : Integer;
begin
result := SHFILEINFOA(GetRecordPtr^).iIcon;
end;
procedure __SHFILEINFOA__Wrapper.setdwAttributes(const val : DWORD);
begin
SHFILEINFOA(GetRecordPtr^).dwAttributes := val;
end;
function __SHFILEINFOA__Wrapper.getdwAttributes : DWORD;
begin
result := SHFILEINFOA(GetRecordPtr^).dwAttributes;
end;
function __SHFILEINFOW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHFILEINFOW__Wrapper.setiIcon(const val : Integer);
begin
SHFILEINFOW(GetRecordPtr^).iIcon := val;
end;
function __SHFILEINFOW__Wrapper.getiIcon : Integer;
begin
result := SHFILEINFOW(GetRecordPtr^).iIcon;
end;
procedure __SHFILEINFOW__Wrapper.setdwAttributes(const val : DWORD);
begin
SHFILEINFOW(GetRecordPtr^).dwAttributes := val;
end;
function __SHFILEINFOW__Wrapper.getdwAttributes : DWORD;
begin
result := SHFILEINFOW(GetRecordPtr^).dwAttributes;
end;
function __SHFILEOPSTRUCT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHFILEOPSTRUCT__Wrapper.setwFunc(const val : UINT);
begin
SHFILEOPSTRUCT(GetRecordPtr^).wFunc := val;
end;
function __SHFILEOPSTRUCT__Wrapper.getwFunc : UINT;
begin
result := SHFILEOPSTRUCT(GetRecordPtr^).wFunc;
end;
procedure __SHFILEOPSTRUCT__Wrapper.setfFlags(const val : FILEOP_FLAGS);
begin
SHFILEOPSTRUCT(GetRecordPtr^).fFlags := val;
end;
function __SHFILEOPSTRUCT__Wrapper.getfFlags : FILEOP_FLAGS;
begin
result := SHFILEOPSTRUCT(GetRecordPtr^).fFlags;
end;
procedure __SHFILEOPSTRUCT__Wrapper.setfAnyOperationsAborted(const val : BOOL);
begin
SHFILEOPSTRUCT(GetRecordPtr^).fAnyOperationsAborted := val;
end;
function __SHFILEOPSTRUCT__Wrapper.getfAnyOperationsAborted : BOOL;
begin
result := SHFILEOPSTRUCT(GetRecordPtr^).fAnyOperationsAborted;
end;
function __SHFILEOPSTRUCTA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHFILEOPSTRUCTA__Wrapper.setwFunc(const val : UINT);
begin
SHFILEOPSTRUCTA(GetRecordPtr^).wFunc := val;
end;
function __SHFILEOPSTRUCTA__Wrapper.getwFunc : UINT;
begin
result := SHFILEOPSTRUCTA(GetRecordPtr^).wFunc;
end;
procedure __SHFILEOPSTRUCTA__Wrapper.setfFlags(const val : FILEOP_FLAGS);
begin
SHFILEOPSTRUCTA(GetRecordPtr^).fFlags := val;
end;
function __SHFILEOPSTRUCTA__Wrapper.getfFlags : FILEOP_FLAGS;
begin
result := SHFILEOPSTRUCTA(GetRecordPtr^).fFlags;
end;
procedure __SHFILEOPSTRUCTA__Wrapper.setfAnyOperationsAborted(const val : BOOL);
begin
SHFILEOPSTRUCTA(GetRecordPtr^).fAnyOperationsAborted := val;
end;
function __SHFILEOPSTRUCTA__Wrapper.getfAnyOperationsAborted : BOOL;
begin
result := SHFILEOPSTRUCTA(GetRecordPtr^).fAnyOperationsAborted;
end;
function __SHFILEOPSTRUCTW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHFILEOPSTRUCTW__Wrapper.setwFunc(const val : UINT);
begin
SHFILEOPSTRUCTW(GetRecordPtr^).wFunc := val;
end;
function __SHFILEOPSTRUCTW__Wrapper.getwFunc : UINT;
begin
result := SHFILEOPSTRUCTW(GetRecordPtr^).wFunc;
end;
procedure __SHFILEOPSTRUCTW__Wrapper.setfFlags(const val : FILEOP_FLAGS);
begin
SHFILEOPSTRUCTW(GetRecordPtr^).fFlags := val;
end;
function __SHFILEOPSTRUCTW__Wrapper.getfFlags : FILEOP_FLAGS;
begin
result := SHFILEOPSTRUCTW(GetRecordPtr^).fFlags;
end;
procedure __SHFILEOPSTRUCTW__Wrapper.setfAnyOperationsAborted(const val : BOOL);
begin
SHFILEOPSTRUCTW(GetRecordPtr^).fAnyOperationsAborted := val;
end;
function __SHFILEOPSTRUCTW__Wrapper.getfAnyOperationsAborted : BOOL;
begin
result := SHFILEOPSTRUCTW(GetRecordPtr^).fAnyOperationsAborted;
end;
function __SHNAMEMAPPING__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHNAMEMAPPING__Wrapper.setcchOldPath(const val : Integer);
begin
SHNAMEMAPPING(GetRecordPtr^).cchOldPath := val;
end;
function __SHNAMEMAPPING__Wrapper.getcchOldPath : Integer;
begin
result := SHNAMEMAPPING(GetRecordPtr^).cchOldPath;
end;
procedure __SHNAMEMAPPING__Wrapper.setcchNewPath(const val : Integer);
begin
SHNAMEMAPPING(GetRecordPtr^).cchNewPath := val;
end;
function __SHNAMEMAPPING__Wrapper.getcchNewPath : Integer;
begin
result := SHNAMEMAPPING(GetRecordPtr^).cchNewPath;
end;
function __SHNAMEMAPPINGA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHNAMEMAPPINGA__Wrapper.setcchOldPath(const val : Integer);
begin
SHNAMEMAPPINGA(GetRecordPtr^).cchOldPath := val;
end;
function __SHNAMEMAPPINGA__Wrapper.getcchOldPath : Integer;
begin
result := SHNAMEMAPPINGA(GetRecordPtr^).cchOldPath;
end;
procedure __SHNAMEMAPPINGA__Wrapper.setcchNewPath(const val : Integer);
begin
SHNAMEMAPPINGA(GetRecordPtr^).cchNewPath := val;
end;
function __SHNAMEMAPPINGA__Wrapper.getcchNewPath : Integer;
begin
result := SHNAMEMAPPINGA(GetRecordPtr^).cchNewPath;
end;
function __SHNAMEMAPPINGW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHNAMEMAPPINGW__Wrapper.setcchOldPath(const val : Integer);
begin
SHNAMEMAPPINGW(GetRecordPtr^).cchOldPath := val;
end;
function __SHNAMEMAPPINGW__Wrapper.getcchOldPath : Integer;
begin
result := SHNAMEMAPPINGW(GetRecordPtr^).cchOldPath;
end;
procedure __SHNAMEMAPPINGW__Wrapper.setcchNewPath(const val : Integer);
begin
SHNAMEMAPPINGW(GetRecordPtr^).cchNewPath := val;
end;
function __SHNAMEMAPPINGW__Wrapper.getcchNewPath : Integer;
begin
result := SHNAMEMAPPINGW(GetRecordPtr^).cchNewPath;
end;
function __TAppBarData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TAppBarData__Wrapper.setcbSize(const val : DWORD);
begin
TAppBarData(GetRecordPtr^).cbSize := val;
end;
function __TAppBarData__Wrapper.getcbSize : DWORD;
begin
result := TAppBarData(GetRecordPtr^).cbSize;
end;
procedure __TAppBarData__Wrapper.setuCallbackMessage(const val : UINT);
begin
TAppBarData(GetRecordPtr^).uCallbackMessage := val;
end;
function __TAppBarData__Wrapper.getuCallbackMessage : UINT;
begin
result := TAppBarData(GetRecordPtr^).uCallbackMessage;
end;
procedure __TAppBarData__Wrapper.setuEdge(const val : UINT);
begin
TAppBarData(GetRecordPtr^).uEdge := val;
end;
function __TAppBarData__Wrapper.getuEdge : UINT;
begin
result := TAppBarData(GetRecordPtr^).uEdge;
end;
procedure __TAppBarData__Wrapper.setlParam(const val : lParam);
begin
TAppBarData(GetRecordPtr^).lParam := val;
end;
function __TAppBarData__Wrapper.getlParam : lParam;
begin
result := TAppBarData(GetRecordPtr^).lParam;
end;
function __TDragInfoA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDragInfoA__Wrapper.setuSize(const val : UINT);
begin
TDragInfoA(GetRecordPtr^).uSize := val;
end;
function __TDragInfoA__Wrapper.getuSize : UINT;
begin
result := TDragInfoA(GetRecordPtr^).uSize;
end;
procedure __TDragInfoA__Wrapper.setfNC(const val : BOOL);
begin
TDragInfoA(GetRecordPtr^).fNC := val;
end;
function __TDragInfoA__Wrapper.getfNC : BOOL;
begin
result := TDragInfoA(GetRecordPtr^).fNC;
end;
procedure __TDragInfoA__Wrapper.setgrfKeyState(const val : DWORD);
begin
TDragInfoA(GetRecordPtr^).grfKeyState := val;
end;
function __TDragInfoA__Wrapper.getgrfKeyState : DWORD;
begin
result := TDragInfoA(GetRecordPtr^).grfKeyState;
end;
function __TDragInfoW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDragInfoW__Wrapper.setuSize(const val : UINT);
begin
TDragInfoW(GetRecordPtr^).uSize := val;
end;
function __TDragInfoW__Wrapper.getuSize : UINT;
begin
result := TDragInfoW(GetRecordPtr^).uSize;
end;
procedure __TDragInfoW__Wrapper.setfNC(const val : BOOL);
begin
TDragInfoW(GetRecordPtr^).fNC := val;
end;
function __TDragInfoW__Wrapper.getfNC : BOOL;
begin
result := TDragInfoW(GetRecordPtr^).fNC;
end;
procedure __TDragInfoW__Wrapper.setgrfKeyState(const val : DWORD);
begin
TDragInfoW(GetRecordPtr^).grfKeyState := val;
end;
function __TDragInfoW__Wrapper.getgrfKeyState : DWORD;
begin
result := TDragInfoW(GetRecordPtr^).grfKeyState;
end;
function __TNotifyIconData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TNotifyIconData__Wrapper.setcbSize(const val : DWORD);
begin
TNotifyIconData(GetRecordPtr^).cbSize := val;
end;
function __TNotifyIconData__Wrapper.getcbSize : DWORD;
begin
result := TNotifyIconData(GetRecordPtr^).cbSize;
end;
procedure __TNotifyIconData__Wrapper.setuID(const val : UINT);
begin
TNotifyIconData(GetRecordPtr^).uID := val;
end;
function __TNotifyIconData__Wrapper.getuID : UINT;
begin
result := TNotifyIconData(GetRecordPtr^).uID;
end;
procedure __TNotifyIconData__Wrapper.setuFlags(const val : UINT);
begin
TNotifyIconData(GetRecordPtr^).uFlags := val;
end;
function __TNotifyIconData__Wrapper.getuFlags : UINT;
begin
result := TNotifyIconData(GetRecordPtr^).uFlags;
end;
procedure __TNotifyIconData__Wrapper.setuCallbackMessage(const val : UINT);
begin
TNotifyIconData(GetRecordPtr^).uCallbackMessage := val;
end;
function __TNotifyIconData__Wrapper.getuCallbackMessage : UINT;
begin
result := TNotifyIconData(GetRecordPtr^).uCallbackMessage;
end;
procedure __TNotifyIconData__Wrapper.setdwState(const val : DWORD);
begin
TNotifyIconData(GetRecordPtr^).dwState := val;
end;
function __TNotifyIconData__Wrapper.getdwState : DWORD;
begin
result := TNotifyIconData(GetRecordPtr^).dwState;
end;
procedure __TNotifyIconData__Wrapper.setdwStateMask(const val : DWORD);
begin
TNotifyIconData(GetRecordPtr^).dwStateMask := val;
end;
function __TNotifyIconData__Wrapper.getdwStateMask : DWORD;
begin
result := TNotifyIconData(GetRecordPtr^).dwStateMask;
end;
procedure __TNotifyIconData__Wrapper.setuTimeout(const val : UINT);
begin
TNotifyIconData(GetRecordPtr^).uTimeout := val;
end;
function __TNotifyIconData__Wrapper.getuTimeout : UINT;
begin
result := TNotifyIconData(GetRecordPtr^).uTimeout;
end;
procedure __TNotifyIconData__Wrapper.setdwInfoFlags(const val : DWORD);
begin
TNotifyIconData(GetRecordPtr^).dwInfoFlags := val;
end;
function __TNotifyIconData__Wrapper.getdwInfoFlags : DWORD;
begin
result := TNotifyIconData(GetRecordPtr^).dwInfoFlags;
end;
function __TNotifyIconDataA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TNotifyIconDataA__Wrapper.setcbSize(const val : DWORD);
begin
TNotifyIconDataA(GetRecordPtr^).cbSize := val;
end;
function __TNotifyIconDataA__Wrapper.getcbSize : DWORD;
begin
result := TNotifyIconDataA(GetRecordPtr^).cbSize;
end;
procedure __TNotifyIconDataA__Wrapper.setuID(const val : UINT);
begin
TNotifyIconDataA(GetRecordPtr^).uID := val;
end;
function __TNotifyIconDataA__Wrapper.getuID : UINT;
begin
result := TNotifyIconDataA(GetRecordPtr^).uID;
end;
procedure __TNotifyIconDataA__Wrapper.setuFlags(const val : UINT);
begin
TNotifyIconDataA(GetRecordPtr^).uFlags := val;
end;
function __TNotifyIconDataA__Wrapper.getuFlags : UINT;
begin
result := TNotifyIconDataA(GetRecordPtr^).uFlags;
end;
procedure __TNotifyIconDataA__Wrapper.setuCallbackMessage(const val : UINT);
begin
TNotifyIconDataA(GetRecordPtr^).uCallbackMessage := val;
end;
function __TNotifyIconDataA__Wrapper.getuCallbackMessage : UINT;
begin
result := TNotifyIconDataA(GetRecordPtr^).uCallbackMessage;
end;
procedure __TNotifyIconDataA__Wrapper.setdwState(const val : DWORD);
begin
TNotifyIconDataA(GetRecordPtr^).dwState := val;
end;
function __TNotifyIconDataA__Wrapper.getdwState : DWORD;
begin
result := TNotifyIconDataA(GetRecordPtr^).dwState;
end;
procedure __TNotifyIconDataA__Wrapper.setdwStateMask(const val : DWORD);
begin
TNotifyIconDataA(GetRecordPtr^).dwStateMask := val;
end;
function __TNotifyIconDataA__Wrapper.getdwStateMask : DWORD;
begin
result := TNotifyIconDataA(GetRecordPtr^).dwStateMask;
end;
procedure __TNotifyIconDataA__Wrapper.setuTimeout(const val : UINT);
begin
TNotifyIconDataA(GetRecordPtr^).uTimeout := val;
end;
function __TNotifyIconDataA__Wrapper.getuTimeout : UINT;
begin
result := TNotifyIconDataA(GetRecordPtr^).uTimeout;
end;
procedure __TNotifyIconDataA__Wrapper.setdwInfoFlags(const val : DWORD);
begin
TNotifyIconDataA(GetRecordPtr^).dwInfoFlags := val;
end;
function __TNotifyIconDataA__Wrapper.getdwInfoFlags : DWORD;
begin
result := TNotifyIconDataA(GetRecordPtr^).dwInfoFlags;
end;
function __TNotifyIconDataW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TNotifyIconDataW__Wrapper.setcbSize(const val : DWORD);
begin
TNotifyIconDataW(GetRecordPtr^).cbSize := val;
end;
function __TNotifyIconDataW__Wrapper.getcbSize : DWORD;
begin
result := TNotifyIconDataW(GetRecordPtr^).cbSize;
end;
procedure __TNotifyIconDataW__Wrapper.setuID(const val : UINT);
begin
TNotifyIconDataW(GetRecordPtr^).uID := val;
end;
function __TNotifyIconDataW__Wrapper.getuID : UINT;
begin
result := TNotifyIconDataW(GetRecordPtr^).uID;
end;
procedure __TNotifyIconDataW__Wrapper.setuFlags(const val : UINT);
begin
TNotifyIconDataW(GetRecordPtr^).uFlags := val;
end;
function __TNotifyIconDataW__Wrapper.getuFlags : UINT;
begin
result := TNotifyIconDataW(GetRecordPtr^).uFlags;
end;
procedure __TNotifyIconDataW__Wrapper.setuCallbackMessage(const val : UINT);
begin
TNotifyIconDataW(GetRecordPtr^).uCallbackMessage := val;
end;
function __TNotifyIconDataW__Wrapper.getuCallbackMessage : UINT;
begin
result := TNotifyIconDataW(GetRecordPtr^).uCallbackMessage;
end;
procedure __TNotifyIconDataW__Wrapper.setdwState(const val : DWORD);
begin
TNotifyIconDataW(GetRecordPtr^).dwState := val;
end;
function __TNotifyIconDataW__Wrapper.getdwState : DWORD;
begin
result := TNotifyIconDataW(GetRecordPtr^).dwState;
end;
procedure __TNotifyIconDataW__Wrapper.setdwStateMask(const val : DWORD);
begin
TNotifyIconDataW(GetRecordPtr^).dwStateMask := val;
end;
function __TNotifyIconDataW__Wrapper.getdwStateMask : DWORD;
begin
result := TNotifyIconDataW(GetRecordPtr^).dwStateMask;
end;
procedure __TNotifyIconDataW__Wrapper.setuTimeout(const val : UINT);
begin
TNotifyIconDataW(GetRecordPtr^).uTimeout := val;
end;
function __TNotifyIconDataW__Wrapper.getuTimeout : UINT;
begin
result := TNotifyIconDataW(GetRecordPtr^).uTimeout;
end;
procedure __TNotifyIconDataW__Wrapper.setdwInfoFlags(const val : DWORD);
begin
TNotifyIconDataW(GetRecordPtr^).dwInfoFlags := val;
end;
function __TNotifyIconDataW__Wrapper.getdwInfoFlags : DWORD;
begin
result := TNotifyIconDataW(GetRecordPtr^).dwInfoFlags;
end;
function __TShellExecuteInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TShellExecuteInfo__Wrapper.setcbSize(const val : DWORD);
begin
TShellExecuteInfo(GetRecordPtr^).cbSize := val;
end;
function __TShellExecuteInfo__Wrapper.getcbSize : DWORD;
begin
result := TShellExecuteInfo(GetRecordPtr^).cbSize;
end;
procedure __TShellExecuteInfo__Wrapper.setfMask(const val : ULONG);
begin
TShellExecuteInfo(GetRecordPtr^).fMask := val;
end;
function __TShellExecuteInfo__Wrapper.getfMask : ULONG;
begin
result := TShellExecuteInfo(GetRecordPtr^).fMask;
end;
procedure __TShellExecuteInfo__Wrapper.setnShow(const val : Integer);
begin
TShellExecuteInfo(GetRecordPtr^).nShow := val;
end;
function __TShellExecuteInfo__Wrapper.getnShow : Integer;
begin
result := TShellExecuteInfo(GetRecordPtr^).nShow;
end;
procedure __TShellExecuteInfo__Wrapper.sethInstApp(const val : HINST);
begin
TShellExecuteInfo(GetRecordPtr^).hInstApp := val;
end;
function __TShellExecuteInfo__Wrapper.gethInstApp : HINST;
begin
result := TShellExecuteInfo(GetRecordPtr^).hInstApp;
end;
procedure __TShellExecuteInfo__Wrapper.setdwHotKey(const val : DWORD);
begin
TShellExecuteInfo(GetRecordPtr^).dwHotKey := val;
end;
function __TShellExecuteInfo__Wrapper.getdwHotKey : DWORD;
begin
result := TShellExecuteInfo(GetRecordPtr^).dwHotKey;
end;
procedure __TShellExecuteInfo__Wrapper.setHICON(const val : THandle);
begin
TShellExecuteInfo(GetRecordPtr^).HICON := val;
end;
function __TShellExecuteInfo__Wrapper.getHICON : THandle;
begin
result := TShellExecuteInfo(GetRecordPtr^).HICON;
end;
procedure __TShellExecuteInfo__Wrapper.sethProcess(const val : THandle);
begin
TShellExecuteInfo(GetRecordPtr^).hProcess := val;
end;
function __TShellExecuteInfo__Wrapper.gethProcess : THandle;
begin
result := TShellExecuteInfo(GetRecordPtr^).hProcess;
end;
function __TShellExecuteInfoA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TShellExecuteInfoA__Wrapper.setcbSize(const val : DWORD);
begin
TShellExecuteInfoA(GetRecordPtr^).cbSize := val;
end;
function __TShellExecuteInfoA__Wrapper.getcbSize : DWORD;
begin
result := TShellExecuteInfoA(GetRecordPtr^).cbSize;
end;
procedure __TShellExecuteInfoA__Wrapper.setfMask(const val : ULONG);
begin
TShellExecuteInfoA(GetRecordPtr^).fMask := val;
end;
function __TShellExecuteInfoA__Wrapper.getfMask : ULONG;
begin
result := TShellExecuteInfoA(GetRecordPtr^).fMask;
end;
procedure __TShellExecuteInfoA__Wrapper.setnShow(const val : Integer);
begin
TShellExecuteInfoA(GetRecordPtr^).nShow := val;
end;
function __TShellExecuteInfoA__Wrapper.getnShow : Integer;
begin
result := TShellExecuteInfoA(GetRecordPtr^).nShow;
end;
procedure __TShellExecuteInfoA__Wrapper.sethInstApp(const val : HINST);
begin
TShellExecuteInfoA(GetRecordPtr^).hInstApp := val;
end;
function __TShellExecuteInfoA__Wrapper.gethInstApp : HINST;
begin
result := TShellExecuteInfoA(GetRecordPtr^).hInstApp;
end;
procedure __TShellExecuteInfoA__Wrapper.setdwHotKey(const val : DWORD);
begin
TShellExecuteInfoA(GetRecordPtr^).dwHotKey := val;
end;
function __TShellExecuteInfoA__Wrapper.getdwHotKey : DWORD;
begin
result := TShellExecuteInfoA(GetRecordPtr^).dwHotKey;
end;
procedure __TShellExecuteInfoA__Wrapper.setHICON(const val : THandle);
begin
TShellExecuteInfoA(GetRecordPtr^).HICON := val;
end;
function __TShellExecuteInfoA__Wrapper.getHICON : THandle;
begin
result := TShellExecuteInfoA(GetRecordPtr^).HICON;
end;
procedure __TShellExecuteInfoA__Wrapper.sethProcess(const val : THandle);
begin
TShellExecuteInfoA(GetRecordPtr^).hProcess := val;
end;
function __TShellExecuteInfoA__Wrapper.gethProcess : THandle;
begin
result := TShellExecuteInfoA(GetRecordPtr^).hProcess;
end;
function __TShellExecuteInfoW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TShellExecuteInfoW__Wrapper.setcbSize(const val : DWORD);
begin
TShellExecuteInfoW(GetRecordPtr^).cbSize := val;
end;
function __TShellExecuteInfoW__Wrapper.getcbSize : DWORD;
begin
result := TShellExecuteInfoW(GetRecordPtr^).cbSize;
end;
procedure __TShellExecuteInfoW__Wrapper.setfMask(const val : ULONG);
begin
TShellExecuteInfoW(GetRecordPtr^).fMask := val;
end;
function __TShellExecuteInfoW__Wrapper.getfMask : ULONG;
begin
result := TShellExecuteInfoW(GetRecordPtr^).fMask;
end;
procedure __TShellExecuteInfoW__Wrapper.setnShow(const val : Integer);
begin
TShellExecuteInfoW(GetRecordPtr^).nShow := val;
end;
function __TShellExecuteInfoW__Wrapper.getnShow : Integer;
begin
result := TShellExecuteInfoW(GetRecordPtr^).nShow;
end;
procedure __TShellExecuteInfoW__Wrapper.sethInstApp(const val : HINST);
begin
TShellExecuteInfoW(GetRecordPtr^).hInstApp := val;
end;
function __TShellExecuteInfoW__Wrapper.gethInstApp : HINST;
begin
result := TShellExecuteInfoW(GetRecordPtr^).hInstApp;
end;
procedure __TShellExecuteInfoW__Wrapper.setdwHotKey(const val : DWORD);
begin
TShellExecuteInfoW(GetRecordPtr^).dwHotKey := val;
end;
function __TShellExecuteInfoW__Wrapper.getdwHotKey : DWORD;
begin
result := TShellExecuteInfoW(GetRecordPtr^).dwHotKey;
end;
procedure __TShellExecuteInfoW__Wrapper.setHICON(const val : THandle);
begin
TShellExecuteInfoW(GetRecordPtr^).HICON := val;
end;
function __TShellExecuteInfoW__Wrapper.getHICON : THandle;
begin
result := TShellExecuteInfoW(GetRecordPtr^).HICON;
end;
procedure __TShellExecuteInfoW__Wrapper.sethProcess(const val : THandle);
begin
TShellExecuteInfoW(GetRecordPtr^).hProcess := val;
end;
function __TShellExecuteInfoW__Wrapper.gethProcess : THandle;
begin
result := TShellExecuteInfoW(GetRecordPtr^).hProcess;
end;
function __TSHFileInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHFileInfo__Wrapper.setiIcon(const val : Integer);
begin
TSHFileInfo(GetRecordPtr^).iIcon := val;
end;
function __TSHFileInfo__Wrapper.getiIcon : Integer;
begin
result := TSHFileInfo(GetRecordPtr^).iIcon;
end;
procedure __TSHFileInfo__Wrapper.setdwAttributes(const val : DWORD);
begin
TSHFileInfo(GetRecordPtr^).dwAttributes := val;
end;
function __TSHFileInfo__Wrapper.getdwAttributes : DWORD;
begin
result := TSHFileInfo(GetRecordPtr^).dwAttributes;
end;
function __TSHFileInfoA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHFileInfoA__Wrapper.setiIcon(const val : Integer);
begin
TSHFileInfoA(GetRecordPtr^).iIcon := val;
end;
function __TSHFileInfoA__Wrapper.getiIcon : Integer;
begin
result := TSHFileInfoA(GetRecordPtr^).iIcon;
end;
procedure __TSHFileInfoA__Wrapper.setdwAttributes(const val : DWORD);
begin
TSHFileInfoA(GetRecordPtr^).dwAttributes := val;
end;
function __TSHFileInfoA__Wrapper.getdwAttributes : DWORD;
begin
result := TSHFileInfoA(GetRecordPtr^).dwAttributes;
end;
function __TSHFileInfoW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHFileInfoW__Wrapper.setiIcon(const val : Integer);
begin
TSHFileInfoW(GetRecordPtr^).iIcon := val;
end;
function __TSHFileInfoW__Wrapper.getiIcon : Integer;
begin
result := TSHFileInfoW(GetRecordPtr^).iIcon;
end;
procedure __TSHFileInfoW__Wrapper.setdwAttributes(const val : DWORD);
begin
TSHFileInfoW(GetRecordPtr^).dwAttributes := val;
end;
function __TSHFileInfoW__Wrapper.getdwAttributes : DWORD;
begin
result := TSHFileInfoW(GetRecordPtr^).dwAttributes;
end;
function __TSHFileOpStruct__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHFileOpStruct__Wrapper.setwFunc(const val : UINT);
begin
TSHFileOpStruct(GetRecordPtr^).wFunc := val;
end;
function __TSHFileOpStruct__Wrapper.getwFunc : UINT;
begin
result := TSHFileOpStruct(GetRecordPtr^).wFunc;
end;
procedure __TSHFileOpStruct__Wrapper.setfFlags(const val : FILEOP_FLAGS);
begin
TSHFileOpStruct(GetRecordPtr^).fFlags := val;
end;
function __TSHFileOpStruct__Wrapper.getfFlags : FILEOP_FLAGS;
begin
result := TSHFileOpStruct(GetRecordPtr^).fFlags;
end;
procedure __TSHFileOpStruct__Wrapper.setfAnyOperationsAborted(const val : BOOL);
begin
TSHFileOpStruct(GetRecordPtr^).fAnyOperationsAborted := val;
end;
function __TSHFileOpStruct__Wrapper.getfAnyOperationsAborted : BOOL;
begin
result := TSHFileOpStruct(GetRecordPtr^).fAnyOperationsAborted;
end;
function __TSHFileOpStructA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHFileOpStructA__Wrapper.setwFunc(const val : UINT);
begin
TSHFileOpStructA(GetRecordPtr^).wFunc := val;
end;
function __TSHFileOpStructA__Wrapper.getwFunc : UINT;
begin
result := TSHFileOpStructA(GetRecordPtr^).wFunc;
end;
procedure __TSHFileOpStructA__Wrapper.setfFlags(const val : FILEOP_FLAGS);
begin
TSHFileOpStructA(GetRecordPtr^).fFlags := val;
end;
function __TSHFileOpStructA__Wrapper.getfFlags : FILEOP_FLAGS;
begin
result := TSHFileOpStructA(GetRecordPtr^).fFlags;
end;
procedure __TSHFileOpStructA__Wrapper.setfAnyOperationsAborted(const val : BOOL);
begin
TSHFileOpStructA(GetRecordPtr^).fAnyOperationsAborted := val;
end;
function __TSHFileOpStructA__Wrapper.getfAnyOperationsAborted : BOOL;
begin
result := TSHFileOpStructA(GetRecordPtr^).fAnyOperationsAborted;
end;
function __TSHFileOpStructW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHFileOpStructW__Wrapper.setwFunc(const val : UINT);
begin
TSHFileOpStructW(GetRecordPtr^).wFunc := val;
end;
function __TSHFileOpStructW__Wrapper.getwFunc : UINT;
begin
result := TSHFileOpStructW(GetRecordPtr^).wFunc;
end;
procedure __TSHFileOpStructW__Wrapper.setfFlags(const val : FILEOP_FLAGS);
begin
TSHFileOpStructW(GetRecordPtr^).fFlags := val;
end;
function __TSHFileOpStructW__Wrapper.getfFlags : FILEOP_FLAGS;
begin
result := TSHFileOpStructW(GetRecordPtr^).fFlags;
end;
procedure __TSHFileOpStructW__Wrapper.setfAnyOperationsAborted(const val : BOOL);
begin
TSHFileOpStructW(GetRecordPtr^).fAnyOperationsAborted := val;
end;
function __TSHFileOpStructW__Wrapper.getfAnyOperationsAborted : BOOL;
begin
result := TSHFileOpStructW(GetRecordPtr^).fAnyOperationsAborted;
end;
function __TSHNameMapping__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHNameMapping__Wrapper.setcchOldPath(const val : Integer);
begin
TSHNameMapping(GetRecordPtr^).cchOldPath := val;
end;
function __TSHNameMapping__Wrapper.getcchOldPath : Integer;
begin
result := TSHNameMapping(GetRecordPtr^).cchOldPath;
end;
procedure __TSHNameMapping__Wrapper.setcchNewPath(const val : Integer);
begin
TSHNameMapping(GetRecordPtr^).cchNewPath := val;
end;
function __TSHNameMapping__Wrapper.getcchNewPath : Integer;
begin
result := TSHNameMapping(GetRecordPtr^).cchNewPath;
end;
function __TSHNameMappingA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHNameMappingA__Wrapper.setcchOldPath(const val : Integer);
begin
TSHNameMappingA(GetRecordPtr^).cchOldPath := val;
end;
function __TSHNameMappingA__Wrapper.getcchOldPath : Integer;
begin
result := TSHNameMappingA(GetRecordPtr^).cchOldPath;
end;
procedure __TSHNameMappingA__Wrapper.setcchNewPath(const val : Integer);
begin
TSHNameMappingA(GetRecordPtr^).cchNewPath := val;
end;
function __TSHNameMappingA__Wrapper.getcchNewPath : Integer;
begin
result := TSHNameMappingA(GetRecordPtr^).cchNewPath;
end;
function __TSHNameMappingW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHNameMappingW__Wrapper.setcchOldPath(const val : Integer);
begin
TSHNameMappingW(GetRecordPtr^).cchOldPath := val;
end;
function __TSHNameMappingW__Wrapper.getcchOldPath : Integer;
begin
result := TSHNameMappingW(GetRecordPtr^).cchOldPath;
end;
procedure __TSHNameMappingW__Wrapper.setcchNewPath(const val : Integer);
begin
TSHNameMappingW(GetRecordPtr^).cchNewPath := val;
end;
function __TSHNameMappingW__Wrapper.getcchNewPath : Integer;
begin
result := TSHNameMappingW(GetRecordPtr^).cchNewPath;
end;
function __AppBarData_ : IDispatch;
begin
  result := ___AppBarData__Wrapper.Create;
end;
function __DRAGINFO_ : IDispatch;
begin
  result := ___DRAGINFO__Wrapper.Create;
end;
function __DRAGINFOA_ : IDispatch;
begin
  result := ___DRAGINFOA__Wrapper.Create;
end;
function __DRAGINFOW_ : IDispatch;
begin
  result := ___DRAGINFOW__Wrapper.Create;
end;
function __NOTIFYICONDATA_ : IDispatch;
begin
  result := ___NOTIFYICONDATA__Wrapper.Create;
end;
function __NOTIFYICONDATAA_ : IDispatch;
begin
  result := ___NOTIFYICONDATAA__Wrapper.Create;
end;
function __NOTIFYICONDATAW_ : IDispatch;
begin
  result := ___NOTIFYICONDATAW__Wrapper.Create;
end;
function __SHELLEXECUTEINFO_ : IDispatch;
begin
  result := ___SHELLEXECUTEINFO__Wrapper.Create;
end;
function __SHELLEXECUTEINFOA_ : IDispatch;
begin
  result := ___SHELLEXECUTEINFOA__Wrapper.Create;
end;
function __SHELLEXECUTEINFOW_ : IDispatch;
begin
  result := ___SHELLEXECUTEINFOW__Wrapper.Create;
end;
function __SHFILEINFO_ : IDispatch;
begin
  result := ___SHFILEINFO__Wrapper.Create;
end;
function __SHFILEINFOA_ : IDispatch;
begin
  result := ___SHFILEINFOA__Wrapper.Create;
end;
function __SHFILEINFOW_ : IDispatch;
begin
  result := ___SHFILEINFOW__Wrapper.Create;
end;
function __SHFILEOPSTRUCT_ : IDispatch;
begin
  result := ___SHFILEOPSTRUCT__Wrapper.Create;
end;
function __SHFILEOPSTRUCTA_ : IDispatch;
begin
  result := ___SHFILEOPSTRUCTA__Wrapper.Create;
end;
function __SHFILEOPSTRUCTW_ : IDispatch;
begin
  result := ___SHFILEOPSTRUCTW__Wrapper.Create;
end;
function __SHNAMEMAPPING_ : IDispatch;
begin
  result := ___SHNAMEMAPPING__Wrapper.Create;
end;
function __SHNAMEMAPPINGA_ : IDispatch;
begin
  result := ___SHNAMEMAPPINGA__Wrapper.Create;
end;
function __SHNAMEMAPPINGW_ : IDispatch;
begin
  result := ___SHNAMEMAPPINGW__Wrapper.Create;
end;
function _APPBARDATA_ : IDispatch;
begin
  result := __APPBARDATA__Wrapper.Create;
end;
function _NOTIFYICONDATA_ : IDispatch;
begin
  result := __NOTIFYICONDATA__Wrapper.Create;
end;
function _NOTIFYICONDATAA_ : IDispatch;
begin
  result := __NOTIFYICONDATAA__Wrapper.Create;
end;
function _NOTIFYICONDATAW_ : IDispatch;
begin
  result := __NOTIFYICONDATAW__Wrapper.Create;
end;
function _SHELLEXECUTEINFO_ : IDispatch;
begin
  result := __SHELLEXECUTEINFO__Wrapper.Create;
end;
function _SHELLEXECUTEINFOA_ : IDispatch;
begin
  result := __SHELLEXECUTEINFOA__Wrapper.Create;
end;
function _SHELLEXECUTEINFOW_ : IDispatch;
begin
  result := __SHELLEXECUTEINFOW__Wrapper.Create;
end;
function _SHFILEINFO_ : IDispatch;
begin
  result := __SHFILEINFO__Wrapper.Create;
end;
function _SHFILEINFOA_ : IDispatch;
begin
  result := __SHFILEINFOA__Wrapper.Create;
end;
function _SHFILEINFOW_ : IDispatch;
begin
  result := __SHFILEINFOW__Wrapper.Create;
end;
function _SHFILEOPSTRUCT_ : IDispatch;
begin
  result := __SHFILEOPSTRUCT__Wrapper.Create;
end;
function _SHFILEOPSTRUCTA_ : IDispatch;
begin
  result := __SHFILEOPSTRUCTA__Wrapper.Create;
end;
function _SHFILEOPSTRUCTW_ : IDispatch;
begin
  result := __SHFILEOPSTRUCTW__Wrapper.Create;
end;
function _SHNAMEMAPPING_ : IDispatch;
begin
  result := __SHNAMEMAPPING__Wrapper.Create;
end;
function _SHNAMEMAPPINGA_ : IDispatch;
begin
  result := __SHNAMEMAPPINGA__Wrapper.Create;
end;
function _SHNAMEMAPPINGW_ : IDispatch;
begin
  result := __SHNAMEMAPPINGW__Wrapper.Create;
end;
function _TAppBarData_ : IDispatch;
begin
  result := __TAppBarData__Wrapper.Create;
end;
function _TDragInfoA_ : IDispatch;
begin
  result := __TDragInfoA__Wrapper.Create;
end;
function _TDragInfoW_ : IDispatch;
begin
  result := __TDragInfoW__Wrapper.Create;
end;
function _TNotifyIconData_ : IDispatch;
begin
  result := __TNotifyIconData__Wrapper.Create;
end;
function _TNotifyIconDataA_ : IDispatch;
begin
  result := __TNotifyIconDataA__Wrapper.Create;
end;
function _TNotifyIconDataW_ : IDispatch;
begin
  result := __TNotifyIconDataW__Wrapper.Create;
end;
function _TShellExecuteInfo_ : IDispatch;
begin
  result := __TShellExecuteInfo__Wrapper.Create;
end;
function _TShellExecuteInfoA_ : IDispatch;
begin
  result := __TShellExecuteInfoA__Wrapper.Create;
end;
function _TShellExecuteInfoW_ : IDispatch;
begin
  result := __TShellExecuteInfoW__Wrapper.Create;
end;
function _TSHFileInfo_ : IDispatch;
begin
  result := __TSHFileInfo__Wrapper.Create;
end;
function _TSHFileInfoA_ : IDispatch;
begin
  result := __TSHFileInfoA__Wrapper.Create;
end;
function _TSHFileInfoW_ : IDispatch;
begin
  result := __TSHFileInfoW__Wrapper.Create;
end;
function _TSHFileOpStruct_ : IDispatch;
begin
  result := __TSHFileOpStruct__Wrapper.Create;
end;
function _TSHFileOpStructA_ : IDispatch;
begin
  result := __TSHFileOpStructA__Wrapper.Create;
end;
function _TSHFileOpStructW_ : IDispatch;
begin
  result := __TSHFileOpStructW__Wrapper.Create;
end;
function _TSHNameMapping_ : IDispatch;
begin
  result := __TSHNameMapping__Wrapper.Create;
end;
function _TSHNameMappingA_ : IDispatch;
begin
  result := __TSHNameMappingA__Wrapper.Create;
end;
function _TSHNameMappingW_ : IDispatch;
begin
  result := __TSHNameMappingW__Wrapper.Create;
end;
function __TPoint__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TPoint__Wrapper.setX(const val : Longint);
begin
TPoint(GetRecordPtr^).X := val;
end;
function __TPoint__Wrapper.getX : Longint;
begin
result := TPoint(GetRecordPtr^).X;
end;
procedure __TPoint__Wrapper.setY(const val : Longint);
begin
TPoint(GetRecordPtr^).Y := val;
end;
function __TPoint__Wrapper.getY : Longint;
begin
result := TPoint(GetRecordPtr^).Y;
end;
function ____DragQueryPoint__Wrapper(p0 : HDROP;
const p1 : IDispatch): BOOL;
var
__p1 : ^TPoint;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := DragQueryPoint(p0,__p1^);
end;

function ____SHAppBarMessage__Wrapper(p0 : DWORD;
const p1 : IDispatch): UINT;
var
__p1 : ^TAppBarData;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := SHAppBarMessage(p0,__p1^);
end;

function ____SHFileOperation__Wrapper(const p0 : IDispatch): Integer;
var
__p0 : ^TSHFileOpStruct;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := SHFileOperation(__p0^);
end;

function ____SHFileOperationA__Wrapper(const p0 : IDispatch): Integer;
var
__p0 : ^TSHFileOpStructA;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := SHFileOperationA(__p0^);
end;

function ____SHFileOperationW__Wrapper(const p0 : IDispatch): Integer;
var
__p0 : ^TSHFileOpStructW;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := SHFileOperationW(__p0^);
end;


type ___AppBarData__Wrapper__ = class(___AppBarData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___AppBarData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_AppBarDataToVariant(var R : _AppBarData) : OleVariant;
var
__rw : ___AppBarData__Wrapper__;
begin
__rw := ___AppBarData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_AppBarData(const V : OleVariant) : _AppBarData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _AppBarData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___DRAGINFO__Wrapper__ = class(___DRAGINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___DRAGINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_DRAGINFOToVariant(var R : _DRAGINFO) : OleVariant;
var
__rw : ___DRAGINFO__Wrapper__;
begin
__rw := ___DRAGINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_DRAGINFO(const V : OleVariant) : _DRAGINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _DRAGINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___DRAGINFOA__Wrapper__ = class(___DRAGINFOA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___DRAGINFOA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_DRAGINFOAToVariant(var R : _DRAGINFOA) : OleVariant;
var
__rw : ___DRAGINFOA__Wrapper__;
begin
__rw := ___DRAGINFOA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_DRAGINFOA(const V : OleVariant) : _DRAGINFOA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _DRAGINFOA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___DRAGINFOW__Wrapper__ = class(___DRAGINFOW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___DRAGINFOW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_DRAGINFOWToVariant(var R : _DRAGINFOW) : OleVariant;
var
__rw : ___DRAGINFOW__Wrapper__;
begin
__rw := ___DRAGINFOW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_DRAGINFOW(const V : OleVariant) : _DRAGINFOW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _DRAGINFOW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___NOTIFYICONDATA__Wrapper__ = class(___NOTIFYICONDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___NOTIFYICONDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_NOTIFYICONDATAToVariant(var R : _NOTIFYICONDATA) : OleVariant;
var
__rw : ___NOTIFYICONDATA__Wrapper__;
begin
__rw := ___NOTIFYICONDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_NOTIFYICONDATA(const V : OleVariant) : _NOTIFYICONDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _NOTIFYICONDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___NOTIFYICONDATAA__Wrapper__ = class(___NOTIFYICONDATAA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___NOTIFYICONDATAA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_NOTIFYICONDATAAToVariant(var R : _NOTIFYICONDATAA) : OleVariant;
var
__rw : ___NOTIFYICONDATAA__Wrapper__;
begin
__rw := ___NOTIFYICONDATAA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_NOTIFYICONDATAA(const V : OleVariant) : _NOTIFYICONDATAA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _NOTIFYICONDATAA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___NOTIFYICONDATAW__Wrapper__ = class(___NOTIFYICONDATAW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___NOTIFYICONDATAW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_NOTIFYICONDATAWToVariant(var R : _NOTIFYICONDATAW) : OleVariant;
var
__rw : ___NOTIFYICONDATAW__Wrapper__;
begin
__rw := ___NOTIFYICONDATAW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_NOTIFYICONDATAW(const V : OleVariant) : _NOTIFYICONDATAW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _NOTIFYICONDATAW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHELLEXECUTEINFO__Wrapper__ = class(___SHELLEXECUTEINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHELLEXECUTEINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHELLEXECUTEINFOToVariant(var R : _SHELLEXECUTEINFO) : OleVariant;
var
__rw : ___SHELLEXECUTEINFO__Wrapper__;
begin
__rw := ___SHELLEXECUTEINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHELLEXECUTEINFO(const V : OleVariant) : _SHELLEXECUTEINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHELLEXECUTEINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHELLEXECUTEINFOA__Wrapper__ = class(___SHELLEXECUTEINFOA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHELLEXECUTEINFOA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHELLEXECUTEINFOAToVariant(var R : _SHELLEXECUTEINFOA) : OleVariant;
var
__rw : ___SHELLEXECUTEINFOA__Wrapper__;
begin
__rw := ___SHELLEXECUTEINFOA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHELLEXECUTEINFOA(const V : OleVariant) : _SHELLEXECUTEINFOA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHELLEXECUTEINFOA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHELLEXECUTEINFOW__Wrapper__ = class(___SHELLEXECUTEINFOW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHELLEXECUTEINFOW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHELLEXECUTEINFOWToVariant(var R : _SHELLEXECUTEINFOW) : OleVariant;
var
__rw : ___SHELLEXECUTEINFOW__Wrapper__;
begin
__rw := ___SHELLEXECUTEINFOW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHELLEXECUTEINFOW(const V : OleVariant) : _SHELLEXECUTEINFOW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHELLEXECUTEINFOW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHFILEINFO__Wrapper__ = class(___SHFILEINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHFILEINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHFILEINFOToVariant(var R : _SHFILEINFO) : OleVariant;
var
__rw : ___SHFILEINFO__Wrapper__;
begin
__rw := ___SHFILEINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHFILEINFO(const V : OleVariant) : _SHFILEINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHFILEINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHFILEINFOA__Wrapper__ = class(___SHFILEINFOA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHFILEINFOA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHFILEINFOAToVariant(var R : _SHFILEINFOA) : OleVariant;
var
__rw : ___SHFILEINFOA__Wrapper__;
begin
__rw := ___SHFILEINFOA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHFILEINFOA(const V : OleVariant) : _SHFILEINFOA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHFILEINFOA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHFILEINFOW__Wrapper__ = class(___SHFILEINFOW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHFILEINFOW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHFILEINFOWToVariant(var R : _SHFILEINFOW) : OleVariant;
var
__rw : ___SHFILEINFOW__Wrapper__;
begin
__rw := ___SHFILEINFOW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHFILEINFOW(const V : OleVariant) : _SHFILEINFOW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHFILEINFOW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHFILEOPSTRUCT__Wrapper__ = class(___SHFILEOPSTRUCT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHFILEOPSTRUCT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHFILEOPSTRUCTToVariant(var R : _SHFILEOPSTRUCT) : OleVariant;
var
__rw : ___SHFILEOPSTRUCT__Wrapper__;
begin
__rw := ___SHFILEOPSTRUCT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHFILEOPSTRUCT(const V : OleVariant) : _SHFILEOPSTRUCT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHFILEOPSTRUCT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHFILEOPSTRUCTA__Wrapper__ = class(___SHFILEOPSTRUCTA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHFILEOPSTRUCTA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHFILEOPSTRUCTAToVariant(var R : _SHFILEOPSTRUCTA) : OleVariant;
var
__rw : ___SHFILEOPSTRUCTA__Wrapper__;
begin
__rw := ___SHFILEOPSTRUCTA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHFILEOPSTRUCTA(const V : OleVariant) : _SHFILEOPSTRUCTA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHFILEOPSTRUCTA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHFILEOPSTRUCTW__Wrapper__ = class(___SHFILEOPSTRUCTW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHFILEOPSTRUCTW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHFILEOPSTRUCTWToVariant(var R : _SHFILEOPSTRUCTW) : OleVariant;
var
__rw : ___SHFILEOPSTRUCTW__Wrapper__;
begin
__rw := ___SHFILEOPSTRUCTW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHFILEOPSTRUCTW(const V : OleVariant) : _SHFILEOPSTRUCTW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHFILEOPSTRUCTW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHNAMEMAPPING__Wrapper__ = class(___SHNAMEMAPPING__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHNAMEMAPPING__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHNAMEMAPPINGToVariant(var R : _SHNAMEMAPPING) : OleVariant;
var
__rw : ___SHNAMEMAPPING__Wrapper__;
begin
__rw := ___SHNAMEMAPPING__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHNAMEMAPPING(const V : OleVariant) : _SHNAMEMAPPING;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHNAMEMAPPING((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHNAMEMAPPINGA__Wrapper__ = class(___SHNAMEMAPPINGA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHNAMEMAPPINGA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHNAMEMAPPINGAToVariant(var R : _SHNAMEMAPPINGA) : OleVariant;
var
__rw : ___SHNAMEMAPPINGA__Wrapper__;
begin
__rw := ___SHNAMEMAPPINGA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHNAMEMAPPINGA(const V : OleVariant) : _SHNAMEMAPPINGA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHNAMEMAPPINGA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHNAMEMAPPINGW__Wrapper__ = class(___SHNAMEMAPPINGW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHNAMEMAPPINGW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHNAMEMAPPINGWToVariant(var R : _SHNAMEMAPPINGW) : OleVariant;
var
__rw : ___SHNAMEMAPPINGW__Wrapper__;
begin
__rw := ___SHNAMEMAPPINGW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHNAMEMAPPINGW(const V : OleVariant) : _SHNAMEMAPPINGW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHNAMEMAPPINGW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __APPBARDATA__Wrapper__ = class(__APPBARDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __APPBARDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertAPPBARDATAToVariant(var R : APPBARDATA) : OleVariant;
var
__rw : __APPBARDATA__Wrapper__;
begin
__rw := __APPBARDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToAPPBARDATA(const V : OleVariant) : APPBARDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := APPBARDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __NOTIFYICONDATA__Wrapper__ = class(__NOTIFYICONDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __NOTIFYICONDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertNOTIFYICONDATAToVariant(var R : NOTIFYICONDATA) : OleVariant;
var
__rw : __NOTIFYICONDATA__Wrapper__;
begin
__rw := __NOTIFYICONDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToNOTIFYICONDATA(const V : OleVariant) : NOTIFYICONDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := NOTIFYICONDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __NOTIFYICONDATAA__Wrapper__ = class(__NOTIFYICONDATAA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __NOTIFYICONDATAA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertNOTIFYICONDATAAToVariant(var R : NOTIFYICONDATAA) : OleVariant;
var
__rw : __NOTIFYICONDATAA__Wrapper__;
begin
__rw := __NOTIFYICONDATAA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToNOTIFYICONDATAA(const V : OleVariant) : NOTIFYICONDATAA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := NOTIFYICONDATAA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __NOTIFYICONDATAW__Wrapper__ = class(__NOTIFYICONDATAW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __NOTIFYICONDATAW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertNOTIFYICONDATAWToVariant(var R : NOTIFYICONDATAW) : OleVariant;
var
__rw : __NOTIFYICONDATAW__Wrapper__;
begin
__rw := __NOTIFYICONDATAW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToNOTIFYICONDATAW(const V : OleVariant) : NOTIFYICONDATAW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := NOTIFYICONDATAW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHELLEXECUTEINFO__Wrapper__ = class(__SHELLEXECUTEINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHELLEXECUTEINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHELLEXECUTEINFOToVariant(var R : SHELLEXECUTEINFO) : OleVariant;
var
__rw : __SHELLEXECUTEINFO__Wrapper__;
begin
__rw := __SHELLEXECUTEINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHELLEXECUTEINFO(const V : OleVariant) : SHELLEXECUTEINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHELLEXECUTEINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHELLEXECUTEINFOA__Wrapper__ = class(__SHELLEXECUTEINFOA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHELLEXECUTEINFOA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHELLEXECUTEINFOAToVariant(var R : SHELLEXECUTEINFOA) : OleVariant;
var
__rw : __SHELLEXECUTEINFOA__Wrapper__;
begin
__rw := __SHELLEXECUTEINFOA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHELLEXECUTEINFOA(const V : OleVariant) : SHELLEXECUTEINFOA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHELLEXECUTEINFOA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHELLEXECUTEINFOW__Wrapper__ = class(__SHELLEXECUTEINFOW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHELLEXECUTEINFOW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHELLEXECUTEINFOWToVariant(var R : SHELLEXECUTEINFOW) : OleVariant;
var
__rw : __SHELLEXECUTEINFOW__Wrapper__;
begin
__rw := __SHELLEXECUTEINFOW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHELLEXECUTEINFOW(const V : OleVariant) : SHELLEXECUTEINFOW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHELLEXECUTEINFOW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHFILEINFO__Wrapper__ = class(__SHFILEINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHFILEINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHFILEINFOToVariant(var R : SHFILEINFO) : OleVariant;
var
__rw : __SHFILEINFO__Wrapper__;
begin
__rw := __SHFILEINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHFILEINFO(const V : OleVariant) : SHFILEINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHFILEINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHFILEINFOA__Wrapper__ = class(__SHFILEINFOA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHFILEINFOA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHFILEINFOAToVariant(var R : SHFILEINFOA) : OleVariant;
var
__rw : __SHFILEINFOA__Wrapper__;
begin
__rw := __SHFILEINFOA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHFILEINFOA(const V : OleVariant) : SHFILEINFOA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHFILEINFOA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHFILEINFOW__Wrapper__ = class(__SHFILEINFOW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHFILEINFOW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHFILEINFOWToVariant(var R : SHFILEINFOW) : OleVariant;
var
__rw : __SHFILEINFOW__Wrapper__;
begin
__rw := __SHFILEINFOW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHFILEINFOW(const V : OleVariant) : SHFILEINFOW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHFILEINFOW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHFILEOPSTRUCT__Wrapper__ = class(__SHFILEOPSTRUCT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHFILEOPSTRUCT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHFILEOPSTRUCTToVariant(var R : SHFILEOPSTRUCT) : OleVariant;
var
__rw : __SHFILEOPSTRUCT__Wrapper__;
begin
__rw := __SHFILEOPSTRUCT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHFILEOPSTRUCT(const V : OleVariant) : SHFILEOPSTRUCT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHFILEOPSTRUCT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHFILEOPSTRUCTA__Wrapper__ = class(__SHFILEOPSTRUCTA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHFILEOPSTRUCTA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHFILEOPSTRUCTAToVariant(var R : SHFILEOPSTRUCTA) : OleVariant;
var
__rw : __SHFILEOPSTRUCTA__Wrapper__;
begin
__rw := __SHFILEOPSTRUCTA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHFILEOPSTRUCTA(const V : OleVariant) : SHFILEOPSTRUCTA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHFILEOPSTRUCTA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHFILEOPSTRUCTW__Wrapper__ = class(__SHFILEOPSTRUCTW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHFILEOPSTRUCTW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHFILEOPSTRUCTWToVariant(var R : SHFILEOPSTRUCTW) : OleVariant;
var
__rw : __SHFILEOPSTRUCTW__Wrapper__;
begin
__rw := __SHFILEOPSTRUCTW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHFILEOPSTRUCTW(const V : OleVariant) : SHFILEOPSTRUCTW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHFILEOPSTRUCTW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHNAMEMAPPING__Wrapper__ = class(__SHNAMEMAPPING__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHNAMEMAPPING__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHNAMEMAPPINGToVariant(var R : SHNAMEMAPPING) : OleVariant;
var
__rw : __SHNAMEMAPPING__Wrapper__;
begin
__rw := __SHNAMEMAPPING__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHNAMEMAPPING(const V : OleVariant) : SHNAMEMAPPING;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHNAMEMAPPING((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHNAMEMAPPINGA__Wrapper__ = class(__SHNAMEMAPPINGA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHNAMEMAPPINGA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHNAMEMAPPINGAToVariant(var R : SHNAMEMAPPINGA) : OleVariant;
var
__rw : __SHNAMEMAPPINGA__Wrapper__;
begin
__rw := __SHNAMEMAPPINGA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHNAMEMAPPINGA(const V : OleVariant) : SHNAMEMAPPINGA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHNAMEMAPPINGA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHNAMEMAPPINGW__Wrapper__ = class(__SHNAMEMAPPINGW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHNAMEMAPPINGW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHNAMEMAPPINGWToVariant(var R : SHNAMEMAPPINGW) : OleVariant;
var
__rw : __SHNAMEMAPPINGW__Wrapper__;
begin
__rw := __SHNAMEMAPPINGW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHNAMEMAPPINGW(const V : OleVariant) : SHNAMEMAPPINGW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHNAMEMAPPINGW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TAppBarData__Wrapper__ = class(__TAppBarData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TAppBarData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTAppBarDataToVariant(var R : TAppBarData) : OleVariant;
var
__rw : __TAppBarData__Wrapper__;
begin
__rw := __TAppBarData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTAppBarData(const V : OleVariant) : TAppBarData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TAppBarData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDragInfoA__Wrapper__ = class(__TDragInfoA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDragInfoA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDragInfoAToVariant(var R : TDragInfoA) : OleVariant;
var
__rw : __TDragInfoA__Wrapper__;
begin
__rw := __TDragInfoA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDragInfoA(const V : OleVariant) : TDragInfoA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDragInfoA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDragInfoW__Wrapper__ = class(__TDragInfoW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDragInfoW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDragInfoWToVariant(var R : TDragInfoW) : OleVariant;
var
__rw : __TDragInfoW__Wrapper__;
begin
__rw := __TDragInfoW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDragInfoW(const V : OleVariant) : TDragInfoW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDragInfoW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TNotifyIconData__Wrapper__ = class(__TNotifyIconData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TNotifyIconData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTNotifyIconDataToVariant(var R : TNotifyIconData) : OleVariant;
var
__rw : __TNotifyIconData__Wrapper__;
begin
__rw := __TNotifyIconData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTNotifyIconData(const V : OleVariant) : TNotifyIconData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TNotifyIconData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TNotifyIconDataA__Wrapper__ = class(__TNotifyIconDataA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TNotifyIconDataA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTNotifyIconDataAToVariant(var R : TNotifyIconDataA) : OleVariant;
var
__rw : __TNotifyIconDataA__Wrapper__;
begin
__rw := __TNotifyIconDataA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTNotifyIconDataA(const V : OleVariant) : TNotifyIconDataA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TNotifyIconDataA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TNotifyIconDataW__Wrapper__ = class(__TNotifyIconDataW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TNotifyIconDataW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTNotifyIconDataWToVariant(var R : TNotifyIconDataW) : OleVariant;
var
__rw : __TNotifyIconDataW__Wrapper__;
begin
__rw := __TNotifyIconDataW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTNotifyIconDataW(const V : OleVariant) : TNotifyIconDataW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TNotifyIconDataW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPoint__Wrapper__ = class(__TPoint__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPoint__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPointToVariant(var R : TPoint) : OleVariant;
var
__rw : __TPoint__Wrapper__;
begin
__rw := __TPoint__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPoint(const V : OleVariant) : TPoint;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPoint((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TShellExecuteInfo__Wrapper__ = class(__TShellExecuteInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TShellExecuteInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTShellExecuteInfoToVariant(var R : TShellExecuteInfo) : OleVariant;
var
__rw : __TShellExecuteInfo__Wrapper__;
begin
__rw := __TShellExecuteInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTShellExecuteInfo(const V : OleVariant) : TShellExecuteInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TShellExecuteInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TShellExecuteInfoA__Wrapper__ = class(__TShellExecuteInfoA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TShellExecuteInfoA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTShellExecuteInfoAToVariant(var R : TShellExecuteInfoA) : OleVariant;
var
__rw : __TShellExecuteInfoA__Wrapper__;
begin
__rw := __TShellExecuteInfoA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTShellExecuteInfoA(const V : OleVariant) : TShellExecuteInfoA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TShellExecuteInfoA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TShellExecuteInfoW__Wrapper__ = class(__TShellExecuteInfoW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TShellExecuteInfoW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTShellExecuteInfoWToVariant(var R : TShellExecuteInfoW) : OleVariant;
var
__rw : __TShellExecuteInfoW__Wrapper__;
begin
__rw := __TShellExecuteInfoW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTShellExecuteInfoW(const V : OleVariant) : TShellExecuteInfoW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TShellExecuteInfoW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHFileInfo__Wrapper__ = class(__TSHFileInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHFileInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHFileInfoToVariant(var R : TSHFileInfo) : OleVariant;
var
__rw : __TSHFileInfo__Wrapper__;
begin
__rw := __TSHFileInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHFileInfo(const V : OleVariant) : TSHFileInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHFileInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHFileInfoA__Wrapper__ = class(__TSHFileInfoA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHFileInfoA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHFileInfoAToVariant(var R : TSHFileInfoA) : OleVariant;
var
__rw : __TSHFileInfoA__Wrapper__;
begin
__rw := __TSHFileInfoA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHFileInfoA(const V : OleVariant) : TSHFileInfoA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHFileInfoA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHFileInfoW__Wrapper__ = class(__TSHFileInfoW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHFileInfoW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHFileInfoWToVariant(var R : TSHFileInfoW) : OleVariant;
var
__rw : __TSHFileInfoW__Wrapper__;
begin
__rw := __TSHFileInfoW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHFileInfoW(const V : OleVariant) : TSHFileInfoW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHFileInfoW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHFileOpStruct__Wrapper__ = class(__TSHFileOpStruct__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHFileOpStruct__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHFileOpStructToVariant(var R : TSHFileOpStruct) : OleVariant;
var
__rw : __TSHFileOpStruct__Wrapper__;
begin
__rw := __TSHFileOpStruct__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHFileOpStruct(const V : OleVariant) : TSHFileOpStruct;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHFileOpStruct((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHFileOpStructA__Wrapper__ = class(__TSHFileOpStructA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHFileOpStructA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHFileOpStructAToVariant(var R : TSHFileOpStructA) : OleVariant;
var
__rw : __TSHFileOpStructA__Wrapper__;
begin
__rw := __TSHFileOpStructA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHFileOpStructA(const V : OleVariant) : TSHFileOpStructA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHFileOpStructA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHFileOpStructW__Wrapper__ = class(__TSHFileOpStructW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHFileOpStructW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHFileOpStructWToVariant(var R : TSHFileOpStructW) : OleVariant;
var
__rw : __TSHFileOpStructW__Wrapper__;
begin
__rw := __TSHFileOpStructW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHFileOpStructW(const V : OleVariant) : TSHFileOpStructW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHFileOpStructW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHNameMapping__Wrapper__ = class(__TSHNameMapping__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHNameMapping__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHNameMappingToVariant(var R : TSHNameMapping) : OleVariant;
var
__rw : __TSHNameMapping__Wrapper__;
begin
__rw := __TSHNameMapping__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHNameMapping(const V : OleVariant) : TSHNameMapping;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHNameMapping((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHNameMappingA__Wrapper__ = class(__TSHNameMappingA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHNameMappingA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHNameMappingAToVariant(var R : TSHNameMappingA) : OleVariant;
var
__rw : __TSHNameMappingA__Wrapper__;
begin
__rw := __TSHNameMappingA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHNameMappingA(const V : OleVariant) : TSHNameMappingA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHNameMappingA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHNameMappingW__Wrapper__ = class(__TSHNameMappingW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHNameMappingW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHNameMappingWToVariant(var R : TSHNameMappingW) : OleVariant;
var
__rw : __TSHNameMappingW__Wrapper__;
begin
__rw := __TSHNameMappingW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHNameMappingW(const V : OleVariant) : TSHNameMappingW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHNameMappingW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..104] of string = (
'ABM_NEW'
,'ABM_REMOVE'
,'ABM_QUERYPOS'
,'ABM_SETPOS'
,'ABM_GETSTATE'
,'ABM_GETTASKBARPOS'
,'ABM_ACTIVATE'
,'ABM_GETAUTOHIDEBAR'
,'ABM_SETAUTOHIDEBAR'
,'ABM_WINDOWPOSCHANGED'
,'ABN_STATECHANGE'
,'ABN_POSCHANGED'
,'ABN_FULLSCREENAPP'
,'ABN_WINDOWARRANGE'
,'ABS_AUTOHIDE'
,'ABS_ALWAYSONTOP'
,'ABE_LEFT'
,'ABE_TOP'
,'ABE_RIGHT'
,'ABE_BOTTOM'
,'FO_MOVE'
,'FO_COPY'
,'FO_DELETE'
,'FO_RENAME'
,'FOF_MULTIDESTFILES'
,'FOF_CONFIRMMOUSE'
,'FOF_SILENT'
,'FOF_RENAMEONCOLLISION'
,'FOF_NOCONFIRMATION'
,'FOF_WANTMAPPINGHANDLE'
,'FOF_ALLOWUNDO'
,'FOF_FILESONLY'
,'FOF_SIMPLEPROGRESS'
,'FOF_NOCONFIRMMKDIR'
,'FOF_NOERRORUI'
,'PO_DELETE'
,'PO_RENAME'
,'PO_PORTCHANGE'
,'PO_REN_PORT'
,'SE_ERR_FNF'
,'SE_ERR_PNF'
,'SE_ERR_ACCESSDENIED'
,'SE_ERR_OOM'
,'SE_ERR_DLLNOTFOUND'
,'SE_ERR_SHARE'
,'SE_ERR_ASSOCINCOMPLETE'
,'SE_ERR_DDETIMEOUT'
,'SE_ERR_DDEFAIL'
,'SE_ERR_DDEBUSY'
,'SE_ERR_NOASSOC'
,'SEE_MASK_CLASSNAME'
,'SEE_MASK_CLASSKEY'
,'SEE_MASK_IDLIST'
,'SEE_MASK_INVOKEIDLIST'
,'SEE_MASK_ICON'
,'SEE_MASK_HOTKEY'
,'SEE_MASK_NOCLOSEPROCESS'
,'SEE_MASK_CONNECTNETDRV'
,'SEE_MASK_FLAG_DDEWAIT'
,'SEE_MASK_DOENVSUBST'
,'SEE_MASK_FLAG_NO_UI'
,'SEE_MASK_UNICODE'
,'SEE_MASK_NO_CONSOLE'
,'SEE_MASK_ASYNCOK'
,'NIM_ADD'
,'NIM_MODIFY'
,'NIM_DELETE'
,'NIM_SETFOCUS'
,'NIM_SETVERSION'
,'NIF_MESSAGE'
,'NIF_ICON'
,'NIF_TIP'
,'NIF_STATE'
,'NIF_INFO'
,'NIIF_NONE'
,'NIIF_INFO'
,'NIIF_WARNING'
,'NIIF_ERROR'
,'NIIF_ICON_MASK'
,'NIN_SELECT'
,'NINF_KEY'
,'NIN_KEYSELECT'
,'NIN_BALLOONSHOW'
,'NIN_BALLOONHIDE'
,'NIN_BALLOONTIMEOUT'
,'NIN_BALLOONUSERCLICK'
,'SHGFI_ICON'
,'SHGFI_DISPLAYNAME'
,'SHGFI_TYPENAME'
,'SHGFI_ATTRIBUTES'
,'SHGFI_ICONLOCATION'
,'SHGFI_EXETYPE'
,'SHGFI_SYSICONINDEX'
,'SHGFI_LINKOVERLAY'
,'SHGFI_SELECTED'
,'SHGFI_LARGEICON'
,'SHGFI_SMALLICON'
,'SHGFI_OPENICON'
,'SHGFI_SHELLICONSIZE'
,'SHGFI_PIDL'
,'SHGFI_USEFILEATTRIBUTES'
,'SHGNLI_PIDL'
,'SHGNLI_PREFIXNAME'
,'SHGNLI_NOUNIQUE'
,'shell32'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,ABM_NEW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,ABM_REMOVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,ABM_QUERYPOS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,ABM_SETPOS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,ABM_GETSTATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,ABM_GETTASKBARPOS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,ABM_ACTIVATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,ABM_GETAUTOHIDEBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,ABM_SETAUTOHIDEBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,ABM_WINDOWPOSCHANGED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,ABN_STATECHANGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,ABN_POSCHANGED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,ABN_FULLSCREENAPP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,ABN_WINDOWARRANGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,ABS_AUTOHIDE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,ABS_ALWAYSONTOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,ABE_LEFT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,ABE_TOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,ABE_RIGHT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,ABE_BOTTOM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,FO_MOVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,FO_COPY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,FO_DELETE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,FO_RENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,FOF_MULTIDESTFILES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,FOF_CONFIRMMOUSE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,FOF_SILENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,FOF_RENAMEONCOLLISION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,FOF_NOCONFIRMATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,FOF_WANTMAPPINGHANDLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,FOF_ALLOWUNDO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,FOF_FILESONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,FOF_SIMPLEPROGRESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,FOF_NOCONFIRMMKDIR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,FOF_NOERRORUI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,PO_DELETE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,PO_RENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,PO_PORTCHANGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,PO_REN_PORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,SE_ERR_FNF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,SE_ERR_PNF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,SE_ERR_ACCESSDENIED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,SE_ERR_OOM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,SE_ERR_DLLNOTFOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,SE_ERR_SHARE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,SE_ERR_ASSOCINCOMPLETE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,SE_ERR_DDETIMEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,SE_ERR_DDEFAIL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,SE_ERR_DDEBUSY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,SE_ERR_NOASSOC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,SEE_MASK_CLASSNAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,SEE_MASK_CLASSKEY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,SEE_MASK_IDLIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,SEE_MASK_INVOKEIDLIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,SEE_MASK_ICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,SEE_MASK_HOTKEY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,SEE_MASK_NOCLOSEPROCESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,SEE_MASK_CONNECTNETDRV));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,SEE_MASK_FLAG_DDEWAIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,SEE_MASK_DOENVSUBST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,SEE_MASK_FLAG_NO_UI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,SEE_MASK_UNICODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,SEE_MASK_NO_CONSOLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,SEE_MASK_ASYNCOK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,NIM_ADD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,NIM_MODIFY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,NIM_DELETE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,NIM_SETFOCUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,NIM_SETVERSION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,NIF_MESSAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,NIF_ICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,NIF_TIP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,NIF_STATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,NIF_INFO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,NIIF_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,NIIF_INFO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,NIIF_WARNING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,NIIF_ERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,NIIF_ICON_MASK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,NIN_SELECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,NINF_KEY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,NIN_KEYSELECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,NIN_BALLOONSHOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,NIN_BALLOONHIDE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,NIN_BALLOONTIMEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,NIN_BALLOONUSERCLICK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,SHGFI_ICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,SHGFI_DISPLAYNAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,SHGFI_TYPENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,SHGFI_ATTRIBUTES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,SHGFI_ICONLOCATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,SHGFI_EXETYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,SHGFI_SYSICONINDEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,SHGFI_LINKOVERLAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,SHGFI_SELECTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,SHGFI_LARGEICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,SHGFI_SMALLICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,SHGFI_OPENICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,SHGFI_SHELLICONSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,SHGFI_PIDL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,SHGFI_USEFILEATTRIBUTES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,SHGNLI_PIDL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,SHGNLI_PREFIXNAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,SHGNLI_NOUNIQUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,shell32));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..62] of string = (
'_AppBarData'
,'_DRAGINFO'
,'_DRAGINFOA'
,'_DRAGINFOW'
,'_NOTIFYICONDATA'
,'_NOTIFYICONDATAA'
,'_NOTIFYICONDATAW'
,'_SHELLEXECUTEINFO'
,'_SHELLEXECUTEINFOA'
,'_SHELLEXECUTEINFOW'
,'_SHFILEINFO'
,'_SHFILEINFOA'
,'_SHFILEINFOW'
,'_SHFILEOPSTRUCT'
,'_SHFILEOPSTRUCTA'
,'_SHFILEOPSTRUCTW'
,'_SHNAMEMAPPING'
,'_SHNAMEMAPPINGA'
,'_SHNAMEMAPPINGW'
,'APPBARDATA'
,'NOTIFYICONDATA'
,'NOTIFYICONDATAA'
,'NOTIFYICONDATAW'
,'SHELLEXECUTEINFO'
,'SHELLEXECUTEINFOA'
,'SHELLEXECUTEINFOW'
,'SHFILEINFO'
,'SHFILEINFOA'
,'SHFILEINFOW'
,'SHFILEOPSTRUCT'
,'SHFILEOPSTRUCTA'
,'SHFILEOPSTRUCTW'
,'SHNAMEMAPPING'
,'SHNAMEMAPPINGA'
,'SHNAMEMAPPINGW'
,'TAppBarData'
,'TDragInfoA'
,'TDragInfoW'
,'TNotifyIconData'
,'TNotifyIconDataA'
,'TNotifyIconDataW'
,'TShellExecuteInfo'
,'TShellExecuteInfoA'
,'TShellExecuteInfoW'
,'TSHFileInfo'
,'TSHFileInfoA'
,'TSHFileInfoW'
,'TSHFileOpStruct'
,'TSHFileOpStructA'
,'TSHFileOpStructW'
,'TSHNameMapping'
,'TSHNameMappingA'
,'TSHNameMappingW'
,'DragQueryPoint'
,'DragFinish'
,'DragAcceptFiles'
,'DuplicateIcon'
,'SHAppBarMessage'
,'SHFileOperation'
,'SHFileOperationA'
,'SHFileOperationW'
,'SHFreeNameMappings'
,'ShellExecute'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(__AppBarData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(__DRAGINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(__DRAGINFOA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[3],Addr(__DRAGINFOW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[4],Addr(__NOTIFYICONDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[5],Addr(__NOTIFYICONDATAA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[6],Addr(__NOTIFYICONDATAW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[7],Addr(__SHELLEXECUTEINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[8],Addr(__SHELLEXECUTEINFOA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[9],Addr(__SHELLEXECUTEINFOW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[10],Addr(__SHFILEINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[11],Addr(__SHFILEINFOA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[12],Addr(__SHFILEINFOW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[13],Addr(__SHFILEOPSTRUCT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[14],Addr(__SHFILEOPSTRUCTA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[15],Addr(__SHFILEOPSTRUCTW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[16],Addr(__SHNAMEMAPPING_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[17],Addr(__SHNAMEMAPPINGA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[18],Addr(__SHNAMEMAPPINGW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[19],Addr(_APPBARDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[20],Addr(_NOTIFYICONDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[21],Addr(_NOTIFYICONDATAA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[22],Addr(_NOTIFYICONDATAW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[23],Addr(_SHELLEXECUTEINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[24],Addr(_SHELLEXECUTEINFOA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[25],Addr(_SHELLEXECUTEINFOW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[26],Addr(_SHFILEINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[27],Addr(_SHFILEINFOA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[28],Addr(_SHFILEINFOW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[29],Addr(_SHFILEOPSTRUCT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[30],Addr(_SHFILEOPSTRUCTA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[31],Addr(_SHFILEOPSTRUCTW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[32],Addr(_SHNAMEMAPPING_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[33],Addr(_SHNAMEMAPPINGA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[34],Addr(_SHNAMEMAPPINGW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[35],Addr(_TAppBarData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[36],Addr(_TDragInfoA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[37],Addr(_TDragInfoW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[38],Addr(_TNotifyIconData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[39],Addr(_TNotifyIconDataA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[40],Addr(_TNotifyIconDataW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[41],Addr(_TShellExecuteInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[42],Addr(_TShellExecuteInfoA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[43],Addr(_TShellExecuteInfoW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[44],Addr(_TSHFileInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[45],Addr(_TSHFileInfoA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[46],Addr(_TSHFileInfoW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[47],Addr(_TSHFileOpStruct_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[48],Addr(_TSHFileOpStructA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[49],Addr(_TSHFileOpStructW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[50],Addr(_TSHNameMapping_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[51],Addr(_TSHNameMappingA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[52],Addr(_TSHNameMappingW_)));

RegisterProc(nil,MethodNames[53],mtProc,TypeInfo(_T3),[
TypeInfo(HDROP),
TypeInfo(IDispatch),TypeInfo(BOOL)],Addr(____DragQueryPoint__Wrapper),cRegister);

RegisterProc(nil,MethodNames[54],mtProc,TypeInfo(_T4),[
TypeInfo(HDROP)],Addr(DragFinish),cStdCall);

RegisterProc(nil,MethodNames[55],mtProc,TypeInfo(_T5),[
TypeInfo(HWND),
TypeInfo(BOOL)],Addr(DragAcceptFiles),cStdCall);

RegisterProc(nil,MethodNames[56],mtProc,TypeInfo(_T16),[
TypeInfo(HINST),
TypeInfo(HICON),TypeInfo(HICON)],Addr(DuplicateIcon),cStdCall);

RegisterProc(nil,MethodNames[57],mtProc,TypeInfo(_T23),[
TypeInfo(DWORD),
TypeInfo(IDispatch),TypeInfo(UINT)],Addr(____SHAppBarMessage__Wrapper),cRegister);

RegisterProc(nil,MethodNames[58],mtProc,TypeInfo(_T30),[
TypeInfo(IDispatch),TypeInfo(Integer)],Addr(____SHFileOperation__Wrapper),cRegister);

RegisterProc(nil,MethodNames[59],mtProc,TypeInfo(_T31),[
TypeInfo(IDispatch),TypeInfo(Integer)],Addr(____SHFileOperationA__Wrapper),cRegister);

RegisterProc(nil,MethodNames[60],mtProc,TypeInfo(_T32),[
TypeInfo(IDispatch),TypeInfo(Integer)],Addr(____SHFileOperationW__Wrapper),cRegister);

RegisterProc(nil,MethodNames[61],mtProc,TypeInfo(_T33),[
TypeInfo(THandle)],Addr(SHFreeNameMappings),cStdCall);


RegisterProc(nil,'ShellExecute',mtProc,TypeInfo(_T6),[
TypeInfo(HWND),
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(HINST)],Addr(ShellExecute),cStdCall);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'DragQueryFile',mtProc,TypeInfo(_T0),[
TypeInfo(HDROP),
TypeInfo(UINT),
TypeInfoPChar,
TypeInfo(UINT),TypeInfo(UINT)],Addr(DragQueryFile),cStdCall)}

{RegisterProc(nil,'DragQueryFileA',mtProc,TypeInfo(_T1),[
TypeInfo(HDROP),
TypeInfo(UINT),
TypeInfoPChar,
TypeInfo(UINT),TypeInfo(UINT)],Addr(DragQueryFileA),cStdCall)}

{RegisterProc(nil,'DragQueryFileW',mtProc,TypeInfo(_T2),[
TypeInfo(HDROP),
TypeInfo(UINT),
TypeInfoPWideChar,
TypeInfo(UINT),TypeInfo(UINT)],Addr(DragQueryFileW),cStdCall)}



{RegisterProc(nil,'ShellExecuteA',mtProc,TypeInfo(_T7),[
TypeInfo(HWND),
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(HINST)],Addr(ShellExecuteA),cStdCall)}

{RegisterProc(nil,'ShellExecuteW',mtProc,TypeInfo(_T8),[
TypeInfo(HWND),
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(Integer),TypeInfo(HINST)],Addr(ShellExecuteW),cStdCall)}

{RegisterProc(nil,'FindExecutable',mtProc,TypeInfo(_T9),[
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPChar,TypeInfo(HINST)],Addr(FindExecutable),cStdCall)}

{RegisterProc(nil,'FindExecutableA',mtProc,TypeInfo(_T10),[
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPChar,TypeInfo(HINST)],Addr(FindExecutableA),cStdCall)}

{RegisterProc(nil,'FindExecutableW',mtProc,TypeInfo(_T11),[
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfoPWideChar,TypeInfo(HINST)],Addr(FindExecutableW),cStdCall)}

{RegisterProc(nil,'CommandLineToArgvW',mtProc,TypeInfo(_T12),[
TypeInfoPWideChar,
TypeInfo(Integer),TypeInfoPointer],Addr(CommandLineToArgvW),cStdCall)}

{RegisterProc(nil,'ShellAbout',mtProc,TypeInfo(_T13),[
TypeInfo(HWND),
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(HICON),TypeInfo(Integer)],Addr(ShellAbout),cStdCall)}

{RegisterProc(nil,'ShellAboutA',mtProc,TypeInfo(_T14),[
TypeInfo(HWND),
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(HICON),TypeInfo(Integer)],Addr(ShellAboutA),cStdCall)}

{RegisterProc(nil,'ShellAboutW',mtProc,TypeInfo(_T15),[
TypeInfo(HWND),
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(HICON),TypeInfo(Integer)],Addr(ShellAboutW),cStdCall)}

{RegisterProc(nil,'ExtractAssociatedIcon',mtProc,TypeInfo(_T17),[
TypeInfo(HINST),
TypeInfoPChar,
TypeInfo(Word),TypeInfo(HICON)],Addr(ExtractAssociatedIcon),cStdCall)}

{RegisterProc(nil,'ExtractAssociatedIconA',mtProc,TypeInfo(_T18),[
TypeInfo(HINST),
TypeInfoPChar,
TypeInfo(Word),TypeInfo(HICON)],Addr(ExtractAssociatedIconA),cStdCall)}

{RegisterProc(nil,'ExtractAssociatedIconW',mtProc,TypeInfo(_T19),[
TypeInfo(HINST),
TypeInfoPWideChar,
TypeInfo(Word),TypeInfo(HICON)],Addr(ExtractAssociatedIconW),cStdCall)}

{RegisterProc(nil,'ExtractIcon',mtProc,TypeInfo(_T20),[
TypeInfo(HINST),
TypeInfoPChar,
TypeInfo(UINT),TypeInfo(HICON)],Addr(ExtractIcon),cStdCall)}

{RegisterProc(nil,'ExtractIconA',mtProc,TypeInfo(_T21),[
TypeInfo(HINST),
TypeInfoPChar,
TypeInfo(UINT),TypeInfo(HICON)],Addr(ExtractIconA),cStdCall)}

{RegisterProc(nil,'ExtractIconW',mtProc,TypeInfo(_T22),[
TypeInfo(HINST),
TypeInfoPWideChar,
TypeInfo(UINT),TypeInfo(HICON)],Addr(ExtractIconW),cStdCall)}

{RegisterProc(nil,'DoEnvironmentSubst',mtProc,TypeInfo(_T24),[
TypeInfoPChar,
TypeInfo(UINT),TypeInfo(DWORD)],Addr(DoEnvironmentSubst),cStdCall)}

{RegisterProc(nil,'DoEnvironmentSubstA',mtProc,TypeInfo(_T25),[
TypeInfoPChar,
TypeInfo(UINT),TypeInfo(DWORD)],Addr(DoEnvironmentSubstA),cStdCall)}

{RegisterProc(nil,'DoEnvironmentSubstW',mtProc,TypeInfo(_T26),[
TypeInfoPWideChar,
TypeInfo(UINT),TypeInfo(DWORD)],Addr(DoEnvironmentSubstW),cStdCall)}

{RegisterProc(nil,'ExtractIconEx',mtProc,TypeInfo(_T27),[
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(HICON),
TypeInfo(HICON),
TypeInfo(UINT),TypeInfo(UINT)],Addr(ExtractIconEx),cStdCall)}

{RegisterProc(nil,'ExtractIconExA',mtProc,TypeInfo(_T28),[
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(HICON),
TypeInfo(HICON),
TypeInfo(UINT),TypeInfo(UINT)],Addr(ExtractIconExA),cStdCall)}

{RegisterProc(nil,'ExtractIconExW',mtProc,TypeInfo(_T29),[
TypeInfoPWideChar,
TypeInfo(Integer),
TypeInfo(HICON),
TypeInfo(HICON),
TypeInfo(UINT),TypeInfo(UINT)],Addr(ExtractIconExW),cStdCall)}

{RegisterProc(nil,'ShellExecuteEx',mtProc,TypeInfo(_T34),[
TypeInfoPointer,TypeInfo(BOOL)],Addr(ShellExecuteEx),cStdCall)}

{RegisterProc(nil,'ShellExecuteExA',mtProc,TypeInfo(_T35),[
TypeInfoPointer,TypeInfo(BOOL)],Addr(ShellExecuteExA),cStdCall)}

{RegisterProc(nil,'ShellExecuteExW',mtProc,TypeInfo(_T36),[
TypeInfoPointer,TypeInfo(BOOL)],Addr(ShellExecuteExW),cStdCall)}

{RegisterProc(nil,'Shell_NotifyIcon',mtProc,TypeInfo(_T37),[
TypeInfo(DWORD),
TypeInfoPointer,TypeInfo(BOOL)],Addr(Shell_NotifyIcon),cStdCall)}

{RegisterProc(nil,'Shell_NotifyIconA',mtProc,TypeInfo(_T38),[
TypeInfo(DWORD),
TypeInfoPointer,TypeInfo(BOOL)],Addr(Shell_NotifyIconA),cStdCall)}

{RegisterProc(nil,'Shell_NotifyIconW',mtProc,TypeInfo(_T39),[
TypeInfo(DWORD),
TypeInfoPointer,TypeInfo(BOOL)],Addr(Shell_NotifyIconW),cStdCall)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
