{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit dcdsgnutil_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  activex,
  dcscript,
  dcinstprop,
  RTLConsts,
  Variants,
  graphics,
  dialogs,
  registry,
  inifiles,
  menus,
  controls,
  forms,
  windows,
  typinfo,
  classes,
  sysutils,
  dcsystem,
  dcdreamlib,
  consts,
  dcconsts,
  dcdsgnutil;
function ConvertTDCDsgnPropEditParamRecToVariant(var R : TDCDsgnPropEditParamRec) : OleVariant;
function ConvertVariantToTDCDsgnPropEditParamRec(const V : OleVariant) : TDCDsgnPropEditParamRec;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TDCDsgnPropEditParamRec__Wrapper = class(TDCRecordWrapper)
private
fR : TDCDsgnPropEditParamRec;
public
function GetRecordPtr : pointer; override;
published
procedure setEditLimit(const val : Integer);
function getEditLimit : Integer;
property EditLimit : Integer read getEditLimit write setEditLimit;
procedure setEditLimitKind(const val : TDCEditLimitKind);
function getEditLimitKind : TDCEditLimitKind;
property EditLimitKind : TDCEditLimitKind read getEditLimitKind write setEditLimitKind;
procedure setAllEqualKind(const val : TDCPropAccessKind);
function getAllEqualKind : TDCPropAccessKind;
property AllEqualKind : TDCPropAccessKind read getAllEqualKind write setAllEqualKind;
procedure setGetValueKind(const val : TDCPropAccessKind);
function getGetValueKind : TDCPropAccessKind;
property GetValueKind : TDCPropAccessKind read getGetValueKind write setGetValueKind;
procedure setGetValuesKind(const val : TDCPropAccessKind);
function getGetValuesKind : TDCPropAccessKind;
property GetValuesKind : TDCPropAccessKind read getGetValuesKind write setGetValuesKind;
procedure setSetValueKind(const val : TDCPropAccessKind);
function getSetValueKind : TDCPropAccessKind;
property SetValueKind : TDCPropAccessKind read getSetValueKind write setSetValueKind;
procedure setEditKind(const val : TDCPropAccessKind);
function getEditKind : TDCPropAccessKind;
property EditKind : TDCPropAccessKind read getEditKind write setEditKind;
end;
type
{_T0 = function : IDCDsgnDesignerSelections of object;}

_T1 = function : Integer of object;

{_T2 = procedure (p0 : TDCGroupChangeProc) of object;}

{_T3 = procedure (p0 : TDCGroupChangeProc) of object;}

_T4 = procedure (p0 : Integer) of object;

{_T5 = procedure (p0 : TComponentClass;
p1 : TDCDsgnComponentEditorClass) of object;}

{_T6 = procedure (p0 : PTypeInfo;
p1 : TClass;
const p2 : string;
p3 : TDCDsgnPropertyEditorClass) of object;}

{_T8 = function (p0 : TComponent;
const p1 : IDCDsgnDesigner): IDCDsgnComponentEditor of object;}

_T9 = procedure  of object;

{_T10 = function (p0 : TDCDsgnPropertyEditorClass;
p1 : TDCDsgnPropEditParamInfoKind): PDCDsgnPropEditParamRec of object;}

{_T11 = procedure (p0 : TComponent;
p1 : IDCDsgnDesigner) of object;}

_T12 = _T9;

_T13 = _T4;

_T14 = function : TComponent of object;

{_T15 = function : IDCDsgnDesigner of object;}

_T16 = function (p0 : Integer): string of object;

_T17 = _T1;

_T18 = function : Boolean of object;

_T19 = _T9;

_T20 = _T14;

{_T21 = procedure (const p0 : IDCDsgnProperty;
var p1 : Boolean) of object;}

{_T22 = procedure (p0 : IDCDsgnProperty;
p1 : Integer) of object;}

{_T23 = procedure (p0 : Integer;
p1 : TPersistent;
p2 : PPropInfo) of object;}

{_T24 = procedure (const p0 : IDCDsgnDesigner;
p1 : Integer;
p2 : Integer) of object;}

_T25 = _T9;

_T26 = _T18;

_T27 = _T18;

_T28 = _T9;

_T29 = function : TDCDsgnPropertyAttributes of object;

_T30 = function (p0 : Integer): TPersistent of object;

_T31 = _T1;

_T32 = function : string of object;

{_T33 = procedure (p0 : TDCDsgnGetPropProc) of object;}

{_T34 = function : PPropInfo of object;}

{_T35 = function : PTypeInfo of object;}

_T36 = _T32;

_T37 = _T32;

{_T38 = procedure (p0 : TGetStrProc) of object;}

_T39 = _T9;

_T40 = _T9;

_T41 = procedure (const p0 : string) of object;

_T42 = _T18;

function __TDCDsgnPropEditParamRec__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDCDsgnPropEditParamRec__Wrapper.setEditLimit(const val : Integer);
begin
TDCDsgnPropEditParamRec(GetRecordPtr^).EditLimit := val;
end;
function __TDCDsgnPropEditParamRec__Wrapper.getEditLimit : Integer;
begin
result := TDCDsgnPropEditParamRec(GetRecordPtr^).EditLimit;
end;
procedure __TDCDsgnPropEditParamRec__Wrapper.setEditLimitKind(const val : TDCEditLimitKind);
begin
TDCDsgnPropEditParamRec(GetRecordPtr^).EditLimitKind := val;
end;
function __TDCDsgnPropEditParamRec__Wrapper.getEditLimitKind : TDCEditLimitKind;
begin
result := TDCDsgnPropEditParamRec(GetRecordPtr^).EditLimitKind;
end;
procedure __TDCDsgnPropEditParamRec__Wrapper.setAllEqualKind(const val : TDCPropAccessKind);
begin
TDCDsgnPropEditParamRec(GetRecordPtr^).AllEqualKind := val;
end;
function __TDCDsgnPropEditParamRec__Wrapper.getAllEqualKind : TDCPropAccessKind;
begin
result := TDCDsgnPropEditParamRec(GetRecordPtr^).AllEqualKind;
end;
procedure __TDCDsgnPropEditParamRec__Wrapper.setGetValueKind(const val : TDCPropAccessKind);
begin
TDCDsgnPropEditParamRec(GetRecordPtr^).GetValueKind := val;
end;
function __TDCDsgnPropEditParamRec__Wrapper.getGetValueKind : TDCPropAccessKind;
begin
result := TDCDsgnPropEditParamRec(GetRecordPtr^).GetValueKind;
end;
procedure __TDCDsgnPropEditParamRec__Wrapper.setGetValuesKind(const val : TDCPropAccessKind);
begin
TDCDsgnPropEditParamRec(GetRecordPtr^).GetValuesKind := val;
end;
function __TDCDsgnPropEditParamRec__Wrapper.getGetValuesKind : TDCPropAccessKind;
begin
result := TDCDsgnPropEditParamRec(GetRecordPtr^).GetValuesKind;
end;
procedure __TDCDsgnPropEditParamRec__Wrapper.setSetValueKind(const val : TDCPropAccessKind);
begin
TDCDsgnPropEditParamRec(GetRecordPtr^).SetValueKind := val;
end;
function __TDCDsgnPropEditParamRec__Wrapper.getSetValueKind : TDCPropAccessKind;
begin
result := TDCDsgnPropEditParamRec(GetRecordPtr^).SetValueKind;
end;
procedure __TDCDsgnPropEditParamRec__Wrapper.setEditKind(const val : TDCPropAccessKind);
begin
TDCDsgnPropEditParamRec(GetRecordPtr^).EditKind := val;
end;
function __TDCDsgnPropEditParamRec__Wrapper.getEditKind : TDCPropAccessKind;
begin
result := TDCDsgnPropEditParamRec(GetRecordPtr^).EditKind;
end;
function _TDCDsgnPropEditParamRec_ : IDispatch;
begin
  result := __TDCDsgnPropEditParamRec__Wrapper.Create;
end;

type __TDCDsgnPropEditParamRec__Wrapper__ = class(__TDCDsgnPropEditParamRec__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDCDsgnPropEditParamRec__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDCDsgnPropEditParamRecToVariant(var R : TDCDsgnPropEditParamRec) : OleVariant;
var
__rw : __TDCDsgnPropEditParamRec__Wrapper__;
begin
__rw := __TDCDsgnPropEditParamRec__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDCDsgnPropEditParamRec(const V : OleVariant) : TDCDsgnPropEditParamRec;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDCDsgnPropEditParamRec((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
function __DC__GetTDCDsgnComponentEditor__Component(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDCDsgnComponentEditor(Instance).Component);
end;

function __DC__GetTDCDsgnPropertyEditor__PrivateDirectory(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCDsgnPropertyEditor(Instance).PrivateDirectory;
end;

function __DC__GetTDCDsgnPropertyEditor__PropCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCDsgnPropertyEditor(Instance).PropCount;
end;

function __DC__GetTDCDsgnPropertyEditor__Value(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCDsgnPropertyEditor(Instance).Value;
end;

procedure __DC__SetTDCDsgnPropertyEditor__Value(Instance : TObject; Params : PVariantArgList);
begin
TDCDsgnPropertyEditor(Instance).Value:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TDCDsgnComponentEditor,'Component',__DC__GetTDCDsgnComponentEditor__Component,nil);
RegisterProperty(TDCDsgnPropertyEditor,'PrivateDirectory',__DC__GetTDCDsgnPropertyEditor__PrivateDirectory,nil);
RegisterProperty(TDCDsgnPropertyEditor,'PropCount',__DC__GetTDCDsgnPropertyEditor__PropCount,nil);
RegisterProperty(TDCDsgnPropertyEditor,'Value',__DC__GetTDCDsgnPropertyEditor__Value,__DC__SetTDCDsgnPropertyEditor__Value);
end;

function __DC__Getdcdsgnutil__GShowReadOnlyProps(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := dcdsgnutil.GShowReadOnlyProps;
end;

procedure __DC__Setdcdsgnutil__GShowReadOnlyProps(Instance : TObject; Params : PVariantArgList);
begin
dcdsgnutil.GShowReadOnlyProps:=OleVariant(Params^[0]);
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('GShowReadOnlyProps',__DC__Getdcdsgnutil__GShowReadOnlyProps,__DC__Setdcdsgnutil__GShowReadOnlyProps));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

const __ConstNames0 : array[0..14] of string = (
'spaValueList'
,'spaSubProperties'
,'spaDialog'
,'spaMultiSelect'
,'spaAutoUpdate'
,'spaSortList'
,'spaReadOnly'
,'spaRevertable'
,'spaFullWidthName'
,'spaVolatileSubProperties'
,'spaVCL'
,'spaNotNestable'
,'ssCtrlAndLeft'
,'lkLimitByValue'
,'lkLimitAsStr'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,spaValueList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,spaSubProperties));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,spaDialog));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,spaMultiSelect));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,spaAutoUpdate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,spaSortList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,spaReadOnly));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,spaRevertable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,spaFullWidthName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,spaVolatileSubProperties));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,spaVCL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,spaNotNestable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,VarFromSet(ssCtrlAndLeft, sizeof(ssCtrlAndLeft))));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,lkLimitByValue));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,lkLimitAsStr));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..32] of TClass = (
TDCDsgnBrushStyleProperty,
TDCDsgnCaptionProperty,
TDCDsgnCharProperty,
TDCDsgnClassProperty,
TDCDsgnColorProperty,
TDCDsgnComponentEditor,
TDCDsgnComponentNameProperty,
TDCDsgnComponentProperty,
TDCDsgnCursorProperty,
TDCDsgnDateProperty,
TDCDsgnDateTimeProperty,
TDCDsgnDefaultEditor,
TDCDsgnEnumProperty,
TDCDsgnFloatProperty,
TDCDsgnFontCharsetProperty,
TDCDsgnFontNameProperty,
TDCDsgnFontProperty,
TDCDsgnImeNameProperty,
TDCDsgnInt64Property,
TDCDsgnIntegerProperty,
TDCDsgnMethodProperty,
TDCDsgnModalResultProperty,
TDCDsgnMPFilenameProperty,
TDCDsgnNestedProperty,
TDCDsgnOrdinalProperty,
TDCDsgnPenStyleProperty,
TDCDsgnPropertyEditor,
TDCDsgnSetElementProperty,
TDCDsgnSetProperty,
TDCDsgnShortCutProperty,
TDCDsgnStringProperty,
TDCDsgnTabOrderProperty,
TDCDsgnTimeProperty
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..3] of string = (
'TDCDsgnPropEditParamRec'
,'DCNewEditorGroup'
,'DCFreeEditorGroup'
,'DCTestProperlyRegistered'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_TDCDsgnPropEditParamRec_)));
RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[TypeInfo(Integer)],Addr(DCNewEditorGroup),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T4),[
TypeInfo(Integer)],Addr(DCFreeEditorGroup),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T9),NoParams,Addr(DCTestProperlyRegistered),cRegister);

//RegRegisterMethod(TDCDsgnComponentEditor,'Edit',TypeInfo(_T12),NoParams, pointer(4));
RegRegisterMethod(TDCDsgnComponentEditor,'Edit',TypeInfo(_T12),NoParams,  getVMTProcAddr('TDCDsgnComponentEditor','Edit',4));


//RegRegisterMethod(TDCDsgnComponentEditor,'ExecuteVerb',TypeInfo(_T13),[TypeInfo(Integer)], pointer(8));
RegRegisterMethod(TDCDsgnComponentEditor,'ExecuteVerb',TypeInfo(_T13),[TypeInfo(Integer)],  getVMTProcAddr('TDCDsgnComponentEditor','ExecuteVerb',8));


RegRegisterMethod(TDCDsgnComponentEditor,'GetComponent',TypeInfo(_T14),[TypeInfo(TComponent)],Addr(TDCDsgnComponentEditor.GetComponent));

//RegRegisterMethod(TDCDsgnComponentEditor,'GetVerb',TypeInfo(_T16),[TypeInfo(Integer),TypeInfo(string)], pointer(12));
RegRegisterMethod(TDCDsgnComponentEditor,'GetVerb',TypeInfo(_T16),[TypeInfo(Integer),TypeInfo(string)],  getVMTProcAddr('TDCDsgnComponentEditor','GetVerb',12));


//RegRegisterMethod(TDCDsgnComponentEditor,'GetVerbCount',TypeInfo(_T17),[TypeInfo(Integer)], pointer(16));
RegRegisterMethod(TDCDsgnComponentEditor,'GetVerbCount',TypeInfo(_T17),[TypeInfo(Integer)],  getVMTProcAddr('TDCDsgnComponentEditor','GetVerbCount',16));


RegRegisterMethod(TDCDsgnComponentEditor,'IsInInlined',TypeInfo(_T18),[TypeInfo(Boolean)],Addr(TDCDsgnComponentEditor.IsInInlined));

//RegRegisterMethod(TDCDsgnComponentEditor,'Copy',TypeInfo(_T19),NoParams, pointer(20));
RegRegisterMethod(TDCDsgnComponentEditor,'Copy',TypeInfo(_T19),NoParams,  getVMTProcAddr('TDCDsgnComponentEditor','Copy',20));


//RegRegisterMethod(TDCDsgnComponentProperty,'GetComponentReference',TypeInfo(_T20),[TypeInfo(TComponent)], pointer(60));
RegRegisterMethod(TDCDsgnComponentProperty,'GetComponentReference',TypeInfo(_T20),[TypeInfo(TComponent)],  getVMTProcAddr('TDCDsgnComponentProperty','GetComponentReference',60));


//RegRegisterMethod(TDCDsgnPropertyEditor,'Activate',TypeInfo(_T25),NoParams, pointer(8));
RegRegisterMethod(TDCDsgnPropertyEditor,'Activate',TypeInfo(_T25),NoParams,  getVMTProcAddr('TDCDsgnPropertyEditor','Activate',8));


//RegRegisterMethod(TDCDsgnPropertyEditor,'AllEqual',TypeInfo(_T26),[TypeInfo(Boolean)], pointer(12));
RegRegisterMethod(TDCDsgnPropertyEditor,'AllEqual',TypeInfo(_T26),[TypeInfo(Boolean)],  getVMTProcAddr('TDCDsgnPropertyEditor','AllEqual',12));


//RegRegisterMethod(TDCDsgnPropertyEditor,'AutoFill',TypeInfo(_T27),[TypeInfo(Boolean)], pointer(16));
RegRegisterMethod(TDCDsgnPropertyEditor,'AutoFill',TypeInfo(_T27),[TypeInfo(Boolean)],  getVMTProcAddr('TDCDsgnPropertyEditor','AutoFill',16));


//RegRegisterMethod(TDCDsgnPropertyEditor,'Edit',TypeInfo(_T28),NoParams, pointer(20));
RegRegisterMethod(TDCDsgnPropertyEditor,'Edit',TypeInfo(_T28),NoParams,  getVMTProcAddr('TDCDsgnPropertyEditor','Edit',20));


//RegRegisterMethod(TDCDsgnPropertyEditor,'GetAttributes',TypeInfo(_T29),[TypeInfo(TDCDsgnPropertyAttributes)], pointer(24));
RegRegisterMethod(TDCDsgnPropertyEditor,'GetAttributes',TypeInfo(_T29),[TypeInfo(TDCDsgnPropertyAttributes)],  getVMTProcAddr('TDCDsgnPropertyEditor','GetAttributes',24));


RegRegisterMethod(TDCDsgnPropertyEditor,'GetComponent',TypeInfo(_T30),[
TypeInfo(Integer),TypeInfo(TPersistent)],Addr(TDCDsgnPropertyEditor.GetComponent));

//RegRegisterMethod(TDCDsgnPropertyEditor,'GetEditLimit',TypeInfo(_T31),[TypeInfo(Integer)], pointer(28));
RegRegisterMethod(TDCDsgnPropertyEditor,'GetEditLimit',TypeInfo(_T31),[TypeInfo(Integer)],  getVMTProcAddr('TDCDsgnPropertyEditor','GetEditLimit',28));


//RegRegisterMethod(TDCDsgnPropertyEditor,'GetName',TypeInfo(_T32),[TypeInfo(string)], pointer(32));
RegRegisterMethod(TDCDsgnPropertyEditor,'GetName',TypeInfo(_T32),[TypeInfo(string)],  getVMTProcAddr('TDCDsgnPropertyEditor','GetName',32));


//RegRegisterMethod(TDCDsgnPropertyEditor,'GetValue',TypeInfo(_T36),[TypeInfo(string)], pointer(44));
RegRegisterMethod(TDCDsgnPropertyEditor,'GetValue',TypeInfo(_T36),[TypeInfo(string)],  getVMTProcAddr('TDCDsgnPropertyEditor','GetValue',44));


RegRegisterMethod(TDCDsgnPropertyEditor,'GetVisualValue',TypeInfo(_T37),[TypeInfo(string)],Addr(TDCDsgnPropertyEditor.GetVisualValue));

//RegRegisterMethod(TDCDsgnPropertyEditor,'Initialize',TypeInfo(_T39),NoParams, pointer(52));
RegRegisterMethod(TDCDsgnPropertyEditor,'Initialize',TypeInfo(_T39),NoParams,  getVMTProcAddr('TDCDsgnPropertyEditor','Initialize',52));


RegRegisterMethod(TDCDsgnPropertyEditor,'Revert',TypeInfo(_T40),NoParams,Addr(TDCDsgnPropertyEditor.Revert));

//RegRegisterMethod(TDCDsgnPropertyEditor,'SetValue',TypeInfo(_T41),[TypeInfo(string)], pointer(56));
RegRegisterMethod(TDCDsgnPropertyEditor,'SetValue',TypeInfo(_T41),[TypeInfo(string)],  getVMTProcAddr('TDCDsgnPropertyEditor','SetValue',56));


RegRegisterMethod(TDCDsgnPropertyEditor,'ValueAvailable',TypeInfo(_T42),[TypeInfo(Boolean)],Addr(TDCDsgnPropertyEditor.ValueAvailable));

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'DCCreateSelectionList',mtProc,TypeInfo(_T0),[TypeInfo(IDCDsgnDesignerSelections)],Addr(DCCreateSelectionList),cRegister)}

{RegisterProc(nil,'DCNotifyGroupChange',mtProc,TypeInfo(_T2),[
TypeInfo(TDCGroupChangeProc)],Addr(DCNotifyGroupChange),cRegister)}

{RegisterProc(nil,'DCUnnotifyGroupChange',mtProc,TypeInfo(_T3),[
TypeInfo(TDCGroupChangeProc)],Addr(DCUnnotifyGroupChange),cRegister)}

{RegisterProc(nil,'DCRegisterComponentEditor',mtProc,TypeInfo(_T5),[
TypeInfo(TComponentClass),
TypeInfo(TDCDsgnComponentEditorClass)],Addr(DCRegisterComponentEditor),cRegister)}

{RegisterProc(nil,'DCRegisterPropertyEditor',mtProc,TypeInfo(_T6),[
TypeInfoPointer,
TypeInfo(TClass),
TypeInfo(string),
TypeInfo(TDCDsgnPropertyEditorClass)],Addr(DCRegisterPropertyEditor),cRegister)}

{RegisterProc(nil,'DCGetComponentEditor',mtProc,TypeInfo(_T8),[
TypeInfo(TComponent),
TypeInfo(IDCDsgnDesigner),TypeInfo(IDCDsgnComponentEditor)],Addr(DCGetComponentEditor),cRegister)}

{RegisterProc(nil,'DCFindPropEditParams',mtProc,TypeInfo(_T10),[
TypeInfo(TDCDsgnPropertyEditorClass),
TypeInfo(TDCDsgnPropEditParamInfoKind),TypeInfoPointer],Addr(DCFindPropEditParams),cRegister)}

{RegisterProc(TDCDsgnComponentEditor,'Create',mtConstructor,TypeInfo(_T11),[
TypeInfo(TComponent),
TypeInfo(IDCDsgnDesigner)], pointer(0),cRegister)}

{RegRegisterMethod(TDCDsgnComponentEditor,'GetDesigner',TypeInfo(_T15),[TypeInfo(IDCDsgnDesigner)],Addr(TDCDsgnComponentEditor.GetDesigner))}

{RegRegisterMethod(TDCDsgnDefaultEditor,'EditProperty',TypeInfo(_T21),[
TypeInfo(IDCDsgnProperty),
TypeInfo(Boolean)], pointer(24))}

{RegisterProc(TDCDsgnNestedProperty,'Create',mtConstructor,TypeInfo(_T22),[
TypeInfo(IDCDsgnProperty),
TypeInfo(Integer)],Addr(TDCDsgnNestedProperty.Create),cRegister)}

{RegRegisterMethod(TDCDsgnPropertyEditor,'SetPropEntry',TypeInfo(_T23),[
TypeInfo(Integer),
TypeInfo(TPersistent),
TypeInfoPointer], pointer(0))}

{RegisterProc(TDCDsgnPropertyEditor,'Create',mtConstructor,TypeInfo(_T24),[
TypeInfo(IDCDsgnDesigner),
TypeInfo(Integer),
TypeInfo(Integer)], pointer(4),cRegister)}

{RegRegisterMethod(TDCDsgnPropertyEditor,'GetProperties',TypeInfo(_T33),[
TypeInfo(TDCDsgnGetPropProc)], pointer(36))}

{RegRegisterMethod(TDCDsgnPropertyEditor,'GetPropInfo',TypeInfo(_T34),[TypeInfoPointer], pointer(40))}

{RegRegisterMethod(TDCDsgnPropertyEditor,'GetPropType',TypeInfo(_T35),[TypeInfoPointer],Addr(TDCDsgnPropertyEditor.GetPropType))}

{RegRegisterMethod(TDCDsgnPropertyEditor,'GetValues',TypeInfo(_T38),[
TypeInfo(TGetStrProc)], pointer(48))}

{RegisterEvent(TypeInfo(TDCDsgnGetPropProc),[
TypeInfo(IDCDsgnProperty)]);}

{RegisterEvent(TypeInfo(TDCDsgnPropertyEditorFilterFunc),[
TypeInfo(IDCDsgnProperty),TypeInfo(Boolean)]);}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
