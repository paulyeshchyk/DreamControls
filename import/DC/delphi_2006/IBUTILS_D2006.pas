{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IBUTILS_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  Messages,
  Classes,
  SysUtils,
  DB,
  DBCommon,
  IBUtils;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (p0 : Integer;
p1 : Integer): Integer of object;

_T1 = _T0;

_T2 = function (p0 : Integer): String of object;

_T3 = _T0;

_T4 = function (p0 : String;
p1 : String): String of object;

_T5 = function (p0 : Integer;
p1 : String): String of object;

_T6 = _T5;

_T7 = _T5;

_T8 = _T5;

_T9 = function (p0 : TParams;
p1 : String;
p2 : Boolean;
p3 : Integer): String of object;

_T10 = procedure (p0 : String;
var p1 : String;
var p2 : String;
var p3 : String) of object;

_T11 = procedure  of object;

procedure __RegisterProps;
begin
end;

function __DC__GetIBUtils__CopyMasterFieldToDetail(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := IBUtils.CopyMasterFieldToDetail;
end;

procedure __DC__SetIBUtils__CopyMasterFieldToDetail(Instance : TObject; Params : PVariantArgList);
begin
IBUtils.CopyMasterFieldToDetail:=OleVariant(Params^[0]);
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('CopyMasterFieldToDetail',__DC__GetIBUtils__CopyMasterFieldToDetail,__DC__SetIBUtils__CopyMasterFieldToDetail));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

const __ConstNames0 : array[0..4] of string = (
'CRLF'
,'CR'
,'LF'
,'TAB'
,'NULL_TERMINATOR'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,CRLF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,CR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,LF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,TAB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,NULL_TERMINATOR));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..0] of TClass = (
TIBTimer
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..10] of string = (
'Max'
,'Min'
,'RandomString'
,'RandomInteger'
,'StripString'
,'FormatIdentifier'
,'FormatIdentifierValue'
,'ExtractIdentifier'
,'QuoteIdentifier'
,'AddIBParamSQLForDetail'
,'DecomposeDatabaseName'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(Integer)],Addr(Max),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(Integer)],Addr(Min),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(Integer),TypeInfo(String)],Addr(RandomString),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),[
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(Integer)],Addr(RandomInteger),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T4),[
TypeInfo(String),
TypeInfo(String),TypeInfo(String)],Addr(StripString),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T5),[
TypeInfo(Integer),
TypeInfo(String),TypeInfo(String)],Addr(FormatIdentifier),cRegister);

RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T6),[
TypeInfo(Integer),
TypeInfo(String),TypeInfo(String)],Addr(FormatIdentifierValue),cRegister);

RegisterProc(nil,MethodNames[7],mtProc,TypeInfo(_T7),[
TypeInfo(Integer),
TypeInfo(String),TypeInfo(String)],Addr(ExtractIdentifier),cRegister);

RegisterProc(nil,MethodNames[8],mtProc,TypeInfo(_T8),[
TypeInfo(Integer),
TypeInfo(String),TypeInfo(String)],Addr(QuoteIdentifier),cRegister);

RegisterProc(nil,MethodNames[9],mtProc,TypeInfo(_T9),[
TypeInfo(TParams),
TypeInfo(String),
TypeInfo(Boolean),
TypeInfo(Integer),TypeInfo(String)],Addr(AddIBParamSQLForDetail),cRegister);

RegisterProc(nil,MethodNames[10],mtProc,TypeInfo(_T10),[
TypeInfo(String),
TypeInfo(String),
TypeInfo(String),
TypeInfo(String)],Addr(DecomposeDatabaseName),cRegister);

RegRegisterMethod(TIBTimer,'Timer',TypeInfo(_T11),NoParams, pointer(MinVMTOffset - 16));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
