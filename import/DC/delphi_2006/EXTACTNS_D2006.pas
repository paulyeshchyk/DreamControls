{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit EXTACTNS_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  dcscript,
  dcsystem,
  dcdreamlib,
  SysUtils,
  Windows,
  Controls,
  Classes,
  ComCtrls,
  Graphics,
  ActnList,
  StdActns,
  StdCtrls,
  ShellAPI,
  Dialogs,
  ExtDlgs,
  Registry,
  ImgList,
  UrlMon,
  ActiveX,
  ExtActns;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure  of object;

function __DC__GetTCustomFileRun__HInst(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomFileRun(Instance).HInst;
end;

function __DC__GetTCustomFileRun__Browse(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomFileRun(Instance).Browse;
end;

procedure __DC__SetTCustomFileRun__Browse(Instance : TObject; Params : PVariantArgList);
begin
TCustomFileRun(Instance).Browse:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomFileRun__BrowseDlg(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomFileRun(Instance).BrowseDlg);
end;

procedure __DC__SetTCustomFileRun__BrowseDlg(Instance : TObject; Params : PVariantArgList);
begin
TCustomFileRun(Instance).BrowseDlg:=TOpenDialog(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomFileRun__Directory(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomFileRun(Instance).Directory;
end;

procedure __DC__SetTCustomFileRun__Directory(Instance : TObject; Params : PVariantArgList);
begin
TCustomFileRun(Instance).Directory:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomFileRun__FileName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomFileRun(Instance).FileName;
end;

procedure __DC__SetTCustomFileRun__FileName(Instance : TObject; Params : PVariantArgList);
begin
TCustomFileRun(Instance).FileName:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomFileRun__Operation(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomFileRun(Instance).Operation;
end;

procedure __DC__SetTCustomFileRun__Operation(Instance : TObject; Params : PVariantArgList);
begin
TCustomFileRun(Instance).Operation:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomFileRun__ParentControl(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomFileRun(Instance).ParentControl);
end;

procedure __DC__SetTCustomFileRun__ParentControl(Instance : TObject; Params : PVariantArgList);
begin
TCustomFileRun(Instance).ParentControl:=TWinControl(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomFileRun__Parameters(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomFileRun(Instance).Parameters;
end;

procedure __DC__SetTCustomFileRun__Parameters(Instance : TObject; Params : PVariantArgList);
begin
TCustomFileRun(Instance).Parameters:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomFileRun__ShowCmd(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomFileRun(Instance).ShowCmd;
end;

procedure __DC__SetTCustomFileRun__ShowCmd(Instance : TObject; Params : PVariantArgList);
begin
TCustomFileRun(Instance).ShowCmd:=OleVariant(Params^[0]);
end;

function __DC__GetTListControlAction__ListControl(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TListControlAction(Instance).ListControl);
end;

procedure __DC__SetTListControlAction__ListControl(Instance : TObject; Params : PVariantArgList);
begin
TListControlAction(Instance).ListControl:=TCustomListControl(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTTabAction__SkipHiddenTabs(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TTabAction(Instance).SkipHiddenTabs;
end;

procedure __DC__SetTTabAction__SkipHiddenTabs(Instance : TObject; Params : PVariantArgList);
begin
TTabAction(Instance).SkipHiddenTabs:=OleVariant(Params^[0]);
end;

function __DC__GetTTabAction__TabControl(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TTabAction(Instance).TabControl);
end;

procedure __DC__SetTTabAction__TabControl(Instance : TObject; Params : PVariantArgList);
begin
TTabAction(Instance).TabControl:=TCustomTabControl(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTTabAction__Wrap(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TTabAction(Instance).Wrap;
end;

procedure __DC__SetTTabAction__Wrap(Instance : TObject; Params : PVariantArgList);
begin
TTabAction(Instance).Wrap:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TCustomFileRun,'HInst',__DC__GetTCustomFileRun__HInst,nil);
RegisterProperty(TCustomFileRun,'Browse',__DC__GetTCustomFileRun__Browse,__DC__SetTCustomFileRun__Browse);
RegisterProperty(TCustomFileRun,'BrowseDlg',__DC__GetTCustomFileRun__BrowseDlg,__DC__SetTCustomFileRun__BrowseDlg);
RegisterProperty(TCustomFileRun,'Directory',__DC__GetTCustomFileRun__Directory,__DC__SetTCustomFileRun__Directory);
RegisterProperty(TCustomFileRun,'FileName',__DC__GetTCustomFileRun__FileName,__DC__SetTCustomFileRun__FileName);
RegisterProperty(TCustomFileRun,'Operation',__DC__GetTCustomFileRun__Operation,__DC__SetTCustomFileRun__Operation);
RegisterProperty(TCustomFileRun,'ParentControl',__DC__GetTCustomFileRun__ParentControl,__DC__SetTCustomFileRun__ParentControl);
RegisterProperty(TCustomFileRun,'Parameters',__DC__GetTCustomFileRun__Parameters,__DC__SetTCustomFileRun__Parameters);
RegisterProperty(TCustomFileRun,'ShowCmd',__DC__GetTCustomFileRun__ShowCmd,__DC__SetTCustomFileRun__ShowCmd);
RegisterProperty(TListControlAction,'ListControl',__DC__GetTListControlAction__ListControl,__DC__SetTListControlAction__ListControl);
RegisterProperty(TTabAction,'SkipHiddenTabs',__DC__GetTTabAction__SkipHiddenTabs,__DC__SetTTabAction__SkipHiddenTabs);
RegisterProperty(TTabAction,'TabControl',__DC__GetTTabAction__TabControl,__DC__SetTTabAction__TabControl);
RegisterProperty(TTabAction,'Wrap',__DC__GetTTabAction__Wrap,__DC__SetTTabAction__Wrap);
end;

const __ConstNames0 : array[0..58] of string = (
'scHide'
,'scMaximize'
,'scMinimize'
,'scRestore'
,'scShow'
,'scShowDefault'
,'scShowMaximized'
,'scShowMinimized'
,'scShowMinNoActive'
,'scShowNA'
,'scShowNoActivate'
,'scShowNormal'
,'dsFindingResource'
,'dsConnecting'
,'dsRedirecting'
,'dsBeginDownloadData'
,'dsDownloadingData'
,'dsEndDownloadData'
,'dsBeginDownloadComponents'
,'dsInstallingComponents'
,'dsEndDownloadComponents'
,'dsUsingCachedCopy'
,'dsSendingRequest'
,'dsClassIDAvailable'
,'dsMIMETypeAvailable'
,'dsCacheFileNameAvailable'
,'dsBeginSyncOperation'
,'dsEndSyncOperation'
,'dsBeginUploadData'
,'dsUploadingData'
,'dsEndUploadData'
,'dsProtocolClassID'
,'dsEncoding'
,'dsVerifiedMIMETypeAvailable'
,'dsClassInstallLocation'
,'dsDecoding'
,'dsLoadingMIMEHandler'
,'dsContentDispositionAttach'
,'dsFilterReportMIMEType'
,'dsCLSIDCanInstantiate'
,'dsIUnKnownAvailable'
,'dsDirectBind'
,'dsRawMIMEType'
,'dsProxyDetecting'
,'dsAcceptRanges'
,'dsCookieSent'
,'dsCompactPolicyReceived'
,'dsCookieSuppressed'
,'dsCookieStateUnknown'
,'dsCookieStateAccept'
,'dsCookeStateReject'
,'dsCookieStatePrompt'
,'dsCookieStateLeash'
,'dsCookieStateDowngrade'
,'dsPolicyHREF'
,'dsP3PHeader'
,'dsSessionCookieReceived'
,'dsPersistentCookieReceived'
,'dsSessionCookiesAllowed'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,scHide));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,scMaximize));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,scMinimize));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,scRestore));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,scShow));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,scShowDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,scShowMaximized));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,scShowMinimized));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,scShowMinNoActive));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,scShowNA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,scShowNoActivate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,scShowNormal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,dsFindingResource));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,dsConnecting));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,dsRedirecting));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,dsBeginDownloadData));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,dsDownloadingData));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,dsEndDownloadData));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,dsBeginDownloadComponents));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,dsInstallingComponents));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,dsEndDownloadComponents));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,dsUsingCachedCopy));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,dsSendingRequest));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,dsClassIDAvailable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,dsMIMETypeAvailable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,dsCacheFileNameAvailable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,dsBeginSyncOperation));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,dsEndSyncOperation));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,dsBeginUploadData));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,dsUploadingData));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,dsEndUploadData));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,dsProtocolClassID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,dsEncoding));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,dsVerifiedMIMETypeAvailable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,dsClassInstallLocation));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,dsDecoding));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,dsLoadingMIMEHandler));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,dsContentDispositionAttach));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,dsFilterReportMIMEType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,dsCLSIDCanInstantiate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,dsIUnKnownAvailable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,dsDirectBind));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,dsRawMIMEType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,dsProxyDetecting));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,dsAcceptRanges));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,dsCookieSent));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,dsCompactPolicyReceived));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,dsCookieSuppressed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,dsCookieStateUnknown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,dsCookieStateAccept));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,dsCookeStateReject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,dsCookieStatePrompt));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,dsCookieStateLeash));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,dsCookieStateDowngrade));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,dsPolicyHREF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,dsP3PHeader));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,dsSessionCookieReceived));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,dsPersistentCookieReceived));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,dsSessionCookiesAllowed));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..25] of TClass = (
TBrowseURL,
TCustomFileRun,
TDownLoadURL,
TFileRun,
TListControlAction,
TListControlClearSelection,
TListControlCopySelection,
TListControlDeleteSelection,
TListControlMoveSelection,
TListControlSelectAll,
TNextTab,
TOpenPicture,
TPreviousTab,
TRichEditAction,
TRichEditAlignCenter,
TRichEditAlignLeft,
TRichEditAlignRight,
TRichEditBold,
TRichEditBullets,
TRichEditItalic,
TRichEditStrikeOut,
TRichEditUnderline,
TSavePicture,
TSendMail,
TTabAction,
TURLAction
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TCustomFileRun,'SetupBrowseDialog',TypeInfo(_T0),NoParams,Addr(TCustomFileRun.SetupBrowseDialog));

end;
initialization
_mreg_0;
RegisterEvent(TypeInfo(TDownloadProgressEvent),[
TypeInfo(TDownLoadURL),
TypeInfo(Cardinal),
TypeInfo(Cardinal),
TypeInfo(TURLDownloadStatus),
TypeInfo(String),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TValidateTabEvent),[
TypeInfo(TTabAction),
TypeInfo(TCustomTabControl),
TypeInfo(Boolean)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
