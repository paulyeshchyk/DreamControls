{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IDIPWATCH_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  IdComponent,
  IdThread,
  IdIPWatch;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function : Boolean of object;

_T1 = procedure  of object;

_T2 = function : string of object;

_T3 = _T1;

function __DC__GetTIdIPWatch__CurrentIP(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdIPWatch(Instance).CurrentIP;
end;

function __DC__GetTIdIPWatch__IPHistoryList(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TIdIPWatch(Instance).IPHistoryList);
end;

function __DC__GetTIdIPWatch__IsOnline(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdIPWatch(Instance).IsOnline;
end;

function __DC__GetTIdIPWatch__PreviousIP(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdIPWatch(Instance).PreviousIP;
end;

procedure __RegisterProps;
begin
RegisterProperty(TIdIPWatch,'CurrentIP',__DC__GetTIdIPWatch__CurrentIP,nil);
RegisterProperty(TIdIPWatch,'IPHistoryList',__DC__GetTIdIPWatch__IPHistoryList,nil);
RegisterProperty(TIdIPWatch,'IsOnline',__DC__GetTIdIPWatch__IsOnline,nil);
RegisterProperty(TIdIPWatch,'PreviousIP',__DC__GetTIdIPWatch__PreviousIP,nil);
end;

const __ConstNames0 : array[0..2] of string = (
'IP_WATCH_HIST_MAX'
,'IP_WATCH_HIST_FILENAME'
,'IP_WATCH_INTERVAL'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,IP_WATCH_HIST_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,IP_WATCH_HIST_FILENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,IP_WATCH_INTERVAL));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..1] of TClass = (
TIdIPWatch,
TIdIPWatchThread
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TIdIPWatch,'ForceCheck',TypeInfo(_T0),[TypeInfo(Boolean)],Addr(TIdIPWatch.ForceCheck));

RegRegisterMethod(TIdIPWatch,'LoadHistory',TypeInfo(_T1),NoParams,Addr(TIdIPWatch.LoadHistory));

RegRegisterMethod(TIdIPWatch,'LocalIP',TypeInfo(_T2),[TypeInfo(string)],Addr(TIdIPWatch.LocalIP));

RegRegisterMethod(TIdIPWatch,'SaveHistory',TypeInfo(_T3),NoParams,Addr(TIdIPWatch.SaveHistory));

end;
initialization
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
