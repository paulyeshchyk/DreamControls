{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit ACTIVEX_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  Types,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Messages,
  Windows,
  ActiveX;
function Convert_COSERVERINFOToVariant(var R : _COSERVERINFO) : OleVariant;
function ConvertVariantTo_COSERVERINFO(const V : OleVariant) : _COSERVERINFO;
function Convert_OBJECTIDToVariant(var R : _OBJECTID) : OleVariant;
function ConvertVariantTo_OBJECTID(const V : OleVariant) : _OBJECTID;
function Convert_tagOLECMDToVariant(var R : _tagOLECMD) : OleVariant;
function ConvertVariantTo_tagOLECMD(const V : OleVariant) : _tagOLECMD;
function Convert_tagOLECMDTEXTToVariant(var R : _tagOLECMDTEXT) : OleVariant;
function ConvertVariantTo_tagOLECMDTEXT(const V : OleVariant) : _tagOLECMDTEXT;
function ConvertARRAYDESCToVariant(var R : ARRAYDESC) : OleVariant;
function ConvertVariantToARRAYDESC(const V : OleVariant) : ARRAYDESC;
function ConvertBIND_OPTSToVariant(var R : BIND_OPTS) : OleVariant;
function ConvertVariantToBIND_OPTS(const V : OleVariant) : BIND_OPTS;
function ConvertBINDPTRToVariant(var R : BINDPTR) : OleVariant;
function ConvertVariantToBINDPTR(const V : OleVariant) : BINDPTR;
function ConvertBLOBToVariant(var R : BLOB) : OleVariant;
function ConvertVariantToBLOB(const V : OleVariant) : BLOB;
function ConvertBORDERWIDTHSToVariant(var R : BORDERWIDTHS) : OleVariant;
function ConvertVariantToBORDERWIDTHS(const V : OleVariant) : BORDERWIDTHS;
function ConvertCABOOLToVariant(var R : CABOOL) : OleVariant;
function ConvertVariantToCABOOL(const V : OleVariant) : CABOOL;
function ConvertCABSTRToVariant(var R : CABSTR) : OleVariant;
function ConvertVariantToCABSTR(const V : OleVariant) : CABSTR;
function ConvertCACLIPDATAToVariant(var R : CACLIPDATA) : OleVariant;
function ConvertVariantToCACLIPDATA(const V : OleVariant) : CACLIPDATA;
function ConvertCACLSIDToVariant(var R : CACLSID) : OleVariant;
function ConvertVariantToCACLSID(const V : OleVariant) : CACLSID;
function ConvertCACYToVariant(var R : CACY) : OleVariant;
function ConvertVariantToCACY(const V : OleVariant) : CACY;
function ConvertCADATEToVariant(var R : CADATE) : OleVariant;
function ConvertVariantToCADATE(const V : OleVariant) : CADATE;
function ConvertCADBLToVariant(var R : CADBL) : OleVariant;
function ConvertVariantToCADBL(const V : OleVariant) : CADBL;
function ConvertCADWORDToVariant(var R : CADWORD) : OleVariant;
function ConvertVariantToCADWORD(const V : OleVariant) : CADWORD;
function ConvertCAFILETIMEToVariant(var R : CAFILETIME) : OleVariant;
function ConvertVariantToCAFILETIME(const V : OleVariant) : CAFILETIME;
function ConvertCAFLTToVariant(var R : CAFLT) : OleVariant;
function ConvertVariantToCAFLT(const V : OleVariant) : CAFLT;
function ConvertCAHToVariant(var R : CAH) : OleVariant;
function ConvertVariantToCAH(const V : OleVariant) : CAH;
function ConvertCAIToVariant(var R : CAI) : OleVariant;
function ConvertVariantToCAI(const V : OleVariant) : CAI;
function ConvertCALToVariant(var R : CAL) : OleVariant;
function ConvertVariantToCAL(const V : OleVariant) : CAL;
function ConvertCALPOLESTRToVariant(var R : CALPOLESTR) : OleVariant;
function ConvertVariantToCALPOLESTR(const V : OleVariant) : CALPOLESTR;
function ConvertCALPSTRToVariant(var R : CALPSTR) : OleVariant;
function ConvertVariantToCALPSTR(const V : OleVariant) : CALPSTR;
function ConvertCALPWSTRToVariant(var R : CALPWSTR) : OleVariant;
function ConvertVariantToCALPWSTR(const V : OleVariant) : CALPWSTR;
function ConvertCAPROPVARIANTToVariant(var R : CAPROPVARIANT) : OleVariant;
function ConvertVariantToCAPROPVARIANT(const V : OleVariant) : CAPROPVARIANT;
function ConvertCASCODEToVariant(var R : CASCODE) : OleVariant;
function ConvertVariantToCASCODE(const V : OleVariant) : CASCODE;
function ConvertCAUBToVariant(var R : CAUB) : OleVariant;
function ConvertVariantToCAUB(const V : OleVariant) : CAUB;
function ConvertCAUHToVariant(var R : CAUH) : OleVariant;
function ConvertVariantToCAUH(const V : OleVariant) : CAUH;
function ConvertCAUIToVariant(var R : CAUI) : OleVariant;
function ConvertVariantToCAUI(const V : OleVariant) : CAUI;
function ConvertCAULToVariant(var R : CAUL) : OleVariant;
function ConvertVariantToCAUL(const V : OleVariant) : CAUL;
function ConvertCAUUIDToVariant(var R : CAUUID) : OleVariant;
function ConvertVariantToCAUUID(const V : OleVariant) : CAUUID;
function ConvertCLIPDATAToVariant(var R : CLIPDATA) : OleVariant;
function ConvertVariantToCLIPDATA(const V : OleVariant) : CLIPDATA;
function ConvertCONNECTDATAToVariant(var R : CONNECTDATA) : OleVariant;
function ConvertVariantToCONNECTDATA(const V : OleVariant) : CONNECTDATA;
function ConvertCONTROLINFOToVariant(var R : CONTROLINFO) : OleVariant;
function ConvertVariantToCONTROLINFO(const V : OleVariant) : CONTROLINFO;
function ConvertCOSERVERINFOToVariant(var R : COSERVERINFO) : OleVariant;
function ConvertVariantToCOSERVERINFO(const V : OleVariant) : COSERVERINFO;
function ConvertCUSTDATAToVariant(var R : CUSTDATA) : OleVariant;
function ConvertVariantToCUSTDATA(const V : OleVariant) : CUSTDATA;
function ConvertCUSTDATAITEMToVariant(var R : CUSTDATAITEM) : OleVariant;
function ConvertVariantToCUSTDATAITEM(const V : OleVariant) : CUSTDATAITEM;
function ConvertDECIMALToVariant(var R : DECIMAL) : OleVariant;
function ConvertVariantToDECIMAL(const V : OleVariant) : DECIMAL;
function ConvertDISPPARAMSToVariant(var R : DISPPARAMS) : OleVariant;
function ConvertVariantToDISPPARAMS(const V : OleVariant) : DISPPARAMS;
function ConvertDVTARGETDEVICEToVariant(var R : DVTARGETDEVICE) : OleVariant;
function ConvertVariantToDVTARGETDEVICE(const V : OleVariant) : DVTARGETDEVICE;
function ConvertELEMDESCToVariant(var R : ELEMDESC) : OleVariant;
function ConvertVariantToELEMDESC(const V : OleVariant) : ELEMDESC;
function ConvertEXCEPINFOToVariant(var R : EXCEPINFO) : OleVariant;
function ConvertVariantToEXCEPINFO(const V : OleVariant) : EXCEPINFO;
function ConvertFMTIDToVariant(var R : FMTID) : OleVariant;
function ConvertVariantToFMTID(const V : OleVariant) : FMTID;
function ConvertFONTDESCToVariant(var R : FONTDESC) : OleVariant;
function ConvertVariantToFONTDESC(const V : OleVariant) : FONTDESC;
function ConvertFUNCDESCToVariant(var R : FUNCDESC) : OleVariant;
function ConvertVariantToFUNCDESC(const V : OleVariant) : FUNCDESC;
function ConvertIDLDESCToVariant(var R : IDLDESC) : OleVariant;
function ConvertVariantToIDLDESC(const V : OleVariant) : IDLDESC;
function ConvertINTERFACEDATAToVariant(var R : INTERFACEDATA) : OleVariant;
function ConvertVariantToINTERFACEDATA(const V : OleVariant) : INTERFACEDATA;
function ConvertINTERFACEINFOToVariant(var R : INTERFACEINFO) : OleVariant;
function ConvertVariantToINTERFACEINFO(const V : OleVariant) : INTERFACEINFO;
function ConvertLICINFOToVariant(var R : LICINFO) : OleVariant;
function ConvertVariantToLICINFO(const V : OleVariant) : LICINFO;
function ConvertMETHODDATAToVariant(var R : METHODDATA) : OleVariant;
function ConvertVariantToMETHODDATA(const V : OleVariant) : METHODDATA;
function ConvertMULTI_QIToVariant(var R : MULTI_QI) : OleVariant;
function ConvertVariantToMULTI_QI(const V : OleVariant) : MULTI_QI;
function ConvertOBJECTDESCRIPTORToVariant(var R : OBJECTDESCRIPTOR) : OleVariant;
function ConvertVariantToOBJECTDESCRIPTOR(const V : OleVariant) : OBJECTDESCRIPTOR;
function ConvertOBJECTIDToVariant(var R : OBJECTID) : OleVariant;
function ConvertVariantToOBJECTID(const V : OleVariant) : OBJECTID;
function ConvertOCPFIPARAMSToVariant(var R : OCPFIPARAMS) : OleVariant;
function ConvertVariantToOCPFIPARAMS(const V : OleVariant) : OCPFIPARAMS;
function ConvertOLECMDToVariant(var R : OLECMD) : OleVariant;
function ConvertVariantToOLECMD(const V : OleVariant) : OLECMD;
function ConvertOLECMDTEXTToVariant(var R : OLECMDTEXT) : OleVariant;
function ConvertVariantToOLECMDTEXT(const V : OleVariant) : OLECMDTEXT;
function ConvertOLEINPLACEFRAMEINFOToVariant(var R : OLEINPLACEFRAMEINFO) : OleVariant;
function ConvertVariantToOLEINPLACEFRAMEINFO(const V : OleVariant) : OLEINPLACEFRAMEINFO;
function ConvertOLEMENUGROUPWIDTHSToVariant(var R : OLEMENUGROUPWIDTHS) : OleVariant;
function ConvertVariantToOLEMENUGROUPWIDTHS(const V : OleVariant) : OLEMENUGROUPWIDTHS;
function ConvertOLEVERBToVariant(var R : OLEVERB) : OleVariant;
function ConvertVariantToOLEVERB(const V : OleVariant) : OLEVERB;
function ConvertPAGERANGEToVariant(var R : PAGERANGE) : OleVariant;
function ConvertVariantToPAGERANGE(const V : OleVariant) : PAGERANGE;
function ConvertPAGESETToVariant(var R : PAGESET) : OleVariant;
function ConvertVariantToPAGESET(const V : OleVariant) : PAGESET;
function ConvertPARAMDATAToVariant(var R : PARAMDATA) : OleVariant;
function ConvertVariantToPARAMDATA(const V : OleVariant) : PARAMDATA;
function ConvertPARAMDESCToVariant(var R : PARAMDESC) : OleVariant;
function ConvertVariantToPARAMDESC(const V : OleVariant) : PARAMDESC;
function ConvertPARAMDESCEXToVariant(var R : PARAMDESCEX) : OleVariant;
function ConvertVariantToPARAMDESCEX(const V : OleVariant) : PARAMDESCEX;
function ConvertPICTDESCToVariant(var R : PICTDESC) : OleVariant;
function ConvertVariantToPICTDESC(const V : OleVariant) : PICTDESC;
function ConvertPOINTFToVariant(var R : POINTF) : OleVariant;
function ConvertVariantToPOINTF(const V : OleVariant) : POINTF;
function ConvertPROPPAGEINFOToVariant(var R : PROPPAGEINFO) : OleVariant;
function ConvertVariantToPROPPAGEINFO(const V : OleVariant) : PROPPAGEINFO;
function ConvertPROPSPECToVariant(var R : PROPSPEC) : OleVariant;
function ConvertVariantToPROPSPEC(const V : OleVariant) : PROPSPEC;
function ConvertPROPVARIANTToVariant(var R : PROPVARIANT) : OleVariant;
function ConvertVariantToPROPVARIANT(const V : OleVariant) : PROPVARIANT;
function ConvertRemSTGMEDIUMToVariant(var R : RemSTGMEDIUM) : OleVariant;
function ConvertVariantToRemSTGMEDIUM(const V : OleVariant) : RemSTGMEDIUM;
function ConvertRPCOLEMESSAGEToVariant(var R : RPCOLEMESSAGE) : OleVariant;
function ConvertVariantToRPCOLEMESSAGE(const V : OleVariant) : RPCOLEMESSAGE;
function ConvertSAFEARRAYToVariant(var R : SAFEARRAY) : OleVariant;
function ConvertVariantToSAFEARRAY(const V : OleVariant) : SAFEARRAY;
function ConvertSAFEARRAYBOUNDToVariant(var R : SAFEARRAYBOUND) : OleVariant;
function ConvertVariantToSAFEARRAYBOUND(const V : OleVariant) : SAFEARRAYBOUND;
function ConvertSOLE_AUTHENTICATION_SERVICEToVariant(var R : SOLE_AUTHENTICATION_SERVICE) : OleVariant;
function ConvertVariantToSOLE_AUTHENTICATION_SERVICE(const V : OleVariant) : SOLE_AUTHENTICATION_SERVICE;
function ConvertSTATDATAToVariant(var R : STATDATA) : OleVariant;
function ConvertVariantToSTATDATA(const V : OleVariant) : STATDATA;
function ConvertSTATPROPSETSTGToVariant(var R : STATPROPSETSTG) : OleVariant;
function ConvertVariantToSTATPROPSETSTG(const V : OleVariant) : STATPROPSETSTG;
function ConvertSTATPROPSTGToVariant(var R : STATPROPSTG) : OleVariant;
function ConvertVariantToSTATPROPSTG(const V : OleVariant) : STATPROPSTG;
function ConvertSTGMEDIUMToVariant(var R : STGMEDIUM) : OleVariant;
function ConvertVariantToSTGMEDIUM(const V : OleVariant) : STGMEDIUM;
function ConverttagARRAYDESCToVariant(var R : tagARRAYDESC) : OleVariant;
function ConvertVariantTotagARRAYDESC(const V : OleVariant) : tagARRAYDESC;
function ConverttagBIND_OPTSToVariant(var R : tagBIND_OPTS) : OleVariant;
function ConvertVariantTotagBIND_OPTS(const V : OleVariant) : tagBIND_OPTS;
function ConverttagBINDPTRToVariant(var R : tagBINDPTR) : OleVariant;
function ConvertVariantTotagBINDPTR(const V : OleVariant) : tagBINDPTR;
function ConverttagBLOBToVariant(var R : tagBLOB) : OleVariant;
function ConvertVariantTotagBLOB(const V : OleVariant) : tagBLOB;
function ConverttagCABOOLToVariant(var R : tagCABOOL) : OleVariant;
function ConvertVariantTotagCABOOL(const V : OleVariant) : tagCABOOL;
function ConverttagCABSTRToVariant(var R : tagCABSTR) : OleVariant;
function ConvertVariantTotagCABSTR(const V : OleVariant) : tagCABSTR;
function ConverttagCACLIPDATAToVariant(var R : tagCACLIPDATA) : OleVariant;
function ConvertVariantTotagCACLIPDATA(const V : OleVariant) : tagCACLIPDATA;
function ConverttagCACLSIDToVariant(var R : tagCACLSID) : OleVariant;
function ConvertVariantTotagCACLSID(const V : OleVariant) : tagCACLSID;
function ConverttagCACYToVariant(var R : tagCACY) : OleVariant;
function ConvertVariantTotagCACY(const V : OleVariant) : tagCACY;
function ConverttagCADATEToVariant(var R : tagCADATE) : OleVariant;
function ConvertVariantTotagCADATE(const V : OleVariant) : tagCADATE;
function ConverttagCADBLToVariant(var R : tagCADBL) : OleVariant;
function ConvertVariantTotagCADBL(const V : OleVariant) : tagCADBL;
function ConverttagCADWORDToVariant(var R : tagCADWORD) : OleVariant;
function ConvertVariantTotagCADWORD(const V : OleVariant) : tagCADWORD;
function ConverttagCAFILETIMEToVariant(var R : tagCAFILETIME) : OleVariant;
function ConvertVariantTotagCAFILETIME(const V : OleVariant) : tagCAFILETIME;
function ConverttagCAFLTToVariant(var R : tagCAFLT) : OleVariant;
function ConvertVariantTotagCAFLT(const V : OleVariant) : tagCAFLT;
function ConverttagCAHToVariant(var R : tagCAH) : OleVariant;
function ConvertVariantTotagCAH(const V : OleVariant) : tagCAH;
function ConverttagCAIToVariant(var R : tagCAI) : OleVariant;
function ConvertVariantTotagCAI(const V : OleVariant) : tagCAI;
function ConverttagCALToVariant(var R : tagCAL) : OleVariant;
function ConvertVariantTotagCAL(const V : OleVariant) : tagCAL;
function ConverttagCALPOLESTRToVariant(var R : tagCALPOLESTR) : OleVariant;
function ConvertVariantTotagCALPOLESTR(const V : OleVariant) : tagCALPOLESTR;
function ConverttagCALPSTRToVariant(var R : tagCALPSTR) : OleVariant;
function ConvertVariantTotagCALPSTR(const V : OleVariant) : tagCALPSTR;
function ConverttagCALPWSTRToVariant(var R : tagCALPWSTR) : OleVariant;
function ConvertVariantTotagCALPWSTR(const V : OleVariant) : tagCALPWSTR;
function ConverttagCAPROPVARIANTToVariant(var R : tagCAPROPVARIANT) : OleVariant;
function ConvertVariantTotagCAPROPVARIANT(const V : OleVariant) : tagCAPROPVARIANT;
function ConverttagCASCODEToVariant(var R : tagCASCODE) : OleVariant;
function ConvertVariantTotagCASCODE(const V : OleVariant) : tagCASCODE;
function ConverttagCAUBToVariant(var R : tagCAUB) : OleVariant;
function ConvertVariantTotagCAUB(const V : OleVariant) : tagCAUB;
function ConverttagCAUHToVariant(var R : tagCAUH) : OleVariant;
function ConvertVariantTotagCAUH(const V : OleVariant) : tagCAUH;
function ConverttagCAUIToVariant(var R : tagCAUI) : OleVariant;
function ConvertVariantTotagCAUI(const V : OleVariant) : tagCAUI;
function ConverttagCAULToVariant(var R : tagCAUL) : OleVariant;
function ConvertVariantTotagCAUL(const V : OleVariant) : tagCAUL;
function ConverttagCAUUIDToVariant(var R : tagCAUUID) : OleVariant;
function ConvertVariantTotagCAUUID(const V : OleVariant) : tagCAUUID;
function ConverttagCLIPDATAToVariant(var R : tagCLIPDATA) : OleVariant;
function ConvertVariantTotagCLIPDATA(const V : OleVariant) : tagCLIPDATA;
function ConverttagCONNECTDATAToVariant(var R : tagCONNECTDATA) : OleVariant;
function ConvertVariantTotagCONNECTDATA(const V : OleVariant) : tagCONNECTDATA;
function ConverttagCONTROLINFOToVariant(var R : tagCONTROLINFO) : OleVariant;
function ConvertVariantTotagCONTROLINFO(const V : OleVariant) : tagCONTROLINFO;
function ConverttagCUSTDATAToVariant(var R : tagCUSTDATA) : OleVariant;
function ConvertVariantTotagCUSTDATA(const V : OleVariant) : tagCUSTDATA;
function ConverttagCUSTDATAITEMToVariant(var R : tagCUSTDATAITEM) : OleVariant;
function ConvertVariantTotagCUSTDATAITEM(const V : OleVariant) : tagCUSTDATAITEM;
function ConverttagDECToVariant(var R : tagDEC) : OleVariant;
function ConvertVariantTotagDEC(const V : OleVariant) : tagDEC;
function ConverttagDISPPARAMSToVariant(var R : tagDISPPARAMS) : OleVariant;
function ConvertVariantTotagDISPPARAMS(const V : OleVariant) : tagDISPPARAMS;
function ConverttagDVTARGETDEVICEToVariant(var R : tagDVTARGETDEVICE) : OleVariant;
function ConvertVariantTotagDVTARGETDEVICE(const V : OleVariant) : tagDVTARGETDEVICE;
function ConverttagELEMDESCToVariant(var R : tagELEMDESC) : OleVariant;
function ConvertVariantTotagELEMDESC(const V : OleVariant) : tagELEMDESC;
function ConverttagEXCEPINFOToVariant(var R : tagEXCEPINFO) : OleVariant;
function ConvertVariantTotagEXCEPINFO(const V : OleVariant) : tagEXCEPINFO;
function ConverttagFONTDESCToVariant(var R : tagFONTDESC) : OleVariant;
function ConvertVariantTotagFONTDESC(const V : OleVariant) : tagFONTDESC;
function ConverttagFORMATETCToVariant(var R : tagFORMATETC) : OleVariant;
function ConvertVariantTotagFORMATETC(const V : OleVariant) : tagFORMATETC;
function ConverttagFUNCDESCToVariant(var R : tagFUNCDESC) : OleVariant;
function ConvertVariantTotagFUNCDESC(const V : OleVariant) : tagFUNCDESC;
function ConverttagIDLDESCToVariant(var R : tagIDLDESC) : OleVariant;
function ConvertVariantTotagIDLDESC(const V : OleVariant) : tagIDLDESC;
function ConverttagINTERFACEDATAToVariant(var R : tagINTERFACEDATA) : OleVariant;
function ConvertVariantTotagINTERFACEDATA(const V : OleVariant) : tagINTERFACEDATA;
function ConverttagINTERFACEINFOToVariant(var R : tagINTERFACEINFO) : OleVariant;
function ConvertVariantTotagINTERFACEINFO(const V : OleVariant) : tagINTERFACEINFO;
function ConverttagLICINFOToVariant(var R : tagLICINFO) : OleVariant;
function ConvertVariantTotagLICINFO(const V : OleVariant) : tagLICINFO;
function ConverttagMETHODDATAToVariant(var R : tagMETHODDATA) : OleVariant;
function ConvertVariantTotagMETHODDATA(const V : OleVariant) : tagMETHODDATA;
function ConverttagMULTI_QIToVariant(var R : tagMULTI_QI) : OleVariant;
function ConvertVariantTotagMULTI_QI(const V : OleVariant) : tagMULTI_QI;
function ConverttagOBJECTDESCRIPTORToVariant(var R : tagOBJECTDESCRIPTOR) : OleVariant;
function ConvertVariantTotagOBJECTDESCRIPTOR(const V : OleVariant) : tagOBJECTDESCRIPTOR;
function ConverttagOCPFIPARAMSToVariant(var R : tagOCPFIPARAMS) : OleVariant;
function ConvertVariantTotagOCPFIPARAMS(const V : OleVariant) : tagOCPFIPARAMS;
function ConverttagOIFIToVariant(var R : tagOIFI) : OleVariant;
function ConvertVariantTotagOIFI(const V : OleVariant) : tagOIFI;
function ConverttagOleMenuGroupWidthsToVariant(var R : tagOleMenuGroupWidths) : OleVariant;
function ConvertVariantTotagOleMenuGroupWidths(const V : OleVariant) : tagOleMenuGroupWidths;
function ConverttagOLEVERBToVariant(var R : tagOLEVERB) : OleVariant;
function ConvertVariantTotagOLEVERB(const V : OleVariant) : tagOLEVERB;
function ConverttagPAGERANGEToVariant(var R : tagPAGERANGE) : OleVariant;
function ConvertVariantTotagPAGERANGE(const V : OleVariant) : tagPAGERANGE;
function ConverttagPAGESETToVariant(var R : tagPAGESET) : OleVariant;
function ConvertVariantTotagPAGESET(const V : OleVariant) : tagPAGESET;
function ConverttagPARAMDATAToVariant(var R : tagPARAMDATA) : OleVariant;
function ConvertVariantTotagPARAMDATA(const V : OleVariant) : tagPARAMDATA;
function ConverttagPARAMDESCToVariant(var R : tagPARAMDESC) : OleVariant;
function ConvertVariantTotagPARAMDESC(const V : OleVariant) : tagPARAMDESC;
function ConverttagPARAMDESCEXToVariant(var R : tagPARAMDESCEX) : OleVariant;
function ConvertVariantTotagPARAMDESCEX(const V : OleVariant) : tagPARAMDESCEX;
function ConverttagPICTDESCToVariant(var R : tagPICTDESC) : OleVariant;
function ConvertVariantTotagPICTDESC(const V : OleVariant) : tagPICTDESC;
function ConverttagPOINTFToVariant(var R : tagPOINTF) : OleVariant;
function ConvertVariantTotagPOINTF(const V : OleVariant) : tagPOINTF;
function ConverttagPROPPAGEINFOToVariant(var R : tagPROPPAGEINFO) : OleVariant;
function ConvertVariantTotagPROPPAGEINFO(const V : OleVariant) : tagPROPPAGEINFO;
function ConverttagPROPSPECToVariant(var R : tagPROPSPEC) : OleVariant;
function ConvertVariantTotagPROPSPEC(const V : OleVariant) : tagPROPSPEC;
function ConverttagPROPVARIANTToVariant(var R : tagPROPVARIANT) : OleVariant;
function ConvertVariantTotagPROPVARIANT(const V : OleVariant) : tagPROPVARIANT;
function ConverttagQACONTAINERToVariant(var R : tagQACONTAINER) : OleVariant;
function ConvertVariantTotagQACONTAINER(const V : OleVariant) : tagQACONTAINER;
function ConverttagQACONTROLToVariant(var R : tagQACONTROL) : OleVariant;
function ConvertVariantTotagQACONTROL(const V : OleVariant) : tagQACONTROL;
function ConverttagRemSTGMEDIUMToVariant(var R : tagRemSTGMEDIUM) : OleVariant;
function ConvertVariantTotagRemSTGMEDIUM(const V : OleVariant) : tagRemSTGMEDIUM;
function ConverttagRPCOLEMESSAGEToVariant(var R : tagRPCOLEMESSAGE) : OleVariant;
function ConvertVariantTotagRPCOLEMESSAGE(const V : OleVariant) : tagRPCOLEMESSAGE;
function ConverttagSAFEARRAYToVariant(var R : tagSAFEARRAY) : OleVariant;
function ConvertVariantTotagSAFEARRAY(const V : OleVariant) : tagSAFEARRAY;
function ConverttagSAFEARRAYBOUNDToVariant(var R : tagSAFEARRAYBOUND) : OleVariant;
function ConvertVariantTotagSAFEARRAYBOUND(const V : OleVariant) : tagSAFEARRAYBOUND;
function ConverttagSOLE_AUTHENTICATION_SERVICEToVariant(var R : tagSOLE_AUTHENTICATION_SERVICE) : OleVariant;
function ConvertVariantTotagSOLE_AUTHENTICATION_SERVICE(const V : OleVariant) : tagSOLE_AUTHENTICATION_SERVICE;
function ConverttagSTATDATAToVariant(var R : tagSTATDATA) : OleVariant;
function ConvertVariantTotagSTATDATA(const V : OleVariant) : tagSTATDATA;
function ConverttagSTATPROPSETSTGToVariant(var R : tagSTATPROPSETSTG) : OleVariant;
function ConvertVariantTotagSTATPROPSETSTG(const V : OleVariant) : tagSTATPROPSETSTG;
function ConverttagSTATPROPSTGToVariant(var R : tagSTATPROPSTG) : OleVariant;
function ConvertVariantTotagSTATPROPSTG(const V : OleVariant) : tagSTATPROPSTG;
function ConverttagSTATSTGToVariant(var R : tagSTATSTG) : OleVariant;
function ConvertVariantTotagSTATSTG(const V : OleVariant) : tagSTATSTG;
function ConverttagSTGMEDIUMToVariant(var R : tagSTGMEDIUM) : OleVariant;
function ConvertVariantTotagSTGMEDIUM(const V : OleVariant) : tagSTGMEDIUM;
function ConverttagTLIBATTRToVariant(var R : tagTLIBATTR) : OleVariant;
function ConvertVariantTotagTLIBATTR(const V : OleVariant) : tagTLIBATTR;
function ConverttagTYPEATTRToVariant(var R : tagTYPEATTR) : OleVariant;
function ConvertVariantTotagTYPEATTR(const V : OleVariant) : tagTYPEATTR;
function ConverttagTYPEDESCToVariant(var R : tagTYPEDESC) : OleVariant;
function ConvertVariantTotagTYPEDESC(const V : OleVariant) : tagTYPEDESC;
function ConverttagVARDESCToVariant(var R : tagVARDESC) : OleVariant;
function ConvertVariantTotagVARDESC(const V : OleVariant) : tagVARDESC;
function ConverttagVARIANTToVariant(var R : tagVARIANT) : OleVariant;
function ConvertVariantTotagVARIANT(const V : OleVariant) : tagVARIANT;
function ConvertTArrayDescToVariant(var R : TArrayDesc) : OleVariant;
function ConvertVariantToTArrayDesc(const V : OleVariant) : TArrayDesc;
function ConvertTBindOptsToVariant(var R : TBindOpts) : OleVariant;
function ConvertVariantToTBindOpts(const V : OleVariant) : TBindOpts;
function ConvertTBindPtrToVariant(var R : TBindPtr) : OleVariant;
function ConvertVariantToTBindPtr(const V : OleVariant) : TBindPtr;
function ConvertTBlobToVariant(var R : TBlob) : OleVariant;
function ConvertVariantToTBlob(const V : OleVariant) : TBlob;
function ConvertTBorderWidthsToVariant(var R : TBorderWidths) : OleVariant;
function ConvertVariantToTBorderWidths(const V : OleVariant) : TBorderWidths;
function ConvertTCABOOLToVariant(var R : TCABOOL) : OleVariant;
function ConvertVariantToTCABOOL(const V : OleVariant) : TCABOOL;
function ConvertTCABSTRToVariant(var R : TCABSTR) : OleVariant;
function ConvertVariantToTCABSTR(const V : OleVariant) : TCABSTR;
function ConvertTCACLIPDATAToVariant(var R : TCACLIPDATA) : OleVariant;
function ConvertVariantToTCACLIPDATA(const V : OleVariant) : TCACLIPDATA;
function ConvertTCACLSIDToVariant(var R : TCACLSID) : OleVariant;
function ConvertVariantToTCACLSID(const V : OleVariant) : TCACLSID;
function ConvertTCACYToVariant(var R : TCACY) : OleVariant;
function ConvertVariantToTCACY(const V : OleVariant) : TCACY;
function ConvertTCADATEToVariant(var R : TCADATE) : OleVariant;
function ConvertVariantToTCADATE(const V : OleVariant) : TCADATE;
function ConvertTCADBLToVariant(var R : TCADBL) : OleVariant;
function ConvertVariantToTCADBL(const V : OleVariant) : TCADBL;
function ConvertTCAFILETIMEToVariant(var R : TCAFILETIME) : OleVariant;
function ConvertVariantToTCAFILETIME(const V : OleVariant) : TCAFILETIME;
function ConvertTCAFLTToVariant(var R : TCAFLT) : OleVariant;
function ConvertVariantToTCAFLT(const V : OleVariant) : TCAFLT;
function ConvertTCAGUIDToVariant(var R : TCAGUID) : OleVariant;
function ConvertVariantToTCAGUID(const V : OleVariant) : TCAGUID;
function ConvertTCAHToVariant(var R : TCAH) : OleVariant;
function ConvertVariantToTCAH(const V : OleVariant) : TCAH;
function ConvertTCAIToVariant(var R : TCAI) : OleVariant;
function ConvertVariantToTCAI(const V : OleVariant) : TCAI;
function ConvertTCALToVariant(var R : TCAL) : OleVariant;
function ConvertVariantToTCAL(const V : OleVariant) : TCAL;
function ConvertTCALongintToVariant(var R : TCALongint) : OleVariant;
function ConvertVariantToTCALongint(const V : OleVariant) : TCALongint;
function ConvertTCALPSTRToVariant(var R : TCALPSTR) : OleVariant;
function ConvertVariantToTCALPSTR(const V : OleVariant) : TCALPSTR;
function ConvertTCALPWSTRToVariant(var R : TCALPWSTR) : OleVariant;
function ConvertVariantToTCALPWSTR(const V : OleVariant) : TCALPWSTR;
function ConvertTCAPOleStrToVariant(var R : TCAPOleStr) : OleVariant;
function ConvertVariantToTCAPOleStr(const V : OleVariant) : TCAPOleStr;
function ConvertTCAPROPVARIANTToVariant(var R : TCAPROPVARIANT) : OleVariant;
function ConvertVariantToTCAPROPVARIANT(const V : OleVariant) : TCAPROPVARIANT;
function ConvertTCASCODEToVariant(var R : TCASCODE) : OleVariant;
function ConvertVariantToTCASCODE(const V : OleVariant) : TCASCODE;
function ConvertTCATEGORYINFOToVariant(var R : TCATEGORYINFO) : OleVariant;
function ConvertVariantToTCATEGORYINFO(const V : OleVariant) : TCATEGORYINFO;
function ConvertTCAUBToVariant(var R : TCAUB) : OleVariant;
function ConvertVariantToTCAUB(const V : OleVariant) : TCAUB;
function ConvertTCAUHToVariant(var R : TCAUH) : OleVariant;
function ConvertVariantToTCAUH(const V : OleVariant) : TCAUH;
function ConvertTCAUIToVariant(var R : TCAUI) : OleVariant;
function ConvertVariantToTCAUI(const V : OleVariant) : TCAUI;
function ConvertTCAULToVariant(var R : TCAUL) : OleVariant;
function ConvertVariantToTCAUL(const V : OleVariant) : TCAUL;
function ConvertTClipDataToVariant(var R : TClipData) : OleVariant;
function ConvertVariantToTClipData(const V : OleVariant) : TClipData;
function ConvertTConnectDataToVariant(var R : TConnectData) : OleVariant;
function ConvertVariantToTConnectData(const V : OleVariant) : TConnectData;
function ConvertTControlInfoToVariant(var R : TControlInfo) : OleVariant;
function ConvertVariantToTControlInfo(const V : OleVariant) : TControlInfo;
function ConvertTCoServerInfoToVariant(var R : TCoServerInfo) : OleVariant;
function ConvertVariantToTCoServerInfo(const V : OleVariant) : TCoServerInfo;
function ConvertTCustDataToVariant(var R : TCustData) : OleVariant;
function ConvertVariantToTCustData(const V : OleVariant) : TCustData;
function ConvertTCustDataItemToVariant(var R : TCustDataItem) : OleVariant;
function ConvertVariantToTCustDataItem(const V : OleVariant) : TCustDataItem;
function ConvertTDecimalToVariant(var R : TDecimal) : OleVariant;
function ConvertVariantToTDecimal(const V : OleVariant) : TDecimal;
function ConvertTDispParamsToVariant(var R : TDispParams) : OleVariant;
function ConvertVariantToTDispParams(const V : OleVariant) : TDispParams;
function ConvertTDVTargetDeviceToVariant(var R : TDVTargetDevice) : OleVariant;
function ConvertVariantToTDVTargetDevice(const V : OleVariant) : TDVTargetDevice;
function ConvertTElemDescToVariant(var R : TElemDesc) : OleVariant;
function ConvertVariantToTElemDesc(const V : OleVariant) : TElemDesc;
function ConvertTExcepInfoToVariant(var R : TExcepInfo) : OleVariant;
function ConvertVariantToTExcepInfo(const V : OleVariant) : TExcepInfo;
function ConvertTFileTimeToVariant(var R : TFileTime) : OleVariant;
function ConvertVariantToTFileTime(const V : OleVariant) : TFileTime;
function ConvertTFmtIDToVariant(var R : TFmtID) : OleVariant;
function ConvertVariantToTFmtID(const V : OleVariant) : TFmtID;
function ConvertTFontDescToVariant(var R : TFontDesc) : OleVariant;
function ConvertVariantToTFontDesc(const V : OleVariant) : TFontDesc;
function ConvertTFuncDescToVariant(var R : TFuncDesc) : OleVariant;
function ConvertVariantToTFuncDesc(const V : OleVariant) : TFuncDesc;
function ConvertTGUIDToVariant(var R : TGUID) : OleVariant;
function ConvertVariantToTGUID(const V : OleVariant) : TGUID;
function ConvertTIDLDescToVariant(var R : TIDLDesc) : OleVariant;
function ConvertVariantToTIDLDesc(const V : OleVariant) : TIDLDesc;
function ConvertTInterfaceDataToVariant(var R : TInterfaceData) : OleVariant;
function ConvertVariantToTInterfaceData(const V : OleVariant) : TInterfaceData;
function ConvertTInterfaceInfoToVariant(var R : TInterfaceInfo) : OleVariant;
function ConvertVariantToTInterfaceInfo(const V : OleVariant) : TInterfaceInfo;
function ConvertTLIBATTRToVariant(var R : TLIBATTR) : OleVariant;
function ConvertVariantToTLIBATTR(const V : OleVariant) : TLIBATTR;
function ConvertTLicInfoToVariant(var R : TLicInfo) : OleVariant;
function ConvertVariantToTLicInfo(const V : OleVariant) : TLicInfo;
function ConvertTLinkSrcDescriptorToVariant(var R : TLinkSrcDescriptor) : OleVariant;
function ConvertVariantToTLinkSrcDescriptor(const V : OleVariant) : TLinkSrcDescriptor;
function ConvertTMethodDataToVariant(var R : TMethodData) : OleVariant;
function ConvertVariantToTMethodData(const V : OleVariant) : TMethodData;
function ConvertTMultiQIToVariant(var R : TMultiQI) : OleVariant;
function ConvertVariantToTMultiQI(const V : OleVariant) : TMultiQI;
function ConvertTObjectDescriptorToVariant(var R : TObjectDescriptor) : OleVariant;
function ConvertVariantToTObjectDescriptor(const V : OleVariant) : TObjectDescriptor;
function ConvertTObjectIDToVariant(var R : TObjectID) : OleVariant;
function ConvertVariantToTObjectID(const V : OleVariant) : TObjectID;
function ConvertTOCPFIParamsToVariant(var R : TOCPFIParams) : OleVariant;
function ConvertVariantToTOCPFIParams(const V : OleVariant) : TOCPFIParams;
function ConvertTOleCmdToVariant(var R : TOleCmd) : OleVariant;
function ConvertVariantToTOleCmd(const V : OleVariant) : TOleCmd;
function ConvertTOleCmdTextToVariant(var R : TOleCmdText) : OleVariant;
function ConvertVariantToTOleCmdText(const V : OleVariant) : TOleCmdText;
function ConvertTOleInPlaceFrameInfoToVariant(var R : TOleInPlaceFrameInfo) : OleVariant;
function ConvertVariantToTOleInPlaceFrameInfo(const V : OleVariant) : TOleInPlaceFrameInfo;
function ConvertTOleMenuGroupWidthsToVariant(var R : TOleMenuGroupWidths) : OleVariant;
function ConvertVariantToTOleMenuGroupWidths(const V : OleVariant) : TOleMenuGroupWidths;
function ConvertTOleVerbToVariant(var R : TOleVerb) : OleVariant;
function ConvertVariantToTOleVerb(const V : OleVariant) : TOleVerb;
function ConvertTPageRangeToVariant(var R : TPageRange) : OleVariant;
function ConvertVariantToTPageRange(const V : OleVariant) : TPageRange;
function ConvertTPageSetToVariant(var R : TPageSet) : OleVariant;
function ConvertVariantToTPageSet(const V : OleVariant) : TPageSet;
function ConvertTParamDataToVariant(var R : TParamData) : OleVariant;
function ConvertVariantToTParamData(const V : OleVariant) : TParamData;
function ConvertTParamDescToVariant(var R : TParamDesc) : OleVariant;
function ConvertVariantToTParamDesc(const V : OleVariant) : TParamDesc;
function ConvertTParamDescExToVariant(var R : TParamDescEx) : OleVariant;
function ConvertVariantToTParamDescEx(const V : OleVariant) : TParamDescEx;
function ConvertTPictDescToVariant(var R : TPictDesc) : OleVariant;
function ConvertVariantToTPictDesc(const V : OleVariant) : TPictDesc;
function ConvertTPointFToVariant(var R : TPointF) : OleVariant;
function ConvertVariantToTPointF(const V : OleVariant) : TPointF;
function ConvertTPropPageInfoToVariant(var R : TPropPageInfo) : OleVariant;
function ConvertVariantToTPropPageInfo(const V : OleVariant) : TPropPageInfo;
function ConvertTPropSpecToVariant(var R : TPropSpec) : OleVariant;
function ConvertVariantToTPropSpec(const V : OleVariant) : TPropSpec;
function ConvertTPropVariantToVariant(var R : TPropVariant) : OleVariant;
function ConvertVariantToTPropVariant(const V : OleVariant) : TPropVariant;
function ConvertTQaContainerToVariant(var R : TQaContainer) : OleVariant;
function ConvertVariantToTQaContainer(const V : OleVariant) : TQaContainer;
function ConvertTQaControlToVariant(var R : TQaControl) : OleVariant;
function ConvertVariantToTQaControl(const V : OleVariant) : TQaControl;
function ConvertTRemStgMediumToVariant(var R : TRemStgMedium) : OleVariant;
function ConvertVariantToTRemStgMedium(const V : OleVariant) : TRemStgMedium;
function ConvertTRpcOleMessageToVariant(var R : TRpcOleMessage) : OleVariant;
function ConvertVariantToTRpcOleMessage(const V : OleVariant) : TRpcOleMessage;
function ConvertTSafeArrayToVariant(var R : TSafeArray) : OleVariant;
function ConvertVariantToTSafeArray(const V : OleVariant) : TSafeArray;
function ConvertTSafeArrayBoundToVariant(var R : TSafeArrayBound) : OleVariant;
function ConvertVariantToTSafeArrayBound(const V : OleVariant) : TSafeArrayBound;
function ConvertTSOleAuthenticationServiceToVariant(var R : TSOleAuthenticationService) : OleVariant;
function ConvertVariantToTSOleAuthenticationService(const V : OleVariant) : TSOleAuthenticationService;
function ConvertTStatDataToVariant(var R : TStatData) : OleVariant;
function ConvertVariantToTStatData(const V : OleVariant) : TStatData;
function ConvertTStatPropSetStgToVariant(var R : TStatPropSetStg) : OleVariant;
function ConvertVariantToTStatPropSetStg(const V : OleVariant) : TStatPropSetStg;
function ConvertTStatPropStgToVariant(var R : TStatPropStg) : OleVariant;
function ConvertVariantToTStatPropStg(const V : OleVariant) : TStatPropStg;
function ConvertTStgMediumToVariant(var R : TStgMedium) : OleVariant;
function ConvertVariantToTStgMedium(const V : OleVariant) : TStgMedium;
function ConvertTSystemTimeToVariant(var R : TSystemTime) : OleVariant;
function ConvertVariantToTSystemTime(const V : OleVariant) : TSystemTime;
function ConvertTTextMetricOleToVariant(var R : TTextMetricOle) : OleVariant;
function ConvertVariantToTTextMetricOle(const V : OleVariant) : TTextMetricOle;
function ConvertTTLibAttrToVariant(var R : TTLibAttr) : OleVariant;
function ConvertVariantToTTLibAttr(const V : OleVariant) : TTLibAttr;
function ConvertTTypeAttrToVariant(var R : TTypeAttr) : OleVariant;
function ConvertVariantToTTypeAttr(const V : OleVariant) : TTypeAttr;
function ConvertTTypeDescToVariant(var R : TTypeDesc) : OleVariant;
function ConvertVariantToTTypeDesc(const V : OleVariant) : TTypeDesc;
function ConvertTVarDescToVariant(var R : TVarDesc) : OleVariant;
function ConvertVariantToTVarDesc(const V : OleVariant) : TVarDesc;
function ConvertTVariantArgToVariant(var R : TVariantArg) : OleVariant;
function ConvertVariantToTVariantArg(const V : OleVariant) : TVariantArg;
function ConvertTYPEATTRToVariant(var R : TYPEATTR) : OleVariant;
function ConvertVariantToTYPEATTR(const V : OleVariant) : TYPEATTR;
function ConvertTYPEDESCToVariant(var R : TYPEDESC) : OleVariant;
function ConvertVariantToTYPEDESC(const V : OleVariant) : TYPEDESC;
function ConvertVARDESCToVariant(var R : VARDESC) : OleVariant;
function ConvertVariantToVARDESC(const V : OleVariant) : VARDESC;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type ___COSERVERINFO__Wrapper = class(TDCRecordWrapper)
private
fR : _COSERVERINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setdwReserved1(const val : Longint);
function getdwReserved1 : Longint;
property dwReserved1 : Longint read getdwReserved1 write setdwReserved1;
procedure setdwReserved2(const val : Longint);
function getdwReserved2 : Longint;
property dwReserved2 : Longint read getdwReserved2 write setdwReserved2;
end;
type ___OBJECTID__Wrapper = class(TDCRecordWrapper)
private
fR : _OBJECTID;
public
function GetRecordPtr : pointer; override;
published
procedure setUniquifier(const val : Longint);
function getUniquifier : Longint;
property Uniquifier : Longint read getUniquifier write setUniquifier;
end;
type ___tagOLECMD__Wrapper = class(TDCRecordWrapper)
private
fR : _tagOLECMD;
public
function GetRecordPtr : pointer; override;
published
procedure setcmdID(const val : Cardinal);
function getcmdID : Cardinal;
property cmdID : Cardinal read getcmdID write setcmdID;
procedure setcmdf(const val : Longint);
function getcmdf : Longint;
property cmdf : Longint read getcmdf write setcmdf;
end;
type ___tagOLECMDTEXT__Wrapper = class(TDCRecordWrapper)
private
fR : _tagOLECMDTEXT;
public
function GetRecordPtr : pointer; override;
published
procedure setcmdtextf(const val : Longint);
function getcmdtextf : Longint;
property cmdtextf : Longint read getcmdtextf write setcmdtextf;
procedure setcwActual(const val : Cardinal);
function getcwActual : Cardinal;
property cwActual : Cardinal read getcwActual write setcwActual;
procedure setcwBuf(const val : Cardinal);
function getcwBuf : Cardinal;
property cwBuf : Cardinal read getcwBuf write setcwBuf;
end;
type __ARRAYDESC__Wrapper = class(TDCRecordWrapper)
private
fR : ARRAYDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setcDims(const val : Word);
function getcDims : Word;
property cDims : Word read getcDims write setcDims;
end;
type __BIND_OPTS__Wrapper = class(TDCRecordWrapper)
private
fR : BIND_OPTS;
public
function GetRecordPtr : pointer; override;
published
procedure setcbStruct(const val : Longint);
function getcbStruct : Longint;
property cbStruct : Longint read getcbStruct write setcbStruct;
procedure setgrfFlags(const val : Longint);
function getgrfFlags : Longint;
property grfFlags : Longint read getgrfFlags write setgrfFlags;
procedure setgrfMode(const val : Longint);
function getgrfMode : Longint;
property grfMode : Longint read getgrfMode write setgrfMode;
procedure setdwTickCountDeadline(const val : Longint);
function getdwTickCountDeadline : Longint;
property dwTickCountDeadline : Longint read getdwTickCountDeadline write setdwTickCountDeadline;
end;
type __BINDPTR__Wrapper = class(TDCRecordWrapper)
private
fR : BINDPTR;
public
function GetRecordPtr : pointer; override;
published
end;
type __BLOB__Wrapper = class(TDCRecordWrapper)
private
fR : BLOB;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
end;
type __BORDERWIDTHS__Wrapper = class(TDCRecordWrapper)
private
fR : BORDERWIDTHS;
public
function GetRecordPtr : pointer; override;
published
procedure setLeft(const val : Longint);
function getLeft : Longint;
property Left : Longint read getLeft write setLeft;
procedure setTop(const val : Longint);
function getTop : Longint;
property Top : Longint read getTop write setTop;
procedure setRight(const val : Longint);
function getRight : Longint;
property Right : Longint read getRight write setRight;
procedure setBottom(const val : Longint);
function getBottom : Longint;
property Bottom : Longint read getBottom write setBottom;
end;
type __CABOOL__Wrapper = class(TDCRecordWrapper)
private
fR : CABOOL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CABSTR__Wrapper = class(TDCRecordWrapper)
private
fR : CABSTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CACLIPDATA__Wrapper = class(TDCRecordWrapper)
private
fR : CACLIPDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CACLSID__Wrapper = class(TDCRecordWrapper)
private
fR : CACLSID;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CACY__Wrapper = class(TDCRecordWrapper)
private
fR : CACY;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CADATE__Wrapper = class(TDCRecordWrapper)
private
fR : CADATE;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CADBL__Wrapper = class(TDCRecordWrapper)
private
fR : CADBL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CADWORD__Wrapper = class(TDCRecordWrapper)
private
fR : CADWORD;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : Longint);
function getcElems : Longint;
property cElems : Longint read getcElems write setcElems;
end;
type __CAFILETIME__Wrapper = class(TDCRecordWrapper)
private
fR : CAFILETIME;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CAFLT__Wrapper = class(TDCRecordWrapper)
private
fR : CAFLT;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CAH__Wrapper = class(TDCRecordWrapper)
private
fR : CAH;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CAI__Wrapper = class(TDCRecordWrapper)
private
fR : CAI;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CAL__Wrapper = class(TDCRecordWrapper)
private
fR : CAL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CALPOLESTR__Wrapper = class(TDCRecordWrapper)
private
fR : CALPOLESTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : Longint);
function getcElems : Longint;
property cElems : Longint read getcElems write setcElems;
end;
type __CALPSTR__Wrapper = class(TDCRecordWrapper)
private
fR : CALPSTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CALPWSTR__Wrapper = class(TDCRecordWrapper)
private
fR : CALPWSTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CAPROPVARIANT__Wrapper = class(TDCRecordWrapper)
private
fR : CAPROPVARIANT;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CASCODE__Wrapper = class(TDCRecordWrapper)
private
fR : CASCODE;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CAUB__Wrapper = class(TDCRecordWrapper)
private
fR : CAUB;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CAUH__Wrapper = class(TDCRecordWrapper)
private
fR : CAUH;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CAUI__Wrapper = class(TDCRecordWrapper)
private
fR : CAUI;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CAUL__Wrapper = class(TDCRecordWrapper)
private
fR : CAUL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __CAUUID__Wrapper = class(TDCRecordWrapper)
private
fR : CAUUID;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : Longint);
function getcElems : Longint;
property cElems : Longint read getcElems write setcElems;
end;
type __CLIPDATA__Wrapper = class(TDCRecordWrapper)
private
fR : CLIPDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setulClipFmt(const val : Longint);
function getulClipFmt : Longint;
property ulClipFmt : Longint read getulClipFmt write setulClipFmt;
end;
type __CONNECTDATA__Wrapper = class(TDCRecordWrapper)
private
fR : CONNECTDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setdwCookie(const val : Longint);
function getdwCookie : Longint;
property dwCookie : Longint read getdwCookie write setdwCookie;
end;
type __CONTROLINFO__Wrapper = class(TDCRecordWrapper)
private
fR : CONTROLINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Longint);
function getcb : Longint;
property cb : Longint read getcb write setcb;
procedure setcAccel(const val : Word);
function getcAccel : Word;
property cAccel : Word read getcAccel write setcAccel;
procedure setdwFlags(const val : Longint);
function getdwFlags : Longint;
property dwFlags : Longint read getdwFlags write setdwFlags;
end;
type __COSERVERINFO__Wrapper = class(TDCRecordWrapper)
private
fR : COSERVERINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setdwReserved1(const val : Longint);
function getdwReserved1 : Longint;
property dwReserved1 : Longint read getdwReserved1 write setdwReserved1;
procedure setdwReserved2(const val : Longint);
function getdwReserved2 : Longint;
property dwReserved2 : Longint read getdwReserved2 write setdwReserved2;
end;
type __CUSTDATA__Wrapper = class(TDCRecordWrapper)
private
fR : CUSTDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcCustData(const val : DWORD);
function getcCustData : DWORD;
property cCustData : DWORD read getcCustData write setcCustData;
end;
type __CUSTDATAITEM__Wrapper = class(TDCRecordWrapper)
private
fR : CUSTDATAITEM;
public
function GetRecordPtr : pointer; override;
published
end;
type __DECIMAL__Wrapper = class(TDCRecordWrapper)
private
fR : DECIMAL;
public
function GetRecordPtr : pointer; override;
published
procedure setwReserved(const val : Word);
function getwReserved : Word;
property wReserved : Word read getwReserved write setwReserved;
procedure setscale(const val : Byte);
function getscale : Byte;
property scale : Byte read getscale write setscale;
procedure setsign(const val : Byte);
function getsign : Byte;
property sign : Byte read getsign write setsign;
procedure setHi32(const val : Longint);
function getHi32 : Longint;
property Hi32 : Longint read getHi32 write setHi32;
procedure setLo32(const val : Longint);
function getLo32 : Longint;
property Lo32 : Longint read getLo32 write setLo32;
procedure setMid32(const val : Longint);
function getMid32 : Longint;
property Mid32 : Longint read getMid32 write setMid32;
procedure setsignscale(const val : Word);
function getsignscale : Word;
property signscale : Word read getsignscale write setsignscale;
end;
type __DISPPARAMS__Wrapper = class(TDCRecordWrapper)
private
fR : DISPPARAMS;
public
function GetRecordPtr : pointer; override;
published
procedure setcArgs(const val : Longint);
function getcArgs : Longint;
property cArgs : Longint read getcArgs write setcArgs;
procedure setcNamedArgs(const val : Longint);
function getcNamedArgs : Longint;
property cNamedArgs : Longint read getcNamedArgs write setcNamedArgs;
end;
type __DVTARGETDEVICE__Wrapper = class(TDCRecordWrapper)
private
fR : DVTARGETDEVICE;
public
function GetRecordPtr : pointer; override;
published
procedure settdSize(const val : Longint);
function gettdSize : Longint;
property tdSize : Longint read gettdSize write settdSize;
procedure settdDriverNameOffset(const val : Word);
function gettdDriverNameOffset : Word;
property tdDriverNameOffset : Word read gettdDriverNameOffset write settdDriverNameOffset;
procedure settdDeviceNameOffset(const val : Word);
function gettdDeviceNameOffset : Word;
property tdDeviceNameOffset : Word read gettdDeviceNameOffset write settdDeviceNameOffset;
procedure settdPortNameOffset(const val : Word);
function gettdPortNameOffset : Word;
property tdPortNameOffset : Word read gettdPortNameOffset write settdPortNameOffset;
procedure settdExtDevmodeOffset(const val : Word);
function gettdExtDevmodeOffset : Word;
property tdExtDevmodeOffset : Word read gettdExtDevmodeOffset write settdExtDevmodeOffset;
end;
type __ELEMDESC__Wrapper = class(TDCRecordWrapper)
private
fR : ELEMDESC;
public
function GetRecordPtr : pointer; override;
published
end;
type __EXCEPINFO__Wrapper = class(TDCRecordWrapper)
private
fR : EXCEPINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setwCode(const val : Word);
function getwCode : Word;
property wCode : Word read getwCode write setwCode;
procedure setwReserved(const val : Word);
function getwReserved : Word;
property wReserved : Word read getwReserved write setwReserved;
procedure setbstrSource(const val : WideString);
function getbstrSource : WideString;
property bstrSource : WideString read getbstrSource write setbstrSource;
procedure setbstrDescription(const val : WideString);
function getbstrDescription : WideString;
property bstrDescription : WideString read getbstrDescription write setbstrDescription;
procedure setbstrHelpFile(const val : WideString);
function getbstrHelpFile : WideString;
property bstrHelpFile : WideString read getbstrHelpFile write setbstrHelpFile;
procedure setdwHelpContext(const val : Longint);
function getdwHelpContext : Longint;
property dwHelpContext : Longint read getdwHelpContext write setdwHelpContext;
end;
type __FMTID__Wrapper = class(TDCRecordWrapper)
private
fR : FMTID;
public
function GetRecordPtr : pointer; override;
published
procedure setD1(const val : LongWord);
function getD1 : LongWord;
property D1 : LongWord read getD1 write setD1;
procedure setD2(const val : Word);
function getD2 : Word;
property D2 : Word read getD2 write setD2;
procedure setD3(const val : Word);
function getD3 : Word;
property D3 : Word read getD3 write setD3;
end;
type __FONTDESC__Wrapper = class(TDCRecordWrapper)
private
fR : FONTDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSizeofstruct(const val : Integer);
function getcbSizeofstruct : Integer;
property cbSizeofstruct : Integer read getcbSizeofstruct write setcbSizeofstruct;
procedure setcySize(const val : Currency);
function getcySize : Currency;
property cySize : Currency read getcySize write setcySize;
procedure setsWeight(const val : SmallInt);
function getsWeight : SmallInt;
property sWeight : SmallInt read getsWeight write setsWeight;
procedure setsCharset(const val : SmallInt);
function getsCharset : SmallInt;
property sCharset : SmallInt read getsCharset write setsCharset;
procedure setfItalic(const val : BOOL);
function getfItalic : BOOL;
property fItalic : BOOL read getfItalic write setfItalic;
procedure setfUnderline(const val : BOOL);
function getfUnderline : BOOL;
property fUnderline : BOOL read getfUnderline write setfUnderline;
procedure setfStrikethrough(const val : BOOL);
function getfStrikethrough : BOOL;
property fStrikethrough : BOOL read getfStrikethrough write setfStrikethrough;
end;
type __FUNCDESC__Wrapper = class(TDCRecordWrapper)
private
fR : FUNCDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setmemid(const val : TMemberID);
function getmemid : TMemberID;
property memid : TMemberID read getmemid write setmemid;
procedure setfunckind(const val : TFuncKind);
function getfunckind : TFuncKind;
property funckind : TFuncKind read getfunckind write setfunckind;
procedure setinvkind(const val : TInvokeKind);
function getinvkind : TInvokeKind;
property invkind : TInvokeKind read getinvkind write setinvkind;
procedure setcallconv(const val : TCallConv);
function getcallconv : TCallConv;
property callconv : TCallConv read getcallconv write setcallconv;
procedure setcParams(const val : SmallInt);
function getcParams : SmallInt;
property cParams : SmallInt read getcParams write setcParams;
procedure setcParamsOpt(const val : SmallInt);
function getcParamsOpt : SmallInt;
property cParamsOpt : SmallInt read getcParamsOpt write setcParamsOpt;
procedure setoVft(const val : SmallInt);
function getoVft : SmallInt;
property oVft : SmallInt read getoVft write setoVft;
procedure setcScodes(const val : SmallInt);
function getcScodes : SmallInt;
property cScodes : SmallInt read getcScodes write setcScodes;
procedure setwFuncFlags(const val : Word);
function getwFuncFlags : Word;
property wFuncFlags : Word read getwFuncFlags write setwFuncFlags;
end;
type __IDLDESC__Wrapper = class(TDCRecordWrapper)
private
fR : IDLDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setdwReserved(const val : Longint);
function getdwReserved : Longint;
property dwReserved : Longint read getdwReserved write setdwReserved;
procedure setwIDLFlags(const val : Word);
function getwIDLFlags : Word;
property wIDLFlags : Word read getwIDLFlags write setwIDLFlags;
end;
type __INTERFACEDATA__Wrapper = class(TDCRecordWrapper)
private
fR : INTERFACEDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcMembers(const val : Integer);
function getcMembers : Integer;
property cMembers : Integer read getcMembers write setcMembers;
end;
type __INTERFACEINFO__Wrapper = class(TDCRecordWrapper)
private
fR : INTERFACEINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setwMethod(const val : Word);
function getwMethod : Word;
property wMethod : Word read getwMethod write setwMethod;
end;
type __LICINFO__Wrapper = class(TDCRecordWrapper)
private
fR : LICINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbLicInfo(const val : Longint);
function getcbLicInfo : Longint;
property cbLicInfo : Longint read getcbLicInfo write setcbLicInfo;
procedure setfRuntimeKeyAvail(const val : BOOL);
function getfRuntimeKeyAvail : BOOL;
property fRuntimeKeyAvail : BOOL read getfRuntimeKeyAvail write setfRuntimeKeyAvail;
procedure setfLicVerified(const val : BOOL);
function getfLicVerified : BOOL;
property fLicVerified : BOOL read getfLicVerified write setfLicVerified;
end;
type __METHODDATA__Wrapper = class(TDCRecordWrapper)
private
fR : METHODDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setdispid(const val : TDispID);
function getdispid : TDispID;
property dispid : TDispID read getdispid write setdispid;
procedure setiMeth(const val : Integer);
function getiMeth : Integer;
property iMeth : Integer read getiMeth write setiMeth;
procedure setcc(const val : TCallConv);
function getcc : TCallConv;
property cc : TCallConv read getcc write setcc;
procedure setcArgs(const val : Integer);
function getcArgs : Integer;
property cArgs : Integer read getcArgs write setcArgs;
procedure setwflags(const val : Word);
function getwflags : Word;
property wflags : Word read getwflags write setwflags;
procedure setvtReturn(const val : TVarType);
function getvtReturn : TVarType;
property vtReturn : TVarType read getvtReturn write setvtReturn;
end;
type __MULTI_QI__Wrapper = class(TDCRecordWrapper)
private
fR : MULTI_QI;
public
function GetRecordPtr : pointer; override;
published
end;
type __OBJECTDESCRIPTOR__Wrapper = class(TDCRecordWrapper)
private
fR : OBJECTDESCRIPTOR;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setdwDrawAspect(const val : Longint);
function getdwDrawAspect : Longint;
property dwDrawAspect : Longint read getdwDrawAspect write setdwDrawAspect;
procedure setdwStatus(const val : Longint);
function getdwStatus : Longint;
property dwStatus : Longint read getdwStatus write setdwStatus;
procedure setdwFullUserTypeName(const val : Longint);
function getdwFullUserTypeName : Longint;
property dwFullUserTypeName : Longint read getdwFullUserTypeName write setdwFullUserTypeName;
procedure setdwSrcOfCopy(const val : Longint);
function getdwSrcOfCopy : Longint;
property dwSrcOfCopy : Longint read getdwSrcOfCopy write setdwSrcOfCopy;
end;
type __OBJECTID__Wrapper = class(TDCRecordWrapper)
private
fR : OBJECTID;
public
function GetRecordPtr : pointer; override;
published
procedure setUniquifier(const val : Longint);
function getUniquifier : Longint;
property Uniquifier : Longint read getUniquifier write setUniquifier;
end;
type __OCPFIPARAMS__Wrapper = class(TDCRecordWrapper)
private
fR : OCPFIPARAMS;
public
function GetRecordPtr : pointer; override;
published
procedure setcbStructSize(const val : Longint);
function getcbStructSize : Longint;
property cbStructSize : Longint read getcbStructSize write setcbStructSize;
procedure setx(const val : Integer);
function getx : Integer;
property x : Integer read getx write setx;
procedure sety(const val : Integer);
function gety : Integer;
property y : Integer read gety write sety;
procedure setcObjects(const val : Longint);
function getcObjects : Longint;
property cObjects : Longint read getcObjects write setcObjects;
procedure setcPages(const val : Longint);
function getcPages : Longint;
property cPages : Longint read getcPages write setcPages;
procedure setlcid(const val : TLCID);
function getlcid : TLCID;
property lcid : TLCID read getlcid write setlcid;
procedure setdispidInitialProperty(const val : TDispID);
function getdispidInitialProperty : TDispID;
property dispidInitialProperty : TDispID read getdispidInitialProperty write setdispidInitialProperty;
end;
type __OLECMD__Wrapper = class(TDCRecordWrapper)
private
fR : OLECMD;
public
function GetRecordPtr : pointer; override;
published
procedure setcmdID(const val : Cardinal);
function getcmdID : Cardinal;
property cmdID : Cardinal read getcmdID write setcmdID;
procedure setcmdf(const val : Longint);
function getcmdf : Longint;
property cmdf : Longint read getcmdf write setcmdf;
end;
type __OLECMDTEXT__Wrapper = class(TDCRecordWrapper)
private
fR : OLECMDTEXT;
public
function GetRecordPtr : pointer; override;
published
procedure setcmdtextf(const val : Longint);
function getcmdtextf : Longint;
property cmdtextf : Longint read getcmdtextf write setcmdtextf;
procedure setcwActual(const val : Cardinal);
function getcwActual : Cardinal;
property cwActual : Cardinal read getcwActual write setcwActual;
procedure setcwBuf(const val : Cardinal);
function getcwBuf : Cardinal;
property cwBuf : Cardinal read getcwBuf write setcwBuf;
end;
type __OLEINPLACEFRAMEINFO__Wrapper = class(TDCRecordWrapper)
private
fR : OLEINPLACEFRAMEINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Integer);
function getcb : Integer;
property cb : Integer read getcb write setcb;
procedure setfMDIApp(const val : BOOL);
function getfMDIApp : BOOL;
property fMDIApp : BOOL read getfMDIApp write setfMDIApp;
procedure setcAccelEntries(const val : Integer);
function getcAccelEntries : Integer;
property cAccelEntries : Integer read getcAccelEntries write setcAccelEntries;
end;
type __OLEMENUGROUPWIDTHS__Wrapper = class(TDCRecordWrapper)
private
fR : OLEMENUGROUPWIDTHS;
public
function GetRecordPtr : pointer; override;
published
end;
type __OLEVERB__Wrapper = class(TDCRecordWrapper)
private
fR : OLEVERB;
public
function GetRecordPtr : pointer; override;
published
procedure setlVerb(const val : Longint);
function getlVerb : Longint;
property lVerb : Longint read getlVerb write setlVerb;
procedure setfuFlags(const val : Longint);
function getfuFlags : Longint;
property fuFlags : Longint read getfuFlags write setfuFlags;
procedure setgrfAttribs(const val : Longint);
function getgrfAttribs : Longint;
property grfAttribs : Longint read getgrfAttribs write setgrfAttribs;
end;
type __PAGERANGE__Wrapper = class(TDCRecordWrapper)
private
fR : PAGERANGE;
public
function GetRecordPtr : pointer; override;
published
procedure setnFromPage(const val : Longint);
function getnFromPage : Longint;
property nFromPage : Longint read getnFromPage write setnFromPage;
procedure setnToPage(const val : Longint);
function getnToPage : Longint;
property nToPage : Longint read getnToPage write setnToPage;
end;
type __PAGESET__Wrapper = class(TDCRecordWrapper)
private
fR : PAGESET;
public
function GetRecordPtr : pointer; override;
published
procedure setcbStruct(const val : Cardinal);
function getcbStruct : Cardinal;
property cbStruct : Cardinal read getcbStruct write setcbStruct;
procedure setfOddPages(const val : BOOL);
function getfOddPages : BOOL;
property fOddPages : BOOL read getfOddPages write setfOddPages;
procedure setfEvenPages(const val : BOOL);
function getfEvenPages : BOOL;
property fEvenPages : BOOL read getfEvenPages write setfEvenPages;
procedure setcPageRange(const val : Cardinal);
function getcPageRange : Cardinal;
property cPageRange : Cardinal read getcPageRange write setcPageRange;
end;
type __PARAMDATA__Wrapper = class(TDCRecordWrapper)
private
fR : PARAMDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
end;
type __PARAMDESC__Wrapper = class(TDCRecordWrapper)
private
fR : PARAMDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setwParamFlags(const val : Word);
function getwParamFlags : Word;
property wParamFlags : Word read getwParamFlags write setwParamFlags;
end;
type __PARAMDESCEX__Wrapper = class(TDCRecordWrapper)
private
fR : PARAMDESCEX;
public
function GetRecordPtr : pointer; override;
published
procedure setcBytes(const val : Longint);
function getcBytes : Longint;
property cBytes : Longint read getcBytes write setcBytes;
procedure setFourBytePad(const val : Longint);
function getFourBytePad : Longint;
property FourBytePad : Longint read getFourBytePad write setFourBytePad;
end;
type __PICTDESC__Wrapper = class(TDCRecordWrapper)
private
fR : PICTDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSizeofstruct(const val : Integer);
function getcbSizeofstruct : Integer;
property cbSizeofstruct : Integer read getcbSizeofstruct write setcbSizeofstruct;
procedure setpicType(const val : Integer);
function getpicType : Integer;
property picType : Integer read getpicType write setpicType;
procedure sethBitmap(const val : THandle);
function gethBitmap : THandle;
property hBitmap : THandle read gethBitmap write sethBitmap;
procedure sethpal(const val : THandle);
function gethpal : THandle;
property hpal : THandle read gethpal write sethpal;
procedure sethMeta(const val : THandle);
function gethMeta : THandle;
property hMeta : THandle read gethMeta write sethMeta;
procedure setxExt(const val : Integer);
function getxExt : Integer;
property xExt : Integer read getxExt write setxExt;
procedure setyExt(const val : Integer);
function getyExt : Integer;
property yExt : Integer read getyExt write setyExt;
procedure sethIcon(const val : THandle);
function gethIcon : THandle;
property hIcon : THandle read gethIcon write sethIcon;
procedure sethemf(const val : THandle);
function gethemf : THandle;
property hemf : THandle read gethemf write sethemf;
end;
type __POINTF__Wrapper = class(TDCRecordWrapper)
private
fR : POINTF;
public
function GetRecordPtr : pointer; override;
published
procedure setx(const val : Single);
function getx : Single;
property x : Single read getx write setx;
procedure sety(const val : Single);
function gety : Single;
property y : Single read gety write sety;
end;
type __PROPPAGEINFO__Wrapper = class(TDCRecordWrapper)
private
fR : PROPPAGEINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Longint);
function getcb : Longint;
property cb : Longint read getcb write setcb;
procedure setdwHelpContext(const val : Longint);
function getdwHelpContext : Longint;
property dwHelpContext : Longint read getdwHelpContext write setdwHelpContext;
end;
type __PROPSPEC__Wrapper = class(TDCRecordWrapper)
private
fR : PROPSPEC;
public
function GetRecordPtr : pointer; override;
published
procedure setulKind(const val : ULONG);
function getulKind : ULONG;
property ulKind : ULONG read getulKind write setulKind;
procedure setPROPID(const val : TPropID);
function getPROPID : TPropID;
property PROPID : TPropID read getPROPID write setPROPID;
end;
type __PROPVARIANT__Wrapper = class(TDCRecordWrapper)
private
fR : PROPVARIANT;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
procedure setwReserved1(const val : Word);
function getwReserved1 : Word;
property wReserved1 : Word read getwReserved1 write setwReserved1;
procedure setwReserved2(const val : Word);
function getwReserved2 : Word;
property wReserved2 : Word read getwReserved2 write setwReserved2;
procedure setwReserved3(const val : Word);
function getwReserved3 : Word;
property wReserved3 : Word read getwReserved3 write setwReserved3;
procedure setbVal(const val : Byte);
function getbVal : Byte;
property bVal : Byte read getbVal write setbVal;
procedure setiVal(const val : SmallInt);
function getiVal : SmallInt;
property iVal : SmallInt read getiVal write setiVal;
procedure setuiVal(const val : Word);
function getuiVal : Word;
property uiVal : Word read getuiVal write setuiVal;
procedure setboolVal(const val : TOleBool);
function getboolVal : TOleBool;
property boolVal : TOleBool read getboolVal write setboolVal;
procedure setBOOL(const val : TOleBool);
function getBOOL : TOleBool;
property BOOL : TOleBool read getBOOL write setBOOL;
procedure setlVal(const val : Longint);
function getlVal : Longint;
property lVal : Longint read getlVal write setlVal;
procedure setulVal(const val : Cardinal);
function getulVal : Cardinal;
property ulVal : Cardinal read getulVal write setulVal;
procedure setfltVal(const val : Single);
function getfltVal : Single;
property fltVal : Single read getfltVal write setfltVal;
procedure setSCODE(const val : SCODE);
function getSCODE : SCODE;
property SCODE : SCODE read getSCODE write setSCODE;
procedure setdblVal(const val : Double);
function getdblVal : Double;
property dblVal : Double read getdblVal write setdblVal;
procedure setcyVal(const val : Currency);
function getcyVal : Currency;
property cyVal : Currency read getcyVal write setcyVal;
procedure setdate(const val : TOleDate);
function getdate : TOleDate;
property date : TOleDate read getdate write setdate;
end;
type __RemSTGMEDIUM__Wrapper = class(TDCRecordWrapper)
private
fR : RemSTGMEDIUM;
public
function GetRecordPtr : pointer; override;
published
procedure settymed(const val : Longint);
function gettymed : Longint;
property tymed : Longint read gettymed write settymed;
procedure setdwHandleType(const val : Longint);
function getdwHandleType : Longint;
property dwHandleType : Longint read getdwHandleType write setdwHandleType;
procedure setpData(const val : Longint);
function getpData : Longint;
property pData : Longint read getpData write setpData;
procedure setpUnkForRelease(const val : Longint);
function getpUnkForRelease : Longint;
property pUnkForRelease : Longint read getpUnkForRelease write setpUnkForRelease;
procedure setcbData(const val : Longint);
function getcbData : Longint;
property cbData : Longint read getcbData write setcbData;
end;
type __RPCOLEMESSAGE__Wrapper = class(TDCRecordWrapper)
private
fR : RPCOLEMESSAGE;
public
function GetRecordPtr : pointer; override;
published
procedure setdataRepresentation(const val : TRpcOleDataRep);
function getdataRepresentation : TRpcOleDataRep;
property dataRepresentation : TRpcOleDataRep read getdataRepresentation write setdataRepresentation;
procedure setcbBuffer(const val : Longint);
function getcbBuffer : Longint;
property cbBuffer : Longint read getcbBuffer write setcbBuffer;
procedure setiMethod(const val : Longint);
function getiMethod : Longint;
property iMethod : Longint read getiMethod write setiMethod;
procedure setrpcFlags(const val : Longint);
function getrpcFlags : Longint;
property rpcFlags : Longint read getrpcFlags write setrpcFlags;
end;
type __SAFEARRAY__Wrapper = class(TDCRecordWrapper)
private
fR : SAFEARRAY;
public
function GetRecordPtr : pointer; override;
published
procedure setcDims(const val : Word);
function getcDims : Word;
property cDims : Word read getcDims write setcDims;
procedure setfFeatures(const val : Word);
function getfFeatures : Word;
property fFeatures : Word read getfFeatures write setfFeatures;
procedure setcbElements(const val : Longint);
function getcbElements : Longint;
property cbElements : Longint read getcbElements write setcbElements;
procedure setcLocks(const val : Longint);
function getcLocks : Longint;
property cLocks : Longint read getcLocks write setcLocks;
end;
type __SAFEARRAYBOUND__Wrapper = class(TDCRecordWrapper)
private
fR : SAFEARRAYBOUND;
public
function GetRecordPtr : pointer; override;
published
procedure setcElements(const val : Longint);
function getcElements : Longint;
property cElements : Longint read getcElements write setcElements;
procedure setlLbound(const val : Longint);
function getlLbound : Longint;
property lLbound : Longint read getlLbound write setlLbound;
end;
type __SOLE_AUTHENTICATION_SERVICE__Wrapper = class(TDCRecordWrapper)
private
fR : SOLE_AUTHENTICATION_SERVICE;
public
function GetRecordPtr : pointer; override;
published
procedure setdwAuthnSvc(const val : Longint);
function getdwAuthnSvc : Longint;
property dwAuthnSvc : Longint read getdwAuthnSvc write setdwAuthnSvc;
procedure setdwAuthzSvc(const val : Longint);
function getdwAuthzSvc : Longint;
property dwAuthzSvc : Longint read getdwAuthzSvc write setdwAuthzSvc;
end;
type __STATDATA__Wrapper = class(TDCRecordWrapper)
private
fR : STATDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setadvf(const val : Longint);
function getadvf : Longint;
property advf : Longint read getadvf write setadvf;
procedure setdwConnection(const val : Longint);
function getdwConnection : Longint;
property dwConnection : Longint read getdwConnection write setdwConnection;
end;
type __STATPROPSETSTG__Wrapper = class(TDCRecordWrapper)
private
fR : STATPROPSETSTG;
public
function GetRecordPtr : pointer; override;
published
procedure setgrfFlags(const val : DWORD);
function getgrfFlags : DWORD;
property grfFlags : DWORD read getgrfFlags write setgrfFlags;
procedure setdwOSVersion(const val : DWORD);
function getdwOSVersion : DWORD;
property dwOSVersion : DWORD read getdwOSVersion write setdwOSVersion;
end;
type __STATPROPSTG__Wrapper = class(TDCRecordWrapper)
private
fR : STATPROPSTG;
public
function GetRecordPtr : pointer; override;
published
procedure setPROPID(const val : TPropID);
function getPROPID : TPropID;
property PROPID : TPropID read getPROPID write setPROPID;
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
end;
type __STGMEDIUM__Wrapper = class(TDCRecordWrapper)
private
fR : STGMEDIUM;
public
function GetRecordPtr : pointer; override;
published
procedure settymed(const val : Longint);
function gettymed : Longint;
property tymed : Longint read gettymed write settymed;
procedure sethMetaFilePict(const val : THandle);
function gethMetaFilePict : THandle;
property hMetaFilePict : THandle read gethMetaFilePict write sethMetaFilePict;
procedure sethEnhMetaFile(const val : THandle);
function gethEnhMetaFile : THandle;
property hEnhMetaFile : THandle read gethEnhMetaFile write sethEnhMetaFile;
procedure sethGlobal(const val : hGlobal);
function gethGlobal : hGlobal;
property hGlobal : hGlobal read gethGlobal write sethGlobal;
end;
type __tagARRAYDESC__Wrapper = class(TDCRecordWrapper)
private
fR : tagARRAYDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setcDims(const val : Word);
function getcDims : Word;
property cDims : Word read getcDims write setcDims;
end;
type __tagBIND_OPTS__Wrapper = class(TDCRecordWrapper)
private
fR : tagBIND_OPTS;
public
function GetRecordPtr : pointer; override;
published
procedure setcbStruct(const val : Longint);
function getcbStruct : Longint;
property cbStruct : Longint read getcbStruct write setcbStruct;
procedure setgrfFlags(const val : Longint);
function getgrfFlags : Longint;
property grfFlags : Longint read getgrfFlags write setgrfFlags;
procedure setgrfMode(const val : Longint);
function getgrfMode : Longint;
property grfMode : Longint read getgrfMode write setgrfMode;
procedure setdwTickCountDeadline(const val : Longint);
function getdwTickCountDeadline : Longint;
property dwTickCountDeadline : Longint read getdwTickCountDeadline write setdwTickCountDeadline;
end;
type __tagBINDPTR__Wrapper = class(TDCRecordWrapper)
private
fR : tagBINDPTR;
public
function GetRecordPtr : pointer; override;
published
end;
type __tagBLOB__Wrapper = class(TDCRecordWrapper)
private
fR : tagBLOB;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
end;
type __tagCABOOL__Wrapper = class(TDCRecordWrapper)
private
fR : tagCABOOL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCABSTR__Wrapper = class(TDCRecordWrapper)
private
fR : tagCABSTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCACLIPDATA__Wrapper = class(TDCRecordWrapper)
private
fR : tagCACLIPDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCACLSID__Wrapper = class(TDCRecordWrapper)
private
fR : tagCACLSID;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCACY__Wrapper = class(TDCRecordWrapper)
private
fR : tagCACY;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCADATE__Wrapper = class(TDCRecordWrapper)
private
fR : tagCADATE;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCADBL__Wrapper = class(TDCRecordWrapper)
private
fR : tagCADBL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCADWORD__Wrapper = class(TDCRecordWrapper)
private
fR : tagCADWORD;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : Longint);
function getcElems : Longint;
property cElems : Longint read getcElems write setcElems;
end;
type __tagCAFILETIME__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAFILETIME;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCAFLT__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAFLT;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCAH__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAH;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCAI__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAI;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCAL__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCALPOLESTR__Wrapper = class(TDCRecordWrapper)
private
fR : tagCALPOLESTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : Longint);
function getcElems : Longint;
property cElems : Longint read getcElems write setcElems;
end;
type __tagCALPSTR__Wrapper = class(TDCRecordWrapper)
private
fR : tagCALPSTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCALPWSTR__Wrapper = class(TDCRecordWrapper)
private
fR : tagCALPWSTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCAPROPVARIANT__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAPROPVARIANT;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCASCODE__Wrapper = class(TDCRecordWrapper)
private
fR : tagCASCODE;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCAUB__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAUB;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCAUH__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAUH;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCAUI__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAUI;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCAUL__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAUL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __tagCAUUID__Wrapper = class(TDCRecordWrapper)
private
fR : tagCAUUID;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : Longint);
function getcElems : Longint;
property cElems : Longint read getcElems write setcElems;
end;
type __tagCLIPDATA__Wrapper = class(TDCRecordWrapper)
private
fR : tagCLIPDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setulClipFmt(const val : Longint);
function getulClipFmt : Longint;
property ulClipFmt : Longint read getulClipFmt write setulClipFmt;
end;
type __tagCONNECTDATA__Wrapper = class(TDCRecordWrapper)
private
fR : tagCONNECTDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setdwCookie(const val : Longint);
function getdwCookie : Longint;
property dwCookie : Longint read getdwCookie write setdwCookie;
end;
type __tagCONTROLINFO__Wrapper = class(TDCRecordWrapper)
private
fR : tagCONTROLINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Longint);
function getcb : Longint;
property cb : Longint read getcb write setcb;
procedure setcAccel(const val : Word);
function getcAccel : Word;
property cAccel : Word read getcAccel write setcAccel;
procedure setdwFlags(const val : Longint);
function getdwFlags : Longint;
property dwFlags : Longint read getdwFlags write setdwFlags;
end;
type __tagCUSTDATA__Wrapper = class(TDCRecordWrapper)
private
fR : tagCUSTDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcCustData(const val : DWORD);
function getcCustData : DWORD;
property cCustData : DWORD read getcCustData write setcCustData;
end;
type __tagCUSTDATAITEM__Wrapper = class(TDCRecordWrapper)
private
fR : tagCUSTDATAITEM;
public
function GetRecordPtr : pointer; override;
published
end;
type __tagDEC__Wrapper = class(TDCRecordWrapper)
private
fR : tagDEC;
public
function GetRecordPtr : pointer; override;
published
procedure setwReserved(const val : Word);
function getwReserved : Word;
property wReserved : Word read getwReserved write setwReserved;
procedure setscale(const val : Byte);
function getscale : Byte;
property scale : Byte read getscale write setscale;
procedure setsign(const val : Byte);
function getsign : Byte;
property sign : Byte read getsign write setsign;
procedure setHi32(const val : Longint);
function getHi32 : Longint;
property Hi32 : Longint read getHi32 write setHi32;
procedure setLo32(const val : Longint);
function getLo32 : Longint;
property Lo32 : Longint read getLo32 write setLo32;
procedure setMid32(const val : Longint);
function getMid32 : Longint;
property Mid32 : Longint read getMid32 write setMid32;
procedure setsignscale(const val : Word);
function getsignscale : Word;
property signscale : Word read getsignscale write setsignscale;
end;
type __tagDISPPARAMS__Wrapper = class(TDCRecordWrapper)
private
fR : tagDISPPARAMS;
public
function GetRecordPtr : pointer; override;
published
procedure setcArgs(const val : Longint);
function getcArgs : Longint;
property cArgs : Longint read getcArgs write setcArgs;
procedure setcNamedArgs(const val : Longint);
function getcNamedArgs : Longint;
property cNamedArgs : Longint read getcNamedArgs write setcNamedArgs;
end;
type __tagDVTARGETDEVICE__Wrapper = class(TDCRecordWrapper)
private
fR : tagDVTARGETDEVICE;
public
function GetRecordPtr : pointer; override;
published
procedure settdSize(const val : Longint);
function gettdSize : Longint;
property tdSize : Longint read gettdSize write settdSize;
procedure settdDriverNameOffset(const val : Word);
function gettdDriverNameOffset : Word;
property tdDriverNameOffset : Word read gettdDriverNameOffset write settdDriverNameOffset;
procedure settdDeviceNameOffset(const val : Word);
function gettdDeviceNameOffset : Word;
property tdDeviceNameOffset : Word read gettdDeviceNameOffset write settdDeviceNameOffset;
procedure settdPortNameOffset(const val : Word);
function gettdPortNameOffset : Word;
property tdPortNameOffset : Word read gettdPortNameOffset write settdPortNameOffset;
procedure settdExtDevmodeOffset(const val : Word);
function gettdExtDevmodeOffset : Word;
property tdExtDevmodeOffset : Word read gettdExtDevmodeOffset write settdExtDevmodeOffset;
end;
type __tagELEMDESC__Wrapper = class(TDCRecordWrapper)
private
fR : tagELEMDESC;
public
function GetRecordPtr : pointer; override;
published
end;
type __tagEXCEPINFO__Wrapper = class(TDCRecordWrapper)
private
fR : tagEXCEPINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setwCode(const val : Word);
function getwCode : Word;
property wCode : Word read getwCode write setwCode;
procedure setwReserved(const val : Word);
function getwReserved : Word;
property wReserved : Word read getwReserved write setwReserved;
procedure setbstrSource(const val : WideString);
function getbstrSource : WideString;
property bstrSource : WideString read getbstrSource write setbstrSource;
procedure setbstrDescription(const val : WideString);
function getbstrDescription : WideString;
property bstrDescription : WideString read getbstrDescription write setbstrDescription;
procedure setbstrHelpFile(const val : WideString);
function getbstrHelpFile : WideString;
property bstrHelpFile : WideString read getbstrHelpFile write setbstrHelpFile;
procedure setdwHelpContext(const val : Longint);
function getdwHelpContext : Longint;
property dwHelpContext : Longint read getdwHelpContext write setdwHelpContext;
end;
type __tagFONTDESC__Wrapper = class(TDCRecordWrapper)
private
fR : tagFONTDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSizeofstruct(const val : Integer);
function getcbSizeofstruct : Integer;
property cbSizeofstruct : Integer read getcbSizeofstruct write setcbSizeofstruct;
procedure setcySize(const val : Currency);
function getcySize : Currency;
property cySize : Currency read getcySize write setcySize;
procedure setsWeight(const val : SmallInt);
function getsWeight : SmallInt;
property sWeight : SmallInt read getsWeight write setsWeight;
procedure setsCharset(const val : SmallInt);
function getsCharset : SmallInt;
property sCharset : SmallInt read getsCharset write setsCharset;
procedure setfItalic(const val : BOOL);
function getfItalic : BOOL;
property fItalic : BOOL read getfItalic write setfItalic;
procedure setfUnderline(const val : BOOL);
function getfUnderline : BOOL;
property fUnderline : BOOL read getfUnderline write setfUnderline;
procedure setfStrikethrough(const val : BOOL);
function getfStrikethrough : BOOL;
property fStrikethrough : BOOL read getfStrikethrough write setfStrikethrough;
end;
type __tagFORMATETC__Wrapper = class(TDCRecordWrapper)
private
fR : tagFORMATETC;
public
function GetRecordPtr : pointer; override;
published
procedure setcfFormat(const val : TClipFormat);
function getcfFormat : TClipFormat;
property cfFormat : TClipFormat read getcfFormat write setcfFormat;
procedure setdwAspect(const val : Longint);
function getdwAspect : Longint;
property dwAspect : Longint read getdwAspect write setdwAspect;
procedure setlindex(const val : Longint);
function getlindex : Longint;
property lindex : Longint read getlindex write setlindex;
procedure settymed(const val : Longint);
function gettymed : Longint;
property tymed : Longint read gettymed write settymed;
end;
type __tagFUNCDESC__Wrapper = class(TDCRecordWrapper)
private
fR : tagFUNCDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setmemid(const val : TMemberID);
function getmemid : TMemberID;
property memid : TMemberID read getmemid write setmemid;
procedure setfunckind(const val : TFuncKind);
function getfunckind : TFuncKind;
property funckind : TFuncKind read getfunckind write setfunckind;
procedure setinvkind(const val : TInvokeKind);
function getinvkind : TInvokeKind;
property invkind : TInvokeKind read getinvkind write setinvkind;
procedure setcallconv(const val : TCallConv);
function getcallconv : TCallConv;
property callconv : TCallConv read getcallconv write setcallconv;
procedure setcParams(const val : SmallInt);
function getcParams : SmallInt;
property cParams : SmallInt read getcParams write setcParams;
procedure setcParamsOpt(const val : SmallInt);
function getcParamsOpt : SmallInt;
property cParamsOpt : SmallInt read getcParamsOpt write setcParamsOpt;
procedure setoVft(const val : SmallInt);
function getoVft : SmallInt;
property oVft : SmallInt read getoVft write setoVft;
procedure setcScodes(const val : SmallInt);
function getcScodes : SmallInt;
property cScodes : SmallInt read getcScodes write setcScodes;
procedure setwFuncFlags(const val : Word);
function getwFuncFlags : Word;
property wFuncFlags : Word read getwFuncFlags write setwFuncFlags;
end;
type __tagIDLDESC__Wrapper = class(TDCRecordWrapper)
private
fR : tagIDLDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setdwReserved(const val : Longint);
function getdwReserved : Longint;
property dwReserved : Longint read getdwReserved write setdwReserved;
procedure setwIDLFlags(const val : Word);
function getwIDLFlags : Word;
property wIDLFlags : Word read getwIDLFlags write setwIDLFlags;
end;
type __tagINTERFACEDATA__Wrapper = class(TDCRecordWrapper)
private
fR : tagINTERFACEDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcMembers(const val : Integer);
function getcMembers : Integer;
property cMembers : Integer read getcMembers write setcMembers;
end;
type __tagINTERFACEINFO__Wrapper = class(TDCRecordWrapper)
private
fR : tagINTERFACEINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setwMethod(const val : Word);
function getwMethod : Word;
property wMethod : Word read getwMethod write setwMethod;
end;
type __tagLICINFO__Wrapper = class(TDCRecordWrapper)
private
fR : tagLICINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbLicInfo(const val : Longint);
function getcbLicInfo : Longint;
property cbLicInfo : Longint read getcbLicInfo write setcbLicInfo;
procedure setfRuntimeKeyAvail(const val : BOOL);
function getfRuntimeKeyAvail : BOOL;
property fRuntimeKeyAvail : BOOL read getfRuntimeKeyAvail write setfRuntimeKeyAvail;
procedure setfLicVerified(const val : BOOL);
function getfLicVerified : BOOL;
property fLicVerified : BOOL read getfLicVerified write setfLicVerified;
end;
type __tagMETHODDATA__Wrapper = class(TDCRecordWrapper)
private
fR : tagMETHODDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setdispid(const val : TDispID);
function getdispid : TDispID;
property dispid : TDispID read getdispid write setdispid;
procedure setiMeth(const val : Integer);
function getiMeth : Integer;
property iMeth : Integer read getiMeth write setiMeth;
procedure setcc(const val : TCallConv);
function getcc : TCallConv;
property cc : TCallConv read getcc write setcc;
procedure setcArgs(const val : Integer);
function getcArgs : Integer;
property cArgs : Integer read getcArgs write setcArgs;
procedure setwflags(const val : Word);
function getwflags : Word;
property wflags : Word read getwflags write setwflags;
procedure setvtReturn(const val : TVarType);
function getvtReturn : TVarType;
property vtReturn : TVarType read getvtReturn write setvtReturn;
end;
type __tagMULTI_QI__Wrapper = class(TDCRecordWrapper)
private
fR : tagMULTI_QI;
public
function GetRecordPtr : pointer; override;
published
end;
type __tagOBJECTDESCRIPTOR__Wrapper = class(TDCRecordWrapper)
private
fR : tagOBJECTDESCRIPTOR;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setdwDrawAspect(const val : Longint);
function getdwDrawAspect : Longint;
property dwDrawAspect : Longint read getdwDrawAspect write setdwDrawAspect;
procedure setdwStatus(const val : Longint);
function getdwStatus : Longint;
property dwStatus : Longint read getdwStatus write setdwStatus;
procedure setdwFullUserTypeName(const val : Longint);
function getdwFullUserTypeName : Longint;
property dwFullUserTypeName : Longint read getdwFullUserTypeName write setdwFullUserTypeName;
procedure setdwSrcOfCopy(const val : Longint);
function getdwSrcOfCopy : Longint;
property dwSrcOfCopy : Longint read getdwSrcOfCopy write setdwSrcOfCopy;
end;
type __tagOCPFIPARAMS__Wrapper = class(TDCRecordWrapper)
private
fR : tagOCPFIPARAMS;
public
function GetRecordPtr : pointer; override;
published
procedure setcbStructSize(const val : Longint);
function getcbStructSize : Longint;
property cbStructSize : Longint read getcbStructSize write setcbStructSize;
procedure setx(const val : Integer);
function getx : Integer;
property x : Integer read getx write setx;
procedure sety(const val : Integer);
function gety : Integer;
property y : Integer read gety write sety;
procedure setcObjects(const val : Longint);
function getcObjects : Longint;
property cObjects : Longint read getcObjects write setcObjects;
procedure setcPages(const val : Longint);
function getcPages : Longint;
property cPages : Longint read getcPages write setcPages;
procedure setlcid(const val : TLCID);
function getlcid : TLCID;
property lcid : TLCID read getlcid write setlcid;
procedure setdispidInitialProperty(const val : TDispID);
function getdispidInitialProperty : TDispID;
property dispidInitialProperty : TDispID read getdispidInitialProperty write setdispidInitialProperty;
end;
type __tagOIFI__Wrapper = class(TDCRecordWrapper)
private
fR : tagOIFI;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Integer);
function getcb : Integer;
property cb : Integer read getcb write setcb;
procedure setfMDIApp(const val : BOOL);
function getfMDIApp : BOOL;
property fMDIApp : BOOL read getfMDIApp write setfMDIApp;
procedure setcAccelEntries(const val : Integer);
function getcAccelEntries : Integer;
property cAccelEntries : Integer read getcAccelEntries write setcAccelEntries;
end;
type __tagOleMenuGroupWidths__Wrapper = class(TDCRecordWrapper)
private
fR : tagOleMenuGroupWidths;
public
function GetRecordPtr : pointer; override;
published
end;
type __tagOLEVERB__Wrapper = class(TDCRecordWrapper)
private
fR : tagOLEVERB;
public
function GetRecordPtr : pointer; override;
published
procedure setlVerb(const val : Longint);
function getlVerb : Longint;
property lVerb : Longint read getlVerb write setlVerb;
procedure setfuFlags(const val : Longint);
function getfuFlags : Longint;
property fuFlags : Longint read getfuFlags write setfuFlags;
procedure setgrfAttribs(const val : Longint);
function getgrfAttribs : Longint;
property grfAttribs : Longint read getgrfAttribs write setgrfAttribs;
end;
type __tagPAGERANGE__Wrapper = class(TDCRecordWrapper)
private
fR : tagPAGERANGE;
public
function GetRecordPtr : pointer; override;
published
procedure setnFromPage(const val : Longint);
function getnFromPage : Longint;
property nFromPage : Longint read getnFromPage write setnFromPage;
procedure setnToPage(const val : Longint);
function getnToPage : Longint;
property nToPage : Longint read getnToPage write setnToPage;
end;
type __tagPAGESET__Wrapper = class(TDCRecordWrapper)
private
fR : tagPAGESET;
public
function GetRecordPtr : pointer; override;
published
procedure setcbStruct(const val : Cardinal);
function getcbStruct : Cardinal;
property cbStruct : Cardinal read getcbStruct write setcbStruct;
procedure setfOddPages(const val : BOOL);
function getfOddPages : BOOL;
property fOddPages : BOOL read getfOddPages write setfOddPages;
procedure setfEvenPages(const val : BOOL);
function getfEvenPages : BOOL;
property fEvenPages : BOOL read getfEvenPages write setfEvenPages;
procedure setcPageRange(const val : Cardinal);
function getcPageRange : Cardinal;
property cPageRange : Cardinal read getcPageRange write setcPageRange;
end;
type __tagPARAMDATA__Wrapper = class(TDCRecordWrapper)
private
fR : tagPARAMDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
end;
type __tagPARAMDESC__Wrapper = class(TDCRecordWrapper)
private
fR : tagPARAMDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setwParamFlags(const val : Word);
function getwParamFlags : Word;
property wParamFlags : Word read getwParamFlags write setwParamFlags;
end;
type __tagPARAMDESCEX__Wrapper = class(TDCRecordWrapper)
private
fR : tagPARAMDESCEX;
public
function GetRecordPtr : pointer; override;
published
procedure setcBytes(const val : Longint);
function getcBytes : Longint;
property cBytes : Longint read getcBytes write setcBytes;
procedure setFourBytePad(const val : Longint);
function getFourBytePad : Longint;
property FourBytePad : Longint read getFourBytePad write setFourBytePad;
end;
type __tagPICTDESC__Wrapper = class(TDCRecordWrapper)
private
fR : tagPICTDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSizeofstruct(const val : Integer);
function getcbSizeofstruct : Integer;
property cbSizeofstruct : Integer read getcbSizeofstruct write setcbSizeofstruct;
procedure setpicType(const val : Integer);
function getpicType : Integer;
property picType : Integer read getpicType write setpicType;
procedure sethBitmap(const val : THandle);
function gethBitmap : THandle;
property hBitmap : THandle read gethBitmap write sethBitmap;
procedure sethpal(const val : THandle);
function gethpal : THandle;
property hpal : THandle read gethpal write sethpal;
procedure sethMeta(const val : THandle);
function gethMeta : THandle;
property hMeta : THandle read gethMeta write sethMeta;
procedure setxExt(const val : Integer);
function getxExt : Integer;
property xExt : Integer read getxExt write setxExt;
procedure setyExt(const val : Integer);
function getyExt : Integer;
property yExt : Integer read getyExt write setyExt;
procedure sethIcon(const val : THandle);
function gethIcon : THandle;
property hIcon : THandle read gethIcon write sethIcon;
procedure sethemf(const val : THandle);
function gethemf : THandle;
property hemf : THandle read gethemf write sethemf;
end;
type __tagPOINTF__Wrapper = class(TDCRecordWrapper)
private
fR : tagPOINTF;
public
function GetRecordPtr : pointer; override;
published
procedure setx(const val : Single);
function getx : Single;
property x : Single read getx write setx;
procedure sety(const val : Single);
function gety : Single;
property y : Single read gety write sety;
end;
type __tagPROPPAGEINFO__Wrapper = class(TDCRecordWrapper)
private
fR : tagPROPPAGEINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Longint);
function getcb : Longint;
property cb : Longint read getcb write setcb;
procedure setdwHelpContext(const val : Longint);
function getdwHelpContext : Longint;
property dwHelpContext : Longint read getdwHelpContext write setdwHelpContext;
end;
type __tagPROPSPEC__Wrapper = class(TDCRecordWrapper)
private
fR : tagPROPSPEC;
public
function GetRecordPtr : pointer; override;
published
procedure setulKind(const val : ULONG);
function getulKind : ULONG;
property ulKind : ULONG read getulKind write setulKind;
procedure setPROPID(const val : TPropID);
function getPROPID : TPropID;
property PROPID : TPropID read getPROPID write setPROPID;
end;
type __tagPROPVARIANT__Wrapper = class(TDCRecordWrapper)
private
fR : tagPROPVARIANT;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
procedure setwReserved1(const val : Word);
function getwReserved1 : Word;
property wReserved1 : Word read getwReserved1 write setwReserved1;
procedure setwReserved2(const val : Word);
function getwReserved2 : Word;
property wReserved2 : Word read getwReserved2 write setwReserved2;
procedure setwReserved3(const val : Word);
function getwReserved3 : Word;
property wReserved3 : Word read getwReserved3 write setwReserved3;
procedure setbVal(const val : Byte);
function getbVal : Byte;
property bVal : Byte read getbVal write setbVal;
procedure setiVal(const val : SmallInt);
function getiVal : SmallInt;
property iVal : SmallInt read getiVal write setiVal;
procedure setuiVal(const val : Word);
function getuiVal : Word;
property uiVal : Word read getuiVal write setuiVal;
procedure setboolVal(const val : TOleBool);
function getboolVal : TOleBool;
property boolVal : TOleBool read getboolVal write setboolVal;
procedure setBOOL(const val : TOleBool);
function getBOOL : TOleBool;
property BOOL : TOleBool read getBOOL write setBOOL;
procedure setlVal(const val : Longint);
function getlVal : Longint;
property lVal : Longint read getlVal write setlVal;
procedure setulVal(const val : Cardinal);
function getulVal : Cardinal;
property ulVal : Cardinal read getulVal write setulVal;
procedure setfltVal(const val : Single);
function getfltVal : Single;
property fltVal : Single read getfltVal write setfltVal;
procedure setSCODE(const val : SCODE);
function getSCODE : SCODE;
property SCODE : SCODE read getSCODE write setSCODE;
procedure setdblVal(const val : Double);
function getdblVal : Double;
property dblVal : Double read getdblVal write setdblVal;
procedure setcyVal(const val : Currency);
function getcyVal : Currency;
property cyVal : Currency read getcyVal write setcyVal;
procedure setdate(const val : TOleDate);
function getdate : TOleDate;
property date : TOleDate read getdate write setdate;
end;
type __tagQACONTAINER__Wrapper = class(TDCRecordWrapper)
private
fR : tagQACONTAINER;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setdwAmbientFlags(const val : Longint);
function getdwAmbientFlags : Longint;
property dwAmbientFlags : Longint read getdwAmbientFlags write setdwAmbientFlags;
procedure setcolorFore(const val : OLE_COLOR);
function getcolorFore : OLE_COLOR;
property colorFore : OLE_COLOR read getcolorFore write setcolorFore;
procedure setcolorBack(const val : OLE_COLOR);
function getcolorBack : OLE_COLOR;
property colorBack : OLE_COLOR read getcolorBack write setcolorBack;
procedure setdwAppearance(const val : Longint);
function getdwAppearance : Longint;
property dwAppearance : Longint read getdwAppearance write setdwAppearance;
procedure setlcid(const val : Longint);
function getlcid : Longint;
property lcid : Longint read getlcid write setlcid;
end;
type __tagQACONTROL__Wrapper = class(TDCRecordWrapper)
private
fR : tagQACONTROL;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setdwMiscStatus(const val : Longint);
function getdwMiscStatus : Longint;
property dwMiscStatus : Longint read getdwMiscStatus write setdwMiscStatus;
procedure setdwViewStatus(const val : Longint);
function getdwViewStatus : Longint;
property dwViewStatus : Longint read getdwViewStatus write setdwViewStatus;
procedure setdwEventCookie(const val : Longint);
function getdwEventCookie : Longint;
property dwEventCookie : Longint read getdwEventCookie write setdwEventCookie;
procedure setdwPropNotifyCookie(const val : Longint);
function getdwPropNotifyCookie : Longint;
property dwPropNotifyCookie : Longint read getdwPropNotifyCookie write setdwPropNotifyCookie;
procedure setdwPointerActivationPolicy(const val : Longint);
function getdwPointerActivationPolicy : Longint;
property dwPointerActivationPolicy : Longint read getdwPointerActivationPolicy write setdwPointerActivationPolicy;
end;
type __tagRemSTGMEDIUM__Wrapper = class(TDCRecordWrapper)
private
fR : tagRemSTGMEDIUM;
public
function GetRecordPtr : pointer; override;
published
procedure settymed(const val : Longint);
function gettymed : Longint;
property tymed : Longint read gettymed write settymed;
procedure setdwHandleType(const val : Longint);
function getdwHandleType : Longint;
property dwHandleType : Longint read getdwHandleType write setdwHandleType;
procedure setpData(const val : Longint);
function getpData : Longint;
property pData : Longint read getpData write setpData;
procedure setpUnkForRelease(const val : Longint);
function getpUnkForRelease : Longint;
property pUnkForRelease : Longint read getpUnkForRelease write setpUnkForRelease;
procedure setcbData(const val : Longint);
function getcbData : Longint;
property cbData : Longint read getcbData write setcbData;
end;
type __tagRPCOLEMESSAGE__Wrapper = class(TDCRecordWrapper)
private
fR : tagRPCOLEMESSAGE;
public
function GetRecordPtr : pointer; override;
published
procedure setdataRepresentation(const val : TRpcOleDataRep);
function getdataRepresentation : TRpcOleDataRep;
property dataRepresentation : TRpcOleDataRep read getdataRepresentation write setdataRepresentation;
procedure setcbBuffer(const val : Longint);
function getcbBuffer : Longint;
property cbBuffer : Longint read getcbBuffer write setcbBuffer;
procedure setiMethod(const val : Longint);
function getiMethod : Longint;
property iMethod : Longint read getiMethod write setiMethod;
procedure setrpcFlags(const val : Longint);
function getrpcFlags : Longint;
property rpcFlags : Longint read getrpcFlags write setrpcFlags;
end;
type __tagSAFEARRAY__Wrapper = class(TDCRecordWrapper)
private
fR : tagSAFEARRAY;
public
function GetRecordPtr : pointer; override;
published
procedure setcDims(const val : Word);
function getcDims : Word;
property cDims : Word read getcDims write setcDims;
procedure setfFeatures(const val : Word);
function getfFeatures : Word;
property fFeatures : Word read getfFeatures write setfFeatures;
procedure setcbElements(const val : Longint);
function getcbElements : Longint;
property cbElements : Longint read getcbElements write setcbElements;
procedure setcLocks(const val : Longint);
function getcLocks : Longint;
property cLocks : Longint read getcLocks write setcLocks;
end;
type __tagSAFEARRAYBOUND__Wrapper = class(TDCRecordWrapper)
private
fR : tagSAFEARRAYBOUND;
public
function GetRecordPtr : pointer; override;
published
procedure setcElements(const val : Longint);
function getcElements : Longint;
property cElements : Longint read getcElements write setcElements;
procedure setlLbound(const val : Longint);
function getlLbound : Longint;
property lLbound : Longint read getlLbound write setlLbound;
end;
type __tagSOLE_AUTHENTICATION_SERVICE__Wrapper = class(TDCRecordWrapper)
private
fR : tagSOLE_AUTHENTICATION_SERVICE;
public
function GetRecordPtr : pointer; override;
published
procedure setdwAuthnSvc(const val : Longint);
function getdwAuthnSvc : Longint;
property dwAuthnSvc : Longint read getdwAuthnSvc write setdwAuthnSvc;
procedure setdwAuthzSvc(const val : Longint);
function getdwAuthzSvc : Longint;
property dwAuthzSvc : Longint read getdwAuthzSvc write setdwAuthzSvc;
end;
type __tagSTATDATA__Wrapper = class(TDCRecordWrapper)
private
fR : tagSTATDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setadvf(const val : Longint);
function getadvf : Longint;
property advf : Longint read getadvf write setadvf;
procedure setdwConnection(const val : Longint);
function getdwConnection : Longint;
property dwConnection : Longint read getdwConnection write setdwConnection;
end;
type __tagSTATPROPSETSTG__Wrapper = class(TDCRecordWrapper)
private
fR : tagSTATPROPSETSTG;
public
function GetRecordPtr : pointer; override;
published
procedure setgrfFlags(const val : DWORD);
function getgrfFlags : DWORD;
property grfFlags : DWORD read getgrfFlags write setgrfFlags;
procedure setdwOSVersion(const val : DWORD);
function getdwOSVersion : DWORD;
property dwOSVersion : DWORD read getdwOSVersion write setdwOSVersion;
end;
type __tagSTATPROPSTG__Wrapper = class(TDCRecordWrapper)
private
fR : tagSTATPROPSTG;
public
function GetRecordPtr : pointer; override;
published
procedure setPROPID(const val : TPropID);
function getPROPID : TPropID;
property PROPID : TPropID read getPROPID write setPROPID;
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
end;
type __tagSTATSTG__Wrapper = class(TDCRecordWrapper)
private
fR : tagSTATSTG;
public
function GetRecordPtr : pointer; override;
published
procedure setdwType(const val : Longint);
function getdwType : Longint;
property dwType : Longint read getdwType write setdwType;
procedure setgrfMode(const val : Longint);
function getgrfMode : Longint;
property grfMode : Longint read getgrfMode write setgrfMode;
procedure setgrfLocksSupported(const val : Longint);
function getgrfLocksSupported : Longint;
property grfLocksSupported : Longint read getgrfLocksSupported write setgrfLocksSupported;
procedure setgrfStateBits(const val : Longint);
function getgrfStateBits : Longint;
property grfStateBits : Longint read getgrfStateBits write setgrfStateBits;
procedure setreserved(const val : Longint);
function getreserved : Longint;
property reserved : Longint read getreserved write setreserved;
end;
type __tagSTGMEDIUM__Wrapper = class(TDCRecordWrapper)
private
fR : tagSTGMEDIUM;
public
function GetRecordPtr : pointer; override;
published
procedure settymed(const val : Longint);
function gettymed : Longint;
property tymed : Longint read gettymed write settymed;
procedure sethMetaFilePict(const val : THandle);
function gethMetaFilePict : THandle;
property hMetaFilePict : THandle read gethMetaFilePict write sethMetaFilePict;
procedure sethEnhMetaFile(const val : THandle);
function gethEnhMetaFile : THandle;
property hEnhMetaFile : THandle read gethEnhMetaFile write sethEnhMetaFile;
procedure sethGlobal(const val : hGlobal);
function gethGlobal : hGlobal;
property hGlobal : hGlobal read gethGlobal write sethGlobal;
end;
type __tagTLIBATTR__Wrapper = class(TDCRecordWrapper)
private
fR : tagTLIBATTR;
public
function GetRecordPtr : pointer; override;
published
procedure setlcid(const val : TLCID);
function getlcid : TLCID;
property lcid : TLCID read getlcid write setlcid;
procedure setsyskind(const val : TSysKind);
function getsyskind : TSysKind;
property syskind : TSysKind read getsyskind write setsyskind;
procedure setwMajorVerNum(const val : Word);
function getwMajorVerNum : Word;
property wMajorVerNum : Word read getwMajorVerNum write setwMajorVerNum;
procedure setwMinorVerNum(const val : Word);
function getwMinorVerNum : Word;
property wMinorVerNum : Word read getwMinorVerNum write setwMinorVerNum;
procedure setwLibFlags(const val : Word);
function getwLibFlags : Word;
property wLibFlags : Word read getwLibFlags write setwLibFlags;
end;
type __tagTYPEATTR__Wrapper = class(TDCRecordWrapper)
private
fR : tagTYPEATTR;
public
function GetRecordPtr : pointer; override;
published
procedure setlcid(const val : TLCID);
function getlcid : TLCID;
property lcid : TLCID read getlcid write setlcid;
procedure setdwReserved(const val : Longint);
function getdwReserved : Longint;
property dwReserved : Longint read getdwReserved write setdwReserved;
procedure setmemidConstructor(const val : TMemberID);
function getmemidConstructor : TMemberID;
property memidConstructor : TMemberID read getmemidConstructor write setmemidConstructor;
procedure setmemidDestructor(const val : TMemberID);
function getmemidDestructor : TMemberID;
property memidDestructor : TMemberID read getmemidDestructor write setmemidDestructor;
procedure setcbSizeInstance(const val : Longint);
function getcbSizeInstance : Longint;
property cbSizeInstance : Longint read getcbSizeInstance write setcbSizeInstance;
procedure settypekind(const val : TTypeKind);
function gettypekind : TTypeKind;
property typekind : TTypeKind read gettypekind write settypekind;
procedure setcFuncs(const val : Word);
function getcFuncs : Word;
property cFuncs : Word read getcFuncs write setcFuncs;
procedure setcVars(const val : Word);
function getcVars : Word;
property cVars : Word read getcVars write setcVars;
procedure setcImplTypes(const val : Word);
function getcImplTypes : Word;
property cImplTypes : Word read getcImplTypes write setcImplTypes;
procedure setcbSizeVft(const val : Word);
function getcbSizeVft : Word;
property cbSizeVft : Word read getcbSizeVft write setcbSizeVft;
procedure setcbAlignment(const val : Word);
function getcbAlignment : Word;
property cbAlignment : Word read getcbAlignment write setcbAlignment;
procedure setwTypeFlags(const val : Word);
function getwTypeFlags : Word;
property wTypeFlags : Word read getwTypeFlags write setwTypeFlags;
procedure setwMajorVerNum(const val : Word);
function getwMajorVerNum : Word;
property wMajorVerNum : Word read getwMajorVerNum write setwMajorVerNum;
procedure setwMinorVerNum(const val : Word);
function getwMinorVerNum : Word;
property wMinorVerNum : Word read getwMinorVerNum write setwMinorVerNum;
end;
type __tagTYPEDESC__Wrapper = class(TDCRecordWrapper)
private
fR : tagTYPEDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
procedure setHRefType(const val : HRefType);
function getHRefType : HRefType;
property HRefType : HRefType read getHRefType write setHRefType;
end;
type __tagVARDESC__Wrapper = class(TDCRecordWrapper)
private
fR : tagVARDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setmemid(const val : TMemberID);
function getmemid : TMemberID;
property memid : TMemberID read getmemid write setmemid;
procedure setoInst(const val : Longint);
function getoInst : Longint;
property oInst : Longint read getoInst write setoInst;
procedure setwVarFlags(const val : Word);
function getwVarFlags : Word;
property wVarFlags : Word read getwVarFlags write setwVarFlags;
procedure setvarkind(const val : TVarKind);
function getvarkind : TVarKind;
property varkind : TVarKind read getvarkind write setvarkind;
end;
type __tagVARIANT__Wrapper = class(TDCRecordWrapper)
private
fR : tagVARIANT;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
procedure setwReserved1(const val : Word);
function getwReserved1 : Word;
property wReserved1 : Word read getwReserved1 write setwReserved1;
procedure setwReserved2(const val : Word);
function getwReserved2 : Word;
property wReserved2 : Word read getwReserved2 write setwReserved2;
procedure setwReserved3(const val : Word);
function getwReserved3 : Word;
property wReserved3 : Word read getwReserved3 write setwReserved3;
procedure setbVal(const val : Byte);
function getbVal : Byte;
property bVal : Byte read getbVal write setbVal;
procedure setiVal(const val : SmallInt);
function getiVal : SmallInt;
property iVal : SmallInt read getiVal write setiVal;
procedure setlVal(const val : Longint);
function getlVal : Longint;
property lVal : Longint read getlVal write setlVal;
procedure setfltVal(const val : Single);
function getfltVal : Single;
property fltVal : Single read getfltVal write setfltVal;
procedure setdblVal(const val : Double);
function getdblVal : Double;
property dblVal : Double read getdblVal write setdblVal;
procedure setvbool(const val : TOleBool);
function getvbool : TOleBool;
property vbool : TOleBool read getvbool write setvbool;
procedure setcyVal(const val : Currency);
function getcyVal : Currency;
property cyVal : Currency read getcyVal write setcyVal;
procedure setdate(const val : TOleDate);
function getdate : TOleDate;
property date : TOleDate read getdate write setdate;
procedure setcVal(const val : Char);
function getcVal : Char;
property cVal : Char read getcVal write setcVal;
procedure setuiVal(const val : Word);
function getuiVal : Word;
property uiVal : Word read getuiVal write setuiVal;
procedure setulVal(const val : LongWord);
function getulVal : LongWord;
property ulVal : LongWord read getulVal write setulVal;
procedure setintVal(const val : Integer);
function getintVal : Integer;
property intVal : Integer read getintVal write setintVal;
procedure setuintVal(const val : LongWord);
function getuintVal : LongWord;
property uintVal : LongWord read getuintVal write setuintVal;
end;
type __TArrayDesc__Wrapper = class(TDCRecordWrapper)
private
fR : TArrayDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setcDims(const val : Word);
function getcDims : Word;
property cDims : Word read getcDims write setcDims;
end;
type __TBindOpts__Wrapper = class(TDCRecordWrapper)
private
fR : TBindOpts;
public
function GetRecordPtr : pointer; override;
published
procedure setcbStruct(const val : Longint);
function getcbStruct : Longint;
property cbStruct : Longint read getcbStruct write setcbStruct;
procedure setgrfFlags(const val : Longint);
function getgrfFlags : Longint;
property grfFlags : Longint read getgrfFlags write setgrfFlags;
procedure setgrfMode(const val : Longint);
function getgrfMode : Longint;
property grfMode : Longint read getgrfMode write setgrfMode;
procedure setdwTickCountDeadline(const val : Longint);
function getdwTickCountDeadline : Longint;
property dwTickCountDeadline : Longint read getdwTickCountDeadline write setdwTickCountDeadline;
end;
type __TBindPtr__Wrapper = class(TDCRecordWrapper)
private
fR : TBindPtr;
public
function GetRecordPtr : pointer; override;
published
end;
type __TBlob__Wrapper = class(TDCRecordWrapper)
private
fR : TBlob;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
end;
type __TBorderWidths__Wrapper = class(TDCRecordWrapper)
private
fR : TBorderWidths;
public
function GetRecordPtr : pointer; override;
published
procedure setLeft(const val : Longint);
function getLeft : Longint;
property Left : Longint read getLeft write setLeft;
procedure setTop(const val : Longint);
function getTop : Longint;
property Top : Longint read getTop write setTop;
procedure setRight(const val : Longint);
function getRight : Longint;
property Right : Longint read getRight write setRight;
procedure setBottom(const val : Longint);
function getBottom : Longint;
property Bottom : Longint read getBottom write setBottom;
end;
type __TCABOOL__Wrapper = class(TDCRecordWrapper)
private
fR : TCABOOL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCABSTR__Wrapper = class(TDCRecordWrapper)
private
fR : TCABSTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCACLIPDATA__Wrapper = class(TDCRecordWrapper)
private
fR : TCACLIPDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCACLSID__Wrapper = class(TDCRecordWrapper)
private
fR : TCACLSID;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCACY__Wrapper = class(TDCRecordWrapper)
private
fR : TCACY;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCADATE__Wrapper = class(TDCRecordWrapper)
private
fR : TCADATE;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCADBL__Wrapper = class(TDCRecordWrapper)
private
fR : TCADBL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCAFILETIME__Wrapper = class(TDCRecordWrapper)
private
fR : TCAFILETIME;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCAFLT__Wrapper = class(TDCRecordWrapper)
private
fR : TCAFLT;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCAGUID__Wrapper = class(TDCRecordWrapper)
private
fR : TCAGUID;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : Longint);
function getcElems : Longint;
property cElems : Longint read getcElems write setcElems;
end;
type __TCAH__Wrapper = class(TDCRecordWrapper)
private
fR : TCAH;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCAI__Wrapper = class(TDCRecordWrapper)
private
fR : TCAI;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCAL__Wrapper = class(TDCRecordWrapper)
private
fR : TCAL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCALongint__Wrapper = class(TDCRecordWrapper)
private
fR : TCALongint;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : Longint);
function getcElems : Longint;
property cElems : Longint read getcElems write setcElems;
end;
type __TCALPSTR__Wrapper = class(TDCRecordWrapper)
private
fR : TCALPSTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCALPWSTR__Wrapper = class(TDCRecordWrapper)
private
fR : TCALPWSTR;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCAPOleStr__Wrapper = class(TDCRecordWrapper)
private
fR : TCAPOleStr;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : Longint);
function getcElems : Longint;
property cElems : Longint read getcElems write setcElems;
end;
type __TCAPROPVARIANT__Wrapper = class(TDCRecordWrapper)
private
fR : TCAPROPVARIANT;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCASCODE__Wrapper = class(TDCRecordWrapper)
private
fR : TCASCODE;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCATEGORYINFO__Wrapper = class(TDCRecordWrapper)
private
fR : TCATEGORYINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setlcid(const val : UINT);
function getlcid : UINT;
property lcid : UINT read getlcid write setlcid;
end;
type __TCAUB__Wrapper = class(TDCRecordWrapper)
private
fR : TCAUB;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCAUH__Wrapper = class(TDCRecordWrapper)
private
fR : TCAUH;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCAUI__Wrapper = class(TDCRecordWrapper)
private
fR : TCAUI;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TCAUL__Wrapper = class(TDCRecordWrapper)
private
fR : TCAUL;
public
function GetRecordPtr : pointer; override;
published
procedure setcElems(const val : ULONG);
function getcElems : ULONG;
property cElems : ULONG read getcElems write setcElems;
end;
type __TClipData__Wrapper = class(TDCRecordWrapper)
private
fR : TClipData;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setulClipFmt(const val : Longint);
function getulClipFmt : Longint;
property ulClipFmt : Longint read getulClipFmt write setulClipFmt;
end;
type __TConnectData__Wrapper = class(TDCRecordWrapper)
private
fR : TConnectData;
public
function GetRecordPtr : pointer; override;
published
procedure setdwCookie(const val : Longint);
function getdwCookie : Longint;
property dwCookie : Longint read getdwCookie write setdwCookie;
end;
type __TControlInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TControlInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Longint);
function getcb : Longint;
property cb : Longint read getcb write setcb;
procedure setcAccel(const val : Word);
function getcAccel : Word;
property cAccel : Word read getcAccel write setcAccel;
procedure setdwFlags(const val : Longint);
function getdwFlags : Longint;
property dwFlags : Longint read getdwFlags write setdwFlags;
end;
type __TCoServerInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TCoServerInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setdwReserved1(const val : Longint);
function getdwReserved1 : Longint;
property dwReserved1 : Longint read getdwReserved1 write setdwReserved1;
procedure setdwReserved2(const val : Longint);
function getdwReserved2 : Longint;
property dwReserved2 : Longint read getdwReserved2 write setdwReserved2;
end;
type __TCustData__Wrapper = class(TDCRecordWrapper)
private
fR : TCustData;
public
function GetRecordPtr : pointer; override;
published
procedure setcCustData(const val : DWORD);
function getcCustData : DWORD;
property cCustData : DWORD read getcCustData write setcCustData;
end;
type __TCustDataItem__Wrapper = class(TDCRecordWrapper)
private
fR : TCustDataItem;
public
function GetRecordPtr : pointer; override;
published
end;
type __TDecimal__Wrapper = class(TDCRecordWrapper)
private
fR : TDecimal;
public
function GetRecordPtr : pointer; override;
published
procedure setwReserved(const val : Word);
function getwReserved : Word;
property wReserved : Word read getwReserved write setwReserved;
procedure setscale(const val : Byte);
function getscale : Byte;
property scale : Byte read getscale write setscale;
procedure setsign(const val : Byte);
function getsign : Byte;
property sign : Byte read getsign write setsign;
procedure setHi32(const val : Longint);
function getHi32 : Longint;
property Hi32 : Longint read getHi32 write setHi32;
procedure setLo32(const val : Longint);
function getLo32 : Longint;
property Lo32 : Longint read getLo32 write setLo32;
procedure setMid32(const val : Longint);
function getMid32 : Longint;
property Mid32 : Longint read getMid32 write setMid32;
procedure setsignscale(const val : Word);
function getsignscale : Word;
property signscale : Word read getsignscale write setsignscale;
end;
type __TDispParams__Wrapper = class(TDCRecordWrapper)
private
fR : TDispParams;
public
function GetRecordPtr : pointer; override;
published
procedure setcArgs(const val : Longint);
function getcArgs : Longint;
property cArgs : Longint read getcArgs write setcArgs;
procedure setcNamedArgs(const val : Longint);
function getcNamedArgs : Longint;
property cNamedArgs : Longint read getcNamedArgs write setcNamedArgs;
end;
type __TDVTargetDevice__Wrapper = class(TDCRecordWrapper)
private
fR : TDVTargetDevice;
public
function GetRecordPtr : pointer; override;
published
procedure settdSize(const val : Longint);
function gettdSize : Longint;
property tdSize : Longint read gettdSize write settdSize;
procedure settdDriverNameOffset(const val : Word);
function gettdDriverNameOffset : Word;
property tdDriverNameOffset : Word read gettdDriverNameOffset write settdDriverNameOffset;
procedure settdDeviceNameOffset(const val : Word);
function gettdDeviceNameOffset : Word;
property tdDeviceNameOffset : Word read gettdDeviceNameOffset write settdDeviceNameOffset;
procedure settdPortNameOffset(const val : Word);
function gettdPortNameOffset : Word;
property tdPortNameOffset : Word read gettdPortNameOffset write settdPortNameOffset;
procedure settdExtDevmodeOffset(const val : Word);
function gettdExtDevmodeOffset : Word;
property tdExtDevmodeOffset : Word read gettdExtDevmodeOffset write settdExtDevmodeOffset;
end;
type __TElemDesc__Wrapper = class(TDCRecordWrapper)
private
fR : TElemDesc;
public
function GetRecordPtr : pointer; override;
published
end;
type __TExcepInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TExcepInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setwCode(const val : Word);
function getwCode : Word;
property wCode : Word read getwCode write setwCode;
procedure setwReserved(const val : Word);
function getwReserved : Word;
property wReserved : Word read getwReserved write setwReserved;
procedure setbstrSource(const val : WideString);
function getbstrSource : WideString;
property bstrSource : WideString read getbstrSource write setbstrSource;
procedure setbstrDescription(const val : WideString);
function getbstrDescription : WideString;
property bstrDescription : WideString read getbstrDescription write setbstrDescription;
procedure setbstrHelpFile(const val : WideString);
function getbstrHelpFile : WideString;
property bstrHelpFile : WideString read getbstrHelpFile write setbstrHelpFile;
procedure setdwHelpContext(const val : Longint);
function getdwHelpContext : Longint;
property dwHelpContext : Longint read getdwHelpContext write setdwHelpContext;
end;
type __TFmtID__Wrapper = class(TDCRecordWrapper)
private
fR : TFmtID;
public
function GetRecordPtr : pointer; override;
published
procedure setD1(const val : LongWord);
function getD1 : LongWord;
property D1 : LongWord read getD1 write setD1;
procedure setD2(const val : Word);
function getD2 : Word;
property D2 : Word read getD2 write setD2;
procedure setD3(const val : Word);
function getD3 : Word;
property D3 : Word read getD3 write setD3;
end;
type __TFontDesc__Wrapper = class(TDCRecordWrapper)
private
fR : TFontDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSizeofstruct(const val : Integer);
function getcbSizeofstruct : Integer;
property cbSizeofstruct : Integer read getcbSizeofstruct write setcbSizeofstruct;
procedure setcySize(const val : Currency);
function getcySize : Currency;
property cySize : Currency read getcySize write setcySize;
procedure setsWeight(const val : SmallInt);
function getsWeight : SmallInt;
property sWeight : SmallInt read getsWeight write setsWeight;
procedure setsCharset(const val : SmallInt);
function getsCharset : SmallInt;
property sCharset : SmallInt read getsCharset write setsCharset;
procedure setfItalic(const val : BOOL);
function getfItalic : BOOL;
property fItalic : BOOL read getfItalic write setfItalic;
procedure setfUnderline(const val : BOOL);
function getfUnderline : BOOL;
property fUnderline : BOOL read getfUnderline write setfUnderline;
procedure setfStrikethrough(const val : BOOL);
function getfStrikethrough : BOOL;
property fStrikethrough : BOOL read getfStrikethrough write setfStrikethrough;
end;
type __TFuncDesc__Wrapper = class(TDCRecordWrapper)
private
fR : TFuncDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setmemid(const val : TMemberID);
function getmemid : TMemberID;
property memid : TMemberID read getmemid write setmemid;
procedure setfunckind(const val : TFuncKind);
function getfunckind : TFuncKind;
property funckind : TFuncKind read getfunckind write setfunckind;
procedure setinvkind(const val : TInvokeKind);
function getinvkind : TInvokeKind;
property invkind : TInvokeKind read getinvkind write setinvkind;
procedure setcallconv(const val : TCallConv);
function getcallconv : TCallConv;
property callconv : TCallConv read getcallconv write setcallconv;
procedure setcParams(const val : SmallInt);
function getcParams : SmallInt;
property cParams : SmallInt read getcParams write setcParams;
procedure setcParamsOpt(const val : SmallInt);
function getcParamsOpt : SmallInt;
property cParamsOpt : SmallInt read getcParamsOpt write setcParamsOpt;
procedure setoVft(const val : SmallInt);
function getoVft : SmallInt;
property oVft : SmallInt read getoVft write setoVft;
procedure setcScodes(const val : SmallInt);
function getcScodes : SmallInt;
property cScodes : SmallInt read getcScodes write setcScodes;
procedure setwFuncFlags(const val : Word);
function getwFuncFlags : Word;
property wFuncFlags : Word read getwFuncFlags write setwFuncFlags;
end;
type __TIDLDesc__Wrapper = class(TDCRecordWrapper)
private
fR : TIDLDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setdwReserved(const val : Longint);
function getdwReserved : Longint;
property dwReserved : Longint read getdwReserved write setdwReserved;
procedure setwIDLFlags(const val : Word);
function getwIDLFlags : Word;
property wIDLFlags : Word read getwIDLFlags write setwIDLFlags;
end;
type __TInterfaceData__Wrapper = class(TDCRecordWrapper)
private
fR : TInterfaceData;
public
function GetRecordPtr : pointer; override;
published
procedure setcMembers(const val : Integer);
function getcMembers : Integer;
property cMembers : Integer read getcMembers write setcMembers;
end;
type __TInterfaceInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TInterfaceInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setwMethod(const val : Word);
function getwMethod : Word;
property wMethod : Word read getwMethod write setwMethod;
end;
type __TLIBATTR__Wrapper = class(TDCRecordWrapper)
private
fR : TLIBATTR;
public
function GetRecordPtr : pointer; override;
published
procedure setlcid(const val : TLCID);
function getlcid : TLCID;
property lcid : TLCID read getlcid write setlcid;
procedure setsyskind(const val : TSysKind);
function getsyskind : TSysKind;
property syskind : TSysKind read getsyskind write setsyskind;
procedure setwMajorVerNum(const val : Word);
function getwMajorVerNum : Word;
property wMajorVerNum : Word read getwMajorVerNum write setwMajorVerNum;
procedure setwMinorVerNum(const val : Word);
function getwMinorVerNum : Word;
property wMinorVerNum : Word read getwMinorVerNum write setwMinorVerNum;
procedure setwLibFlags(const val : Word);
function getwLibFlags : Word;
property wLibFlags : Word read getwLibFlags write setwLibFlags;
end;
type __TLicInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TLicInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setcbLicInfo(const val : Longint);
function getcbLicInfo : Longint;
property cbLicInfo : Longint read getcbLicInfo write setcbLicInfo;
procedure setfRuntimeKeyAvail(const val : BOOL);
function getfRuntimeKeyAvail : BOOL;
property fRuntimeKeyAvail : BOOL read getfRuntimeKeyAvail write setfRuntimeKeyAvail;
procedure setfLicVerified(const val : BOOL);
function getfLicVerified : BOOL;
property fLicVerified : BOOL read getfLicVerified write setfLicVerified;
end;
type __TLinkSrcDescriptor__Wrapper = class(TDCRecordWrapper)
private
fR : TLinkSrcDescriptor;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setdwDrawAspect(const val : Longint);
function getdwDrawAspect : Longint;
property dwDrawAspect : Longint read getdwDrawAspect write setdwDrawAspect;
procedure setdwStatus(const val : Longint);
function getdwStatus : Longint;
property dwStatus : Longint read getdwStatus write setdwStatus;
procedure setdwFullUserTypeName(const val : Longint);
function getdwFullUserTypeName : Longint;
property dwFullUserTypeName : Longint read getdwFullUserTypeName write setdwFullUserTypeName;
procedure setdwSrcOfCopy(const val : Longint);
function getdwSrcOfCopy : Longint;
property dwSrcOfCopy : Longint read getdwSrcOfCopy write setdwSrcOfCopy;
end;
type __TMethodData__Wrapper = class(TDCRecordWrapper)
private
fR : TMethodData;
public
function GetRecordPtr : pointer; override;
published
procedure setdispid(const val : TDispID);
function getdispid : TDispID;
property dispid : TDispID read getdispid write setdispid;
procedure setiMeth(const val : Integer);
function getiMeth : Integer;
property iMeth : Integer read getiMeth write setiMeth;
procedure setcc(const val : TCallConv);
function getcc : TCallConv;
property cc : TCallConv read getcc write setcc;
procedure setcArgs(const val : Integer);
function getcArgs : Integer;
property cArgs : Integer read getcArgs write setcArgs;
procedure setwflags(const val : Word);
function getwflags : Word;
property wflags : Word read getwflags write setwflags;
procedure setvtReturn(const val : TVarType);
function getvtReturn : TVarType;
property vtReturn : TVarType read getvtReturn write setvtReturn;
end;
type __TMultiQI__Wrapper = class(TDCRecordWrapper)
private
fR : TMultiQI;
public
function GetRecordPtr : pointer; override;
published
end;
type __TObjectDescriptor__Wrapper = class(TDCRecordWrapper)
private
fR : TObjectDescriptor;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setdwDrawAspect(const val : Longint);
function getdwDrawAspect : Longint;
property dwDrawAspect : Longint read getdwDrawAspect write setdwDrawAspect;
procedure setdwStatus(const val : Longint);
function getdwStatus : Longint;
property dwStatus : Longint read getdwStatus write setdwStatus;
procedure setdwFullUserTypeName(const val : Longint);
function getdwFullUserTypeName : Longint;
property dwFullUserTypeName : Longint read getdwFullUserTypeName write setdwFullUserTypeName;
procedure setdwSrcOfCopy(const val : Longint);
function getdwSrcOfCopy : Longint;
property dwSrcOfCopy : Longint read getdwSrcOfCopy write setdwSrcOfCopy;
end;
type __TObjectID__Wrapper = class(TDCRecordWrapper)
private
fR : TObjectID;
public
function GetRecordPtr : pointer; override;
published
procedure setUniquifier(const val : Longint);
function getUniquifier : Longint;
property Uniquifier : Longint read getUniquifier write setUniquifier;
end;
type __TOCPFIParams__Wrapper = class(TDCRecordWrapper)
private
fR : TOCPFIParams;
public
function GetRecordPtr : pointer; override;
published
procedure setcbStructSize(const val : Longint);
function getcbStructSize : Longint;
property cbStructSize : Longint read getcbStructSize write setcbStructSize;
procedure setx(const val : Integer);
function getx : Integer;
property x : Integer read getx write setx;
procedure sety(const val : Integer);
function gety : Integer;
property y : Integer read gety write sety;
procedure setcObjects(const val : Longint);
function getcObjects : Longint;
property cObjects : Longint read getcObjects write setcObjects;
procedure setcPages(const val : Longint);
function getcPages : Longint;
property cPages : Longint read getcPages write setcPages;
procedure setlcid(const val : TLCID);
function getlcid : TLCID;
property lcid : TLCID read getlcid write setlcid;
procedure setdispidInitialProperty(const val : TDispID);
function getdispidInitialProperty : TDispID;
property dispidInitialProperty : TDispID read getdispidInitialProperty write setdispidInitialProperty;
end;
type __TOleCmd__Wrapper = class(TDCRecordWrapper)
private
fR : TOleCmd;
public
function GetRecordPtr : pointer; override;
published
procedure setcmdID(const val : Cardinal);
function getcmdID : Cardinal;
property cmdID : Cardinal read getcmdID write setcmdID;
procedure setcmdf(const val : Longint);
function getcmdf : Longint;
property cmdf : Longint read getcmdf write setcmdf;
end;
type __TOleCmdText__Wrapper = class(TDCRecordWrapper)
private
fR : TOleCmdText;
public
function GetRecordPtr : pointer; override;
published
procedure setcmdtextf(const val : Longint);
function getcmdtextf : Longint;
property cmdtextf : Longint read getcmdtextf write setcmdtextf;
procedure setcwActual(const val : Cardinal);
function getcwActual : Cardinal;
property cwActual : Cardinal read getcwActual write setcwActual;
procedure setcwBuf(const val : Cardinal);
function getcwBuf : Cardinal;
property cwBuf : Cardinal read getcwBuf write setcwBuf;
end;
type __TOleInPlaceFrameInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TOleInPlaceFrameInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Integer);
function getcb : Integer;
property cb : Integer read getcb write setcb;
procedure setfMDIApp(const val : BOOL);
function getfMDIApp : BOOL;
property fMDIApp : BOOL read getfMDIApp write setfMDIApp;
procedure setcAccelEntries(const val : Integer);
function getcAccelEntries : Integer;
property cAccelEntries : Integer read getcAccelEntries write setcAccelEntries;
end;
type __TOleMenuGroupWidths__Wrapper = class(TDCRecordWrapper)
private
fR : TOleMenuGroupWidths;
public
function GetRecordPtr : pointer; override;
published
end;
type __TOleVerb__Wrapper = class(TDCRecordWrapper)
private
fR : TOleVerb;
public
function GetRecordPtr : pointer; override;
published
procedure setlVerb(const val : Longint);
function getlVerb : Longint;
property lVerb : Longint read getlVerb write setlVerb;
procedure setfuFlags(const val : Longint);
function getfuFlags : Longint;
property fuFlags : Longint read getfuFlags write setfuFlags;
procedure setgrfAttribs(const val : Longint);
function getgrfAttribs : Longint;
property grfAttribs : Longint read getgrfAttribs write setgrfAttribs;
end;
type __TPageRange__Wrapper = class(TDCRecordWrapper)
private
fR : TPageRange;
public
function GetRecordPtr : pointer; override;
published
procedure setnFromPage(const val : Longint);
function getnFromPage : Longint;
property nFromPage : Longint read getnFromPage write setnFromPage;
procedure setnToPage(const val : Longint);
function getnToPage : Longint;
property nToPage : Longint read getnToPage write setnToPage;
end;
type __TPageSet__Wrapper = class(TDCRecordWrapper)
private
fR : TPageSet;
public
function GetRecordPtr : pointer; override;
published
procedure setcbStruct(const val : Cardinal);
function getcbStruct : Cardinal;
property cbStruct : Cardinal read getcbStruct write setcbStruct;
procedure setfOddPages(const val : BOOL);
function getfOddPages : BOOL;
property fOddPages : BOOL read getfOddPages write setfOddPages;
procedure setfEvenPages(const val : BOOL);
function getfEvenPages : BOOL;
property fEvenPages : BOOL read getfEvenPages write setfEvenPages;
procedure setcPageRange(const val : Cardinal);
function getcPageRange : Cardinal;
property cPageRange : Cardinal read getcPageRange write setcPageRange;
end;
type __TParamData__Wrapper = class(TDCRecordWrapper)
private
fR : TParamData;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
end;
type __TParamDesc__Wrapper = class(TDCRecordWrapper)
private
fR : TParamDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setwParamFlags(const val : Word);
function getwParamFlags : Word;
property wParamFlags : Word read getwParamFlags write setwParamFlags;
end;
type __TParamDescEx__Wrapper = class(TDCRecordWrapper)
private
fR : TParamDescEx;
public
function GetRecordPtr : pointer; override;
published
procedure setcBytes(const val : Longint);
function getcBytes : Longint;
property cBytes : Longint read getcBytes write setcBytes;
procedure setFourBytePad(const val : Longint);
function getFourBytePad : Longint;
property FourBytePad : Longint read getFourBytePad write setFourBytePad;
end;
type __TPictDesc__Wrapper = class(TDCRecordWrapper)
private
fR : TPictDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSizeofstruct(const val : Integer);
function getcbSizeofstruct : Integer;
property cbSizeofstruct : Integer read getcbSizeofstruct write setcbSizeofstruct;
procedure setpicType(const val : Integer);
function getpicType : Integer;
property picType : Integer read getpicType write setpicType;
procedure sethBitmap(const val : THandle);
function gethBitmap : THandle;
property hBitmap : THandle read gethBitmap write sethBitmap;
procedure sethpal(const val : THandle);
function gethpal : THandle;
property hpal : THandle read gethpal write sethpal;
procedure sethMeta(const val : THandle);
function gethMeta : THandle;
property hMeta : THandle read gethMeta write sethMeta;
procedure setxExt(const val : Integer);
function getxExt : Integer;
property xExt : Integer read getxExt write setxExt;
procedure setyExt(const val : Integer);
function getyExt : Integer;
property yExt : Integer read getyExt write setyExt;
procedure sethIcon(const val : THandle);
function gethIcon : THandle;
property hIcon : THandle read gethIcon write sethIcon;
procedure sethemf(const val : THandle);
function gethemf : THandle;
property hemf : THandle read gethemf write sethemf;
end;
type __TPointF__Wrapper = class(TDCRecordWrapper)
private
fR : TPointF;
public
function GetRecordPtr : pointer; override;
published
procedure setx(const val : Single);
function getx : Single;
property x : Single read getx write setx;
procedure sety(const val : Single);
function gety : Single;
property y : Single read gety write sety;
end;
type __TPropPageInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TPropPageInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Longint);
function getcb : Longint;
property cb : Longint read getcb write setcb;
procedure setdwHelpContext(const val : Longint);
function getdwHelpContext : Longint;
property dwHelpContext : Longint read getdwHelpContext write setdwHelpContext;
end;
type __TPropSpec__Wrapper = class(TDCRecordWrapper)
private
fR : TPropSpec;
public
function GetRecordPtr : pointer; override;
published
procedure setulKind(const val : ULONG);
function getulKind : ULONG;
property ulKind : ULONG read getulKind write setulKind;
procedure setPROPID(const val : TPropID);
function getPROPID : TPropID;
property PROPID : TPropID read getPROPID write setPROPID;
end;
type __TPropVariant__Wrapper = class(TDCRecordWrapper)
private
fR : TPropVariant;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
procedure setwReserved1(const val : Word);
function getwReserved1 : Word;
property wReserved1 : Word read getwReserved1 write setwReserved1;
procedure setwReserved2(const val : Word);
function getwReserved2 : Word;
property wReserved2 : Word read getwReserved2 write setwReserved2;
procedure setwReserved3(const val : Word);
function getwReserved3 : Word;
property wReserved3 : Word read getwReserved3 write setwReserved3;
procedure setbVal(const val : Byte);
function getbVal : Byte;
property bVal : Byte read getbVal write setbVal;
procedure setiVal(const val : SmallInt);
function getiVal : SmallInt;
property iVal : SmallInt read getiVal write setiVal;
procedure setuiVal(const val : Word);
function getuiVal : Word;
property uiVal : Word read getuiVal write setuiVal;
procedure setboolVal(const val : TOleBool);
function getboolVal : TOleBool;
property boolVal : TOleBool read getboolVal write setboolVal;
procedure setBOOL(const val : TOleBool);
function getBOOL : TOleBool;
property BOOL : TOleBool read getBOOL write setBOOL;
procedure setlVal(const val : Longint);
function getlVal : Longint;
property lVal : Longint read getlVal write setlVal;
procedure setulVal(const val : Cardinal);
function getulVal : Cardinal;
property ulVal : Cardinal read getulVal write setulVal;
procedure setfltVal(const val : Single);
function getfltVal : Single;
property fltVal : Single read getfltVal write setfltVal;
procedure setSCODE(const val : SCODE);
function getSCODE : SCODE;
property SCODE : SCODE read getSCODE write setSCODE;
procedure setdblVal(const val : Double);
function getdblVal : Double;
property dblVal : Double read getdblVal write setdblVal;
procedure setcyVal(const val : Currency);
function getcyVal : Currency;
property cyVal : Currency read getcyVal write setcyVal;
procedure setdate(const val : TOleDate);
function getdate : TOleDate;
property date : TOleDate read getdate write setdate;
end;
type __TQaContainer__Wrapper = class(TDCRecordWrapper)
private
fR : TQaContainer;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setdwAmbientFlags(const val : Longint);
function getdwAmbientFlags : Longint;
property dwAmbientFlags : Longint read getdwAmbientFlags write setdwAmbientFlags;
procedure setcolorFore(const val : OLE_COLOR);
function getcolorFore : OLE_COLOR;
property colorFore : OLE_COLOR read getcolorFore write setcolorFore;
procedure setcolorBack(const val : OLE_COLOR);
function getcolorBack : OLE_COLOR;
property colorBack : OLE_COLOR read getcolorBack write setcolorBack;
procedure setdwAppearance(const val : Longint);
function getdwAppearance : Longint;
property dwAppearance : Longint read getdwAppearance write setdwAppearance;
procedure setlcid(const val : Longint);
function getlcid : Longint;
property lcid : Longint read getlcid write setlcid;
end;
type __TQaControl__Wrapper = class(TDCRecordWrapper)
private
fR : TQaControl;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : Longint);
function getcbSize : Longint;
property cbSize : Longint read getcbSize write setcbSize;
procedure setdwMiscStatus(const val : Longint);
function getdwMiscStatus : Longint;
property dwMiscStatus : Longint read getdwMiscStatus write setdwMiscStatus;
procedure setdwViewStatus(const val : Longint);
function getdwViewStatus : Longint;
property dwViewStatus : Longint read getdwViewStatus write setdwViewStatus;
procedure setdwEventCookie(const val : Longint);
function getdwEventCookie : Longint;
property dwEventCookie : Longint read getdwEventCookie write setdwEventCookie;
procedure setdwPropNotifyCookie(const val : Longint);
function getdwPropNotifyCookie : Longint;
property dwPropNotifyCookie : Longint read getdwPropNotifyCookie write setdwPropNotifyCookie;
procedure setdwPointerActivationPolicy(const val : Longint);
function getdwPointerActivationPolicy : Longint;
property dwPointerActivationPolicy : Longint read getdwPointerActivationPolicy write setdwPointerActivationPolicy;
end;
type __TRemStgMedium__Wrapper = class(TDCRecordWrapper)
private
fR : TRemStgMedium;
public
function GetRecordPtr : pointer; override;
published
procedure settymed(const val : Longint);
function gettymed : Longint;
property tymed : Longint read gettymed write settymed;
procedure setdwHandleType(const val : Longint);
function getdwHandleType : Longint;
property dwHandleType : Longint read getdwHandleType write setdwHandleType;
procedure setpData(const val : Longint);
function getpData : Longint;
property pData : Longint read getpData write setpData;
procedure setpUnkForRelease(const val : Longint);
function getpUnkForRelease : Longint;
property pUnkForRelease : Longint read getpUnkForRelease write setpUnkForRelease;
procedure setcbData(const val : Longint);
function getcbData : Longint;
property cbData : Longint read getcbData write setcbData;
end;
type __TRpcOleMessage__Wrapper = class(TDCRecordWrapper)
private
fR : TRpcOleMessage;
public
function GetRecordPtr : pointer; override;
published
procedure setdataRepresentation(const val : TRpcOleDataRep);
function getdataRepresentation : TRpcOleDataRep;
property dataRepresentation : TRpcOleDataRep read getdataRepresentation write setdataRepresentation;
procedure setcbBuffer(const val : Longint);
function getcbBuffer : Longint;
property cbBuffer : Longint read getcbBuffer write setcbBuffer;
procedure setiMethod(const val : Longint);
function getiMethod : Longint;
property iMethod : Longint read getiMethod write setiMethod;
procedure setrpcFlags(const val : Longint);
function getrpcFlags : Longint;
property rpcFlags : Longint read getrpcFlags write setrpcFlags;
end;
type __TSafeArray__Wrapper = class(TDCRecordWrapper)
private
fR : TSafeArray;
public
function GetRecordPtr : pointer; override;
published
procedure setcDims(const val : Word);
function getcDims : Word;
property cDims : Word read getcDims write setcDims;
procedure setfFeatures(const val : Word);
function getfFeatures : Word;
property fFeatures : Word read getfFeatures write setfFeatures;
procedure setcbElements(const val : Longint);
function getcbElements : Longint;
property cbElements : Longint read getcbElements write setcbElements;
procedure setcLocks(const val : Longint);
function getcLocks : Longint;
property cLocks : Longint read getcLocks write setcLocks;
end;
type __TSafeArrayBound__Wrapper = class(TDCRecordWrapper)
private
fR : TSafeArrayBound;
public
function GetRecordPtr : pointer; override;
published
procedure setcElements(const val : Longint);
function getcElements : Longint;
property cElements : Longint read getcElements write setcElements;
procedure setlLbound(const val : Longint);
function getlLbound : Longint;
property lLbound : Longint read getlLbound write setlLbound;
end;
type __TSOleAuthenticationService__Wrapper = class(TDCRecordWrapper)
private
fR : TSOleAuthenticationService;
public
function GetRecordPtr : pointer; override;
published
procedure setdwAuthnSvc(const val : Longint);
function getdwAuthnSvc : Longint;
property dwAuthnSvc : Longint read getdwAuthnSvc write setdwAuthnSvc;
procedure setdwAuthzSvc(const val : Longint);
function getdwAuthzSvc : Longint;
property dwAuthzSvc : Longint read getdwAuthzSvc write setdwAuthzSvc;
end;
type __TStatData__Wrapper = class(TDCRecordWrapper)
private
fR : TStatData;
public
function GetRecordPtr : pointer; override;
published
procedure setadvf(const val : Longint);
function getadvf : Longint;
property advf : Longint read getadvf write setadvf;
procedure setdwConnection(const val : Longint);
function getdwConnection : Longint;
property dwConnection : Longint read getdwConnection write setdwConnection;
end;
type __TStatPropSetStg__Wrapper = class(TDCRecordWrapper)
private
fR : TStatPropSetStg;
public
function GetRecordPtr : pointer; override;
published
procedure setgrfFlags(const val : DWORD);
function getgrfFlags : DWORD;
property grfFlags : DWORD read getgrfFlags write setgrfFlags;
procedure setdwOSVersion(const val : DWORD);
function getdwOSVersion : DWORD;
property dwOSVersion : DWORD read getdwOSVersion write setdwOSVersion;
end;
type __TStatPropStg__Wrapper = class(TDCRecordWrapper)
private
fR : TStatPropStg;
public
function GetRecordPtr : pointer; override;
published
procedure setPROPID(const val : TPropID);
function getPROPID : TPropID;
property PROPID : TPropID read getPROPID write setPROPID;
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
end;
type __TStgMedium__Wrapper = class(TDCRecordWrapper)
private
fR : TStgMedium;
public
function GetRecordPtr : pointer; override;
published
procedure settymed(const val : Longint);
function gettymed : Longint;
property tymed : Longint read gettymed write settymed;
procedure sethMetaFilePict(const val : THandle);
function gethMetaFilePict : THandle;
property hMetaFilePict : THandle read gethMetaFilePict write sethMetaFilePict;
procedure sethEnhMetaFile(const val : THandle);
function gethEnhMetaFile : THandle;
property hEnhMetaFile : THandle read gethEnhMetaFile write sethEnhMetaFile;
procedure sethGlobal(const val : hGlobal);
function gethGlobal : hGlobal;
property hGlobal : hGlobal read gethGlobal write sethGlobal;
end;
type __TTextMetricOle__Wrapper = class(TDCRecordWrapper)
private
fR : TTextMetricOle;
public
function GetRecordPtr : pointer; override;
published
procedure settmHeight(const val : Longint);
function gettmHeight : Longint;
property tmHeight : Longint read gettmHeight write settmHeight;
procedure settmAscent(const val : Longint);
function gettmAscent : Longint;
property tmAscent : Longint read gettmAscent write settmAscent;
procedure settmDescent(const val : Longint);
function gettmDescent : Longint;
property tmDescent : Longint read gettmDescent write settmDescent;
procedure settmInternalLeading(const val : Longint);
function gettmInternalLeading : Longint;
property tmInternalLeading : Longint read gettmInternalLeading write settmInternalLeading;
procedure settmExternalLeading(const val : Longint);
function gettmExternalLeading : Longint;
property tmExternalLeading : Longint read gettmExternalLeading write settmExternalLeading;
procedure settmAveCharWidth(const val : Longint);
function gettmAveCharWidth : Longint;
property tmAveCharWidth : Longint read gettmAveCharWidth write settmAveCharWidth;
procedure settmMaxCharWidth(const val : Longint);
function gettmMaxCharWidth : Longint;
property tmMaxCharWidth : Longint read gettmMaxCharWidth write settmMaxCharWidth;
procedure settmWeight(const val : Longint);
function gettmWeight : Longint;
property tmWeight : Longint read gettmWeight write settmWeight;
procedure settmOverhang(const val : Longint);
function gettmOverhang : Longint;
property tmOverhang : Longint read gettmOverhang write settmOverhang;
procedure settmDigitizedAspectX(const val : Longint);
function gettmDigitizedAspectX : Longint;
property tmDigitizedAspectX : Longint read gettmDigitizedAspectX write settmDigitizedAspectX;
procedure settmDigitizedAspectY(const val : Longint);
function gettmDigitizedAspectY : Longint;
property tmDigitizedAspectY : Longint read gettmDigitizedAspectY write settmDigitizedAspectY;
procedure settmFirstChar(const val : WideChar);
function gettmFirstChar : WideChar;
property tmFirstChar : WideChar read gettmFirstChar write settmFirstChar;
procedure settmLastChar(const val : WideChar);
function gettmLastChar : WideChar;
property tmLastChar : WideChar read gettmLastChar write settmLastChar;
procedure settmDefaultChar(const val : WideChar);
function gettmDefaultChar : WideChar;
property tmDefaultChar : WideChar read gettmDefaultChar write settmDefaultChar;
procedure settmBreakChar(const val : WideChar);
function gettmBreakChar : WideChar;
property tmBreakChar : WideChar read gettmBreakChar write settmBreakChar;
procedure settmItalic(const val : Byte);
function gettmItalic : Byte;
property tmItalic : Byte read gettmItalic write settmItalic;
procedure settmUnderlined(const val : Byte);
function gettmUnderlined : Byte;
property tmUnderlined : Byte read gettmUnderlined write settmUnderlined;
procedure settmStruckOut(const val : Byte);
function gettmStruckOut : Byte;
property tmStruckOut : Byte read gettmStruckOut write settmStruckOut;
procedure settmPitchAndFamily(const val : Byte);
function gettmPitchAndFamily : Byte;
property tmPitchAndFamily : Byte read gettmPitchAndFamily write settmPitchAndFamily;
procedure settmCharSet(const val : Byte);
function gettmCharSet : Byte;
property tmCharSet : Byte read gettmCharSet write settmCharSet;
end;
type __TTLibAttr__Wrapper = class(TDCRecordWrapper)
private
fR : TTLibAttr;
public
function GetRecordPtr : pointer; override;
published
procedure setlcid(const val : TLCID);
function getlcid : TLCID;
property lcid : TLCID read getlcid write setlcid;
procedure setsyskind(const val : TSysKind);
function getsyskind : TSysKind;
property syskind : TSysKind read getsyskind write setsyskind;
procedure setwMajorVerNum(const val : Word);
function getwMajorVerNum : Word;
property wMajorVerNum : Word read getwMajorVerNum write setwMajorVerNum;
procedure setwMinorVerNum(const val : Word);
function getwMinorVerNum : Word;
property wMinorVerNum : Word read getwMinorVerNum write setwMinorVerNum;
procedure setwLibFlags(const val : Word);
function getwLibFlags : Word;
property wLibFlags : Word read getwLibFlags write setwLibFlags;
end;
type __TTypeAttr__Wrapper = class(TDCRecordWrapper)
private
fR : TTypeAttr;
public
function GetRecordPtr : pointer; override;
published
procedure setlcid(const val : TLCID);
function getlcid : TLCID;
property lcid : TLCID read getlcid write setlcid;
procedure setdwReserved(const val : Longint);
function getdwReserved : Longint;
property dwReserved : Longint read getdwReserved write setdwReserved;
procedure setmemidConstructor(const val : TMemberID);
function getmemidConstructor : TMemberID;
property memidConstructor : TMemberID read getmemidConstructor write setmemidConstructor;
procedure setmemidDestructor(const val : TMemberID);
function getmemidDestructor : TMemberID;
property memidDestructor : TMemberID read getmemidDestructor write setmemidDestructor;
procedure setcbSizeInstance(const val : Longint);
function getcbSizeInstance : Longint;
property cbSizeInstance : Longint read getcbSizeInstance write setcbSizeInstance;
procedure settypekind(const val : TTypeKind);
function gettypekind : TTypeKind;
property typekind : TTypeKind read gettypekind write settypekind;
procedure setcFuncs(const val : Word);
function getcFuncs : Word;
property cFuncs : Word read getcFuncs write setcFuncs;
procedure setcVars(const val : Word);
function getcVars : Word;
property cVars : Word read getcVars write setcVars;
procedure setcImplTypes(const val : Word);
function getcImplTypes : Word;
property cImplTypes : Word read getcImplTypes write setcImplTypes;
procedure setcbSizeVft(const val : Word);
function getcbSizeVft : Word;
property cbSizeVft : Word read getcbSizeVft write setcbSizeVft;
procedure setcbAlignment(const val : Word);
function getcbAlignment : Word;
property cbAlignment : Word read getcbAlignment write setcbAlignment;
procedure setwTypeFlags(const val : Word);
function getwTypeFlags : Word;
property wTypeFlags : Word read getwTypeFlags write setwTypeFlags;
procedure setwMajorVerNum(const val : Word);
function getwMajorVerNum : Word;
property wMajorVerNum : Word read getwMajorVerNum write setwMajorVerNum;
procedure setwMinorVerNum(const val : Word);
function getwMinorVerNum : Word;
property wMinorVerNum : Word read getwMinorVerNum write setwMinorVerNum;
end;
type __TTypeDesc__Wrapper = class(TDCRecordWrapper)
private
fR : TTypeDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
procedure setHRefType(const val : HRefType);
function getHRefType : HRefType;
property HRefType : HRefType read getHRefType write setHRefType;
end;
type __TVarDesc__Wrapper = class(TDCRecordWrapper)
private
fR : TVarDesc;
public
function GetRecordPtr : pointer; override;
published
procedure setmemid(const val : TMemberID);
function getmemid : TMemberID;
property memid : TMemberID read getmemid write setmemid;
procedure setoInst(const val : Longint);
function getoInst : Longint;
property oInst : Longint read getoInst write setoInst;
procedure setwVarFlags(const val : Word);
function getwVarFlags : Word;
property wVarFlags : Word read getwVarFlags write setwVarFlags;
procedure setvarkind(const val : TVarKind);
function getvarkind : TVarKind;
property varkind : TVarKind read getvarkind write setvarkind;
end;
type __TVariantArg__Wrapper = class(TDCRecordWrapper)
private
fR : TVariantArg;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
procedure setwReserved1(const val : Word);
function getwReserved1 : Word;
property wReserved1 : Word read getwReserved1 write setwReserved1;
procedure setwReserved2(const val : Word);
function getwReserved2 : Word;
property wReserved2 : Word read getwReserved2 write setwReserved2;
procedure setwReserved3(const val : Word);
function getwReserved3 : Word;
property wReserved3 : Word read getwReserved3 write setwReserved3;
procedure setbVal(const val : Byte);
function getbVal : Byte;
property bVal : Byte read getbVal write setbVal;
procedure setiVal(const val : SmallInt);
function getiVal : SmallInt;
property iVal : SmallInt read getiVal write setiVal;
procedure setlVal(const val : Longint);
function getlVal : Longint;
property lVal : Longint read getlVal write setlVal;
procedure setfltVal(const val : Single);
function getfltVal : Single;
property fltVal : Single read getfltVal write setfltVal;
procedure setdblVal(const val : Double);
function getdblVal : Double;
property dblVal : Double read getdblVal write setdblVal;
procedure setvbool(const val : TOleBool);
function getvbool : TOleBool;
property vbool : TOleBool read getvbool write setvbool;
procedure setcyVal(const val : Currency);
function getcyVal : Currency;
property cyVal : Currency read getcyVal write setcyVal;
procedure setdate(const val : TOleDate);
function getdate : TOleDate;
property date : TOleDate read getdate write setdate;
procedure setcVal(const val : Char);
function getcVal : Char;
property cVal : Char read getcVal write setcVal;
procedure setuiVal(const val : Word);
function getuiVal : Word;
property uiVal : Word read getuiVal write setuiVal;
procedure setulVal(const val : LongWord);
function getulVal : LongWord;
property ulVal : LongWord read getulVal write setulVal;
procedure setintVal(const val : Integer);
function getintVal : Integer;
property intVal : Integer read getintVal write setintVal;
procedure setuintVal(const val : LongWord);
function getuintVal : LongWord;
property uintVal : LongWord read getuintVal write setuintVal;
end;
type __TYPEATTR__Wrapper = class(TDCRecordWrapper)
private
fR : TYPEATTR;
public
function GetRecordPtr : pointer; override;
published
procedure setlcid(const val : TLCID);
function getlcid : TLCID;
property lcid : TLCID read getlcid write setlcid;
procedure setdwReserved(const val : Longint);
function getdwReserved : Longint;
property dwReserved : Longint read getdwReserved write setdwReserved;
procedure setmemidConstructor(const val : TMemberID);
function getmemidConstructor : TMemberID;
property memidConstructor : TMemberID read getmemidConstructor write setmemidConstructor;
procedure setmemidDestructor(const val : TMemberID);
function getmemidDestructor : TMemberID;
property memidDestructor : TMemberID read getmemidDestructor write setmemidDestructor;
procedure setcbSizeInstance(const val : Longint);
function getcbSizeInstance : Longint;
property cbSizeInstance : Longint read getcbSizeInstance write setcbSizeInstance;
procedure settypekind(const val : TTypeKind);
function gettypekind : TTypeKind;
property typekind : TTypeKind read gettypekind write settypekind;
procedure setcFuncs(const val : Word);
function getcFuncs : Word;
property cFuncs : Word read getcFuncs write setcFuncs;
procedure setcVars(const val : Word);
function getcVars : Word;
property cVars : Word read getcVars write setcVars;
procedure setcImplTypes(const val : Word);
function getcImplTypes : Word;
property cImplTypes : Word read getcImplTypes write setcImplTypes;
procedure setcbSizeVft(const val : Word);
function getcbSizeVft : Word;
property cbSizeVft : Word read getcbSizeVft write setcbSizeVft;
procedure setcbAlignment(const val : Word);
function getcbAlignment : Word;
property cbAlignment : Word read getcbAlignment write setcbAlignment;
procedure setwTypeFlags(const val : Word);
function getwTypeFlags : Word;
property wTypeFlags : Word read getwTypeFlags write setwTypeFlags;
procedure setwMajorVerNum(const val : Word);
function getwMajorVerNum : Word;
property wMajorVerNum : Word read getwMajorVerNum write setwMajorVerNum;
procedure setwMinorVerNum(const val : Word);
function getwMinorVerNum : Word;
property wMinorVerNum : Word read getwMinorVerNum write setwMinorVerNum;
end;
type __TYPEDESC__Wrapper = class(TDCRecordWrapper)
private
fR : TYPEDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setvt(const val : TVarType);
function getvt : TVarType;
property vt : TVarType read getvt write setvt;
procedure setHRefType(const val : HRefType);
function getHRefType : HRefType;
property HRefType : HRefType read getHRefType write setHRefType;
end;
type __VARDESC__Wrapper = class(TDCRecordWrapper)
private
fR : VARDESC;
public
function GetRecordPtr : pointer; override;
published
procedure setmemid(const val : TMemberID);
function getmemid : TMemberID;
property memid : TMemberID read getmemid write setmemid;
procedure setoInst(const val : Longint);
function getoInst : Longint;
property oInst : Longint read getoInst write setoInst;
procedure setwVarFlags(const val : Word);
function getwVarFlags : Word;
property wVarFlags : Word read getwVarFlags write setwVarFlags;
procedure setvarkind(const val : TVarKind);
function getvarkind : TVarKind;
property varkind : TVarKind read getvarkind write setvarkind;
end;
type __TGUID__Wrapper = class(TDCRecordWrapper)
private
fR : TGUID;
public
function GetRecordPtr : pointer; override;
published
procedure setD1(const val : LongWord);
function getD1 : LongWord;
property D1 : LongWord read getD1 write setD1;
procedure setD2(const val : Word);
function getD2 : Word;
property D2 : Word read getD2 write setD2;
procedure setD3(const val : Word);
function getD3 : Word;
property D3 : Word read getD3 write setD3;
end;
type __TFileTime__Wrapper = class(TDCRecordWrapper)
private
fR : TFileTime;
public
function GetRecordPtr : pointer; override;
published
procedure setdwLowDateTime(const val : DWORD);
function getdwLowDateTime : DWORD;
property dwLowDateTime : DWORD read getdwLowDateTime write setdwLowDateTime;
procedure setdwHighDateTime(const val : DWORD);
function getdwHighDateTime : DWORD;
property dwHighDateTime : DWORD read getdwHighDateTime write setdwHighDateTime;
end;
type __TSystemTime__Wrapper = class(TDCRecordWrapper)
private
fR : TSystemTime;
public
function GetRecordPtr : pointer; override;
published
procedure setwYear(const val : Word);
function getwYear : Word;
property wYear : Word read getwYear write setwYear;
procedure setwMonth(const val : Word);
function getwMonth : Word;
property wMonth : Word read getwMonth write setwMonth;
procedure setwDayOfWeek(const val : Word);
function getwDayOfWeek : Word;
property wDayOfWeek : Word read getwDayOfWeek write setwDayOfWeek;
procedure setwDay(const val : Word);
function getwDay : Word;
property wDay : Word read getwDay write setwDay;
procedure setwHour(const val : Word);
function getwHour : Word;
property wHour : Word read getwHour write setwHour;
procedure setwMinute(const val : Word);
function getwMinute : Word;
property wMinute : Word read getwMinute write setwMinute;
procedure setwSecond(const val : Word);
function getwSecond : Word;
property wSecond : Word read getwSecond write setwSecond;
procedure setwMilliseconds(const val : Word);
function getwMilliseconds : Word;
property wMilliseconds : Word read getwMilliseconds write setwMilliseconds;
end;
type
_T0 = function (p0 : HRESULT): Boolean of object;

_T1 = _T0;

_T2 = function (p0 : HRESULT): Integer of object;

_T3 = _T2;

_T4 = _T2;

_T5 = function (p0 : Integer;
p1 : Integer;
p2 : Integer): HRESULT of object;

_T6 = function (const p0 : IDispatch;
const p1 : IDispatch): Boolean of object;

_T9 = function : Longint of object;

_T10 = function (p0 : Pointer): HRESULT of object;

_T11 = procedure  of object;

{_T12 = function (p0 : Longint;
out p1 : IMalloc): HRESULT of object;}

_T13 = _T9;

{_T14 = function (p0 : IMallocSpy): HRESULT of object;}

_T15 = function : HRESULT of object;

_T16 = function (p0 : Pointer;
p1 : Longint): HRESULT of object;

_T19 = function (p0 : Longint): HRESULT of object;

_T20 = _T15;

_T21 = _T15;

_T22 = _T9;

_T23 = _T9;

{_T29 = function (p0 : IStream): HRESULT of object;}

{_T30 = function (p0 : IUnknown;
p1 : Longint): HRESULT of object;}

{_T31 = function (p0 : IUnknown;
p1 : BOOL;
p2 : BOOL): HRESULT of object;}

{_T33 = function (p0 : IUnknown): BOOL of object;}

{_T36 = function (p0 : IUnknown;
out p1 : IUnknown): HRESULT of object;}

{_T37 = function (p0 : POleStr;
p1 : BOOL): THandle of object;}

_T38 = procedure (p0 : THandle) of object;

_T39 = _T11;

_T40 = _T11;

{_T41 = function (p0 : Pointer;
p1 : Longint;
p2 : PSOleAuthenticationService;
p3 : Pointer;
p4 : Longint;
p5 : Longint;
p6 : Pointer;
p7 : Longint;
p8 : Pointer): HRESULT of object;}

{_T43 = function (p0 : IUnknown;
p1 : PLongint;
p2 : PLongint;
p3 : PPOleStr;
p4 : PLongint;
p5 : PLongint;
p6 : Pointer;
p7 : PLongint): HRESULT of object;}

{_T44 = function (p0 : IUnknown;
p1 : Longint;
p2 : Longint;
p3 : POleStr;
p4 : Longint;
p5 : Longint;
p6 : Pointer;
p7 : Longint): HRESULT of object;}

{_T45 = function (p0 : IUnknown;
var p1 : IUnknown): HRESULT of object;}

{_T46 = function (p0 : PLongint;
p1 : PLongint;
p2 : PPOleStr;
var p3 : Longint;
var p4 : Longint;
p5 : Pointer;
var p6 : Longint): HRESULT of object;}

_T47 = _T15;

_T48 = _T15;

{_T49 = function (p0 : PLongint;
p1 : PSOleAuthenticationService): HRESULT of object;}

{_T50 = function (p0 : IUnknown;
var p1 : IUnknown): HRESULT of object;}

{_T52 = function (p0 : PCoServerInfo;
p1 : PCLSID;
p2 : IUnknown;
p3 : Longint;
p4 : Longint;
p5 : POleStr;
p6 : Longint;
p7 : PMultiQIArray): HRESULT of object;}

{_T53 = function (p0 : PCoServerInfo;
p1 : PCLSID;
p2 : IUnknown;
p3 : Longint;
p4 : IUnknown;
p5 : Longint;
p6 : PMultiQIArray): HRESULT of object;}

_T63 = function (const p0 : IDispatch): HRESULT of object;

_T64 = function (const p0 : IDispatch;
var p1 : Word;
var p2 : Word): BOOL of object;

_T65 = function (p0 : Word;
p1 : Word;
const p2 : IDispatch): BOOL of object;

_T66 = _T63;

{_T67 = function (p0 : IMessageFilter;
out p1 : IMessageFilter): HRESULT of object;}

_T71 = function (p0 : Longint): Pointer of object;

_T72 = function (p0 : Pointer;
p1 : Longint): Pointer of object;

_T73 = procedure (p0 : Pointer) of object;

{_T74 = function (out p0 : IDataAdviseHolder): HRESULT of object;}

{_T76 = function (p0 : POleStr;
p1 : Longint;
p2 : Longint;
out p3 : IStorage): HRESULT of object;}

{_T77 = function (p0 : ILockBytes;
p1 : Longint;
p2 : Longint;
out p3 : IStorage): HRESULT of object;}

{_T78 = function (p0 : POleStr;
p1 : IStorage;
p2 : Longint;
p3 : TSNB;
p4 : Longint;
out p5 : IStorage): HRESULT of object;}

{_T79 = function (p0 : ILockBytes;
p1 : IStorage;
p2 : Longint;
p3 : TSNB;
p4 : Longint;
out p5 : IStorage): HRESULT of object;}

{_T80 = function (p0 : POleStr): HRESULT of object;}

{_T81 = function (p0 : ILockBytes): HRESULT of object;}

{_T83 = function (p0 : IFillLockBytes;
p1 : Longint;
p2 : Longint;
var p3 : IStorage): HRESULT of object;}

{_T84 = function (p0 : ILockBytes;
var p1 : IFillLockBytes): HRESULT of object;}

{_T85 = function (p0 : POleStr;
var p1 : IFillLockBytes): HRESULT of object;}

{_T86 = function (p0 : POleStr;
p1 : Longint;
p2 : Longint;
var p3 : IStorage): HRESULT of object;}

{_T89 = function (p0 : IBindCtx;
p1 : POleStr;
out p2 : Longint;
out p3 : IMoniker): HRESULT of object;}

{_T90 = function (p0 : IMoniker;
p1 : IMoniker;
out p2 : IMoniker;
p3 : BOOL): HRESULT of object;}

{_T91 = function (p0 : IMoniker;
p1 : IMoniker;
out p2 : IMoniker): HRESULT of object;}

{_T92 = function (p0 : Longint;
out p1 : IBindCtx): HRESULT of object;}

{_T93 = function (p0 : IMoniker;
p1 : IMoniker;
out p2 : IMoniker): HRESULT of object;}

{_T95 = function (p0 : POleStr;
out p1 : IMoniker): HRESULT of object;}

{_T96 = function (p0 : POleStr;
p1 : POleStr;
out p2 : IMoniker): HRESULT of object;}

{_T97 = function (out p0 : IMoniker): HRESULT of object;}

{_T98 = function (p0 : IUnknown;
out p1 : IMoniker): HRESULT of object;}

{_T99 = function (p0 : Longint;
out p1 : IRunningObjectTable): HRESULT of object;}

{_T100 = function (p0 : POleStr): TBStr of object;}

{_T101 = function (var p0 : TBStr;
p1 : POleStr): Integer of object;}

{_T102 = function (p0 : POleStr;
p1 : Integer): TBStr of object;}

{_T103 = function (var p0 : TBStr;
p1 : POleStr;
p2 : Integer): Integer of object;}

{_T104 = procedure (p0 : TBStr) of object;}

{_T105 = function (p0 : TBStr): Integer of object;}

{_T106 = function (p0 : TBStr): Integer of object;}

{_T107 = function (p0 : PChar;
p1 : Integer): TBStr of object;}

_T108 = function (p0 : Word;
p1 : Word;
var p2 : TOleDate): Integer of object;

_T109 = function (p0 : TOleDate;
var p1 : Word;
var p2 : Word): Integer of object;

_T110 = function (const p0 : IDispatch;
var p1 : TOleDate): Integer of object;

_T111 = function (p0 : TOleDate;
const p1 : IDispatch): Integer of object;

{_T112 = function (p0 : Integer;
out p1 : PSafeArray): HRESULT of object;}

{_T113 = function (p0 : PSafeArray): HRESULT of object;}

{_T114 = function (p0 : TVarType;
p1 : Integer;
const p2): PSafeArray of object;}

{_T115 = function (p0 : TVarType;
p1 : Longint;
p2 : Longint): PSafeArray of object;}

{_T116 = function (p0 : TVarType;
p1 : Longint;
p2 : Longint;
p3 : Pointer): PSafeArray of object;}

{_T117 = function (p0 : TVarType;
p1 : Integer;
const p2 : Integer;
p3 : Pointer): PSafeArray of object;}

{_T118 = function (p0 : PSafeArray;
p1 : PSafeArray): HRESULT of object;}

{_T119 = function (p0 : PSafeArray): HRESULT of object;}

{_T120 = function (p0 : PSafeArray): HRESULT of object;}

{_T121 = function (p0 : PSafeArray): HRESULT of object;}

{_T123 = function (p0 : PSafeArray): Integer of object;}

{_T124 = function (p0 : PSafeArray): Integer of object;}

{_T125 = function (p0 : PSafeArray;
p1 : Integer;
out p2 : Longint): HRESULT of object;}

{_T126 = function (p0 : PSafeArray;
p1 : Integer;
out p2 : Longint): HRESULT of object;}

{_T127 = function (p0 : PSafeArray): HRESULT of object;}

{_T128 = function (p0 : PSafeArray): HRESULT of object;}

{_T129 = function (p0 : PSafeArray;
out p1 : Pointer): HRESULT of object;}

{_T130 = function (p0 : PSafeArray): HRESULT of object;}

{_T131 = function (p0 : PSafeArray;
const p1 : PSafeArray;
out p2): HRESULT of object;}

{_T132 = function (p0 : PSafeArray;
const p1 : PSafeArray;
const p2): HRESULT of object;}

{_T133 = function (p0 : PSafeArray;
out p1 : PSafeArray): HRESULT of object;}

{_T134 = function (p0 : PSafeArray;
var p1 : PSafeArray;
out p2 : Pointer): HRESULT of object;}

_T135 = procedure (var p0 : OleVariant) of object;

_T136 = function (var p0 : OleVariant): HRESULT of object;

_T137 = function (var p0 : OleVariant;
const p1 : OleVariant): HRESULT of object;

_T138 = _T137;

_T139 = function (var p0 : OleVariant;
const p1 : OleVariant;
p2 : Word;
p3 : TVarType): HRESULT of object;

_T140 = function (var p0 : OleVariant;
const p1 : OleVariant;
p2 : TLCID;
p3 : Word;
p4 : TVarType): HRESULT of object;

{_T141 = function (p0 : TBStr;
out p1 : PSafeArray): HRESULT of object;}

{_T142 = function (p0 : PSafeArray;
out p1 : TBStr): HRESULT of object;}

{_T143 = function (p0 : TSysKind;
p1 : TLCID;
p2 : POleStr): Longint of object;}

{_T144 = function (p0 : TSysKind;
p1 : TLCID;
p2 : PChar): Longint of object;}

{_T145 = function (p0 : TLCID;
p1 : POleStr): Longint of object;}

_T146 = function (p0 : Longint): Word of object;

_T147 = function (p0 : Longint;
p1 : Longint): Boolean of object;

{_T148 = function (p0 : POleStr;
out p1 : ITypeLib): HRESULT of object;}

{_T149 = function (p0 : POleStr;
p1 : TRegKind;
out p2 : ITypeLib): HRESULT of object;}

_T151 = function (const p0 : IDispatch;
p1 : Word;
p2 : Word;
p3 : TLCID;
var p4 : WideString): HRESULT of object;

{_T152 = function (p0 : ITypeLib;
p1 : POleStr;
p2 : POleStr): HRESULT of object;}

_T153 = function (const p0 : IDispatch;
p1 : Word;
p2 : Word;
p3 : TLCID;
p4 : TSysKind): HRESULT of object;

{_T154 = function (p0 : TSysKind;
p1 : POleStr;
out p2 : ICreateTypeLib): HRESULT of object;}

{_T155 = function (p0 : TSysKind;
p1 : POleStr;
out p2 : ICreateTypeLib2): HRESULT of object;}

_T156 = function (const p0 : IDispatch;
p1 : Integer;
p2 : TVarType;
var p3 : OleVariant;
var p4 : Integer): HRESULT of object;

{_T157 = function (p0 : ITypeInfo;
p1 : POleStrList;
p2 : Integer;
p3 : PDispIDList): HRESULT of object;}

{_T160 = function (p0 : IUnknown;
p1 : Pointer;
p2 : ITypeInfo;
out p3 : IUnknown): HRESULT of object;}

_T161 = function (p0 : Pointer;
p1 : Longint;
p2 : TCallConv;
p3 : TVarType;
p4 : Longint;
var p5 : TVarType;
var p6 : OleVariant;
var p7 : OleVariant): HRESULT of object;

_T163 = function (p0 : Longint;
p1 : Pointer): HRESULT of object;

{_T165 = function (p0 : Longint;
p1 : IErrorInfo): HRESULT of object;}

{_T166 = function (p0 : Longint;
out p1 : IErrorInfo): HRESULT of object;}

{_T167 = function (out p0 : ICreateErrorInfo): HRESULT of object;}

_T168 = _T9;

_T169 = procedure (const p0 : IDispatch) of object;

_T170 = _T15;

{_T175 = function (p0 : IStorage;
p1 : TClipFormat;
p2 : POleStr): HRESULT of object;}

{_T176 = function (p0 : IStorage;
out p1 : TClipFormat;
out p2 : POleStr): HRESULT of object;}

_T177 = _T10;

_T178 = _T11;

{_T179 = function (p0 : IDataObject): HRESULT of object;}

{_T180 = function (p0 : IDataObject): HRESULT of object;}

{_T195 = function (p0 : IPersistStorage;
p1 : IStorage;
p2 : BOOL): HRESULT of object;}

{_T197 = function (p0 : IPersistStream;
p1 : IStream): HRESULT of object;}

{_T198 = function (p0 : IUnknown;
p1 : BOOL): HRESULT of object;}

{_T199 = function (p0 : IUnknown;
p1 : BOOL): HRESULT of object;}

{_T200 = function (p0 : HWND;
p1 : IDropTarget): HRESULT of object;}

_T201 = function (p0 : HWND): HRESULT of object;

{_T202 = function (p0 : IDataObject;
p1 : IDropSource;
p2 : Longint;
var p3 : Longint): HRESULT of object;}

{_T203 = function (p0 : IDataObject): HRESULT of object;}

{_T204 = function (out p0 : IDataObject): HRESULT of object;}

_T205 = _T15;

{_T206 = function (p0 : IDataObject): HRESULT of object;}

_T207 = function (p0 : HMenu;
const p1 : IDispatch): HMenu of object;

{_T208 = function (p0 : HMenu;
p1 : HWND;
p2 : HWND;
p3 : IOleInPlaceFrame;
p4 : IOleInPlaceActiveObject): HRESULT of object;}

_T209 = function (p0 : HMenu): HRESULT of object;

_T211 = function (p0 : THandle;
p1 : TClipFormat;
p2 : Integer): THandle of object;

{_T213 = function (p0 : IUnknown): HRESULT of object;}

{_T214 = function (p0 : IOleObject): BOOL of object;}

{_T215 = function (p0 : IUnknown;
p1 : BOOL;
p2 : BOOL): HRESULT of object;}

_T216 = _T169;

{_T217 = function (out p0 : IOleAdviseHolder): HRESULT of object;}

{_T220 = function (p0 : hAccel;
p1 : Integer;
p2 : PMsg;
var p3 : Word): BOOL of object;}

{_T221 = function (p0 : POleStr;
p1 : BOOL): hGlobal of object;}

{_T223 = function (p0 : hIcon;
p1 : POleStr;
p2 : POleStr;
p3 : Integer): hGlobal of object;}

{_T228 = function (p0 : IStorage;
p1 : Pointer): HRESULT of object;}

{_T229 = function (p0 : Pointer;
p1 : IStorage;
p2 : PDVTargetDevice): HRESULT of object;}

{_T232 = function (p0 : ILockBytes;
out p1 : hGlobal): HRESULT of object;}

{_T233 = function (p0 : hGlobal;
p1 : BOOL;
out p2 : ILockBytes): HRESULT of object;}

{_T234 = function (p0 : IStream;
out p1 : hGlobal): HRESULT of object;}

{_T235 = function (p0 : hGlobal;
p1 : BOOL;
out p2 : IStream): HRESULT of object;}

{_T239 = function (p0 : IStorage): HRESULT of object;}

{_T240 = function (p0 : IStorage;
p1 : BOOL): HRESULT of object;}

{_T241 = function (p0 : HWND;
p1 : Integer;
p2 : Integer;
p3 : POleStr;
p4 : Integer;
p5 : Pointer;
p6 : Integer;
p7 : Pointer;
p8 : TLCID;
p9 : Longint;
p10 : Pointer): HRESULT of object;}

_T242 = _T63;

_T243 = function (p0 : TOleColor;
p1 : HPALETTE;
var p2 : TColorRef): HRESULT of object;

{_T248 = function (p0 : OleVariant;
var p1 : IDispatch): HRESULT of object;}

{_T249 = function (p0 : IDispatch;
p1 : TBStr): HRESULT of object;}

_T250 = function (p0 : THandle;
p1 : THandle): HCursor of object;

_T251 = function (p0 : DWORD): Word of object;

_T252 = function (p0 : DWORD): Byte of object;

_T253 = _T252;

function ___COSERVERINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___COSERVERINFO__Wrapper.setdwReserved1(const val : Longint);
begin
_COSERVERINFO(GetRecordPtr^).dwReserved1 := val;
end;
function ___COSERVERINFO__Wrapper.getdwReserved1 : Longint;
begin
result := _COSERVERINFO(GetRecordPtr^).dwReserved1;
end;
procedure ___COSERVERINFO__Wrapper.setdwReserved2(const val : Longint);
begin
_COSERVERINFO(GetRecordPtr^).dwReserved2 := val;
end;
function ___COSERVERINFO__Wrapper.getdwReserved2 : Longint;
begin
result := _COSERVERINFO(GetRecordPtr^).dwReserved2;
end;
function ___OBJECTID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___OBJECTID__Wrapper.setUniquifier(const val : Longint);
begin
_OBJECTID(GetRecordPtr^).Uniquifier := val;
end;
function ___OBJECTID__Wrapper.getUniquifier : Longint;
begin
result := _OBJECTID(GetRecordPtr^).Uniquifier;
end;
function ___tagOLECMD__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagOLECMD__Wrapper.setcmdID(const val : Cardinal);
begin
_tagOLECMD(GetRecordPtr^).cmdID := val;
end;
function ___tagOLECMD__Wrapper.getcmdID : Cardinal;
begin
result := _tagOLECMD(GetRecordPtr^).cmdID;
end;
procedure ___tagOLECMD__Wrapper.setcmdf(const val : Longint);
begin
_tagOLECMD(GetRecordPtr^).cmdf := val;
end;
function ___tagOLECMD__Wrapper.getcmdf : Longint;
begin
result := _tagOLECMD(GetRecordPtr^).cmdf;
end;
function ___tagOLECMDTEXT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagOLECMDTEXT__Wrapper.setcmdtextf(const val : Longint);
begin
_tagOLECMDTEXT(GetRecordPtr^).cmdtextf := val;
end;
function ___tagOLECMDTEXT__Wrapper.getcmdtextf : Longint;
begin
result := _tagOLECMDTEXT(GetRecordPtr^).cmdtextf;
end;
procedure ___tagOLECMDTEXT__Wrapper.setcwActual(const val : Cardinal);
begin
_tagOLECMDTEXT(GetRecordPtr^).cwActual := val;
end;
function ___tagOLECMDTEXT__Wrapper.getcwActual : Cardinal;
begin
result := _tagOLECMDTEXT(GetRecordPtr^).cwActual;
end;
procedure ___tagOLECMDTEXT__Wrapper.setcwBuf(const val : Cardinal);
begin
_tagOLECMDTEXT(GetRecordPtr^).cwBuf := val;
end;
function ___tagOLECMDTEXT__Wrapper.getcwBuf : Cardinal;
begin
result := _tagOLECMDTEXT(GetRecordPtr^).cwBuf;
end;
function __ARRAYDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ARRAYDESC__Wrapper.setcDims(const val : Word);
begin
ARRAYDESC(GetRecordPtr^).cDims := val;
end;
function __ARRAYDESC__Wrapper.getcDims : Word;
begin
result := ARRAYDESC(GetRecordPtr^).cDims;
end;
function __BIND_OPTS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __BIND_OPTS__Wrapper.setcbStruct(const val : Longint);
begin
BIND_OPTS(GetRecordPtr^).cbStruct := val;
end;
function __BIND_OPTS__Wrapper.getcbStruct : Longint;
begin
result := BIND_OPTS(GetRecordPtr^).cbStruct;
end;
procedure __BIND_OPTS__Wrapper.setgrfFlags(const val : Longint);
begin
BIND_OPTS(GetRecordPtr^).grfFlags := val;
end;
function __BIND_OPTS__Wrapper.getgrfFlags : Longint;
begin
result := BIND_OPTS(GetRecordPtr^).grfFlags;
end;
procedure __BIND_OPTS__Wrapper.setgrfMode(const val : Longint);
begin
BIND_OPTS(GetRecordPtr^).grfMode := val;
end;
function __BIND_OPTS__Wrapper.getgrfMode : Longint;
begin
result := BIND_OPTS(GetRecordPtr^).grfMode;
end;
procedure __BIND_OPTS__Wrapper.setdwTickCountDeadline(const val : Longint);
begin
BIND_OPTS(GetRecordPtr^).dwTickCountDeadline := val;
end;
function __BIND_OPTS__Wrapper.getdwTickCountDeadline : Longint;
begin
result := BIND_OPTS(GetRecordPtr^).dwTickCountDeadline;
end;
function __BINDPTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __BLOB__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __BLOB__Wrapper.setcbSize(const val : Longint);
begin
BLOB(GetRecordPtr^).cbSize := val;
end;
function __BLOB__Wrapper.getcbSize : Longint;
begin
result := BLOB(GetRecordPtr^).cbSize;
end;
function __BORDERWIDTHS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __BORDERWIDTHS__Wrapper.setLeft(const val : Longint);
begin
BORDERWIDTHS(GetRecordPtr^).Left := val;
end;
function __BORDERWIDTHS__Wrapper.getLeft : Longint;
begin
result := BORDERWIDTHS(GetRecordPtr^).Left;
end;
procedure __BORDERWIDTHS__Wrapper.setTop(const val : Longint);
begin
BORDERWIDTHS(GetRecordPtr^).Top := val;
end;
function __BORDERWIDTHS__Wrapper.getTop : Longint;
begin
result := BORDERWIDTHS(GetRecordPtr^).Top;
end;
procedure __BORDERWIDTHS__Wrapper.setRight(const val : Longint);
begin
BORDERWIDTHS(GetRecordPtr^).Right := val;
end;
function __BORDERWIDTHS__Wrapper.getRight : Longint;
begin
result := BORDERWIDTHS(GetRecordPtr^).Right;
end;
procedure __BORDERWIDTHS__Wrapper.setBottom(const val : Longint);
begin
BORDERWIDTHS(GetRecordPtr^).Bottom := val;
end;
function __BORDERWIDTHS__Wrapper.getBottom : Longint;
begin
result := BORDERWIDTHS(GetRecordPtr^).Bottom;
end;
function __CABOOL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CABOOL__Wrapper.setcElems(const val : ULONG);
begin
CABOOL(GetRecordPtr^).cElems := val;
end;
function __CABOOL__Wrapper.getcElems : ULONG;
begin
result := CABOOL(GetRecordPtr^).cElems;
end;
function __CABSTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CABSTR__Wrapper.setcElems(const val : ULONG);
begin
CABSTR(GetRecordPtr^).cElems := val;
end;
function __CABSTR__Wrapper.getcElems : ULONG;
begin
result := CABSTR(GetRecordPtr^).cElems;
end;
function __CACLIPDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CACLIPDATA__Wrapper.setcElems(const val : ULONG);
begin
CACLIPDATA(GetRecordPtr^).cElems := val;
end;
function __CACLIPDATA__Wrapper.getcElems : ULONG;
begin
result := CACLIPDATA(GetRecordPtr^).cElems;
end;
function __CACLSID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CACLSID__Wrapper.setcElems(const val : ULONG);
begin
CACLSID(GetRecordPtr^).cElems := val;
end;
function __CACLSID__Wrapper.getcElems : ULONG;
begin
result := CACLSID(GetRecordPtr^).cElems;
end;
function __CACY__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CACY__Wrapper.setcElems(const val : ULONG);
begin
CACY(GetRecordPtr^).cElems := val;
end;
function __CACY__Wrapper.getcElems : ULONG;
begin
result := CACY(GetRecordPtr^).cElems;
end;
function __CADATE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CADATE__Wrapper.setcElems(const val : ULONG);
begin
CADATE(GetRecordPtr^).cElems := val;
end;
function __CADATE__Wrapper.getcElems : ULONG;
begin
result := CADATE(GetRecordPtr^).cElems;
end;
function __CADBL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CADBL__Wrapper.setcElems(const val : ULONG);
begin
CADBL(GetRecordPtr^).cElems := val;
end;
function __CADBL__Wrapper.getcElems : ULONG;
begin
result := CADBL(GetRecordPtr^).cElems;
end;
function __CADWORD__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CADWORD__Wrapper.setcElems(const val : Longint);
begin
CADWORD(GetRecordPtr^).cElems := val;
end;
function __CADWORD__Wrapper.getcElems : Longint;
begin
result := CADWORD(GetRecordPtr^).cElems;
end;
function __CAFILETIME__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAFILETIME__Wrapper.setcElems(const val : ULONG);
begin
CAFILETIME(GetRecordPtr^).cElems := val;
end;
function __CAFILETIME__Wrapper.getcElems : ULONG;
begin
result := CAFILETIME(GetRecordPtr^).cElems;
end;
function __CAFLT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAFLT__Wrapper.setcElems(const val : ULONG);
begin
CAFLT(GetRecordPtr^).cElems := val;
end;
function __CAFLT__Wrapper.getcElems : ULONG;
begin
result := CAFLT(GetRecordPtr^).cElems;
end;
function __CAH__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAH__Wrapper.setcElems(const val : ULONG);
begin
CAH(GetRecordPtr^).cElems := val;
end;
function __CAH__Wrapper.getcElems : ULONG;
begin
result := CAH(GetRecordPtr^).cElems;
end;
function __CAI__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAI__Wrapper.setcElems(const val : ULONG);
begin
CAI(GetRecordPtr^).cElems := val;
end;
function __CAI__Wrapper.getcElems : ULONG;
begin
result := CAI(GetRecordPtr^).cElems;
end;
function __CAL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAL__Wrapper.setcElems(const val : ULONG);
begin
CAL(GetRecordPtr^).cElems := val;
end;
function __CAL__Wrapper.getcElems : ULONG;
begin
result := CAL(GetRecordPtr^).cElems;
end;
function __CALPOLESTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CALPOLESTR__Wrapper.setcElems(const val : Longint);
begin
CALPOLESTR(GetRecordPtr^).cElems := val;
end;
function __CALPOLESTR__Wrapper.getcElems : Longint;
begin
result := CALPOLESTR(GetRecordPtr^).cElems;
end;
function __CALPSTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CALPSTR__Wrapper.setcElems(const val : ULONG);
begin
CALPSTR(GetRecordPtr^).cElems := val;
end;
function __CALPSTR__Wrapper.getcElems : ULONG;
begin
result := CALPSTR(GetRecordPtr^).cElems;
end;
function __CALPWSTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CALPWSTR__Wrapper.setcElems(const val : ULONG);
begin
CALPWSTR(GetRecordPtr^).cElems := val;
end;
function __CALPWSTR__Wrapper.getcElems : ULONG;
begin
result := CALPWSTR(GetRecordPtr^).cElems;
end;
function __CAPROPVARIANT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAPROPVARIANT__Wrapper.setcElems(const val : ULONG);
begin
CAPROPVARIANT(GetRecordPtr^).cElems := val;
end;
function __CAPROPVARIANT__Wrapper.getcElems : ULONG;
begin
result := CAPROPVARIANT(GetRecordPtr^).cElems;
end;
function __CASCODE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CASCODE__Wrapper.setcElems(const val : ULONG);
begin
CASCODE(GetRecordPtr^).cElems := val;
end;
function __CASCODE__Wrapper.getcElems : ULONG;
begin
result := CASCODE(GetRecordPtr^).cElems;
end;
function __CAUB__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAUB__Wrapper.setcElems(const val : ULONG);
begin
CAUB(GetRecordPtr^).cElems := val;
end;
function __CAUB__Wrapper.getcElems : ULONG;
begin
result := CAUB(GetRecordPtr^).cElems;
end;
function __CAUH__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAUH__Wrapper.setcElems(const val : ULONG);
begin
CAUH(GetRecordPtr^).cElems := val;
end;
function __CAUH__Wrapper.getcElems : ULONG;
begin
result := CAUH(GetRecordPtr^).cElems;
end;
function __CAUI__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAUI__Wrapper.setcElems(const val : ULONG);
begin
CAUI(GetRecordPtr^).cElems := val;
end;
function __CAUI__Wrapper.getcElems : ULONG;
begin
result := CAUI(GetRecordPtr^).cElems;
end;
function __CAUL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAUL__Wrapper.setcElems(const val : ULONG);
begin
CAUL(GetRecordPtr^).cElems := val;
end;
function __CAUL__Wrapper.getcElems : ULONG;
begin
result := CAUL(GetRecordPtr^).cElems;
end;
function __CAUUID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAUUID__Wrapper.setcElems(const val : Longint);
begin
CAUUID(GetRecordPtr^).cElems := val;
end;
function __CAUUID__Wrapper.getcElems : Longint;
begin
result := CAUUID(GetRecordPtr^).cElems;
end;
function __CLIPDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CLIPDATA__Wrapper.setcbSize(const val : Longint);
begin
CLIPDATA(GetRecordPtr^).cbSize := val;
end;
function __CLIPDATA__Wrapper.getcbSize : Longint;
begin
result := CLIPDATA(GetRecordPtr^).cbSize;
end;
procedure __CLIPDATA__Wrapper.setulClipFmt(const val : Longint);
begin
CLIPDATA(GetRecordPtr^).ulClipFmt := val;
end;
function __CLIPDATA__Wrapper.getulClipFmt : Longint;
begin
result := CLIPDATA(GetRecordPtr^).ulClipFmt;
end;
function __CONNECTDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CONNECTDATA__Wrapper.setdwCookie(const val : Longint);
begin
CONNECTDATA(GetRecordPtr^).dwCookie := val;
end;
function __CONNECTDATA__Wrapper.getdwCookie : Longint;
begin
result := CONNECTDATA(GetRecordPtr^).dwCookie;
end;
function __CONTROLINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CONTROLINFO__Wrapper.setcb(const val : Longint);
begin
CONTROLINFO(GetRecordPtr^).cb := val;
end;
function __CONTROLINFO__Wrapper.getcb : Longint;
begin
result := CONTROLINFO(GetRecordPtr^).cb;
end;
procedure __CONTROLINFO__Wrapper.setcAccel(const val : Word);
begin
CONTROLINFO(GetRecordPtr^).cAccel := val;
end;
function __CONTROLINFO__Wrapper.getcAccel : Word;
begin
result := CONTROLINFO(GetRecordPtr^).cAccel;
end;
procedure __CONTROLINFO__Wrapper.setdwFlags(const val : Longint);
begin
CONTROLINFO(GetRecordPtr^).dwFlags := val;
end;
function __CONTROLINFO__Wrapper.getdwFlags : Longint;
begin
result := CONTROLINFO(GetRecordPtr^).dwFlags;
end;
function __COSERVERINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __COSERVERINFO__Wrapper.setdwReserved1(const val : Longint);
begin
COSERVERINFO(GetRecordPtr^).dwReserved1 := val;
end;
function __COSERVERINFO__Wrapper.getdwReserved1 : Longint;
begin
result := COSERVERINFO(GetRecordPtr^).dwReserved1;
end;
procedure __COSERVERINFO__Wrapper.setdwReserved2(const val : Longint);
begin
COSERVERINFO(GetRecordPtr^).dwReserved2 := val;
end;
function __COSERVERINFO__Wrapper.getdwReserved2 : Longint;
begin
result := COSERVERINFO(GetRecordPtr^).dwReserved2;
end;
function __CUSTDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CUSTDATA__Wrapper.setcCustData(const val : DWORD);
begin
CUSTDATA(GetRecordPtr^).cCustData := val;
end;
function __CUSTDATA__Wrapper.getcCustData : DWORD;
begin
result := CUSTDATA(GetRecordPtr^).cCustData;
end;
function __CUSTDATAITEM__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __DECIMAL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __DECIMAL__Wrapper.setwReserved(const val : Word);
begin
DECIMAL(GetRecordPtr^).wReserved := val;
end;
function __DECIMAL__Wrapper.getwReserved : Word;
begin
result := DECIMAL(GetRecordPtr^).wReserved;
end;
procedure __DECIMAL__Wrapper.setscale(const val : Byte);
begin
DECIMAL(GetRecordPtr^).scale := val;
end;
function __DECIMAL__Wrapper.getscale : Byte;
begin
result := DECIMAL(GetRecordPtr^).scale;
end;
procedure __DECIMAL__Wrapper.setsign(const val : Byte);
begin
DECIMAL(GetRecordPtr^).sign := val;
end;
function __DECIMAL__Wrapper.getsign : Byte;
begin
result := DECIMAL(GetRecordPtr^).sign;
end;
procedure __DECIMAL__Wrapper.setHi32(const val : Longint);
begin
DECIMAL(GetRecordPtr^).Hi32 := val;
end;
function __DECIMAL__Wrapper.getHi32 : Longint;
begin
result := DECIMAL(GetRecordPtr^).Hi32;
end;
procedure __DECIMAL__Wrapper.setLo32(const val : Longint);
begin
DECIMAL(GetRecordPtr^).Lo32 := val;
end;
function __DECIMAL__Wrapper.getLo32 : Longint;
begin
result := DECIMAL(GetRecordPtr^).Lo32;
end;
procedure __DECIMAL__Wrapper.setMid32(const val : Longint);
begin
DECIMAL(GetRecordPtr^).Mid32 := val;
end;
function __DECIMAL__Wrapper.getMid32 : Longint;
begin
result := DECIMAL(GetRecordPtr^).Mid32;
end;
procedure __DECIMAL__Wrapper.setsignscale(const val : Word);
begin
DECIMAL(GetRecordPtr^).signscale := val;
end;
function __DECIMAL__Wrapper.getsignscale : Word;
begin
result := DECIMAL(GetRecordPtr^).signscale;
end;
function __DISPPARAMS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __DISPPARAMS__Wrapper.setcArgs(const val : Longint);
begin
DISPPARAMS(GetRecordPtr^).cArgs := val;
end;
function __DISPPARAMS__Wrapper.getcArgs : Longint;
begin
result := DISPPARAMS(GetRecordPtr^).cArgs;
end;
procedure __DISPPARAMS__Wrapper.setcNamedArgs(const val : Longint);
begin
DISPPARAMS(GetRecordPtr^).cNamedArgs := val;
end;
function __DISPPARAMS__Wrapper.getcNamedArgs : Longint;
begin
result := DISPPARAMS(GetRecordPtr^).cNamedArgs;
end;
function __DVTARGETDEVICE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __DVTARGETDEVICE__Wrapper.settdSize(const val : Longint);
begin
DVTARGETDEVICE(GetRecordPtr^).tdSize := val;
end;
function __DVTARGETDEVICE__Wrapper.gettdSize : Longint;
begin
result := DVTARGETDEVICE(GetRecordPtr^).tdSize;
end;
procedure __DVTARGETDEVICE__Wrapper.settdDriverNameOffset(const val : Word);
begin
DVTARGETDEVICE(GetRecordPtr^).tdDriverNameOffset := val;
end;
function __DVTARGETDEVICE__Wrapper.gettdDriverNameOffset : Word;
begin
result := DVTARGETDEVICE(GetRecordPtr^).tdDriverNameOffset;
end;
procedure __DVTARGETDEVICE__Wrapper.settdDeviceNameOffset(const val : Word);
begin
DVTARGETDEVICE(GetRecordPtr^).tdDeviceNameOffset := val;
end;
function __DVTARGETDEVICE__Wrapper.gettdDeviceNameOffset : Word;
begin
result := DVTARGETDEVICE(GetRecordPtr^).tdDeviceNameOffset;
end;
procedure __DVTARGETDEVICE__Wrapper.settdPortNameOffset(const val : Word);
begin
DVTARGETDEVICE(GetRecordPtr^).tdPortNameOffset := val;
end;
function __DVTARGETDEVICE__Wrapper.gettdPortNameOffset : Word;
begin
result := DVTARGETDEVICE(GetRecordPtr^).tdPortNameOffset;
end;
procedure __DVTARGETDEVICE__Wrapper.settdExtDevmodeOffset(const val : Word);
begin
DVTARGETDEVICE(GetRecordPtr^).tdExtDevmodeOffset := val;
end;
function __DVTARGETDEVICE__Wrapper.gettdExtDevmodeOffset : Word;
begin
result := DVTARGETDEVICE(GetRecordPtr^).tdExtDevmodeOffset;
end;
function __ELEMDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __EXCEPINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __EXCEPINFO__Wrapper.setwCode(const val : Word);
begin
EXCEPINFO(GetRecordPtr^).wCode := val;
end;
function __EXCEPINFO__Wrapper.getwCode : Word;
begin
result := EXCEPINFO(GetRecordPtr^).wCode;
end;
procedure __EXCEPINFO__Wrapper.setwReserved(const val : Word);
begin
EXCEPINFO(GetRecordPtr^).wReserved := val;
end;
function __EXCEPINFO__Wrapper.getwReserved : Word;
begin
result := EXCEPINFO(GetRecordPtr^).wReserved;
end;
procedure __EXCEPINFO__Wrapper.setbstrSource(const val : WideString);
begin
EXCEPINFO(GetRecordPtr^).bstrSource := val;
end;
function __EXCEPINFO__Wrapper.getbstrSource : WideString;
begin
result := EXCEPINFO(GetRecordPtr^).bstrSource;
end;
procedure __EXCEPINFO__Wrapper.setbstrDescription(const val : WideString);
begin
EXCEPINFO(GetRecordPtr^).bstrDescription := val;
end;
function __EXCEPINFO__Wrapper.getbstrDescription : WideString;
begin
result := EXCEPINFO(GetRecordPtr^).bstrDescription;
end;
procedure __EXCEPINFO__Wrapper.setbstrHelpFile(const val : WideString);
begin
EXCEPINFO(GetRecordPtr^).bstrHelpFile := val;
end;
function __EXCEPINFO__Wrapper.getbstrHelpFile : WideString;
begin
result := EXCEPINFO(GetRecordPtr^).bstrHelpFile;
end;
procedure __EXCEPINFO__Wrapper.setdwHelpContext(const val : Longint);
begin
EXCEPINFO(GetRecordPtr^).dwHelpContext := val;
end;
function __EXCEPINFO__Wrapper.getdwHelpContext : Longint;
begin
result := EXCEPINFO(GetRecordPtr^).dwHelpContext;
end;
function __FMTID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FMTID__Wrapper.setD1(const val : LongWord);
begin
FMTID(GetRecordPtr^).D1 := val;
end;
function __FMTID__Wrapper.getD1 : LongWord;
begin
result := FMTID(GetRecordPtr^).D1;
end;
procedure __FMTID__Wrapper.setD2(const val : Word);
begin
FMTID(GetRecordPtr^).D2 := val;
end;
function __FMTID__Wrapper.getD2 : Word;
begin
result := FMTID(GetRecordPtr^).D2;
end;
procedure __FMTID__Wrapper.setD3(const val : Word);
begin
FMTID(GetRecordPtr^).D3 := val;
end;
function __FMTID__Wrapper.getD3 : Word;
begin
result := FMTID(GetRecordPtr^).D3;
end;
function __FONTDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FONTDESC__Wrapper.setcbSizeofstruct(const val : Integer);
begin
FONTDESC(GetRecordPtr^).cbSizeofstruct := val;
end;
function __FONTDESC__Wrapper.getcbSizeofstruct : Integer;
begin
result := FONTDESC(GetRecordPtr^).cbSizeofstruct;
end;
procedure __FONTDESC__Wrapper.setcySize(const val : Currency);
begin
FONTDESC(GetRecordPtr^).cySize := val;
end;
function __FONTDESC__Wrapper.getcySize : Currency;
begin
result := FONTDESC(GetRecordPtr^).cySize;
end;
procedure __FONTDESC__Wrapper.setsWeight(const val : SmallInt);
begin
FONTDESC(GetRecordPtr^).sWeight := val;
end;
function __FONTDESC__Wrapper.getsWeight : SmallInt;
begin
result := FONTDESC(GetRecordPtr^).sWeight;
end;
procedure __FONTDESC__Wrapper.setsCharset(const val : SmallInt);
begin
FONTDESC(GetRecordPtr^).sCharset := val;
end;
function __FONTDESC__Wrapper.getsCharset : SmallInt;
begin
result := FONTDESC(GetRecordPtr^).sCharset;
end;
procedure __FONTDESC__Wrapper.setfItalic(const val : BOOL);
begin
FONTDESC(GetRecordPtr^).fItalic := val;
end;
function __FONTDESC__Wrapper.getfItalic : BOOL;
begin
result := FONTDESC(GetRecordPtr^).fItalic;
end;
procedure __FONTDESC__Wrapper.setfUnderline(const val : BOOL);
begin
FONTDESC(GetRecordPtr^).fUnderline := val;
end;
function __FONTDESC__Wrapper.getfUnderline : BOOL;
begin
result := FONTDESC(GetRecordPtr^).fUnderline;
end;
procedure __FONTDESC__Wrapper.setfStrikethrough(const val : BOOL);
begin
FONTDESC(GetRecordPtr^).fStrikethrough := val;
end;
function __FONTDESC__Wrapper.getfStrikethrough : BOOL;
begin
result := FONTDESC(GetRecordPtr^).fStrikethrough;
end;
function __FUNCDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FUNCDESC__Wrapper.setmemid(const val : TMemberID);
begin
FUNCDESC(GetRecordPtr^).memid := val;
end;
function __FUNCDESC__Wrapper.getmemid : TMemberID;
begin
result := FUNCDESC(GetRecordPtr^).memid;
end;
procedure __FUNCDESC__Wrapper.setfunckind(const val : TFuncKind);
begin
FUNCDESC(GetRecordPtr^).funckind := val;
end;
function __FUNCDESC__Wrapper.getfunckind : TFuncKind;
begin
result := FUNCDESC(GetRecordPtr^).funckind;
end;
procedure __FUNCDESC__Wrapper.setinvkind(const val : TInvokeKind);
begin
FUNCDESC(GetRecordPtr^).invkind := val;
end;
function __FUNCDESC__Wrapper.getinvkind : TInvokeKind;
begin
result := FUNCDESC(GetRecordPtr^).invkind;
end;
procedure __FUNCDESC__Wrapper.setcallconv(const val : TCallConv);
begin
FUNCDESC(GetRecordPtr^).callconv := val;
end;
function __FUNCDESC__Wrapper.getcallconv : TCallConv;
begin
result := FUNCDESC(GetRecordPtr^).callconv;
end;
procedure __FUNCDESC__Wrapper.setcParams(const val : SmallInt);
begin
FUNCDESC(GetRecordPtr^).cParams := val;
end;
function __FUNCDESC__Wrapper.getcParams : SmallInt;
begin
result := FUNCDESC(GetRecordPtr^).cParams;
end;
procedure __FUNCDESC__Wrapper.setcParamsOpt(const val : SmallInt);
begin
FUNCDESC(GetRecordPtr^).cParamsOpt := val;
end;
function __FUNCDESC__Wrapper.getcParamsOpt : SmallInt;
begin
result := FUNCDESC(GetRecordPtr^).cParamsOpt;
end;
procedure __FUNCDESC__Wrapper.setoVft(const val : SmallInt);
begin
FUNCDESC(GetRecordPtr^).oVft := val;
end;
function __FUNCDESC__Wrapper.getoVft : SmallInt;
begin
result := FUNCDESC(GetRecordPtr^).oVft;
end;
procedure __FUNCDESC__Wrapper.setcScodes(const val : SmallInt);
begin
FUNCDESC(GetRecordPtr^).cScodes := val;
end;
function __FUNCDESC__Wrapper.getcScodes : SmallInt;
begin
result := FUNCDESC(GetRecordPtr^).cScodes;
end;
procedure __FUNCDESC__Wrapper.setwFuncFlags(const val : Word);
begin
FUNCDESC(GetRecordPtr^).wFuncFlags := val;
end;
function __FUNCDESC__Wrapper.getwFuncFlags : Word;
begin
result := FUNCDESC(GetRecordPtr^).wFuncFlags;
end;
function __IDLDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __IDLDESC__Wrapper.setdwReserved(const val : Longint);
begin
IDLDESC(GetRecordPtr^).dwReserved := val;
end;
function __IDLDESC__Wrapper.getdwReserved : Longint;
begin
result := IDLDESC(GetRecordPtr^).dwReserved;
end;
procedure __IDLDESC__Wrapper.setwIDLFlags(const val : Word);
begin
IDLDESC(GetRecordPtr^).wIDLFlags := val;
end;
function __IDLDESC__Wrapper.getwIDLFlags : Word;
begin
result := IDLDESC(GetRecordPtr^).wIDLFlags;
end;
function __INTERFACEDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __INTERFACEDATA__Wrapper.setcMembers(const val : Integer);
begin
INTERFACEDATA(GetRecordPtr^).cMembers := val;
end;
function __INTERFACEDATA__Wrapper.getcMembers : Integer;
begin
result := INTERFACEDATA(GetRecordPtr^).cMembers;
end;
function __INTERFACEINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __INTERFACEINFO__Wrapper.setwMethod(const val : Word);
begin
INTERFACEINFO(GetRecordPtr^).wMethod := val;
end;
function __INTERFACEINFO__Wrapper.getwMethod : Word;
begin
result := INTERFACEINFO(GetRecordPtr^).wMethod;
end;
function __LICINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __LICINFO__Wrapper.setcbLicInfo(const val : Longint);
begin
LICINFO(GetRecordPtr^).cbLicInfo := val;
end;
function __LICINFO__Wrapper.getcbLicInfo : Longint;
begin
result := LICINFO(GetRecordPtr^).cbLicInfo;
end;
procedure __LICINFO__Wrapper.setfRuntimeKeyAvail(const val : BOOL);
begin
LICINFO(GetRecordPtr^).fRuntimeKeyAvail := val;
end;
function __LICINFO__Wrapper.getfRuntimeKeyAvail : BOOL;
begin
result := LICINFO(GetRecordPtr^).fRuntimeKeyAvail;
end;
procedure __LICINFO__Wrapper.setfLicVerified(const val : BOOL);
begin
LICINFO(GetRecordPtr^).fLicVerified := val;
end;
function __LICINFO__Wrapper.getfLicVerified : BOOL;
begin
result := LICINFO(GetRecordPtr^).fLicVerified;
end;
function __METHODDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __METHODDATA__Wrapper.setdispid(const val : TDispID);
begin
METHODDATA(GetRecordPtr^).dispid := val;
end;
function __METHODDATA__Wrapper.getdispid : TDispID;
begin
result := METHODDATA(GetRecordPtr^).dispid;
end;
procedure __METHODDATA__Wrapper.setiMeth(const val : Integer);
begin
METHODDATA(GetRecordPtr^).iMeth := val;
end;
function __METHODDATA__Wrapper.getiMeth : Integer;
begin
result := METHODDATA(GetRecordPtr^).iMeth;
end;
procedure __METHODDATA__Wrapper.setcc(const val : TCallConv);
begin
METHODDATA(GetRecordPtr^).cc := val;
end;
function __METHODDATA__Wrapper.getcc : TCallConv;
begin
result := METHODDATA(GetRecordPtr^).cc;
end;
procedure __METHODDATA__Wrapper.setcArgs(const val : Integer);
begin
METHODDATA(GetRecordPtr^).cArgs := val;
end;
function __METHODDATA__Wrapper.getcArgs : Integer;
begin
result := METHODDATA(GetRecordPtr^).cArgs;
end;
procedure __METHODDATA__Wrapper.setwflags(const val : Word);
begin
METHODDATA(GetRecordPtr^).wflags := val;
end;
function __METHODDATA__Wrapper.getwflags : Word;
begin
result := METHODDATA(GetRecordPtr^).wflags;
end;
procedure __METHODDATA__Wrapper.setvtReturn(const val : TVarType);
begin
METHODDATA(GetRecordPtr^).vtReturn := val;
end;
function __METHODDATA__Wrapper.getvtReturn : TVarType;
begin
result := METHODDATA(GetRecordPtr^).vtReturn;
end;
function __MULTI_QI__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __OBJECTDESCRIPTOR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __OBJECTDESCRIPTOR__Wrapper.setcbSize(const val : Longint);
begin
OBJECTDESCRIPTOR(GetRecordPtr^).cbSize := val;
end;
function __OBJECTDESCRIPTOR__Wrapper.getcbSize : Longint;
begin
result := OBJECTDESCRIPTOR(GetRecordPtr^).cbSize;
end;
procedure __OBJECTDESCRIPTOR__Wrapper.setdwDrawAspect(const val : Longint);
begin
OBJECTDESCRIPTOR(GetRecordPtr^).dwDrawAspect := val;
end;
function __OBJECTDESCRIPTOR__Wrapper.getdwDrawAspect : Longint;
begin
result := OBJECTDESCRIPTOR(GetRecordPtr^).dwDrawAspect;
end;
procedure __OBJECTDESCRIPTOR__Wrapper.setdwStatus(const val : Longint);
begin
OBJECTDESCRIPTOR(GetRecordPtr^).dwStatus := val;
end;
function __OBJECTDESCRIPTOR__Wrapper.getdwStatus : Longint;
begin
result := OBJECTDESCRIPTOR(GetRecordPtr^).dwStatus;
end;
procedure __OBJECTDESCRIPTOR__Wrapper.setdwFullUserTypeName(const val : Longint);
begin
OBJECTDESCRIPTOR(GetRecordPtr^).dwFullUserTypeName := val;
end;
function __OBJECTDESCRIPTOR__Wrapper.getdwFullUserTypeName : Longint;
begin
result := OBJECTDESCRIPTOR(GetRecordPtr^).dwFullUserTypeName;
end;
procedure __OBJECTDESCRIPTOR__Wrapper.setdwSrcOfCopy(const val : Longint);
begin
OBJECTDESCRIPTOR(GetRecordPtr^).dwSrcOfCopy := val;
end;
function __OBJECTDESCRIPTOR__Wrapper.getdwSrcOfCopy : Longint;
begin
result := OBJECTDESCRIPTOR(GetRecordPtr^).dwSrcOfCopy;
end;
function __OBJECTID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __OBJECTID__Wrapper.setUniquifier(const val : Longint);
begin
OBJECTID(GetRecordPtr^).Uniquifier := val;
end;
function __OBJECTID__Wrapper.getUniquifier : Longint;
begin
result := OBJECTID(GetRecordPtr^).Uniquifier;
end;
function __OCPFIPARAMS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __OCPFIPARAMS__Wrapper.setcbStructSize(const val : Longint);
begin
OCPFIPARAMS(GetRecordPtr^).cbStructSize := val;
end;
function __OCPFIPARAMS__Wrapper.getcbStructSize : Longint;
begin
result := OCPFIPARAMS(GetRecordPtr^).cbStructSize;
end;
procedure __OCPFIPARAMS__Wrapper.setx(const val : Integer);
begin
OCPFIPARAMS(GetRecordPtr^).x := val;
end;
function __OCPFIPARAMS__Wrapper.getx : Integer;
begin
result := OCPFIPARAMS(GetRecordPtr^).x;
end;
procedure __OCPFIPARAMS__Wrapper.sety(const val : Integer);
begin
OCPFIPARAMS(GetRecordPtr^).y := val;
end;
function __OCPFIPARAMS__Wrapper.gety : Integer;
begin
result := OCPFIPARAMS(GetRecordPtr^).y;
end;
procedure __OCPFIPARAMS__Wrapper.setcObjects(const val : Longint);
begin
OCPFIPARAMS(GetRecordPtr^).cObjects := val;
end;
function __OCPFIPARAMS__Wrapper.getcObjects : Longint;
begin
result := OCPFIPARAMS(GetRecordPtr^).cObjects;
end;
procedure __OCPFIPARAMS__Wrapper.setcPages(const val : Longint);
begin
OCPFIPARAMS(GetRecordPtr^).cPages := val;
end;
function __OCPFIPARAMS__Wrapper.getcPages : Longint;
begin
result := OCPFIPARAMS(GetRecordPtr^).cPages;
end;
procedure __OCPFIPARAMS__Wrapper.setlcid(const val : TLCID);
begin
OCPFIPARAMS(GetRecordPtr^).lcid := val;
end;
function __OCPFIPARAMS__Wrapper.getlcid : TLCID;
begin
result := OCPFIPARAMS(GetRecordPtr^).lcid;
end;
procedure __OCPFIPARAMS__Wrapper.setdispidInitialProperty(const val : TDispID);
begin
OCPFIPARAMS(GetRecordPtr^).dispidInitialProperty := val;
end;
function __OCPFIPARAMS__Wrapper.getdispidInitialProperty : TDispID;
begin
result := OCPFIPARAMS(GetRecordPtr^).dispidInitialProperty;
end;
function __OLECMD__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __OLECMD__Wrapper.setcmdID(const val : Cardinal);
begin
OLECMD(GetRecordPtr^).cmdID := val;
end;
function __OLECMD__Wrapper.getcmdID : Cardinal;
begin
result := OLECMD(GetRecordPtr^).cmdID;
end;
procedure __OLECMD__Wrapper.setcmdf(const val : Longint);
begin
OLECMD(GetRecordPtr^).cmdf := val;
end;
function __OLECMD__Wrapper.getcmdf : Longint;
begin
result := OLECMD(GetRecordPtr^).cmdf;
end;
function __OLECMDTEXT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __OLECMDTEXT__Wrapper.setcmdtextf(const val : Longint);
begin
OLECMDTEXT(GetRecordPtr^).cmdtextf := val;
end;
function __OLECMDTEXT__Wrapper.getcmdtextf : Longint;
begin
result := OLECMDTEXT(GetRecordPtr^).cmdtextf;
end;
procedure __OLECMDTEXT__Wrapper.setcwActual(const val : Cardinal);
begin
OLECMDTEXT(GetRecordPtr^).cwActual := val;
end;
function __OLECMDTEXT__Wrapper.getcwActual : Cardinal;
begin
result := OLECMDTEXT(GetRecordPtr^).cwActual;
end;
procedure __OLECMDTEXT__Wrapper.setcwBuf(const val : Cardinal);
begin
OLECMDTEXT(GetRecordPtr^).cwBuf := val;
end;
function __OLECMDTEXT__Wrapper.getcwBuf : Cardinal;
begin
result := OLECMDTEXT(GetRecordPtr^).cwBuf;
end;
function __OLEINPLACEFRAMEINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __OLEINPLACEFRAMEINFO__Wrapper.setcb(const val : Integer);
begin
OLEINPLACEFRAMEINFO(GetRecordPtr^).cb := val;
end;
function __OLEINPLACEFRAMEINFO__Wrapper.getcb : Integer;
begin
result := OLEINPLACEFRAMEINFO(GetRecordPtr^).cb;
end;
procedure __OLEINPLACEFRAMEINFO__Wrapper.setfMDIApp(const val : BOOL);
begin
OLEINPLACEFRAMEINFO(GetRecordPtr^).fMDIApp := val;
end;
function __OLEINPLACEFRAMEINFO__Wrapper.getfMDIApp : BOOL;
begin
result := OLEINPLACEFRAMEINFO(GetRecordPtr^).fMDIApp;
end;
procedure __OLEINPLACEFRAMEINFO__Wrapper.setcAccelEntries(const val : Integer);
begin
OLEINPLACEFRAMEINFO(GetRecordPtr^).cAccelEntries := val;
end;
function __OLEINPLACEFRAMEINFO__Wrapper.getcAccelEntries : Integer;
begin
result := OLEINPLACEFRAMEINFO(GetRecordPtr^).cAccelEntries;
end;
function __OLEMENUGROUPWIDTHS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __OLEVERB__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __OLEVERB__Wrapper.setlVerb(const val : Longint);
begin
OLEVERB(GetRecordPtr^).lVerb := val;
end;
function __OLEVERB__Wrapper.getlVerb : Longint;
begin
result := OLEVERB(GetRecordPtr^).lVerb;
end;
procedure __OLEVERB__Wrapper.setfuFlags(const val : Longint);
begin
OLEVERB(GetRecordPtr^).fuFlags := val;
end;
function __OLEVERB__Wrapper.getfuFlags : Longint;
begin
result := OLEVERB(GetRecordPtr^).fuFlags;
end;
procedure __OLEVERB__Wrapper.setgrfAttribs(const val : Longint);
begin
OLEVERB(GetRecordPtr^).grfAttribs := val;
end;
function __OLEVERB__Wrapper.getgrfAttribs : Longint;
begin
result := OLEVERB(GetRecordPtr^).grfAttribs;
end;
function __PAGERANGE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PAGERANGE__Wrapper.setnFromPage(const val : Longint);
begin
PAGERANGE(GetRecordPtr^).nFromPage := val;
end;
function __PAGERANGE__Wrapper.getnFromPage : Longint;
begin
result := PAGERANGE(GetRecordPtr^).nFromPage;
end;
procedure __PAGERANGE__Wrapper.setnToPage(const val : Longint);
begin
PAGERANGE(GetRecordPtr^).nToPage := val;
end;
function __PAGERANGE__Wrapper.getnToPage : Longint;
begin
result := PAGERANGE(GetRecordPtr^).nToPage;
end;
function __PAGESET__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PAGESET__Wrapper.setcbStruct(const val : Cardinal);
begin
PAGESET(GetRecordPtr^).cbStruct := val;
end;
function __PAGESET__Wrapper.getcbStruct : Cardinal;
begin
result := PAGESET(GetRecordPtr^).cbStruct;
end;
procedure __PAGESET__Wrapper.setfOddPages(const val : BOOL);
begin
PAGESET(GetRecordPtr^).fOddPages := val;
end;
function __PAGESET__Wrapper.getfOddPages : BOOL;
begin
result := PAGESET(GetRecordPtr^).fOddPages;
end;
procedure __PAGESET__Wrapper.setfEvenPages(const val : BOOL);
begin
PAGESET(GetRecordPtr^).fEvenPages := val;
end;
function __PAGESET__Wrapper.getfEvenPages : BOOL;
begin
result := PAGESET(GetRecordPtr^).fEvenPages;
end;
procedure __PAGESET__Wrapper.setcPageRange(const val : Cardinal);
begin
PAGESET(GetRecordPtr^).cPageRange := val;
end;
function __PAGESET__Wrapper.getcPageRange : Cardinal;
begin
result := PAGESET(GetRecordPtr^).cPageRange;
end;
function __PARAMDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PARAMDATA__Wrapper.setvt(const val : TVarType);
begin
PARAMDATA(GetRecordPtr^).vt := val;
end;
function __PARAMDATA__Wrapper.getvt : TVarType;
begin
result := PARAMDATA(GetRecordPtr^).vt;
end;
function __PARAMDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PARAMDESC__Wrapper.setwParamFlags(const val : Word);
begin
PARAMDESC(GetRecordPtr^).wParamFlags := val;
end;
function __PARAMDESC__Wrapper.getwParamFlags : Word;
begin
result := PARAMDESC(GetRecordPtr^).wParamFlags;
end;
function __PARAMDESCEX__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PARAMDESCEX__Wrapper.setcBytes(const val : Longint);
begin
PARAMDESCEX(GetRecordPtr^).cBytes := val;
end;
function __PARAMDESCEX__Wrapper.getcBytes : Longint;
begin
result := PARAMDESCEX(GetRecordPtr^).cBytes;
end;
procedure __PARAMDESCEX__Wrapper.setFourBytePad(const val : Longint);
begin
PARAMDESCEX(GetRecordPtr^).FourBytePad := val;
end;
function __PARAMDESCEX__Wrapper.getFourBytePad : Longint;
begin
result := PARAMDESCEX(GetRecordPtr^).FourBytePad;
end;
function __PICTDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PICTDESC__Wrapper.setcbSizeofstruct(const val : Integer);
begin
PICTDESC(GetRecordPtr^).cbSizeofstruct := val;
end;
function __PICTDESC__Wrapper.getcbSizeofstruct : Integer;
begin
result := PICTDESC(GetRecordPtr^).cbSizeofstruct;
end;
procedure __PICTDESC__Wrapper.setpicType(const val : Integer);
begin
PICTDESC(GetRecordPtr^).picType := val;
end;
function __PICTDESC__Wrapper.getpicType : Integer;
begin
result := PICTDESC(GetRecordPtr^).picType;
end;
procedure __PICTDESC__Wrapper.sethBitmap(const val : THandle);
begin
PICTDESC(GetRecordPtr^).hBitmap := val;
end;
function __PICTDESC__Wrapper.gethBitmap : THandle;
begin
result := PICTDESC(GetRecordPtr^).hBitmap;
end;
procedure __PICTDESC__Wrapper.sethpal(const val : THandle);
begin
PICTDESC(GetRecordPtr^).hpal := val;
end;
function __PICTDESC__Wrapper.gethpal : THandle;
begin
result := PICTDESC(GetRecordPtr^).hpal;
end;
procedure __PICTDESC__Wrapper.sethMeta(const val : THandle);
begin
PICTDESC(GetRecordPtr^).hMeta := val;
end;
function __PICTDESC__Wrapper.gethMeta : THandle;
begin
result := PICTDESC(GetRecordPtr^).hMeta;
end;
procedure __PICTDESC__Wrapper.setxExt(const val : Integer);
begin
PICTDESC(GetRecordPtr^).xExt := val;
end;
function __PICTDESC__Wrapper.getxExt : Integer;
begin
result := PICTDESC(GetRecordPtr^).xExt;
end;
procedure __PICTDESC__Wrapper.setyExt(const val : Integer);
begin
PICTDESC(GetRecordPtr^).yExt := val;
end;
function __PICTDESC__Wrapper.getyExt : Integer;
begin
result := PICTDESC(GetRecordPtr^).yExt;
end;
procedure __PICTDESC__Wrapper.sethIcon(const val : THandle);
begin
PICTDESC(GetRecordPtr^).hIcon := val;
end;
function __PICTDESC__Wrapper.gethIcon : THandle;
begin
result := PICTDESC(GetRecordPtr^).hIcon;
end;
procedure __PICTDESC__Wrapper.sethemf(const val : THandle);
begin
PICTDESC(GetRecordPtr^).hemf := val;
end;
function __PICTDESC__Wrapper.gethemf : THandle;
begin
result := PICTDESC(GetRecordPtr^).hemf;
end;
function __POINTF__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __POINTF__Wrapper.setx(const val : Single);
begin
POINTF(GetRecordPtr^).x := val;
end;
function __POINTF__Wrapper.getx : Single;
begin
result := POINTF(GetRecordPtr^).x;
end;
procedure __POINTF__Wrapper.sety(const val : Single);
begin
POINTF(GetRecordPtr^).y := val;
end;
function __POINTF__Wrapper.gety : Single;
begin
result := POINTF(GetRecordPtr^).y;
end;
function __PROPPAGEINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PROPPAGEINFO__Wrapper.setcb(const val : Longint);
begin
PROPPAGEINFO(GetRecordPtr^).cb := val;
end;
function __PROPPAGEINFO__Wrapper.getcb : Longint;
begin
result := PROPPAGEINFO(GetRecordPtr^).cb;
end;
procedure __PROPPAGEINFO__Wrapper.setdwHelpContext(const val : Longint);
begin
PROPPAGEINFO(GetRecordPtr^).dwHelpContext := val;
end;
function __PROPPAGEINFO__Wrapper.getdwHelpContext : Longint;
begin
result := PROPPAGEINFO(GetRecordPtr^).dwHelpContext;
end;
function __PROPSPEC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PROPSPEC__Wrapper.setulKind(const val : ULONG);
begin
PROPSPEC(GetRecordPtr^).ulKind := val;
end;
function __PROPSPEC__Wrapper.getulKind : ULONG;
begin
result := PROPSPEC(GetRecordPtr^).ulKind;
end;
procedure __PROPSPEC__Wrapper.setPROPID(const val : TPropID);
begin
PROPSPEC(GetRecordPtr^).PROPID := val;
end;
function __PROPSPEC__Wrapper.getPROPID : TPropID;
begin
result := PROPSPEC(GetRecordPtr^).PROPID;
end;
function __PROPVARIANT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PROPVARIANT__Wrapper.setvt(const val : TVarType);
begin
PROPVARIANT(GetRecordPtr^).vt := val;
end;
function __PROPVARIANT__Wrapper.getvt : TVarType;
begin
result := PROPVARIANT(GetRecordPtr^).vt;
end;
procedure __PROPVARIANT__Wrapper.setwReserved1(const val : Word);
begin
PROPVARIANT(GetRecordPtr^).wReserved1 := val;
end;
function __PROPVARIANT__Wrapper.getwReserved1 : Word;
begin
result := PROPVARIANT(GetRecordPtr^).wReserved1;
end;
procedure __PROPVARIANT__Wrapper.setwReserved2(const val : Word);
begin
PROPVARIANT(GetRecordPtr^).wReserved2 := val;
end;
function __PROPVARIANT__Wrapper.getwReserved2 : Word;
begin
result := PROPVARIANT(GetRecordPtr^).wReserved2;
end;
procedure __PROPVARIANT__Wrapper.setwReserved3(const val : Word);
begin
PROPVARIANT(GetRecordPtr^).wReserved3 := val;
end;
function __PROPVARIANT__Wrapper.getwReserved3 : Word;
begin
result := PROPVARIANT(GetRecordPtr^).wReserved3;
end;
procedure __PROPVARIANT__Wrapper.setbVal(const val : Byte);
begin
PROPVARIANT(GetRecordPtr^).bVal := val;
end;
function __PROPVARIANT__Wrapper.getbVal : Byte;
begin
result := PROPVARIANT(GetRecordPtr^).bVal;
end;
procedure __PROPVARIANT__Wrapper.setiVal(const val : SmallInt);
begin
PROPVARIANT(GetRecordPtr^).iVal := val;
end;
function __PROPVARIANT__Wrapper.getiVal : SmallInt;
begin
result := PROPVARIANT(GetRecordPtr^).iVal;
end;
procedure __PROPVARIANT__Wrapper.setuiVal(const val : Word);
begin
PROPVARIANT(GetRecordPtr^).uiVal := val;
end;
function __PROPVARIANT__Wrapper.getuiVal : Word;
begin
result := PROPVARIANT(GetRecordPtr^).uiVal;
end;
procedure __PROPVARIANT__Wrapper.setboolVal(const val : TOleBool);
begin
PROPVARIANT(GetRecordPtr^).boolVal := val;
end;
function __PROPVARIANT__Wrapper.getboolVal : TOleBool;
begin
result := PROPVARIANT(GetRecordPtr^).boolVal;
end;
procedure __PROPVARIANT__Wrapper.setBOOL(const val : TOleBool);
begin
PROPVARIANT(GetRecordPtr^).BOOL := val;
end;
function __PROPVARIANT__Wrapper.getBOOL : TOleBool;
begin
result := PROPVARIANT(GetRecordPtr^).BOOL;
end;
procedure __PROPVARIANT__Wrapper.setlVal(const val : Longint);
begin
PROPVARIANT(GetRecordPtr^).lVal := val;
end;
function __PROPVARIANT__Wrapper.getlVal : Longint;
begin
result := PROPVARIANT(GetRecordPtr^).lVal;
end;
procedure __PROPVARIANT__Wrapper.setulVal(const val : Cardinal);
begin
PROPVARIANT(GetRecordPtr^).ulVal := val;
end;
function __PROPVARIANT__Wrapper.getulVal : Cardinal;
begin
result := PROPVARIANT(GetRecordPtr^).ulVal;
end;
procedure __PROPVARIANT__Wrapper.setfltVal(const val : Single);
begin
PROPVARIANT(GetRecordPtr^).fltVal := val;
end;
function __PROPVARIANT__Wrapper.getfltVal : Single;
begin
result := PROPVARIANT(GetRecordPtr^).fltVal;
end;
procedure __PROPVARIANT__Wrapper.setSCODE(const val : SCODE);
begin
PROPVARIANT(GetRecordPtr^).SCODE := val;
end;
function __PROPVARIANT__Wrapper.getSCODE : SCODE;
begin
result := PROPVARIANT(GetRecordPtr^).SCODE;
end;
procedure __PROPVARIANT__Wrapper.setdblVal(const val : Double);
begin
PROPVARIANT(GetRecordPtr^).dblVal := val;
end;
function __PROPVARIANT__Wrapper.getdblVal : Double;
begin
result := PROPVARIANT(GetRecordPtr^).dblVal;
end;
procedure __PROPVARIANT__Wrapper.setcyVal(const val : Currency);
begin
PROPVARIANT(GetRecordPtr^).cyVal := val;
end;
function __PROPVARIANT__Wrapper.getcyVal : Currency;
begin
result := PROPVARIANT(GetRecordPtr^).cyVal;
end;
procedure __PROPVARIANT__Wrapper.setdate(const val : TOleDate);
begin
PROPVARIANT(GetRecordPtr^).date := val;
end;
function __PROPVARIANT__Wrapper.getdate : TOleDate;
begin
result := PROPVARIANT(GetRecordPtr^).date;
end;
function __RemSTGMEDIUM__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __RemSTGMEDIUM__Wrapper.settymed(const val : Longint);
begin
RemSTGMEDIUM(GetRecordPtr^).tymed := val;
end;
function __RemSTGMEDIUM__Wrapper.gettymed : Longint;
begin
result := RemSTGMEDIUM(GetRecordPtr^).tymed;
end;
procedure __RemSTGMEDIUM__Wrapper.setdwHandleType(const val : Longint);
begin
RemSTGMEDIUM(GetRecordPtr^).dwHandleType := val;
end;
function __RemSTGMEDIUM__Wrapper.getdwHandleType : Longint;
begin
result := RemSTGMEDIUM(GetRecordPtr^).dwHandleType;
end;
procedure __RemSTGMEDIUM__Wrapper.setpData(const val : Longint);
begin
RemSTGMEDIUM(GetRecordPtr^).pData := val;
end;
function __RemSTGMEDIUM__Wrapper.getpData : Longint;
begin
result := RemSTGMEDIUM(GetRecordPtr^).pData;
end;
procedure __RemSTGMEDIUM__Wrapper.setpUnkForRelease(const val : Longint);
begin
RemSTGMEDIUM(GetRecordPtr^).pUnkForRelease := val;
end;
function __RemSTGMEDIUM__Wrapper.getpUnkForRelease : Longint;
begin
result := RemSTGMEDIUM(GetRecordPtr^).pUnkForRelease;
end;
procedure __RemSTGMEDIUM__Wrapper.setcbData(const val : Longint);
begin
RemSTGMEDIUM(GetRecordPtr^).cbData := val;
end;
function __RemSTGMEDIUM__Wrapper.getcbData : Longint;
begin
result := RemSTGMEDIUM(GetRecordPtr^).cbData;
end;
function __RPCOLEMESSAGE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __RPCOLEMESSAGE__Wrapper.setdataRepresentation(const val : TRpcOleDataRep);
begin
RPCOLEMESSAGE(GetRecordPtr^).dataRepresentation := val;
end;
function __RPCOLEMESSAGE__Wrapper.getdataRepresentation : TRpcOleDataRep;
begin
result := RPCOLEMESSAGE(GetRecordPtr^).dataRepresentation;
end;
procedure __RPCOLEMESSAGE__Wrapper.setcbBuffer(const val : Longint);
begin
RPCOLEMESSAGE(GetRecordPtr^).cbBuffer := val;
end;
function __RPCOLEMESSAGE__Wrapper.getcbBuffer : Longint;
begin
result := RPCOLEMESSAGE(GetRecordPtr^).cbBuffer;
end;
procedure __RPCOLEMESSAGE__Wrapper.setiMethod(const val : Longint);
begin
RPCOLEMESSAGE(GetRecordPtr^).iMethod := val;
end;
function __RPCOLEMESSAGE__Wrapper.getiMethod : Longint;
begin
result := RPCOLEMESSAGE(GetRecordPtr^).iMethod;
end;
procedure __RPCOLEMESSAGE__Wrapper.setrpcFlags(const val : Longint);
begin
RPCOLEMESSAGE(GetRecordPtr^).rpcFlags := val;
end;
function __RPCOLEMESSAGE__Wrapper.getrpcFlags : Longint;
begin
result := RPCOLEMESSAGE(GetRecordPtr^).rpcFlags;
end;
function __SAFEARRAY__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SAFEARRAY__Wrapper.setcDims(const val : Word);
begin
SAFEARRAY(GetRecordPtr^).cDims := val;
end;
function __SAFEARRAY__Wrapper.getcDims : Word;
begin
result := SAFEARRAY(GetRecordPtr^).cDims;
end;
procedure __SAFEARRAY__Wrapper.setfFeatures(const val : Word);
begin
SAFEARRAY(GetRecordPtr^).fFeatures := val;
end;
function __SAFEARRAY__Wrapper.getfFeatures : Word;
begin
result := SAFEARRAY(GetRecordPtr^).fFeatures;
end;
procedure __SAFEARRAY__Wrapper.setcbElements(const val : Longint);
begin
SAFEARRAY(GetRecordPtr^).cbElements := val;
end;
function __SAFEARRAY__Wrapper.getcbElements : Longint;
begin
result := SAFEARRAY(GetRecordPtr^).cbElements;
end;
procedure __SAFEARRAY__Wrapper.setcLocks(const val : Longint);
begin
SAFEARRAY(GetRecordPtr^).cLocks := val;
end;
function __SAFEARRAY__Wrapper.getcLocks : Longint;
begin
result := SAFEARRAY(GetRecordPtr^).cLocks;
end;
function __SAFEARRAYBOUND__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SAFEARRAYBOUND__Wrapper.setcElements(const val : Longint);
begin
SAFEARRAYBOUND(GetRecordPtr^).cElements := val;
end;
function __SAFEARRAYBOUND__Wrapper.getcElements : Longint;
begin
result := SAFEARRAYBOUND(GetRecordPtr^).cElements;
end;
procedure __SAFEARRAYBOUND__Wrapper.setlLbound(const val : Longint);
begin
SAFEARRAYBOUND(GetRecordPtr^).lLbound := val;
end;
function __SAFEARRAYBOUND__Wrapper.getlLbound : Longint;
begin
result := SAFEARRAYBOUND(GetRecordPtr^).lLbound;
end;
function __SOLE_AUTHENTICATION_SERVICE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SOLE_AUTHENTICATION_SERVICE__Wrapper.setdwAuthnSvc(const val : Longint);
begin
SOLE_AUTHENTICATION_SERVICE(GetRecordPtr^).dwAuthnSvc := val;
end;
function __SOLE_AUTHENTICATION_SERVICE__Wrapper.getdwAuthnSvc : Longint;
begin
result := SOLE_AUTHENTICATION_SERVICE(GetRecordPtr^).dwAuthnSvc;
end;
procedure __SOLE_AUTHENTICATION_SERVICE__Wrapper.setdwAuthzSvc(const val : Longint);
begin
SOLE_AUTHENTICATION_SERVICE(GetRecordPtr^).dwAuthzSvc := val;
end;
function __SOLE_AUTHENTICATION_SERVICE__Wrapper.getdwAuthzSvc : Longint;
begin
result := SOLE_AUTHENTICATION_SERVICE(GetRecordPtr^).dwAuthzSvc;
end;
function __STATDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __STATDATA__Wrapper.setadvf(const val : Longint);
begin
STATDATA(GetRecordPtr^).advf := val;
end;
function __STATDATA__Wrapper.getadvf : Longint;
begin
result := STATDATA(GetRecordPtr^).advf;
end;
procedure __STATDATA__Wrapper.setdwConnection(const val : Longint);
begin
STATDATA(GetRecordPtr^).dwConnection := val;
end;
function __STATDATA__Wrapper.getdwConnection : Longint;
begin
result := STATDATA(GetRecordPtr^).dwConnection;
end;
function __STATPROPSETSTG__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __STATPROPSETSTG__Wrapper.setgrfFlags(const val : DWORD);
begin
STATPROPSETSTG(GetRecordPtr^).grfFlags := val;
end;
function __STATPROPSETSTG__Wrapper.getgrfFlags : DWORD;
begin
result := STATPROPSETSTG(GetRecordPtr^).grfFlags;
end;
procedure __STATPROPSETSTG__Wrapper.setdwOSVersion(const val : DWORD);
begin
STATPROPSETSTG(GetRecordPtr^).dwOSVersion := val;
end;
function __STATPROPSETSTG__Wrapper.getdwOSVersion : DWORD;
begin
result := STATPROPSETSTG(GetRecordPtr^).dwOSVersion;
end;
function __STATPROPSTG__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __STATPROPSTG__Wrapper.setPROPID(const val : TPropID);
begin
STATPROPSTG(GetRecordPtr^).PROPID := val;
end;
function __STATPROPSTG__Wrapper.getPROPID : TPropID;
begin
result := STATPROPSTG(GetRecordPtr^).PROPID;
end;
procedure __STATPROPSTG__Wrapper.setvt(const val : TVarType);
begin
STATPROPSTG(GetRecordPtr^).vt := val;
end;
function __STATPROPSTG__Wrapper.getvt : TVarType;
begin
result := STATPROPSTG(GetRecordPtr^).vt;
end;
function __STGMEDIUM__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __STGMEDIUM__Wrapper.settymed(const val : Longint);
begin
STGMEDIUM(GetRecordPtr^).tymed := val;
end;
function __STGMEDIUM__Wrapper.gettymed : Longint;
begin
result := STGMEDIUM(GetRecordPtr^).tymed;
end;
procedure __STGMEDIUM__Wrapper.sethMetaFilePict(const val : THandle);
begin
STGMEDIUM(GetRecordPtr^).hMetaFilePict := val;
end;
function __STGMEDIUM__Wrapper.gethMetaFilePict : THandle;
begin
result := STGMEDIUM(GetRecordPtr^).hMetaFilePict;
end;
procedure __STGMEDIUM__Wrapper.sethEnhMetaFile(const val : THandle);
begin
STGMEDIUM(GetRecordPtr^).hEnhMetaFile := val;
end;
function __STGMEDIUM__Wrapper.gethEnhMetaFile : THandle;
begin
result := STGMEDIUM(GetRecordPtr^).hEnhMetaFile;
end;
procedure __STGMEDIUM__Wrapper.sethGlobal(const val : hGlobal);
begin
STGMEDIUM(GetRecordPtr^).hGlobal := val;
end;
function __STGMEDIUM__Wrapper.gethGlobal : hGlobal;
begin
result := STGMEDIUM(GetRecordPtr^).hGlobal;
end;
function __tagARRAYDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagARRAYDESC__Wrapper.setcDims(const val : Word);
begin
tagARRAYDESC(GetRecordPtr^).cDims := val;
end;
function __tagARRAYDESC__Wrapper.getcDims : Word;
begin
result := tagARRAYDESC(GetRecordPtr^).cDims;
end;
function __tagBIND_OPTS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagBIND_OPTS__Wrapper.setcbStruct(const val : Longint);
begin
tagBIND_OPTS(GetRecordPtr^).cbStruct := val;
end;
function __tagBIND_OPTS__Wrapper.getcbStruct : Longint;
begin
result := tagBIND_OPTS(GetRecordPtr^).cbStruct;
end;
procedure __tagBIND_OPTS__Wrapper.setgrfFlags(const val : Longint);
begin
tagBIND_OPTS(GetRecordPtr^).grfFlags := val;
end;
function __tagBIND_OPTS__Wrapper.getgrfFlags : Longint;
begin
result := tagBIND_OPTS(GetRecordPtr^).grfFlags;
end;
procedure __tagBIND_OPTS__Wrapper.setgrfMode(const val : Longint);
begin
tagBIND_OPTS(GetRecordPtr^).grfMode := val;
end;
function __tagBIND_OPTS__Wrapper.getgrfMode : Longint;
begin
result := tagBIND_OPTS(GetRecordPtr^).grfMode;
end;
procedure __tagBIND_OPTS__Wrapper.setdwTickCountDeadline(const val : Longint);
begin
tagBIND_OPTS(GetRecordPtr^).dwTickCountDeadline := val;
end;
function __tagBIND_OPTS__Wrapper.getdwTickCountDeadline : Longint;
begin
result := tagBIND_OPTS(GetRecordPtr^).dwTickCountDeadline;
end;
function __tagBINDPTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __tagBLOB__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagBLOB__Wrapper.setcbSize(const val : Longint);
begin
tagBLOB(GetRecordPtr^).cbSize := val;
end;
function __tagBLOB__Wrapper.getcbSize : Longint;
begin
result := tagBLOB(GetRecordPtr^).cbSize;
end;
function __tagCABOOL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCABOOL__Wrapper.setcElems(const val : ULONG);
begin
tagCABOOL(GetRecordPtr^).cElems := val;
end;
function __tagCABOOL__Wrapper.getcElems : ULONG;
begin
result := tagCABOOL(GetRecordPtr^).cElems;
end;
function __tagCABSTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCABSTR__Wrapper.setcElems(const val : ULONG);
begin
tagCABSTR(GetRecordPtr^).cElems := val;
end;
function __tagCABSTR__Wrapper.getcElems : ULONG;
begin
result := tagCABSTR(GetRecordPtr^).cElems;
end;
function __tagCACLIPDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCACLIPDATA__Wrapper.setcElems(const val : ULONG);
begin
tagCACLIPDATA(GetRecordPtr^).cElems := val;
end;
function __tagCACLIPDATA__Wrapper.getcElems : ULONG;
begin
result := tagCACLIPDATA(GetRecordPtr^).cElems;
end;
function __tagCACLSID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCACLSID__Wrapper.setcElems(const val : ULONG);
begin
tagCACLSID(GetRecordPtr^).cElems := val;
end;
function __tagCACLSID__Wrapper.getcElems : ULONG;
begin
result := tagCACLSID(GetRecordPtr^).cElems;
end;
function __tagCACY__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCACY__Wrapper.setcElems(const val : ULONG);
begin
tagCACY(GetRecordPtr^).cElems := val;
end;
function __tagCACY__Wrapper.getcElems : ULONG;
begin
result := tagCACY(GetRecordPtr^).cElems;
end;
function __tagCADATE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCADATE__Wrapper.setcElems(const val : ULONG);
begin
tagCADATE(GetRecordPtr^).cElems := val;
end;
function __tagCADATE__Wrapper.getcElems : ULONG;
begin
result := tagCADATE(GetRecordPtr^).cElems;
end;
function __tagCADBL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCADBL__Wrapper.setcElems(const val : ULONG);
begin
tagCADBL(GetRecordPtr^).cElems := val;
end;
function __tagCADBL__Wrapper.getcElems : ULONG;
begin
result := tagCADBL(GetRecordPtr^).cElems;
end;
function __tagCADWORD__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCADWORD__Wrapper.setcElems(const val : Longint);
begin
tagCADWORD(GetRecordPtr^).cElems := val;
end;
function __tagCADWORD__Wrapper.getcElems : Longint;
begin
result := tagCADWORD(GetRecordPtr^).cElems;
end;
function __tagCAFILETIME__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAFILETIME__Wrapper.setcElems(const val : ULONG);
begin
tagCAFILETIME(GetRecordPtr^).cElems := val;
end;
function __tagCAFILETIME__Wrapper.getcElems : ULONG;
begin
result := tagCAFILETIME(GetRecordPtr^).cElems;
end;
function __tagCAFLT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAFLT__Wrapper.setcElems(const val : ULONG);
begin
tagCAFLT(GetRecordPtr^).cElems := val;
end;
function __tagCAFLT__Wrapper.getcElems : ULONG;
begin
result := tagCAFLT(GetRecordPtr^).cElems;
end;
function __tagCAH__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAH__Wrapper.setcElems(const val : ULONG);
begin
tagCAH(GetRecordPtr^).cElems := val;
end;
function __tagCAH__Wrapper.getcElems : ULONG;
begin
result := tagCAH(GetRecordPtr^).cElems;
end;
function __tagCAI__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAI__Wrapper.setcElems(const val : ULONG);
begin
tagCAI(GetRecordPtr^).cElems := val;
end;
function __tagCAI__Wrapper.getcElems : ULONG;
begin
result := tagCAI(GetRecordPtr^).cElems;
end;
function __tagCAL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAL__Wrapper.setcElems(const val : ULONG);
begin
tagCAL(GetRecordPtr^).cElems := val;
end;
function __tagCAL__Wrapper.getcElems : ULONG;
begin
result := tagCAL(GetRecordPtr^).cElems;
end;
function __tagCALPOLESTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCALPOLESTR__Wrapper.setcElems(const val : Longint);
begin
tagCALPOLESTR(GetRecordPtr^).cElems := val;
end;
function __tagCALPOLESTR__Wrapper.getcElems : Longint;
begin
result := tagCALPOLESTR(GetRecordPtr^).cElems;
end;
function __tagCALPSTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCALPSTR__Wrapper.setcElems(const val : ULONG);
begin
tagCALPSTR(GetRecordPtr^).cElems := val;
end;
function __tagCALPSTR__Wrapper.getcElems : ULONG;
begin
result := tagCALPSTR(GetRecordPtr^).cElems;
end;
function __tagCALPWSTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCALPWSTR__Wrapper.setcElems(const val : ULONG);
begin
tagCALPWSTR(GetRecordPtr^).cElems := val;
end;
function __tagCALPWSTR__Wrapper.getcElems : ULONG;
begin
result := tagCALPWSTR(GetRecordPtr^).cElems;
end;
function __tagCAPROPVARIANT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAPROPVARIANT__Wrapper.setcElems(const val : ULONG);
begin
tagCAPROPVARIANT(GetRecordPtr^).cElems := val;
end;
function __tagCAPROPVARIANT__Wrapper.getcElems : ULONG;
begin
result := tagCAPROPVARIANT(GetRecordPtr^).cElems;
end;
function __tagCASCODE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCASCODE__Wrapper.setcElems(const val : ULONG);
begin
tagCASCODE(GetRecordPtr^).cElems := val;
end;
function __tagCASCODE__Wrapper.getcElems : ULONG;
begin
result := tagCASCODE(GetRecordPtr^).cElems;
end;
function __tagCAUB__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAUB__Wrapper.setcElems(const val : ULONG);
begin
tagCAUB(GetRecordPtr^).cElems := val;
end;
function __tagCAUB__Wrapper.getcElems : ULONG;
begin
result := tagCAUB(GetRecordPtr^).cElems;
end;
function __tagCAUH__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAUH__Wrapper.setcElems(const val : ULONG);
begin
tagCAUH(GetRecordPtr^).cElems := val;
end;
function __tagCAUH__Wrapper.getcElems : ULONG;
begin
result := tagCAUH(GetRecordPtr^).cElems;
end;
function __tagCAUI__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAUI__Wrapper.setcElems(const val : ULONG);
begin
tagCAUI(GetRecordPtr^).cElems := val;
end;
function __tagCAUI__Wrapper.getcElems : ULONG;
begin
result := tagCAUI(GetRecordPtr^).cElems;
end;
function __tagCAUL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAUL__Wrapper.setcElems(const val : ULONG);
begin
tagCAUL(GetRecordPtr^).cElems := val;
end;
function __tagCAUL__Wrapper.getcElems : ULONG;
begin
result := tagCAUL(GetRecordPtr^).cElems;
end;
function __tagCAUUID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCAUUID__Wrapper.setcElems(const val : Longint);
begin
tagCAUUID(GetRecordPtr^).cElems := val;
end;
function __tagCAUUID__Wrapper.getcElems : Longint;
begin
result := tagCAUUID(GetRecordPtr^).cElems;
end;
function __tagCLIPDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCLIPDATA__Wrapper.setcbSize(const val : Longint);
begin
tagCLIPDATA(GetRecordPtr^).cbSize := val;
end;
function __tagCLIPDATA__Wrapper.getcbSize : Longint;
begin
result := tagCLIPDATA(GetRecordPtr^).cbSize;
end;
procedure __tagCLIPDATA__Wrapper.setulClipFmt(const val : Longint);
begin
tagCLIPDATA(GetRecordPtr^).ulClipFmt := val;
end;
function __tagCLIPDATA__Wrapper.getulClipFmt : Longint;
begin
result := tagCLIPDATA(GetRecordPtr^).ulClipFmt;
end;
function __tagCONNECTDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCONNECTDATA__Wrapper.setdwCookie(const val : Longint);
begin
tagCONNECTDATA(GetRecordPtr^).dwCookie := val;
end;
function __tagCONNECTDATA__Wrapper.getdwCookie : Longint;
begin
result := tagCONNECTDATA(GetRecordPtr^).dwCookie;
end;
function __tagCONTROLINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCONTROLINFO__Wrapper.setcb(const val : Longint);
begin
tagCONTROLINFO(GetRecordPtr^).cb := val;
end;
function __tagCONTROLINFO__Wrapper.getcb : Longint;
begin
result := tagCONTROLINFO(GetRecordPtr^).cb;
end;
procedure __tagCONTROLINFO__Wrapper.setcAccel(const val : Word);
begin
tagCONTROLINFO(GetRecordPtr^).cAccel := val;
end;
function __tagCONTROLINFO__Wrapper.getcAccel : Word;
begin
result := tagCONTROLINFO(GetRecordPtr^).cAccel;
end;
procedure __tagCONTROLINFO__Wrapper.setdwFlags(const val : Longint);
begin
tagCONTROLINFO(GetRecordPtr^).dwFlags := val;
end;
function __tagCONTROLINFO__Wrapper.getdwFlags : Longint;
begin
result := tagCONTROLINFO(GetRecordPtr^).dwFlags;
end;
function __tagCUSTDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCUSTDATA__Wrapper.setcCustData(const val : DWORD);
begin
tagCUSTDATA(GetRecordPtr^).cCustData := val;
end;
function __tagCUSTDATA__Wrapper.getcCustData : DWORD;
begin
result := tagCUSTDATA(GetRecordPtr^).cCustData;
end;
function __tagCUSTDATAITEM__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __tagDEC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagDEC__Wrapper.setwReserved(const val : Word);
begin
tagDEC(GetRecordPtr^).wReserved := val;
end;
function __tagDEC__Wrapper.getwReserved : Word;
begin
result := tagDEC(GetRecordPtr^).wReserved;
end;
procedure __tagDEC__Wrapper.setscale(const val : Byte);
begin
tagDEC(GetRecordPtr^).scale := val;
end;
function __tagDEC__Wrapper.getscale : Byte;
begin
result := tagDEC(GetRecordPtr^).scale;
end;
procedure __tagDEC__Wrapper.setsign(const val : Byte);
begin
tagDEC(GetRecordPtr^).sign := val;
end;
function __tagDEC__Wrapper.getsign : Byte;
begin
result := tagDEC(GetRecordPtr^).sign;
end;
procedure __tagDEC__Wrapper.setHi32(const val : Longint);
begin
tagDEC(GetRecordPtr^).Hi32 := val;
end;
function __tagDEC__Wrapper.getHi32 : Longint;
begin
result := tagDEC(GetRecordPtr^).Hi32;
end;
procedure __tagDEC__Wrapper.setLo32(const val : Longint);
begin
tagDEC(GetRecordPtr^).Lo32 := val;
end;
function __tagDEC__Wrapper.getLo32 : Longint;
begin
result := tagDEC(GetRecordPtr^).Lo32;
end;
procedure __tagDEC__Wrapper.setMid32(const val : Longint);
begin
tagDEC(GetRecordPtr^).Mid32 := val;
end;
function __tagDEC__Wrapper.getMid32 : Longint;
begin
result := tagDEC(GetRecordPtr^).Mid32;
end;
procedure __tagDEC__Wrapper.setsignscale(const val : Word);
begin
tagDEC(GetRecordPtr^).signscale := val;
end;
function __tagDEC__Wrapper.getsignscale : Word;
begin
result := tagDEC(GetRecordPtr^).signscale;
end;
function __tagDISPPARAMS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagDISPPARAMS__Wrapper.setcArgs(const val : Longint);
begin
tagDISPPARAMS(GetRecordPtr^).cArgs := val;
end;
function __tagDISPPARAMS__Wrapper.getcArgs : Longint;
begin
result := tagDISPPARAMS(GetRecordPtr^).cArgs;
end;
procedure __tagDISPPARAMS__Wrapper.setcNamedArgs(const val : Longint);
begin
tagDISPPARAMS(GetRecordPtr^).cNamedArgs := val;
end;
function __tagDISPPARAMS__Wrapper.getcNamedArgs : Longint;
begin
result := tagDISPPARAMS(GetRecordPtr^).cNamedArgs;
end;
function __tagDVTARGETDEVICE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagDVTARGETDEVICE__Wrapper.settdSize(const val : Longint);
begin
tagDVTARGETDEVICE(GetRecordPtr^).tdSize := val;
end;
function __tagDVTARGETDEVICE__Wrapper.gettdSize : Longint;
begin
result := tagDVTARGETDEVICE(GetRecordPtr^).tdSize;
end;
procedure __tagDVTARGETDEVICE__Wrapper.settdDriverNameOffset(const val : Word);
begin
tagDVTARGETDEVICE(GetRecordPtr^).tdDriverNameOffset := val;
end;
function __tagDVTARGETDEVICE__Wrapper.gettdDriverNameOffset : Word;
begin
result := tagDVTARGETDEVICE(GetRecordPtr^).tdDriverNameOffset;
end;
procedure __tagDVTARGETDEVICE__Wrapper.settdDeviceNameOffset(const val : Word);
begin
tagDVTARGETDEVICE(GetRecordPtr^).tdDeviceNameOffset := val;
end;
function __tagDVTARGETDEVICE__Wrapper.gettdDeviceNameOffset : Word;
begin
result := tagDVTARGETDEVICE(GetRecordPtr^).tdDeviceNameOffset;
end;
procedure __tagDVTARGETDEVICE__Wrapper.settdPortNameOffset(const val : Word);
begin
tagDVTARGETDEVICE(GetRecordPtr^).tdPortNameOffset := val;
end;
function __tagDVTARGETDEVICE__Wrapper.gettdPortNameOffset : Word;
begin
result := tagDVTARGETDEVICE(GetRecordPtr^).tdPortNameOffset;
end;
procedure __tagDVTARGETDEVICE__Wrapper.settdExtDevmodeOffset(const val : Word);
begin
tagDVTARGETDEVICE(GetRecordPtr^).tdExtDevmodeOffset := val;
end;
function __tagDVTARGETDEVICE__Wrapper.gettdExtDevmodeOffset : Word;
begin
result := tagDVTARGETDEVICE(GetRecordPtr^).tdExtDevmodeOffset;
end;
function __tagELEMDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __tagEXCEPINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagEXCEPINFO__Wrapper.setwCode(const val : Word);
begin
tagEXCEPINFO(GetRecordPtr^).wCode := val;
end;
function __tagEXCEPINFO__Wrapper.getwCode : Word;
begin
result := tagEXCEPINFO(GetRecordPtr^).wCode;
end;
procedure __tagEXCEPINFO__Wrapper.setwReserved(const val : Word);
begin
tagEXCEPINFO(GetRecordPtr^).wReserved := val;
end;
function __tagEXCEPINFO__Wrapper.getwReserved : Word;
begin
result := tagEXCEPINFO(GetRecordPtr^).wReserved;
end;
procedure __tagEXCEPINFO__Wrapper.setbstrSource(const val : WideString);
begin
tagEXCEPINFO(GetRecordPtr^).bstrSource := val;
end;
function __tagEXCEPINFO__Wrapper.getbstrSource : WideString;
begin
result := tagEXCEPINFO(GetRecordPtr^).bstrSource;
end;
procedure __tagEXCEPINFO__Wrapper.setbstrDescription(const val : WideString);
begin
tagEXCEPINFO(GetRecordPtr^).bstrDescription := val;
end;
function __tagEXCEPINFO__Wrapper.getbstrDescription : WideString;
begin
result := tagEXCEPINFO(GetRecordPtr^).bstrDescription;
end;
procedure __tagEXCEPINFO__Wrapper.setbstrHelpFile(const val : WideString);
begin
tagEXCEPINFO(GetRecordPtr^).bstrHelpFile := val;
end;
function __tagEXCEPINFO__Wrapper.getbstrHelpFile : WideString;
begin
result := tagEXCEPINFO(GetRecordPtr^).bstrHelpFile;
end;
procedure __tagEXCEPINFO__Wrapper.setdwHelpContext(const val : Longint);
begin
tagEXCEPINFO(GetRecordPtr^).dwHelpContext := val;
end;
function __tagEXCEPINFO__Wrapper.getdwHelpContext : Longint;
begin
result := tagEXCEPINFO(GetRecordPtr^).dwHelpContext;
end;
function __tagFONTDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagFONTDESC__Wrapper.setcbSizeofstruct(const val : Integer);
begin
tagFONTDESC(GetRecordPtr^).cbSizeofstruct := val;
end;
function __tagFONTDESC__Wrapper.getcbSizeofstruct : Integer;
begin
result := tagFONTDESC(GetRecordPtr^).cbSizeofstruct;
end;
procedure __tagFONTDESC__Wrapper.setcySize(const val : Currency);
begin
tagFONTDESC(GetRecordPtr^).cySize := val;
end;
function __tagFONTDESC__Wrapper.getcySize : Currency;
begin
result := tagFONTDESC(GetRecordPtr^).cySize;
end;
procedure __tagFONTDESC__Wrapper.setsWeight(const val : SmallInt);
begin
tagFONTDESC(GetRecordPtr^).sWeight := val;
end;
function __tagFONTDESC__Wrapper.getsWeight : SmallInt;
begin
result := tagFONTDESC(GetRecordPtr^).sWeight;
end;
procedure __tagFONTDESC__Wrapper.setsCharset(const val : SmallInt);
begin
tagFONTDESC(GetRecordPtr^).sCharset := val;
end;
function __tagFONTDESC__Wrapper.getsCharset : SmallInt;
begin
result := tagFONTDESC(GetRecordPtr^).sCharset;
end;
procedure __tagFONTDESC__Wrapper.setfItalic(const val : BOOL);
begin
tagFONTDESC(GetRecordPtr^).fItalic := val;
end;
function __tagFONTDESC__Wrapper.getfItalic : BOOL;
begin
result := tagFONTDESC(GetRecordPtr^).fItalic;
end;
procedure __tagFONTDESC__Wrapper.setfUnderline(const val : BOOL);
begin
tagFONTDESC(GetRecordPtr^).fUnderline := val;
end;
function __tagFONTDESC__Wrapper.getfUnderline : BOOL;
begin
result := tagFONTDESC(GetRecordPtr^).fUnderline;
end;
procedure __tagFONTDESC__Wrapper.setfStrikethrough(const val : BOOL);
begin
tagFONTDESC(GetRecordPtr^).fStrikethrough := val;
end;
function __tagFONTDESC__Wrapper.getfStrikethrough : BOOL;
begin
result := tagFONTDESC(GetRecordPtr^).fStrikethrough;
end;
function __tagFORMATETC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagFORMATETC__Wrapper.setcfFormat(const val : TClipFormat);
begin
tagFORMATETC(GetRecordPtr^).cfFormat := val;
end;
function __tagFORMATETC__Wrapper.getcfFormat : TClipFormat;
begin
result := tagFORMATETC(GetRecordPtr^).cfFormat;
end;
procedure __tagFORMATETC__Wrapper.setdwAspect(const val : Longint);
begin
tagFORMATETC(GetRecordPtr^).dwAspect := val;
end;
function __tagFORMATETC__Wrapper.getdwAspect : Longint;
begin
result := tagFORMATETC(GetRecordPtr^).dwAspect;
end;
procedure __tagFORMATETC__Wrapper.setlindex(const val : Longint);
begin
tagFORMATETC(GetRecordPtr^).lindex := val;
end;
function __tagFORMATETC__Wrapper.getlindex : Longint;
begin
result := tagFORMATETC(GetRecordPtr^).lindex;
end;
procedure __tagFORMATETC__Wrapper.settymed(const val : Longint);
begin
tagFORMATETC(GetRecordPtr^).tymed := val;
end;
function __tagFORMATETC__Wrapper.gettymed : Longint;
begin
result := tagFORMATETC(GetRecordPtr^).tymed;
end;
function __tagFUNCDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagFUNCDESC__Wrapper.setmemid(const val : TMemberID);
begin
tagFUNCDESC(GetRecordPtr^).memid := val;
end;
function __tagFUNCDESC__Wrapper.getmemid : TMemberID;
begin
result := tagFUNCDESC(GetRecordPtr^).memid;
end;
procedure __tagFUNCDESC__Wrapper.setfunckind(const val : TFuncKind);
begin
tagFUNCDESC(GetRecordPtr^).funckind := val;
end;
function __tagFUNCDESC__Wrapper.getfunckind : TFuncKind;
begin
result := tagFUNCDESC(GetRecordPtr^).funckind;
end;
procedure __tagFUNCDESC__Wrapper.setinvkind(const val : TInvokeKind);
begin
tagFUNCDESC(GetRecordPtr^).invkind := val;
end;
function __tagFUNCDESC__Wrapper.getinvkind : TInvokeKind;
begin
result := tagFUNCDESC(GetRecordPtr^).invkind;
end;
procedure __tagFUNCDESC__Wrapper.setcallconv(const val : TCallConv);
begin
tagFUNCDESC(GetRecordPtr^).callconv := val;
end;
function __tagFUNCDESC__Wrapper.getcallconv : TCallConv;
begin
result := tagFUNCDESC(GetRecordPtr^).callconv;
end;
procedure __tagFUNCDESC__Wrapper.setcParams(const val : SmallInt);
begin
tagFUNCDESC(GetRecordPtr^).cParams := val;
end;
function __tagFUNCDESC__Wrapper.getcParams : SmallInt;
begin
result := tagFUNCDESC(GetRecordPtr^).cParams;
end;
procedure __tagFUNCDESC__Wrapper.setcParamsOpt(const val : SmallInt);
begin
tagFUNCDESC(GetRecordPtr^).cParamsOpt := val;
end;
function __tagFUNCDESC__Wrapper.getcParamsOpt : SmallInt;
begin
result := tagFUNCDESC(GetRecordPtr^).cParamsOpt;
end;
procedure __tagFUNCDESC__Wrapper.setoVft(const val : SmallInt);
begin
tagFUNCDESC(GetRecordPtr^).oVft := val;
end;
function __tagFUNCDESC__Wrapper.getoVft : SmallInt;
begin
result := tagFUNCDESC(GetRecordPtr^).oVft;
end;
procedure __tagFUNCDESC__Wrapper.setcScodes(const val : SmallInt);
begin
tagFUNCDESC(GetRecordPtr^).cScodes := val;
end;
function __tagFUNCDESC__Wrapper.getcScodes : SmallInt;
begin
result := tagFUNCDESC(GetRecordPtr^).cScodes;
end;
procedure __tagFUNCDESC__Wrapper.setwFuncFlags(const val : Word);
begin
tagFUNCDESC(GetRecordPtr^).wFuncFlags := val;
end;
function __tagFUNCDESC__Wrapper.getwFuncFlags : Word;
begin
result := tagFUNCDESC(GetRecordPtr^).wFuncFlags;
end;
function __tagIDLDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagIDLDESC__Wrapper.setdwReserved(const val : Longint);
begin
tagIDLDESC(GetRecordPtr^).dwReserved := val;
end;
function __tagIDLDESC__Wrapper.getdwReserved : Longint;
begin
result := tagIDLDESC(GetRecordPtr^).dwReserved;
end;
procedure __tagIDLDESC__Wrapper.setwIDLFlags(const val : Word);
begin
tagIDLDESC(GetRecordPtr^).wIDLFlags := val;
end;
function __tagIDLDESC__Wrapper.getwIDLFlags : Word;
begin
result := tagIDLDESC(GetRecordPtr^).wIDLFlags;
end;
function __tagINTERFACEDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagINTERFACEDATA__Wrapper.setcMembers(const val : Integer);
begin
tagINTERFACEDATA(GetRecordPtr^).cMembers := val;
end;
function __tagINTERFACEDATA__Wrapper.getcMembers : Integer;
begin
result := tagINTERFACEDATA(GetRecordPtr^).cMembers;
end;
function __tagINTERFACEINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagINTERFACEINFO__Wrapper.setwMethod(const val : Word);
begin
tagINTERFACEINFO(GetRecordPtr^).wMethod := val;
end;
function __tagINTERFACEINFO__Wrapper.getwMethod : Word;
begin
result := tagINTERFACEINFO(GetRecordPtr^).wMethod;
end;
function __tagLICINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagLICINFO__Wrapper.setcbLicInfo(const val : Longint);
begin
tagLICINFO(GetRecordPtr^).cbLicInfo := val;
end;
function __tagLICINFO__Wrapper.getcbLicInfo : Longint;
begin
result := tagLICINFO(GetRecordPtr^).cbLicInfo;
end;
procedure __tagLICINFO__Wrapper.setfRuntimeKeyAvail(const val : BOOL);
begin
tagLICINFO(GetRecordPtr^).fRuntimeKeyAvail := val;
end;
function __tagLICINFO__Wrapper.getfRuntimeKeyAvail : BOOL;
begin
result := tagLICINFO(GetRecordPtr^).fRuntimeKeyAvail;
end;
procedure __tagLICINFO__Wrapper.setfLicVerified(const val : BOOL);
begin
tagLICINFO(GetRecordPtr^).fLicVerified := val;
end;
function __tagLICINFO__Wrapper.getfLicVerified : BOOL;
begin
result := tagLICINFO(GetRecordPtr^).fLicVerified;
end;
function __tagMETHODDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagMETHODDATA__Wrapper.setdispid(const val : TDispID);
begin
tagMETHODDATA(GetRecordPtr^).dispid := val;
end;
function __tagMETHODDATA__Wrapper.getdispid : TDispID;
begin
result := tagMETHODDATA(GetRecordPtr^).dispid;
end;
procedure __tagMETHODDATA__Wrapper.setiMeth(const val : Integer);
begin
tagMETHODDATA(GetRecordPtr^).iMeth := val;
end;
function __tagMETHODDATA__Wrapper.getiMeth : Integer;
begin
result := tagMETHODDATA(GetRecordPtr^).iMeth;
end;
procedure __tagMETHODDATA__Wrapper.setcc(const val : TCallConv);
begin
tagMETHODDATA(GetRecordPtr^).cc := val;
end;
function __tagMETHODDATA__Wrapper.getcc : TCallConv;
begin
result := tagMETHODDATA(GetRecordPtr^).cc;
end;
procedure __tagMETHODDATA__Wrapper.setcArgs(const val : Integer);
begin
tagMETHODDATA(GetRecordPtr^).cArgs := val;
end;
function __tagMETHODDATA__Wrapper.getcArgs : Integer;
begin
result := tagMETHODDATA(GetRecordPtr^).cArgs;
end;
procedure __tagMETHODDATA__Wrapper.setwflags(const val : Word);
begin
tagMETHODDATA(GetRecordPtr^).wflags := val;
end;
function __tagMETHODDATA__Wrapper.getwflags : Word;
begin
result := tagMETHODDATA(GetRecordPtr^).wflags;
end;
procedure __tagMETHODDATA__Wrapper.setvtReturn(const val : TVarType);
begin
tagMETHODDATA(GetRecordPtr^).vtReturn := val;
end;
function __tagMETHODDATA__Wrapper.getvtReturn : TVarType;
begin
result := tagMETHODDATA(GetRecordPtr^).vtReturn;
end;
function __tagMULTI_QI__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __tagOBJECTDESCRIPTOR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagOBJECTDESCRIPTOR__Wrapper.setcbSize(const val : Longint);
begin
tagOBJECTDESCRIPTOR(GetRecordPtr^).cbSize := val;
end;
function __tagOBJECTDESCRIPTOR__Wrapper.getcbSize : Longint;
begin
result := tagOBJECTDESCRIPTOR(GetRecordPtr^).cbSize;
end;
procedure __tagOBJECTDESCRIPTOR__Wrapper.setdwDrawAspect(const val : Longint);
begin
tagOBJECTDESCRIPTOR(GetRecordPtr^).dwDrawAspect := val;
end;
function __tagOBJECTDESCRIPTOR__Wrapper.getdwDrawAspect : Longint;
begin
result := tagOBJECTDESCRIPTOR(GetRecordPtr^).dwDrawAspect;
end;
procedure __tagOBJECTDESCRIPTOR__Wrapper.setdwStatus(const val : Longint);
begin
tagOBJECTDESCRIPTOR(GetRecordPtr^).dwStatus := val;
end;
function __tagOBJECTDESCRIPTOR__Wrapper.getdwStatus : Longint;
begin
result := tagOBJECTDESCRIPTOR(GetRecordPtr^).dwStatus;
end;
procedure __tagOBJECTDESCRIPTOR__Wrapper.setdwFullUserTypeName(const val : Longint);
begin
tagOBJECTDESCRIPTOR(GetRecordPtr^).dwFullUserTypeName := val;
end;
function __tagOBJECTDESCRIPTOR__Wrapper.getdwFullUserTypeName : Longint;
begin
result := tagOBJECTDESCRIPTOR(GetRecordPtr^).dwFullUserTypeName;
end;
procedure __tagOBJECTDESCRIPTOR__Wrapper.setdwSrcOfCopy(const val : Longint);
begin
tagOBJECTDESCRIPTOR(GetRecordPtr^).dwSrcOfCopy := val;
end;
function __tagOBJECTDESCRIPTOR__Wrapper.getdwSrcOfCopy : Longint;
begin
result := tagOBJECTDESCRIPTOR(GetRecordPtr^).dwSrcOfCopy;
end;
function __tagOCPFIPARAMS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagOCPFIPARAMS__Wrapper.setcbStructSize(const val : Longint);
begin
tagOCPFIPARAMS(GetRecordPtr^).cbStructSize := val;
end;
function __tagOCPFIPARAMS__Wrapper.getcbStructSize : Longint;
begin
result := tagOCPFIPARAMS(GetRecordPtr^).cbStructSize;
end;
procedure __tagOCPFIPARAMS__Wrapper.setx(const val : Integer);
begin
tagOCPFIPARAMS(GetRecordPtr^).x := val;
end;
function __tagOCPFIPARAMS__Wrapper.getx : Integer;
begin
result := tagOCPFIPARAMS(GetRecordPtr^).x;
end;
procedure __tagOCPFIPARAMS__Wrapper.sety(const val : Integer);
begin
tagOCPFIPARAMS(GetRecordPtr^).y := val;
end;
function __tagOCPFIPARAMS__Wrapper.gety : Integer;
begin
result := tagOCPFIPARAMS(GetRecordPtr^).y;
end;
procedure __tagOCPFIPARAMS__Wrapper.setcObjects(const val : Longint);
begin
tagOCPFIPARAMS(GetRecordPtr^).cObjects := val;
end;
function __tagOCPFIPARAMS__Wrapper.getcObjects : Longint;
begin
result := tagOCPFIPARAMS(GetRecordPtr^).cObjects;
end;
procedure __tagOCPFIPARAMS__Wrapper.setcPages(const val : Longint);
begin
tagOCPFIPARAMS(GetRecordPtr^).cPages := val;
end;
function __tagOCPFIPARAMS__Wrapper.getcPages : Longint;
begin
result := tagOCPFIPARAMS(GetRecordPtr^).cPages;
end;
procedure __tagOCPFIPARAMS__Wrapper.setlcid(const val : TLCID);
begin
tagOCPFIPARAMS(GetRecordPtr^).lcid := val;
end;
function __tagOCPFIPARAMS__Wrapper.getlcid : TLCID;
begin
result := tagOCPFIPARAMS(GetRecordPtr^).lcid;
end;
procedure __tagOCPFIPARAMS__Wrapper.setdispidInitialProperty(const val : TDispID);
begin
tagOCPFIPARAMS(GetRecordPtr^).dispidInitialProperty := val;
end;
function __tagOCPFIPARAMS__Wrapper.getdispidInitialProperty : TDispID;
begin
result := tagOCPFIPARAMS(GetRecordPtr^).dispidInitialProperty;
end;
function __tagOIFI__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagOIFI__Wrapper.setcb(const val : Integer);
begin
tagOIFI(GetRecordPtr^).cb := val;
end;
function __tagOIFI__Wrapper.getcb : Integer;
begin
result := tagOIFI(GetRecordPtr^).cb;
end;
procedure __tagOIFI__Wrapper.setfMDIApp(const val : BOOL);
begin
tagOIFI(GetRecordPtr^).fMDIApp := val;
end;
function __tagOIFI__Wrapper.getfMDIApp : BOOL;
begin
result := tagOIFI(GetRecordPtr^).fMDIApp;
end;
procedure __tagOIFI__Wrapper.setcAccelEntries(const val : Integer);
begin
tagOIFI(GetRecordPtr^).cAccelEntries := val;
end;
function __tagOIFI__Wrapper.getcAccelEntries : Integer;
begin
result := tagOIFI(GetRecordPtr^).cAccelEntries;
end;
function __tagOleMenuGroupWidths__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __tagOLEVERB__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagOLEVERB__Wrapper.setlVerb(const val : Longint);
begin
tagOLEVERB(GetRecordPtr^).lVerb := val;
end;
function __tagOLEVERB__Wrapper.getlVerb : Longint;
begin
result := tagOLEVERB(GetRecordPtr^).lVerb;
end;
procedure __tagOLEVERB__Wrapper.setfuFlags(const val : Longint);
begin
tagOLEVERB(GetRecordPtr^).fuFlags := val;
end;
function __tagOLEVERB__Wrapper.getfuFlags : Longint;
begin
result := tagOLEVERB(GetRecordPtr^).fuFlags;
end;
procedure __tagOLEVERB__Wrapper.setgrfAttribs(const val : Longint);
begin
tagOLEVERB(GetRecordPtr^).grfAttribs := val;
end;
function __tagOLEVERB__Wrapper.getgrfAttribs : Longint;
begin
result := tagOLEVERB(GetRecordPtr^).grfAttribs;
end;
function __tagPAGERANGE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagPAGERANGE__Wrapper.setnFromPage(const val : Longint);
begin
tagPAGERANGE(GetRecordPtr^).nFromPage := val;
end;
function __tagPAGERANGE__Wrapper.getnFromPage : Longint;
begin
result := tagPAGERANGE(GetRecordPtr^).nFromPage;
end;
procedure __tagPAGERANGE__Wrapper.setnToPage(const val : Longint);
begin
tagPAGERANGE(GetRecordPtr^).nToPage := val;
end;
function __tagPAGERANGE__Wrapper.getnToPage : Longint;
begin
result := tagPAGERANGE(GetRecordPtr^).nToPage;
end;
function __tagPAGESET__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagPAGESET__Wrapper.setcbStruct(const val : Cardinal);
begin
tagPAGESET(GetRecordPtr^).cbStruct := val;
end;
function __tagPAGESET__Wrapper.getcbStruct : Cardinal;
begin
result := tagPAGESET(GetRecordPtr^).cbStruct;
end;
procedure __tagPAGESET__Wrapper.setfOddPages(const val : BOOL);
begin
tagPAGESET(GetRecordPtr^).fOddPages := val;
end;
function __tagPAGESET__Wrapper.getfOddPages : BOOL;
begin
result := tagPAGESET(GetRecordPtr^).fOddPages;
end;
procedure __tagPAGESET__Wrapper.setfEvenPages(const val : BOOL);
begin
tagPAGESET(GetRecordPtr^).fEvenPages := val;
end;
function __tagPAGESET__Wrapper.getfEvenPages : BOOL;
begin
result := tagPAGESET(GetRecordPtr^).fEvenPages;
end;
procedure __tagPAGESET__Wrapper.setcPageRange(const val : Cardinal);
begin
tagPAGESET(GetRecordPtr^).cPageRange := val;
end;
function __tagPAGESET__Wrapper.getcPageRange : Cardinal;
begin
result := tagPAGESET(GetRecordPtr^).cPageRange;
end;
function __tagPARAMDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagPARAMDATA__Wrapper.setvt(const val : TVarType);
begin
tagPARAMDATA(GetRecordPtr^).vt := val;
end;
function __tagPARAMDATA__Wrapper.getvt : TVarType;
begin
result := tagPARAMDATA(GetRecordPtr^).vt;
end;
function __tagPARAMDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagPARAMDESC__Wrapper.setwParamFlags(const val : Word);
begin
tagPARAMDESC(GetRecordPtr^).wParamFlags := val;
end;
function __tagPARAMDESC__Wrapper.getwParamFlags : Word;
begin
result := tagPARAMDESC(GetRecordPtr^).wParamFlags;
end;
function __tagPARAMDESCEX__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagPARAMDESCEX__Wrapper.setcBytes(const val : Longint);
begin
tagPARAMDESCEX(GetRecordPtr^).cBytes := val;
end;
function __tagPARAMDESCEX__Wrapper.getcBytes : Longint;
begin
result := tagPARAMDESCEX(GetRecordPtr^).cBytes;
end;
procedure __tagPARAMDESCEX__Wrapper.setFourBytePad(const val : Longint);
begin
tagPARAMDESCEX(GetRecordPtr^).FourBytePad := val;
end;
function __tagPARAMDESCEX__Wrapper.getFourBytePad : Longint;
begin
result := tagPARAMDESCEX(GetRecordPtr^).FourBytePad;
end;
function __tagPICTDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagPICTDESC__Wrapper.setcbSizeofstruct(const val : Integer);
begin
tagPICTDESC(GetRecordPtr^).cbSizeofstruct := val;
end;
function __tagPICTDESC__Wrapper.getcbSizeofstruct : Integer;
begin
result := tagPICTDESC(GetRecordPtr^).cbSizeofstruct;
end;
procedure __tagPICTDESC__Wrapper.setpicType(const val : Integer);
begin
tagPICTDESC(GetRecordPtr^).picType := val;
end;
function __tagPICTDESC__Wrapper.getpicType : Integer;
begin
result := tagPICTDESC(GetRecordPtr^).picType;
end;
procedure __tagPICTDESC__Wrapper.sethBitmap(const val : THandle);
begin
tagPICTDESC(GetRecordPtr^).hBitmap := val;
end;
function __tagPICTDESC__Wrapper.gethBitmap : THandle;
begin
result := tagPICTDESC(GetRecordPtr^).hBitmap;
end;
procedure __tagPICTDESC__Wrapper.sethpal(const val : THandle);
begin
tagPICTDESC(GetRecordPtr^).hpal := val;
end;
function __tagPICTDESC__Wrapper.gethpal : THandle;
begin
result := tagPICTDESC(GetRecordPtr^).hpal;
end;
procedure __tagPICTDESC__Wrapper.sethMeta(const val : THandle);
begin
tagPICTDESC(GetRecordPtr^).hMeta := val;
end;
function __tagPICTDESC__Wrapper.gethMeta : THandle;
begin
result := tagPICTDESC(GetRecordPtr^).hMeta;
end;
procedure __tagPICTDESC__Wrapper.setxExt(const val : Integer);
begin
tagPICTDESC(GetRecordPtr^).xExt := val;
end;
function __tagPICTDESC__Wrapper.getxExt : Integer;
begin
result := tagPICTDESC(GetRecordPtr^).xExt;
end;
procedure __tagPICTDESC__Wrapper.setyExt(const val : Integer);
begin
tagPICTDESC(GetRecordPtr^).yExt := val;
end;
function __tagPICTDESC__Wrapper.getyExt : Integer;
begin
result := tagPICTDESC(GetRecordPtr^).yExt;
end;
procedure __tagPICTDESC__Wrapper.sethIcon(const val : THandle);
begin
tagPICTDESC(GetRecordPtr^).hIcon := val;
end;
function __tagPICTDESC__Wrapper.gethIcon : THandle;
begin
result := tagPICTDESC(GetRecordPtr^).hIcon;
end;
procedure __tagPICTDESC__Wrapper.sethemf(const val : THandle);
begin
tagPICTDESC(GetRecordPtr^).hemf := val;
end;
function __tagPICTDESC__Wrapper.gethemf : THandle;
begin
result := tagPICTDESC(GetRecordPtr^).hemf;
end;
function __tagPOINTF__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagPOINTF__Wrapper.setx(const val : Single);
begin
tagPOINTF(GetRecordPtr^).x := val;
end;
function __tagPOINTF__Wrapper.getx : Single;
begin
result := tagPOINTF(GetRecordPtr^).x;
end;
procedure __tagPOINTF__Wrapper.sety(const val : Single);
begin
tagPOINTF(GetRecordPtr^).y := val;
end;
function __tagPOINTF__Wrapper.gety : Single;
begin
result := tagPOINTF(GetRecordPtr^).y;
end;
function __tagPROPPAGEINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagPROPPAGEINFO__Wrapper.setcb(const val : Longint);
begin
tagPROPPAGEINFO(GetRecordPtr^).cb := val;
end;
function __tagPROPPAGEINFO__Wrapper.getcb : Longint;
begin
result := tagPROPPAGEINFO(GetRecordPtr^).cb;
end;
procedure __tagPROPPAGEINFO__Wrapper.setdwHelpContext(const val : Longint);
begin
tagPROPPAGEINFO(GetRecordPtr^).dwHelpContext := val;
end;
function __tagPROPPAGEINFO__Wrapper.getdwHelpContext : Longint;
begin
result := tagPROPPAGEINFO(GetRecordPtr^).dwHelpContext;
end;
function __tagPROPSPEC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagPROPSPEC__Wrapper.setulKind(const val : ULONG);
begin
tagPROPSPEC(GetRecordPtr^).ulKind := val;
end;
function __tagPROPSPEC__Wrapper.getulKind : ULONG;
begin
result := tagPROPSPEC(GetRecordPtr^).ulKind;
end;
procedure __tagPROPSPEC__Wrapper.setPROPID(const val : TPropID);
begin
tagPROPSPEC(GetRecordPtr^).PROPID := val;
end;
function __tagPROPSPEC__Wrapper.getPROPID : TPropID;
begin
result := tagPROPSPEC(GetRecordPtr^).PROPID;
end;
function __tagPROPVARIANT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagPROPVARIANT__Wrapper.setvt(const val : TVarType);
begin
tagPROPVARIANT(GetRecordPtr^).vt := val;
end;
function __tagPROPVARIANT__Wrapper.getvt : TVarType;
begin
result := tagPROPVARIANT(GetRecordPtr^).vt;
end;
procedure __tagPROPVARIANT__Wrapper.setwReserved1(const val : Word);
begin
tagPROPVARIANT(GetRecordPtr^).wReserved1 := val;
end;
function __tagPROPVARIANT__Wrapper.getwReserved1 : Word;
begin
result := tagPROPVARIANT(GetRecordPtr^).wReserved1;
end;
procedure __tagPROPVARIANT__Wrapper.setwReserved2(const val : Word);
begin
tagPROPVARIANT(GetRecordPtr^).wReserved2 := val;
end;
function __tagPROPVARIANT__Wrapper.getwReserved2 : Word;
begin
result := tagPROPVARIANT(GetRecordPtr^).wReserved2;
end;
procedure __tagPROPVARIANT__Wrapper.setwReserved3(const val : Word);
begin
tagPROPVARIANT(GetRecordPtr^).wReserved3 := val;
end;
function __tagPROPVARIANT__Wrapper.getwReserved3 : Word;
begin
result := tagPROPVARIANT(GetRecordPtr^).wReserved3;
end;
procedure __tagPROPVARIANT__Wrapper.setbVal(const val : Byte);
begin
tagPROPVARIANT(GetRecordPtr^).bVal := val;
end;
function __tagPROPVARIANT__Wrapper.getbVal : Byte;
begin
result := tagPROPVARIANT(GetRecordPtr^).bVal;
end;
procedure __tagPROPVARIANT__Wrapper.setiVal(const val : SmallInt);
begin
tagPROPVARIANT(GetRecordPtr^).iVal := val;
end;
function __tagPROPVARIANT__Wrapper.getiVal : SmallInt;
begin
result := tagPROPVARIANT(GetRecordPtr^).iVal;
end;
procedure __tagPROPVARIANT__Wrapper.setuiVal(const val : Word);
begin
tagPROPVARIANT(GetRecordPtr^).uiVal := val;
end;
function __tagPROPVARIANT__Wrapper.getuiVal : Word;
begin
result := tagPROPVARIANT(GetRecordPtr^).uiVal;
end;
procedure __tagPROPVARIANT__Wrapper.setboolVal(const val : TOleBool);
begin
tagPROPVARIANT(GetRecordPtr^).boolVal := val;
end;
function __tagPROPVARIANT__Wrapper.getboolVal : TOleBool;
begin
result := tagPROPVARIANT(GetRecordPtr^).boolVal;
end;
procedure __tagPROPVARIANT__Wrapper.setBOOL(const val : TOleBool);
begin
tagPROPVARIANT(GetRecordPtr^).BOOL := val;
end;
function __tagPROPVARIANT__Wrapper.getBOOL : TOleBool;
begin
result := tagPROPVARIANT(GetRecordPtr^).BOOL;
end;
procedure __tagPROPVARIANT__Wrapper.setlVal(const val : Longint);
begin
tagPROPVARIANT(GetRecordPtr^).lVal := val;
end;
function __tagPROPVARIANT__Wrapper.getlVal : Longint;
begin
result := tagPROPVARIANT(GetRecordPtr^).lVal;
end;
procedure __tagPROPVARIANT__Wrapper.setulVal(const val : Cardinal);
begin
tagPROPVARIANT(GetRecordPtr^).ulVal := val;
end;
function __tagPROPVARIANT__Wrapper.getulVal : Cardinal;
begin
result := tagPROPVARIANT(GetRecordPtr^).ulVal;
end;
procedure __tagPROPVARIANT__Wrapper.setfltVal(const val : Single);
begin
tagPROPVARIANT(GetRecordPtr^).fltVal := val;
end;
function __tagPROPVARIANT__Wrapper.getfltVal : Single;
begin
result := tagPROPVARIANT(GetRecordPtr^).fltVal;
end;
procedure __tagPROPVARIANT__Wrapper.setSCODE(const val : SCODE);
begin
tagPROPVARIANT(GetRecordPtr^).SCODE := val;
end;
function __tagPROPVARIANT__Wrapper.getSCODE : SCODE;
begin
result := tagPROPVARIANT(GetRecordPtr^).SCODE;
end;
procedure __tagPROPVARIANT__Wrapper.setdblVal(const val : Double);
begin
tagPROPVARIANT(GetRecordPtr^).dblVal := val;
end;
function __tagPROPVARIANT__Wrapper.getdblVal : Double;
begin
result := tagPROPVARIANT(GetRecordPtr^).dblVal;
end;
procedure __tagPROPVARIANT__Wrapper.setcyVal(const val : Currency);
begin
tagPROPVARIANT(GetRecordPtr^).cyVal := val;
end;
function __tagPROPVARIANT__Wrapper.getcyVal : Currency;
begin
result := tagPROPVARIANT(GetRecordPtr^).cyVal;
end;
procedure __tagPROPVARIANT__Wrapper.setdate(const val : TOleDate);
begin
tagPROPVARIANT(GetRecordPtr^).date := val;
end;
function __tagPROPVARIANT__Wrapper.getdate : TOleDate;
begin
result := tagPROPVARIANT(GetRecordPtr^).date;
end;
function __tagQACONTAINER__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagQACONTAINER__Wrapper.setcbSize(const val : Longint);
begin
tagQACONTAINER(GetRecordPtr^).cbSize := val;
end;
function __tagQACONTAINER__Wrapper.getcbSize : Longint;
begin
result := tagQACONTAINER(GetRecordPtr^).cbSize;
end;
procedure __tagQACONTAINER__Wrapper.setdwAmbientFlags(const val : Longint);
begin
tagQACONTAINER(GetRecordPtr^).dwAmbientFlags := val;
end;
function __tagQACONTAINER__Wrapper.getdwAmbientFlags : Longint;
begin
result := tagQACONTAINER(GetRecordPtr^).dwAmbientFlags;
end;
procedure __tagQACONTAINER__Wrapper.setcolorFore(const val : OLE_COLOR);
begin
tagQACONTAINER(GetRecordPtr^).colorFore := val;
end;
function __tagQACONTAINER__Wrapper.getcolorFore : OLE_COLOR;
begin
result := tagQACONTAINER(GetRecordPtr^).colorFore;
end;
procedure __tagQACONTAINER__Wrapper.setcolorBack(const val : OLE_COLOR);
begin
tagQACONTAINER(GetRecordPtr^).colorBack := val;
end;
function __tagQACONTAINER__Wrapper.getcolorBack : OLE_COLOR;
begin
result := tagQACONTAINER(GetRecordPtr^).colorBack;
end;
procedure __tagQACONTAINER__Wrapper.setdwAppearance(const val : Longint);
begin
tagQACONTAINER(GetRecordPtr^).dwAppearance := val;
end;
function __tagQACONTAINER__Wrapper.getdwAppearance : Longint;
begin
result := tagQACONTAINER(GetRecordPtr^).dwAppearance;
end;
procedure __tagQACONTAINER__Wrapper.setlcid(const val : Longint);
begin
tagQACONTAINER(GetRecordPtr^).lcid := val;
end;
function __tagQACONTAINER__Wrapper.getlcid : Longint;
begin
result := tagQACONTAINER(GetRecordPtr^).lcid;
end;
function __tagQACONTROL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagQACONTROL__Wrapper.setcbSize(const val : Longint);
begin
tagQACONTROL(GetRecordPtr^).cbSize := val;
end;
function __tagQACONTROL__Wrapper.getcbSize : Longint;
begin
result := tagQACONTROL(GetRecordPtr^).cbSize;
end;
procedure __tagQACONTROL__Wrapper.setdwMiscStatus(const val : Longint);
begin
tagQACONTROL(GetRecordPtr^).dwMiscStatus := val;
end;
function __tagQACONTROL__Wrapper.getdwMiscStatus : Longint;
begin
result := tagQACONTROL(GetRecordPtr^).dwMiscStatus;
end;
procedure __tagQACONTROL__Wrapper.setdwViewStatus(const val : Longint);
begin
tagQACONTROL(GetRecordPtr^).dwViewStatus := val;
end;
function __tagQACONTROL__Wrapper.getdwViewStatus : Longint;
begin
result := tagQACONTROL(GetRecordPtr^).dwViewStatus;
end;
procedure __tagQACONTROL__Wrapper.setdwEventCookie(const val : Longint);
begin
tagQACONTROL(GetRecordPtr^).dwEventCookie := val;
end;
function __tagQACONTROL__Wrapper.getdwEventCookie : Longint;
begin
result := tagQACONTROL(GetRecordPtr^).dwEventCookie;
end;
procedure __tagQACONTROL__Wrapper.setdwPropNotifyCookie(const val : Longint);
begin
tagQACONTROL(GetRecordPtr^).dwPropNotifyCookie := val;
end;
function __tagQACONTROL__Wrapper.getdwPropNotifyCookie : Longint;
begin
result := tagQACONTROL(GetRecordPtr^).dwPropNotifyCookie;
end;
procedure __tagQACONTROL__Wrapper.setdwPointerActivationPolicy(const val : Longint);
begin
tagQACONTROL(GetRecordPtr^).dwPointerActivationPolicy := val;
end;
function __tagQACONTROL__Wrapper.getdwPointerActivationPolicy : Longint;
begin
result := tagQACONTROL(GetRecordPtr^).dwPointerActivationPolicy;
end;
function __tagRemSTGMEDIUM__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagRemSTGMEDIUM__Wrapper.settymed(const val : Longint);
begin
tagRemSTGMEDIUM(GetRecordPtr^).tymed := val;
end;
function __tagRemSTGMEDIUM__Wrapper.gettymed : Longint;
begin
result := tagRemSTGMEDIUM(GetRecordPtr^).tymed;
end;
procedure __tagRemSTGMEDIUM__Wrapper.setdwHandleType(const val : Longint);
begin
tagRemSTGMEDIUM(GetRecordPtr^).dwHandleType := val;
end;
function __tagRemSTGMEDIUM__Wrapper.getdwHandleType : Longint;
begin
result := tagRemSTGMEDIUM(GetRecordPtr^).dwHandleType;
end;
procedure __tagRemSTGMEDIUM__Wrapper.setpData(const val : Longint);
begin
tagRemSTGMEDIUM(GetRecordPtr^).pData := val;
end;
function __tagRemSTGMEDIUM__Wrapper.getpData : Longint;
begin
result := tagRemSTGMEDIUM(GetRecordPtr^).pData;
end;
procedure __tagRemSTGMEDIUM__Wrapper.setpUnkForRelease(const val : Longint);
begin
tagRemSTGMEDIUM(GetRecordPtr^).pUnkForRelease := val;
end;
function __tagRemSTGMEDIUM__Wrapper.getpUnkForRelease : Longint;
begin
result := tagRemSTGMEDIUM(GetRecordPtr^).pUnkForRelease;
end;
procedure __tagRemSTGMEDIUM__Wrapper.setcbData(const val : Longint);
begin
tagRemSTGMEDIUM(GetRecordPtr^).cbData := val;
end;
function __tagRemSTGMEDIUM__Wrapper.getcbData : Longint;
begin
result := tagRemSTGMEDIUM(GetRecordPtr^).cbData;
end;
function __tagRPCOLEMESSAGE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagRPCOLEMESSAGE__Wrapper.setdataRepresentation(const val : TRpcOleDataRep);
begin
tagRPCOLEMESSAGE(GetRecordPtr^).dataRepresentation := val;
end;
function __tagRPCOLEMESSAGE__Wrapper.getdataRepresentation : TRpcOleDataRep;
begin
result := tagRPCOLEMESSAGE(GetRecordPtr^).dataRepresentation;
end;
procedure __tagRPCOLEMESSAGE__Wrapper.setcbBuffer(const val : Longint);
begin
tagRPCOLEMESSAGE(GetRecordPtr^).cbBuffer := val;
end;
function __tagRPCOLEMESSAGE__Wrapper.getcbBuffer : Longint;
begin
result := tagRPCOLEMESSAGE(GetRecordPtr^).cbBuffer;
end;
procedure __tagRPCOLEMESSAGE__Wrapper.setiMethod(const val : Longint);
begin
tagRPCOLEMESSAGE(GetRecordPtr^).iMethod := val;
end;
function __tagRPCOLEMESSAGE__Wrapper.getiMethod : Longint;
begin
result := tagRPCOLEMESSAGE(GetRecordPtr^).iMethod;
end;
procedure __tagRPCOLEMESSAGE__Wrapper.setrpcFlags(const val : Longint);
begin
tagRPCOLEMESSAGE(GetRecordPtr^).rpcFlags := val;
end;
function __tagRPCOLEMESSAGE__Wrapper.getrpcFlags : Longint;
begin
result := tagRPCOLEMESSAGE(GetRecordPtr^).rpcFlags;
end;
function __tagSAFEARRAY__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagSAFEARRAY__Wrapper.setcDims(const val : Word);
begin
tagSAFEARRAY(GetRecordPtr^).cDims := val;
end;
function __tagSAFEARRAY__Wrapper.getcDims : Word;
begin
result := tagSAFEARRAY(GetRecordPtr^).cDims;
end;
procedure __tagSAFEARRAY__Wrapper.setfFeatures(const val : Word);
begin
tagSAFEARRAY(GetRecordPtr^).fFeatures := val;
end;
function __tagSAFEARRAY__Wrapper.getfFeatures : Word;
begin
result := tagSAFEARRAY(GetRecordPtr^).fFeatures;
end;
procedure __tagSAFEARRAY__Wrapper.setcbElements(const val : Longint);
begin
tagSAFEARRAY(GetRecordPtr^).cbElements := val;
end;
function __tagSAFEARRAY__Wrapper.getcbElements : Longint;
begin
result := tagSAFEARRAY(GetRecordPtr^).cbElements;
end;
procedure __tagSAFEARRAY__Wrapper.setcLocks(const val : Longint);
begin
tagSAFEARRAY(GetRecordPtr^).cLocks := val;
end;
function __tagSAFEARRAY__Wrapper.getcLocks : Longint;
begin
result := tagSAFEARRAY(GetRecordPtr^).cLocks;
end;
function __tagSAFEARRAYBOUND__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagSAFEARRAYBOUND__Wrapper.setcElements(const val : Longint);
begin
tagSAFEARRAYBOUND(GetRecordPtr^).cElements := val;
end;
function __tagSAFEARRAYBOUND__Wrapper.getcElements : Longint;
begin
result := tagSAFEARRAYBOUND(GetRecordPtr^).cElements;
end;
procedure __tagSAFEARRAYBOUND__Wrapper.setlLbound(const val : Longint);
begin
tagSAFEARRAYBOUND(GetRecordPtr^).lLbound := val;
end;
function __tagSAFEARRAYBOUND__Wrapper.getlLbound : Longint;
begin
result := tagSAFEARRAYBOUND(GetRecordPtr^).lLbound;
end;
function __tagSOLE_AUTHENTICATION_SERVICE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagSOLE_AUTHENTICATION_SERVICE__Wrapper.setdwAuthnSvc(const val : Longint);
begin
tagSOLE_AUTHENTICATION_SERVICE(GetRecordPtr^).dwAuthnSvc := val;
end;
function __tagSOLE_AUTHENTICATION_SERVICE__Wrapper.getdwAuthnSvc : Longint;
begin
result := tagSOLE_AUTHENTICATION_SERVICE(GetRecordPtr^).dwAuthnSvc;
end;
procedure __tagSOLE_AUTHENTICATION_SERVICE__Wrapper.setdwAuthzSvc(const val : Longint);
begin
tagSOLE_AUTHENTICATION_SERVICE(GetRecordPtr^).dwAuthzSvc := val;
end;
function __tagSOLE_AUTHENTICATION_SERVICE__Wrapper.getdwAuthzSvc : Longint;
begin
result := tagSOLE_AUTHENTICATION_SERVICE(GetRecordPtr^).dwAuthzSvc;
end;
function __tagSTATDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagSTATDATA__Wrapper.setadvf(const val : Longint);
begin
tagSTATDATA(GetRecordPtr^).advf := val;
end;
function __tagSTATDATA__Wrapper.getadvf : Longint;
begin
result := tagSTATDATA(GetRecordPtr^).advf;
end;
procedure __tagSTATDATA__Wrapper.setdwConnection(const val : Longint);
begin
tagSTATDATA(GetRecordPtr^).dwConnection := val;
end;
function __tagSTATDATA__Wrapper.getdwConnection : Longint;
begin
result := tagSTATDATA(GetRecordPtr^).dwConnection;
end;
function __tagSTATPROPSETSTG__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagSTATPROPSETSTG__Wrapper.setgrfFlags(const val : DWORD);
begin
tagSTATPROPSETSTG(GetRecordPtr^).grfFlags := val;
end;
function __tagSTATPROPSETSTG__Wrapper.getgrfFlags : DWORD;
begin
result := tagSTATPROPSETSTG(GetRecordPtr^).grfFlags;
end;
procedure __tagSTATPROPSETSTG__Wrapper.setdwOSVersion(const val : DWORD);
begin
tagSTATPROPSETSTG(GetRecordPtr^).dwOSVersion := val;
end;
function __tagSTATPROPSETSTG__Wrapper.getdwOSVersion : DWORD;
begin
result := tagSTATPROPSETSTG(GetRecordPtr^).dwOSVersion;
end;
function __tagSTATPROPSTG__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagSTATPROPSTG__Wrapper.setPROPID(const val : TPropID);
begin
tagSTATPROPSTG(GetRecordPtr^).PROPID := val;
end;
function __tagSTATPROPSTG__Wrapper.getPROPID : TPropID;
begin
result := tagSTATPROPSTG(GetRecordPtr^).PROPID;
end;
procedure __tagSTATPROPSTG__Wrapper.setvt(const val : TVarType);
begin
tagSTATPROPSTG(GetRecordPtr^).vt := val;
end;
function __tagSTATPROPSTG__Wrapper.getvt : TVarType;
begin
result := tagSTATPROPSTG(GetRecordPtr^).vt;
end;
function __tagSTATSTG__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagSTATSTG__Wrapper.setdwType(const val : Longint);
begin
tagSTATSTG(GetRecordPtr^).dwType := val;
end;
function __tagSTATSTG__Wrapper.getdwType : Longint;
begin
result := tagSTATSTG(GetRecordPtr^).dwType;
end;
procedure __tagSTATSTG__Wrapper.setgrfMode(const val : Longint);
begin
tagSTATSTG(GetRecordPtr^).grfMode := val;
end;
function __tagSTATSTG__Wrapper.getgrfMode : Longint;
begin
result := tagSTATSTG(GetRecordPtr^).grfMode;
end;
procedure __tagSTATSTG__Wrapper.setgrfLocksSupported(const val : Longint);
begin
tagSTATSTG(GetRecordPtr^).grfLocksSupported := val;
end;
function __tagSTATSTG__Wrapper.getgrfLocksSupported : Longint;
begin
result := tagSTATSTG(GetRecordPtr^).grfLocksSupported;
end;
procedure __tagSTATSTG__Wrapper.setgrfStateBits(const val : Longint);
begin
tagSTATSTG(GetRecordPtr^).grfStateBits := val;
end;
function __tagSTATSTG__Wrapper.getgrfStateBits : Longint;
begin
result := tagSTATSTG(GetRecordPtr^).grfStateBits;
end;
procedure __tagSTATSTG__Wrapper.setreserved(const val : Longint);
begin
tagSTATSTG(GetRecordPtr^).reserved := val;
end;
function __tagSTATSTG__Wrapper.getreserved : Longint;
begin
result := tagSTATSTG(GetRecordPtr^).reserved;
end;
function __tagSTGMEDIUM__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagSTGMEDIUM__Wrapper.settymed(const val : Longint);
begin
tagSTGMEDIUM(GetRecordPtr^).tymed := val;
end;
function __tagSTGMEDIUM__Wrapper.gettymed : Longint;
begin
result := tagSTGMEDIUM(GetRecordPtr^).tymed;
end;
procedure __tagSTGMEDIUM__Wrapper.sethMetaFilePict(const val : THandle);
begin
tagSTGMEDIUM(GetRecordPtr^).hMetaFilePict := val;
end;
function __tagSTGMEDIUM__Wrapper.gethMetaFilePict : THandle;
begin
result := tagSTGMEDIUM(GetRecordPtr^).hMetaFilePict;
end;
procedure __tagSTGMEDIUM__Wrapper.sethEnhMetaFile(const val : THandle);
begin
tagSTGMEDIUM(GetRecordPtr^).hEnhMetaFile := val;
end;
function __tagSTGMEDIUM__Wrapper.gethEnhMetaFile : THandle;
begin
result := tagSTGMEDIUM(GetRecordPtr^).hEnhMetaFile;
end;
procedure __tagSTGMEDIUM__Wrapper.sethGlobal(const val : hGlobal);
begin
tagSTGMEDIUM(GetRecordPtr^).hGlobal := val;
end;
function __tagSTGMEDIUM__Wrapper.gethGlobal : hGlobal;
begin
result := tagSTGMEDIUM(GetRecordPtr^).hGlobal;
end;
function __tagTLIBATTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagTLIBATTR__Wrapper.setlcid(const val : TLCID);
begin
tagTLIBATTR(GetRecordPtr^).lcid := val;
end;
function __tagTLIBATTR__Wrapper.getlcid : TLCID;
begin
result := tagTLIBATTR(GetRecordPtr^).lcid;
end;
procedure __tagTLIBATTR__Wrapper.setsyskind(const val : TSysKind);
begin
tagTLIBATTR(GetRecordPtr^).syskind := val;
end;
function __tagTLIBATTR__Wrapper.getsyskind : TSysKind;
begin
result := tagTLIBATTR(GetRecordPtr^).syskind;
end;
procedure __tagTLIBATTR__Wrapper.setwMajorVerNum(const val : Word);
begin
tagTLIBATTR(GetRecordPtr^).wMajorVerNum := val;
end;
function __tagTLIBATTR__Wrapper.getwMajorVerNum : Word;
begin
result := tagTLIBATTR(GetRecordPtr^).wMajorVerNum;
end;
procedure __tagTLIBATTR__Wrapper.setwMinorVerNum(const val : Word);
begin
tagTLIBATTR(GetRecordPtr^).wMinorVerNum := val;
end;
function __tagTLIBATTR__Wrapper.getwMinorVerNum : Word;
begin
result := tagTLIBATTR(GetRecordPtr^).wMinorVerNum;
end;
procedure __tagTLIBATTR__Wrapper.setwLibFlags(const val : Word);
begin
tagTLIBATTR(GetRecordPtr^).wLibFlags := val;
end;
function __tagTLIBATTR__Wrapper.getwLibFlags : Word;
begin
result := tagTLIBATTR(GetRecordPtr^).wLibFlags;
end;
function __tagTYPEATTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagTYPEATTR__Wrapper.setlcid(const val : TLCID);
begin
tagTYPEATTR(GetRecordPtr^).lcid := val;
end;
function __tagTYPEATTR__Wrapper.getlcid : TLCID;
begin
result := tagTYPEATTR(GetRecordPtr^).lcid;
end;
procedure __tagTYPEATTR__Wrapper.setdwReserved(const val : Longint);
begin
tagTYPEATTR(GetRecordPtr^).dwReserved := val;
end;
function __tagTYPEATTR__Wrapper.getdwReserved : Longint;
begin
result := tagTYPEATTR(GetRecordPtr^).dwReserved;
end;
procedure __tagTYPEATTR__Wrapper.setmemidConstructor(const val : TMemberID);
begin
tagTYPEATTR(GetRecordPtr^).memidConstructor := val;
end;
function __tagTYPEATTR__Wrapper.getmemidConstructor : TMemberID;
begin
result := tagTYPEATTR(GetRecordPtr^).memidConstructor;
end;
procedure __tagTYPEATTR__Wrapper.setmemidDestructor(const val : TMemberID);
begin
tagTYPEATTR(GetRecordPtr^).memidDestructor := val;
end;
function __tagTYPEATTR__Wrapper.getmemidDestructor : TMemberID;
begin
result := tagTYPEATTR(GetRecordPtr^).memidDestructor;
end;
procedure __tagTYPEATTR__Wrapper.setcbSizeInstance(const val : Longint);
begin
tagTYPEATTR(GetRecordPtr^).cbSizeInstance := val;
end;
function __tagTYPEATTR__Wrapper.getcbSizeInstance : Longint;
begin
result := tagTYPEATTR(GetRecordPtr^).cbSizeInstance;
end;
procedure __tagTYPEATTR__Wrapper.settypekind(const val : TTypeKind);
begin
tagTYPEATTR(GetRecordPtr^).typekind := val;
end;
function __tagTYPEATTR__Wrapper.gettypekind : TTypeKind;
begin
result := tagTYPEATTR(GetRecordPtr^).typekind;
end;
procedure __tagTYPEATTR__Wrapper.setcFuncs(const val : Word);
begin
tagTYPEATTR(GetRecordPtr^).cFuncs := val;
end;
function __tagTYPEATTR__Wrapper.getcFuncs : Word;
begin
result := tagTYPEATTR(GetRecordPtr^).cFuncs;
end;
procedure __tagTYPEATTR__Wrapper.setcVars(const val : Word);
begin
tagTYPEATTR(GetRecordPtr^).cVars := val;
end;
function __tagTYPEATTR__Wrapper.getcVars : Word;
begin
result := tagTYPEATTR(GetRecordPtr^).cVars;
end;
procedure __tagTYPEATTR__Wrapper.setcImplTypes(const val : Word);
begin
tagTYPEATTR(GetRecordPtr^).cImplTypes := val;
end;
function __tagTYPEATTR__Wrapper.getcImplTypes : Word;
begin
result := tagTYPEATTR(GetRecordPtr^).cImplTypes;
end;
procedure __tagTYPEATTR__Wrapper.setcbSizeVft(const val : Word);
begin
tagTYPEATTR(GetRecordPtr^).cbSizeVft := val;
end;
function __tagTYPEATTR__Wrapper.getcbSizeVft : Word;
begin
result := tagTYPEATTR(GetRecordPtr^).cbSizeVft;
end;
procedure __tagTYPEATTR__Wrapper.setcbAlignment(const val : Word);
begin
tagTYPEATTR(GetRecordPtr^).cbAlignment := val;
end;
function __tagTYPEATTR__Wrapper.getcbAlignment : Word;
begin
result := tagTYPEATTR(GetRecordPtr^).cbAlignment;
end;
procedure __tagTYPEATTR__Wrapper.setwTypeFlags(const val : Word);
begin
tagTYPEATTR(GetRecordPtr^).wTypeFlags := val;
end;
function __tagTYPEATTR__Wrapper.getwTypeFlags : Word;
begin
result := tagTYPEATTR(GetRecordPtr^).wTypeFlags;
end;
procedure __tagTYPEATTR__Wrapper.setwMajorVerNum(const val : Word);
begin
tagTYPEATTR(GetRecordPtr^).wMajorVerNum := val;
end;
function __tagTYPEATTR__Wrapper.getwMajorVerNum : Word;
begin
result := tagTYPEATTR(GetRecordPtr^).wMajorVerNum;
end;
procedure __tagTYPEATTR__Wrapper.setwMinorVerNum(const val : Word);
begin
tagTYPEATTR(GetRecordPtr^).wMinorVerNum := val;
end;
function __tagTYPEATTR__Wrapper.getwMinorVerNum : Word;
begin
result := tagTYPEATTR(GetRecordPtr^).wMinorVerNum;
end;
function __tagTYPEDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagTYPEDESC__Wrapper.setvt(const val : TVarType);
begin
tagTYPEDESC(GetRecordPtr^).vt := val;
end;
function __tagTYPEDESC__Wrapper.getvt : TVarType;
begin
result := tagTYPEDESC(GetRecordPtr^).vt;
end;
procedure __tagTYPEDESC__Wrapper.setHRefType(const val : HRefType);
begin
tagTYPEDESC(GetRecordPtr^).HRefType := val;
end;
function __tagTYPEDESC__Wrapper.getHRefType : HRefType;
begin
result := tagTYPEDESC(GetRecordPtr^).HRefType;
end;
function __tagVARDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagVARDESC__Wrapper.setmemid(const val : TMemberID);
begin
tagVARDESC(GetRecordPtr^).memid := val;
end;
function __tagVARDESC__Wrapper.getmemid : TMemberID;
begin
result := tagVARDESC(GetRecordPtr^).memid;
end;
procedure __tagVARDESC__Wrapper.setoInst(const val : Longint);
begin
tagVARDESC(GetRecordPtr^).oInst := val;
end;
function __tagVARDESC__Wrapper.getoInst : Longint;
begin
result := tagVARDESC(GetRecordPtr^).oInst;
end;
procedure __tagVARDESC__Wrapper.setwVarFlags(const val : Word);
begin
tagVARDESC(GetRecordPtr^).wVarFlags := val;
end;
function __tagVARDESC__Wrapper.getwVarFlags : Word;
begin
result := tagVARDESC(GetRecordPtr^).wVarFlags;
end;
procedure __tagVARDESC__Wrapper.setvarkind(const val : TVarKind);
begin
tagVARDESC(GetRecordPtr^).varkind := val;
end;
function __tagVARDESC__Wrapper.getvarkind : TVarKind;
begin
result := tagVARDESC(GetRecordPtr^).varkind;
end;
function __tagVARIANT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagVARIANT__Wrapper.setvt(const val : TVarType);
begin
tagVARIANT(GetRecordPtr^).vt := val;
end;
function __tagVARIANT__Wrapper.getvt : TVarType;
begin
result := tagVARIANT(GetRecordPtr^).vt;
end;
procedure __tagVARIANT__Wrapper.setwReserved1(const val : Word);
begin
tagVARIANT(GetRecordPtr^).wReserved1 := val;
end;
function __tagVARIANT__Wrapper.getwReserved1 : Word;
begin
result := tagVARIANT(GetRecordPtr^).wReserved1;
end;
procedure __tagVARIANT__Wrapper.setwReserved2(const val : Word);
begin
tagVARIANT(GetRecordPtr^).wReserved2 := val;
end;
function __tagVARIANT__Wrapper.getwReserved2 : Word;
begin
result := tagVARIANT(GetRecordPtr^).wReserved2;
end;
procedure __tagVARIANT__Wrapper.setwReserved3(const val : Word);
begin
tagVARIANT(GetRecordPtr^).wReserved3 := val;
end;
function __tagVARIANT__Wrapper.getwReserved3 : Word;
begin
result := tagVARIANT(GetRecordPtr^).wReserved3;
end;
procedure __tagVARIANT__Wrapper.setbVal(const val : Byte);
begin
tagVARIANT(GetRecordPtr^).bVal := val;
end;
function __tagVARIANT__Wrapper.getbVal : Byte;
begin
result := tagVARIANT(GetRecordPtr^).bVal;
end;
procedure __tagVARIANT__Wrapper.setiVal(const val : SmallInt);
begin
tagVARIANT(GetRecordPtr^).iVal := val;
end;
function __tagVARIANT__Wrapper.getiVal : SmallInt;
begin
result := tagVARIANT(GetRecordPtr^).iVal;
end;
procedure __tagVARIANT__Wrapper.setlVal(const val : Longint);
begin
tagVARIANT(GetRecordPtr^).lVal := val;
end;
function __tagVARIANT__Wrapper.getlVal : Longint;
begin
result := tagVARIANT(GetRecordPtr^).lVal;
end;
procedure __tagVARIANT__Wrapper.setfltVal(const val : Single);
begin
tagVARIANT(GetRecordPtr^).fltVal := val;
end;
function __tagVARIANT__Wrapper.getfltVal : Single;
begin
result := tagVARIANT(GetRecordPtr^).fltVal;
end;
procedure __tagVARIANT__Wrapper.setdblVal(const val : Double);
begin
tagVARIANT(GetRecordPtr^).dblVal := val;
end;
function __tagVARIANT__Wrapper.getdblVal : Double;
begin
result := tagVARIANT(GetRecordPtr^).dblVal;
end;
procedure __tagVARIANT__Wrapper.setvbool(const val : TOleBool);
begin
tagVARIANT(GetRecordPtr^).vbool := val;
end;
function __tagVARIANT__Wrapper.getvbool : TOleBool;
begin
result := tagVARIANT(GetRecordPtr^).vbool;
end;
procedure __tagVARIANT__Wrapper.setcyVal(const val : Currency);
begin
tagVARIANT(GetRecordPtr^).cyVal := val;
end;
function __tagVARIANT__Wrapper.getcyVal : Currency;
begin
result := tagVARIANT(GetRecordPtr^).cyVal;
end;
procedure __tagVARIANT__Wrapper.setdate(const val : TOleDate);
begin
tagVARIANT(GetRecordPtr^).date := val;
end;
function __tagVARIANT__Wrapper.getdate : TOleDate;
begin
result := tagVARIANT(GetRecordPtr^).date;
end;
procedure __tagVARIANT__Wrapper.setcVal(const val : Char);
begin
tagVARIANT(GetRecordPtr^).cVal := val;
end;
function __tagVARIANT__Wrapper.getcVal : Char;
begin
result := tagVARIANT(GetRecordPtr^).cVal;
end;
procedure __tagVARIANT__Wrapper.setuiVal(const val : Word);
begin
tagVARIANT(GetRecordPtr^).uiVal := val;
end;
function __tagVARIANT__Wrapper.getuiVal : Word;
begin
result := tagVARIANT(GetRecordPtr^).uiVal;
end;
procedure __tagVARIANT__Wrapper.setulVal(const val : LongWord);
begin
tagVARIANT(GetRecordPtr^).ulVal := val;
end;
function __tagVARIANT__Wrapper.getulVal : LongWord;
begin
result := tagVARIANT(GetRecordPtr^).ulVal;
end;
procedure __tagVARIANT__Wrapper.setintVal(const val : Integer);
begin
tagVARIANT(GetRecordPtr^).intVal := val;
end;
function __tagVARIANT__Wrapper.getintVal : Integer;
begin
result := tagVARIANT(GetRecordPtr^).intVal;
end;
procedure __tagVARIANT__Wrapper.setuintVal(const val : LongWord);
begin
tagVARIANT(GetRecordPtr^).uintVal := val;
end;
function __tagVARIANT__Wrapper.getuintVal : LongWord;
begin
result := tagVARIANT(GetRecordPtr^).uintVal;
end;
function __TArrayDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TArrayDesc__Wrapper.setcDims(const val : Word);
begin
TArrayDesc(GetRecordPtr^).cDims := val;
end;
function __TArrayDesc__Wrapper.getcDims : Word;
begin
result := TArrayDesc(GetRecordPtr^).cDims;
end;
function __TBindOpts__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TBindOpts__Wrapper.setcbStruct(const val : Longint);
begin
TBindOpts(GetRecordPtr^).cbStruct := val;
end;
function __TBindOpts__Wrapper.getcbStruct : Longint;
begin
result := TBindOpts(GetRecordPtr^).cbStruct;
end;
procedure __TBindOpts__Wrapper.setgrfFlags(const val : Longint);
begin
TBindOpts(GetRecordPtr^).grfFlags := val;
end;
function __TBindOpts__Wrapper.getgrfFlags : Longint;
begin
result := TBindOpts(GetRecordPtr^).grfFlags;
end;
procedure __TBindOpts__Wrapper.setgrfMode(const val : Longint);
begin
TBindOpts(GetRecordPtr^).grfMode := val;
end;
function __TBindOpts__Wrapper.getgrfMode : Longint;
begin
result := TBindOpts(GetRecordPtr^).grfMode;
end;
procedure __TBindOpts__Wrapper.setdwTickCountDeadline(const val : Longint);
begin
TBindOpts(GetRecordPtr^).dwTickCountDeadline := val;
end;
function __TBindOpts__Wrapper.getdwTickCountDeadline : Longint;
begin
result := TBindOpts(GetRecordPtr^).dwTickCountDeadline;
end;
function __TBindPtr__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TBlob__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TBlob__Wrapper.setcbSize(const val : Longint);
begin
TBlob(GetRecordPtr^).cbSize := val;
end;
function __TBlob__Wrapper.getcbSize : Longint;
begin
result := TBlob(GetRecordPtr^).cbSize;
end;
function __TBorderWidths__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TBorderWidths__Wrapper.setLeft(const val : Longint);
begin
TBorderWidths(GetRecordPtr^).Left := val;
end;
function __TBorderWidths__Wrapper.getLeft : Longint;
begin
result := TBorderWidths(GetRecordPtr^).Left;
end;
procedure __TBorderWidths__Wrapper.setTop(const val : Longint);
begin
TBorderWidths(GetRecordPtr^).Top := val;
end;
function __TBorderWidths__Wrapper.getTop : Longint;
begin
result := TBorderWidths(GetRecordPtr^).Top;
end;
procedure __TBorderWidths__Wrapper.setRight(const val : Longint);
begin
TBorderWidths(GetRecordPtr^).Right := val;
end;
function __TBorderWidths__Wrapper.getRight : Longint;
begin
result := TBorderWidths(GetRecordPtr^).Right;
end;
procedure __TBorderWidths__Wrapper.setBottom(const val : Longint);
begin
TBorderWidths(GetRecordPtr^).Bottom := val;
end;
function __TBorderWidths__Wrapper.getBottom : Longint;
begin
result := TBorderWidths(GetRecordPtr^).Bottom;
end;
function __TCABOOL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCABOOL__Wrapper.setcElems(const val : ULONG);
begin
TCABOOL(GetRecordPtr^).cElems := val;
end;
function __TCABOOL__Wrapper.getcElems : ULONG;
begin
result := TCABOOL(GetRecordPtr^).cElems;
end;
function __TCABSTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCABSTR__Wrapper.setcElems(const val : ULONG);
begin
TCABSTR(GetRecordPtr^).cElems := val;
end;
function __TCABSTR__Wrapper.getcElems : ULONG;
begin
result := TCABSTR(GetRecordPtr^).cElems;
end;
function __TCACLIPDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCACLIPDATA__Wrapper.setcElems(const val : ULONG);
begin
TCACLIPDATA(GetRecordPtr^).cElems := val;
end;
function __TCACLIPDATA__Wrapper.getcElems : ULONG;
begin
result := TCACLIPDATA(GetRecordPtr^).cElems;
end;
function __TCACLSID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCACLSID__Wrapper.setcElems(const val : ULONG);
begin
TCACLSID(GetRecordPtr^).cElems := val;
end;
function __TCACLSID__Wrapper.getcElems : ULONG;
begin
result := TCACLSID(GetRecordPtr^).cElems;
end;
function __TCACY__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCACY__Wrapper.setcElems(const val : ULONG);
begin
TCACY(GetRecordPtr^).cElems := val;
end;
function __TCACY__Wrapper.getcElems : ULONG;
begin
result := TCACY(GetRecordPtr^).cElems;
end;
function __TCADATE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCADATE__Wrapper.setcElems(const val : ULONG);
begin
TCADATE(GetRecordPtr^).cElems := val;
end;
function __TCADATE__Wrapper.getcElems : ULONG;
begin
result := TCADATE(GetRecordPtr^).cElems;
end;
function __TCADBL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCADBL__Wrapper.setcElems(const val : ULONG);
begin
TCADBL(GetRecordPtr^).cElems := val;
end;
function __TCADBL__Wrapper.getcElems : ULONG;
begin
result := TCADBL(GetRecordPtr^).cElems;
end;
function __TCAFILETIME__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAFILETIME__Wrapper.setcElems(const val : ULONG);
begin
TCAFILETIME(GetRecordPtr^).cElems := val;
end;
function __TCAFILETIME__Wrapper.getcElems : ULONG;
begin
result := TCAFILETIME(GetRecordPtr^).cElems;
end;
function __TCAFLT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAFLT__Wrapper.setcElems(const val : ULONG);
begin
TCAFLT(GetRecordPtr^).cElems := val;
end;
function __TCAFLT__Wrapper.getcElems : ULONG;
begin
result := TCAFLT(GetRecordPtr^).cElems;
end;
function __TCAGUID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAGUID__Wrapper.setcElems(const val : Longint);
begin
TCAGUID(GetRecordPtr^).cElems := val;
end;
function __TCAGUID__Wrapper.getcElems : Longint;
begin
result := TCAGUID(GetRecordPtr^).cElems;
end;
function __TCAH__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAH__Wrapper.setcElems(const val : ULONG);
begin
TCAH(GetRecordPtr^).cElems := val;
end;
function __TCAH__Wrapper.getcElems : ULONG;
begin
result := TCAH(GetRecordPtr^).cElems;
end;
function __TCAI__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAI__Wrapper.setcElems(const val : ULONG);
begin
TCAI(GetRecordPtr^).cElems := val;
end;
function __TCAI__Wrapper.getcElems : ULONG;
begin
result := TCAI(GetRecordPtr^).cElems;
end;
function __TCAL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAL__Wrapper.setcElems(const val : ULONG);
begin
TCAL(GetRecordPtr^).cElems := val;
end;
function __TCAL__Wrapper.getcElems : ULONG;
begin
result := TCAL(GetRecordPtr^).cElems;
end;
function __TCALongint__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCALongint__Wrapper.setcElems(const val : Longint);
begin
TCALongint(GetRecordPtr^).cElems := val;
end;
function __TCALongint__Wrapper.getcElems : Longint;
begin
result := TCALongint(GetRecordPtr^).cElems;
end;
function __TCALPSTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCALPSTR__Wrapper.setcElems(const val : ULONG);
begin
TCALPSTR(GetRecordPtr^).cElems := val;
end;
function __TCALPSTR__Wrapper.getcElems : ULONG;
begin
result := TCALPSTR(GetRecordPtr^).cElems;
end;
function __TCALPWSTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCALPWSTR__Wrapper.setcElems(const val : ULONG);
begin
TCALPWSTR(GetRecordPtr^).cElems := val;
end;
function __TCALPWSTR__Wrapper.getcElems : ULONG;
begin
result := TCALPWSTR(GetRecordPtr^).cElems;
end;
function __TCAPOleStr__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAPOleStr__Wrapper.setcElems(const val : Longint);
begin
TCAPOleStr(GetRecordPtr^).cElems := val;
end;
function __TCAPOleStr__Wrapper.getcElems : Longint;
begin
result := TCAPOleStr(GetRecordPtr^).cElems;
end;
function __TCAPROPVARIANT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAPROPVARIANT__Wrapper.setcElems(const val : ULONG);
begin
TCAPROPVARIANT(GetRecordPtr^).cElems := val;
end;
function __TCAPROPVARIANT__Wrapper.getcElems : ULONG;
begin
result := TCAPROPVARIANT(GetRecordPtr^).cElems;
end;
function __TCASCODE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCASCODE__Wrapper.setcElems(const val : ULONG);
begin
TCASCODE(GetRecordPtr^).cElems := val;
end;
function __TCASCODE__Wrapper.getcElems : ULONG;
begin
result := TCASCODE(GetRecordPtr^).cElems;
end;
function __TCATEGORYINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCATEGORYINFO__Wrapper.setlcid(const val : UINT);
begin
TCATEGORYINFO(GetRecordPtr^).lcid := val;
end;
function __TCATEGORYINFO__Wrapper.getlcid : UINT;
begin
result := TCATEGORYINFO(GetRecordPtr^).lcid;
end;
function __TCAUB__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAUB__Wrapper.setcElems(const val : ULONG);
begin
TCAUB(GetRecordPtr^).cElems := val;
end;
function __TCAUB__Wrapper.getcElems : ULONG;
begin
result := TCAUB(GetRecordPtr^).cElems;
end;
function __TCAUH__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAUH__Wrapper.setcElems(const val : ULONG);
begin
TCAUH(GetRecordPtr^).cElems := val;
end;
function __TCAUH__Wrapper.getcElems : ULONG;
begin
result := TCAUH(GetRecordPtr^).cElems;
end;
function __TCAUI__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAUI__Wrapper.setcElems(const val : ULONG);
begin
TCAUI(GetRecordPtr^).cElems := val;
end;
function __TCAUI__Wrapper.getcElems : ULONG;
begin
result := TCAUI(GetRecordPtr^).cElems;
end;
function __TCAUL__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCAUL__Wrapper.setcElems(const val : ULONG);
begin
TCAUL(GetRecordPtr^).cElems := val;
end;
function __TCAUL__Wrapper.getcElems : ULONG;
begin
result := TCAUL(GetRecordPtr^).cElems;
end;
function __TClipData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TClipData__Wrapper.setcbSize(const val : Longint);
begin
TClipData(GetRecordPtr^).cbSize := val;
end;
function __TClipData__Wrapper.getcbSize : Longint;
begin
result := TClipData(GetRecordPtr^).cbSize;
end;
procedure __TClipData__Wrapper.setulClipFmt(const val : Longint);
begin
TClipData(GetRecordPtr^).ulClipFmt := val;
end;
function __TClipData__Wrapper.getulClipFmt : Longint;
begin
result := TClipData(GetRecordPtr^).ulClipFmt;
end;
function __TConnectData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TConnectData__Wrapper.setdwCookie(const val : Longint);
begin
TConnectData(GetRecordPtr^).dwCookie := val;
end;
function __TConnectData__Wrapper.getdwCookie : Longint;
begin
result := TConnectData(GetRecordPtr^).dwCookie;
end;
function __TControlInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TControlInfo__Wrapper.setcb(const val : Longint);
begin
TControlInfo(GetRecordPtr^).cb := val;
end;
function __TControlInfo__Wrapper.getcb : Longint;
begin
result := TControlInfo(GetRecordPtr^).cb;
end;
procedure __TControlInfo__Wrapper.setcAccel(const val : Word);
begin
TControlInfo(GetRecordPtr^).cAccel := val;
end;
function __TControlInfo__Wrapper.getcAccel : Word;
begin
result := TControlInfo(GetRecordPtr^).cAccel;
end;
procedure __TControlInfo__Wrapper.setdwFlags(const val : Longint);
begin
TControlInfo(GetRecordPtr^).dwFlags := val;
end;
function __TControlInfo__Wrapper.getdwFlags : Longint;
begin
result := TControlInfo(GetRecordPtr^).dwFlags;
end;
function __TCoServerInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCoServerInfo__Wrapper.setdwReserved1(const val : Longint);
begin
TCoServerInfo(GetRecordPtr^).dwReserved1 := val;
end;
function __TCoServerInfo__Wrapper.getdwReserved1 : Longint;
begin
result := TCoServerInfo(GetRecordPtr^).dwReserved1;
end;
procedure __TCoServerInfo__Wrapper.setdwReserved2(const val : Longint);
begin
TCoServerInfo(GetRecordPtr^).dwReserved2 := val;
end;
function __TCoServerInfo__Wrapper.getdwReserved2 : Longint;
begin
result := TCoServerInfo(GetRecordPtr^).dwReserved2;
end;
function __TCustData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCustData__Wrapper.setcCustData(const val : DWORD);
begin
TCustData(GetRecordPtr^).cCustData := val;
end;
function __TCustData__Wrapper.getcCustData : DWORD;
begin
result := TCustData(GetRecordPtr^).cCustData;
end;
function __TCustDataItem__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TDecimal__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDecimal__Wrapper.setwReserved(const val : Word);
begin
TDecimal(GetRecordPtr^).wReserved := val;
end;
function __TDecimal__Wrapper.getwReserved : Word;
begin
result := TDecimal(GetRecordPtr^).wReserved;
end;
procedure __TDecimal__Wrapper.setscale(const val : Byte);
begin
TDecimal(GetRecordPtr^).scale := val;
end;
function __TDecimal__Wrapper.getscale : Byte;
begin
result := TDecimal(GetRecordPtr^).scale;
end;
procedure __TDecimal__Wrapper.setsign(const val : Byte);
begin
TDecimal(GetRecordPtr^).sign := val;
end;
function __TDecimal__Wrapper.getsign : Byte;
begin
result := TDecimal(GetRecordPtr^).sign;
end;
procedure __TDecimal__Wrapper.setHi32(const val : Longint);
begin
TDecimal(GetRecordPtr^).Hi32 := val;
end;
function __TDecimal__Wrapper.getHi32 : Longint;
begin
result := TDecimal(GetRecordPtr^).Hi32;
end;
procedure __TDecimal__Wrapper.setLo32(const val : Longint);
begin
TDecimal(GetRecordPtr^).Lo32 := val;
end;
function __TDecimal__Wrapper.getLo32 : Longint;
begin
result := TDecimal(GetRecordPtr^).Lo32;
end;
procedure __TDecimal__Wrapper.setMid32(const val : Longint);
begin
TDecimal(GetRecordPtr^).Mid32 := val;
end;
function __TDecimal__Wrapper.getMid32 : Longint;
begin
result := TDecimal(GetRecordPtr^).Mid32;
end;
procedure __TDecimal__Wrapper.setsignscale(const val : Word);
begin
TDecimal(GetRecordPtr^).signscale := val;
end;
function __TDecimal__Wrapper.getsignscale : Word;
begin
result := TDecimal(GetRecordPtr^).signscale;
end;
function __TDispParams__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDispParams__Wrapper.setcArgs(const val : Longint);
begin
TDispParams(GetRecordPtr^).cArgs := val;
end;
function __TDispParams__Wrapper.getcArgs : Longint;
begin
result := TDispParams(GetRecordPtr^).cArgs;
end;
procedure __TDispParams__Wrapper.setcNamedArgs(const val : Longint);
begin
TDispParams(GetRecordPtr^).cNamedArgs := val;
end;
function __TDispParams__Wrapper.getcNamedArgs : Longint;
begin
result := TDispParams(GetRecordPtr^).cNamedArgs;
end;
function __TDVTargetDevice__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDVTargetDevice__Wrapper.settdSize(const val : Longint);
begin
TDVTargetDevice(GetRecordPtr^).tdSize := val;
end;
function __TDVTargetDevice__Wrapper.gettdSize : Longint;
begin
result := TDVTargetDevice(GetRecordPtr^).tdSize;
end;
procedure __TDVTargetDevice__Wrapper.settdDriverNameOffset(const val : Word);
begin
TDVTargetDevice(GetRecordPtr^).tdDriverNameOffset := val;
end;
function __TDVTargetDevice__Wrapper.gettdDriverNameOffset : Word;
begin
result := TDVTargetDevice(GetRecordPtr^).tdDriverNameOffset;
end;
procedure __TDVTargetDevice__Wrapper.settdDeviceNameOffset(const val : Word);
begin
TDVTargetDevice(GetRecordPtr^).tdDeviceNameOffset := val;
end;
function __TDVTargetDevice__Wrapper.gettdDeviceNameOffset : Word;
begin
result := TDVTargetDevice(GetRecordPtr^).tdDeviceNameOffset;
end;
procedure __TDVTargetDevice__Wrapper.settdPortNameOffset(const val : Word);
begin
TDVTargetDevice(GetRecordPtr^).tdPortNameOffset := val;
end;
function __TDVTargetDevice__Wrapper.gettdPortNameOffset : Word;
begin
result := TDVTargetDevice(GetRecordPtr^).tdPortNameOffset;
end;
procedure __TDVTargetDevice__Wrapper.settdExtDevmodeOffset(const val : Word);
begin
TDVTargetDevice(GetRecordPtr^).tdExtDevmodeOffset := val;
end;
function __TDVTargetDevice__Wrapper.gettdExtDevmodeOffset : Word;
begin
result := TDVTargetDevice(GetRecordPtr^).tdExtDevmodeOffset;
end;
function __TElemDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TExcepInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TExcepInfo__Wrapper.setwCode(const val : Word);
begin
TExcepInfo(GetRecordPtr^).wCode := val;
end;
function __TExcepInfo__Wrapper.getwCode : Word;
begin
result := TExcepInfo(GetRecordPtr^).wCode;
end;
procedure __TExcepInfo__Wrapper.setwReserved(const val : Word);
begin
TExcepInfo(GetRecordPtr^).wReserved := val;
end;
function __TExcepInfo__Wrapper.getwReserved : Word;
begin
result := TExcepInfo(GetRecordPtr^).wReserved;
end;
procedure __TExcepInfo__Wrapper.setbstrSource(const val : WideString);
begin
TExcepInfo(GetRecordPtr^).bstrSource := val;
end;
function __TExcepInfo__Wrapper.getbstrSource : WideString;
begin
result := TExcepInfo(GetRecordPtr^).bstrSource;
end;
procedure __TExcepInfo__Wrapper.setbstrDescription(const val : WideString);
begin
TExcepInfo(GetRecordPtr^).bstrDescription := val;
end;
function __TExcepInfo__Wrapper.getbstrDescription : WideString;
begin
result := TExcepInfo(GetRecordPtr^).bstrDescription;
end;
procedure __TExcepInfo__Wrapper.setbstrHelpFile(const val : WideString);
begin
TExcepInfo(GetRecordPtr^).bstrHelpFile := val;
end;
function __TExcepInfo__Wrapper.getbstrHelpFile : WideString;
begin
result := TExcepInfo(GetRecordPtr^).bstrHelpFile;
end;
procedure __TExcepInfo__Wrapper.setdwHelpContext(const val : Longint);
begin
TExcepInfo(GetRecordPtr^).dwHelpContext := val;
end;
function __TExcepInfo__Wrapper.getdwHelpContext : Longint;
begin
result := TExcepInfo(GetRecordPtr^).dwHelpContext;
end;
function __TFmtID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFmtID__Wrapper.setD1(const val : LongWord);
begin
TFmtID(GetRecordPtr^).D1 := val;
end;
function __TFmtID__Wrapper.getD1 : LongWord;
begin
result := TFmtID(GetRecordPtr^).D1;
end;
procedure __TFmtID__Wrapper.setD2(const val : Word);
begin
TFmtID(GetRecordPtr^).D2 := val;
end;
function __TFmtID__Wrapper.getD2 : Word;
begin
result := TFmtID(GetRecordPtr^).D2;
end;
procedure __TFmtID__Wrapper.setD3(const val : Word);
begin
TFmtID(GetRecordPtr^).D3 := val;
end;
function __TFmtID__Wrapper.getD3 : Word;
begin
result := TFmtID(GetRecordPtr^).D3;
end;
function __TFontDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFontDesc__Wrapper.setcbSizeofstruct(const val : Integer);
begin
TFontDesc(GetRecordPtr^).cbSizeofstruct := val;
end;
function __TFontDesc__Wrapper.getcbSizeofstruct : Integer;
begin
result := TFontDesc(GetRecordPtr^).cbSizeofstruct;
end;
procedure __TFontDesc__Wrapper.setcySize(const val : Currency);
begin
TFontDesc(GetRecordPtr^).cySize := val;
end;
function __TFontDesc__Wrapper.getcySize : Currency;
begin
result := TFontDesc(GetRecordPtr^).cySize;
end;
procedure __TFontDesc__Wrapper.setsWeight(const val : SmallInt);
begin
TFontDesc(GetRecordPtr^).sWeight := val;
end;
function __TFontDesc__Wrapper.getsWeight : SmallInt;
begin
result := TFontDesc(GetRecordPtr^).sWeight;
end;
procedure __TFontDesc__Wrapper.setsCharset(const val : SmallInt);
begin
TFontDesc(GetRecordPtr^).sCharset := val;
end;
function __TFontDesc__Wrapper.getsCharset : SmallInt;
begin
result := TFontDesc(GetRecordPtr^).sCharset;
end;
procedure __TFontDesc__Wrapper.setfItalic(const val : BOOL);
begin
TFontDesc(GetRecordPtr^).fItalic := val;
end;
function __TFontDesc__Wrapper.getfItalic : BOOL;
begin
result := TFontDesc(GetRecordPtr^).fItalic;
end;
procedure __TFontDesc__Wrapper.setfUnderline(const val : BOOL);
begin
TFontDesc(GetRecordPtr^).fUnderline := val;
end;
function __TFontDesc__Wrapper.getfUnderline : BOOL;
begin
result := TFontDesc(GetRecordPtr^).fUnderline;
end;
procedure __TFontDesc__Wrapper.setfStrikethrough(const val : BOOL);
begin
TFontDesc(GetRecordPtr^).fStrikethrough := val;
end;
function __TFontDesc__Wrapper.getfStrikethrough : BOOL;
begin
result := TFontDesc(GetRecordPtr^).fStrikethrough;
end;
function __TFuncDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFuncDesc__Wrapper.setmemid(const val : TMemberID);
begin
TFuncDesc(GetRecordPtr^).memid := val;
end;
function __TFuncDesc__Wrapper.getmemid : TMemberID;
begin
result := TFuncDesc(GetRecordPtr^).memid;
end;
procedure __TFuncDesc__Wrapper.setfunckind(const val : TFuncKind);
begin
TFuncDesc(GetRecordPtr^).funckind := val;
end;
function __TFuncDesc__Wrapper.getfunckind : TFuncKind;
begin
result := TFuncDesc(GetRecordPtr^).funckind;
end;
procedure __TFuncDesc__Wrapper.setinvkind(const val : TInvokeKind);
begin
TFuncDesc(GetRecordPtr^).invkind := val;
end;
function __TFuncDesc__Wrapper.getinvkind : TInvokeKind;
begin
result := TFuncDesc(GetRecordPtr^).invkind;
end;
procedure __TFuncDesc__Wrapper.setcallconv(const val : TCallConv);
begin
TFuncDesc(GetRecordPtr^).callconv := val;
end;
function __TFuncDesc__Wrapper.getcallconv : TCallConv;
begin
result := TFuncDesc(GetRecordPtr^).callconv;
end;
procedure __TFuncDesc__Wrapper.setcParams(const val : SmallInt);
begin
TFuncDesc(GetRecordPtr^).cParams := val;
end;
function __TFuncDesc__Wrapper.getcParams : SmallInt;
begin
result := TFuncDesc(GetRecordPtr^).cParams;
end;
procedure __TFuncDesc__Wrapper.setcParamsOpt(const val : SmallInt);
begin
TFuncDesc(GetRecordPtr^).cParamsOpt := val;
end;
function __TFuncDesc__Wrapper.getcParamsOpt : SmallInt;
begin
result := TFuncDesc(GetRecordPtr^).cParamsOpt;
end;
procedure __TFuncDesc__Wrapper.setoVft(const val : SmallInt);
begin
TFuncDesc(GetRecordPtr^).oVft := val;
end;
function __TFuncDesc__Wrapper.getoVft : SmallInt;
begin
result := TFuncDesc(GetRecordPtr^).oVft;
end;
procedure __TFuncDesc__Wrapper.setcScodes(const val : SmallInt);
begin
TFuncDesc(GetRecordPtr^).cScodes := val;
end;
function __TFuncDesc__Wrapper.getcScodes : SmallInt;
begin
result := TFuncDesc(GetRecordPtr^).cScodes;
end;
procedure __TFuncDesc__Wrapper.setwFuncFlags(const val : Word);
begin
TFuncDesc(GetRecordPtr^).wFuncFlags := val;
end;
function __TFuncDesc__Wrapper.getwFuncFlags : Word;
begin
result := TFuncDesc(GetRecordPtr^).wFuncFlags;
end;
function __TIDLDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TIDLDesc__Wrapper.setdwReserved(const val : Longint);
begin
TIDLDesc(GetRecordPtr^).dwReserved := val;
end;
function __TIDLDesc__Wrapper.getdwReserved : Longint;
begin
result := TIDLDesc(GetRecordPtr^).dwReserved;
end;
procedure __TIDLDesc__Wrapper.setwIDLFlags(const val : Word);
begin
TIDLDesc(GetRecordPtr^).wIDLFlags := val;
end;
function __TIDLDesc__Wrapper.getwIDLFlags : Word;
begin
result := TIDLDesc(GetRecordPtr^).wIDLFlags;
end;
function __TInterfaceData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TInterfaceData__Wrapper.setcMembers(const val : Integer);
begin
TInterfaceData(GetRecordPtr^).cMembers := val;
end;
function __TInterfaceData__Wrapper.getcMembers : Integer;
begin
result := TInterfaceData(GetRecordPtr^).cMembers;
end;
function __TInterfaceInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TInterfaceInfo__Wrapper.setwMethod(const val : Word);
begin
TInterfaceInfo(GetRecordPtr^).wMethod := val;
end;
function __TInterfaceInfo__Wrapper.getwMethod : Word;
begin
result := TInterfaceInfo(GetRecordPtr^).wMethod;
end;
function __TLIBATTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TLIBATTR__Wrapper.setlcid(const val : TLCID);
begin
TLIBATTR(GetRecordPtr^).lcid := val;
end;
function __TLIBATTR__Wrapper.getlcid : TLCID;
begin
result := TLIBATTR(GetRecordPtr^).lcid;
end;
procedure __TLIBATTR__Wrapper.setsyskind(const val : TSysKind);
begin
TLIBATTR(GetRecordPtr^).syskind := val;
end;
function __TLIBATTR__Wrapper.getsyskind : TSysKind;
begin
result := TLIBATTR(GetRecordPtr^).syskind;
end;
procedure __TLIBATTR__Wrapper.setwMajorVerNum(const val : Word);
begin
TLIBATTR(GetRecordPtr^).wMajorVerNum := val;
end;
function __TLIBATTR__Wrapper.getwMajorVerNum : Word;
begin
result := TLIBATTR(GetRecordPtr^).wMajorVerNum;
end;
procedure __TLIBATTR__Wrapper.setwMinorVerNum(const val : Word);
begin
TLIBATTR(GetRecordPtr^).wMinorVerNum := val;
end;
function __TLIBATTR__Wrapper.getwMinorVerNum : Word;
begin
result := TLIBATTR(GetRecordPtr^).wMinorVerNum;
end;
procedure __TLIBATTR__Wrapper.setwLibFlags(const val : Word);
begin
TLIBATTR(GetRecordPtr^).wLibFlags := val;
end;
function __TLIBATTR__Wrapper.getwLibFlags : Word;
begin
result := TLIBATTR(GetRecordPtr^).wLibFlags;
end;
function __TLicInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TLicInfo__Wrapper.setcbLicInfo(const val : Longint);
begin
TLicInfo(GetRecordPtr^).cbLicInfo := val;
end;
function __TLicInfo__Wrapper.getcbLicInfo : Longint;
begin
result := TLicInfo(GetRecordPtr^).cbLicInfo;
end;
procedure __TLicInfo__Wrapper.setfRuntimeKeyAvail(const val : BOOL);
begin
TLicInfo(GetRecordPtr^).fRuntimeKeyAvail := val;
end;
function __TLicInfo__Wrapper.getfRuntimeKeyAvail : BOOL;
begin
result := TLicInfo(GetRecordPtr^).fRuntimeKeyAvail;
end;
procedure __TLicInfo__Wrapper.setfLicVerified(const val : BOOL);
begin
TLicInfo(GetRecordPtr^).fLicVerified := val;
end;
function __TLicInfo__Wrapper.getfLicVerified : BOOL;
begin
result := TLicInfo(GetRecordPtr^).fLicVerified;
end;
function __TLinkSrcDescriptor__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TLinkSrcDescriptor__Wrapper.setcbSize(const val : Longint);
begin
TLinkSrcDescriptor(GetRecordPtr^).cbSize := val;
end;
function __TLinkSrcDescriptor__Wrapper.getcbSize : Longint;
begin
result := TLinkSrcDescriptor(GetRecordPtr^).cbSize;
end;
procedure __TLinkSrcDescriptor__Wrapper.setdwDrawAspect(const val : Longint);
begin
TLinkSrcDescriptor(GetRecordPtr^).dwDrawAspect := val;
end;
function __TLinkSrcDescriptor__Wrapper.getdwDrawAspect : Longint;
begin
result := TLinkSrcDescriptor(GetRecordPtr^).dwDrawAspect;
end;
procedure __TLinkSrcDescriptor__Wrapper.setdwStatus(const val : Longint);
begin
TLinkSrcDescriptor(GetRecordPtr^).dwStatus := val;
end;
function __TLinkSrcDescriptor__Wrapper.getdwStatus : Longint;
begin
result := TLinkSrcDescriptor(GetRecordPtr^).dwStatus;
end;
procedure __TLinkSrcDescriptor__Wrapper.setdwFullUserTypeName(const val : Longint);
begin
TLinkSrcDescriptor(GetRecordPtr^).dwFullUserTypeName := val;
end;
function __TLinkSrcDescriptor__Wrapper.getdwFullUserTypeName : Longint;
begin
result := TLinkSrcDescriptor(GetRecordPtr^).dwFullUserTypeName;
end;
procedure __TLinkSrcDescriptor__Wrapper.setdwSrcOfCopy(const val : Longint);
begin
TLinkSrcDescriptor(GetRecordPtr^).dwSrcOfCopy := val;
end;
function __TLinkSrcDescriptor__Wrapper.getdwSrcOfCopy : Longint;
begin
result := TLinkSrcDescriptor(GetRecordPtr^).dwSrcOfCopy;
end;
function __TMethodData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TMethodData__Wrapper.setdispid(const val : TDispID);
begin
TMethodData(GetRecordPtr^).dispid := val;
end;
function __TMethodData__Wrapper.getdispid : TDispID;
begin
result := TMethodData(GetRecordPtr^).dispid;
end;
procedure __TMethodData__Wrapper.setiMeth(const val : Integer);
begin
TMethodData(GetRecordPtr^).iMeth := val;
end;
function __TMethodData__Wrapper.getiMeth : Integer;
begin
result := TMethodData(GetRecordPtr^).iMeth;
end;
procedure __TMethodData__Wrapper.setcc(const val : TCallConv);
begin
TMethodData(GetRecordPtr^).cc := val;
end;
function __TMethodData__Wrapper.getcc : TCallConv;
begin
result := TMethodData(GetRecordPtr^).cc;
end;
procedure __TMethodData__Wrapper.setcArgs(const val : Integer);
begin
TMethodData(GetRecordPtr^).cArgs := val;
end;
function __TMethodData__Wrapper.getcArgs : Integer;
begin
result := TMethodData(GetRecordPtr^).cArgs;
end;
procedure __TMethodData__Wrapper.setwflags(const val : Word);
begin
TMethodData(GetRecordPtr^).wflags := val;
end;
function __TMethodData__Wrapper.getwflags : Word;
begin
result := TMethodData(GetRecordPtr^).wflags;
end;
procedure __TMethodData__Wrapper.setvtReturn(const val : TVarType);
begin
TMethodData(GetRecordPtr^).vtReturn := val;
end;
function __TMethodData__Wrapper.getvtReturn : TVarType;
begin
result := TMethodData(GetRecordPtr^).vtReturn;
end;
function __TMultiQI__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TObjectDescriptor__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TObjectDescriptor__Wrapper.setcbSize(const val : Longint);
begin
TObjectDescriptor(GetRecordPtr^).cbSize := val;
end;
function __TObjectDescriptor__Wrapper.getcbSize : Longint;
begin
result := TObjectDescriptor(GetRecordPtr^).cbSize;
end;
procedure __TObjectDescriptor__Wrapper.setdwDrawAspect(const val : Longint);
begin
TObjectDescriptor(GetRecordPtr^).dwDrawAspect := val;
end;
function __TObjectDescriptor__Wrapper.getdwDrawAspect : Longint;
begin
result := TObjectDescriptor(GetRecordPtr^).dwDrawAspect;
end;
procedure __TObjectDescriptor__Wrapper.setdwStatus(const val : Longint);
begin
TObjectDescriptor(GetRecordPtr^).dwStatus := val;
end;
function __TObjectDescriptor__Wrapper.getdwStatus : Longint;
begin
result := TObjectDescriptor(GetRecordPtr^).dwStatus;
end;
procedure __TObjectDescriptor__Wrapper.setdwFullUserTypeName(const val : Longint);
begin
TObjectDescriptor(GetRecordPtr^).dwFullUserTypeName := val;
end;
function __TObjectDescriptor__Wrapper.getdwFullUserTypeName : Longint;
begin
result := TObjectDescriptor(GetRecordPtr^).dwFullUserTypeName;
end;
procedure __TObjectDescriptor__Wrapper.setdwSrcOfCopy(const val : Longint);
begin
TObjectDescriptor(GetRecordPtr^).dwSrcOfCopy := val;
end;
function __TObjectDescriptor__Wrapper.getdwSrcOfCopy : Longint;
begin
result := TObjectDescriptor(GetRecordPtr^).dwSrcOfCopy;
end;
function __TObjectID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TObjectID__Wrapper.setUniquifier(const val : Longint);
begin
TObjectID(GetRecordPtr^).Uniquifier := val;
end;
function __TObjectID__Wrapper.getUniquifier : Longint;
begin
result := TObjectID(GetRecordPtr^).Uniquifier;
end;
function __TOCPFIParams__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TOCPFIParams__Wrapper.setcbStructSize(const val : Longint);
begin
TOCPFIParams(GetRecordPtr^).cbStructSize := val;
end;
function __TOCPFIParams__Wrapper.getcbStructSize : Longint;
begin
result := TOCPFIParams(GetRecordPtr^).cbStructSize;
end;
procedure __TOCPFIParams__Wrapper.setx(const val : Integer);
begin
TOCPFIParams(GetRecordPtr^).x := val;
end;
function __TOCPFIParams__Wrapper.getx : Integer;
begin
result := TOCPFIParams(GetRecordPtr^).x;
end;
procedure __TOCPFIParams__Wrapper.sety(const val : Integer);
begin
TOCPFIParams(GetRecordPtr^).y := val;
end;
function __TOCPFIParams__Wrapper.gety : Integer;
begin
result := TOCPFIParams(GetRecordPtr^).y;
end;
procedure __TOCPFIParams__Wrapper.setcObjects(const val : Longint);
begin
TOCPFIParams(GetRecordPtr^).cObjects := val;
end;
function __TOCPFIParams__Wrapper.getcObjects : Longint;
begin
result := TOCPFIParams(GetRecordPtr^).cObjects;
end;
procedure __TOCPFIParams__Wrapper.setcPages(const val : Longint);
begin
TOCPFIParams(GetRecordPtr^).cPages := val;
end;
function __TOCPFIParams__Wrapper.getcPages : Longint;
begin
result := TOCPFIParams(GetRecordPtr^).cPages;
end;
procedure __TOCPFIParams__Wrapper.setlcid(const val : TLCID);
begin
TOCPFIParams(GetRecordPtr^).lcid := val;
end;
function __TOCPFIParams__Wrapper.getlcid : TLCID;
begin
result := TOCPFIParams(GetRecordPtr^).lcid;
end;
procedure __TOCPFIParams__Wrapper.setdispidInitialProperty(const val : TDispID);
begin
TOCPFIParams(GetRecordPtr^).dispidInitialProperty := val;
end;
function __TOCPFIParams__Wrapper.getdispidInitialProperty : TDispID;
begin
result := TOCPFIParams(GetRecordPtr^).dispidInitialProperty;
end;
function __TOleCmd__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TOleCmd__Wrapper.setcmdID(const val : Cardinal);
begin
TOleCmd(GetRecordPtr^).cmdID := val;
end;
function __TOleCmd__Wrapper.getcmdID : Cardinal;
begin
result := TOleCmd(GetRecordPtr^).cmdID;
end;
procedure __TOleCmd__Wrapper.setcmdf(const val : Longint);
begin
TOleCmd(GetRecordPtr^).cmdf := val;
end;
function __TOleCmd__Wrapper.getcmdf : Longint;
begin
result := TOleCmd(GetRecordPtr^).cmdf;
end;
function __TOleCmdText__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TOleCmdText__Wrapper.setcmdtextf(const val : Longint);
begin
TOleCmdText(GetRecordPtr^).cmdtextf := val;
end;
function __TOleCmdText__Wrapper.getcmdtextf : Longint;
begin
result := TOleCmdText(GetRecordPtr^).cmdtextf;
end;
procedure __TOleCmdText__Wrapper.setcwActual(const val : Cardinal);
begin
TOleCmdText(GetRecordPtr^).cwActual := val;
end;
function __TOleCmdText__Wrapper.getcwActual : Cardinal;
begin
result := TOleCmdText(GetRecordPtr^).cwActual;
end;
procedure __TOleCmdText__Wrapper.setcwBuf(const val : Cardinal);
begin
TOleCmdText(GetRecordPtr^).cwBuf := val;
end;
function __TOleCmdText__Wrapper.getcwBuf : Cardinal;
begin
result := TOleCmdText(GetRecordPtr^).cwBuf;
end;
function __TOleInPlaceFrameInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TOleInPlaceFrameInfo__Wrapper.setcb(const val : Integer);
begin
TOleInPlaceFrameInfo(GetRecordPtr^).cb := val;
end;
function __TOleInPlaceFrameInfo__Wrapper.getcb : Integer;
begin
result := TOleInPlaceFrameInfo(GetRecordPtr^).cb;
end;
procedure __TOleInPlaceFrameInfo__Wrapper.setfMDIApp(const val : BOOL);
begin
TOleInPlaceFrameInfo(GetRecordPtr^).fMDIApp := val;
end;
function __TOleInPlaceFrameInfo__Wrapper.getfMDIApp : BOOL;
begin
result := TOleInPlaceFrameInfo(GetRecordPtr^).fMDIApp;
end;
procedure __TOleInPlaceFrameInfo__Wrapper.setcAccelEntries(const val : Integer);
begin
TOleInPlaceFrameInfo(GetRecordPtr^).cAccelEntries := val;
end;
function __TOleInPlaceFrameInfo__Wrapper.getcAccelEntries : Integer;
begin
result := TOleInPlaceFrameInfo(GetRecordPtr^).cAccelEntries;
end;
function __TOleMenuGroupWidths__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TOleVerb__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TOleVerb__Wrapper.setlVerb(const val : Longint);
begin
TOleVerb(GetRecordPtr^).lVerb := val;
end;
function __TOleVerb__Wrapper.getlVerb : Longint;
begin
result := TOleVerb(GetRecordPtr^).lVerb;
end;
procedure __TOleVerb__Wrapper.setfuFlags(const val : Longint);
begin
TOleVerb(GetRecordPtr^).fuFlags := val;
end;
function __TOleVerb__Wrapper.getfuFlags : Longint;
begin
result := TOleVerb(GetRecordPtr^).fuFlags;
end;
procedure __TOleVerb__Wrapper.setgrfAttribs(const val : Longint);
begin
TOleVerb(GetRecordPtr^).grfAttribs := val;
end;
function __TOleVerb__Wrapper.getgrfAttribs : Longint;
begin
result := TOleVerb(GetRecordPtr^).grfAttribs;
end;
function __TPageRange__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TPageRange__Wrapper.setnFromPage(const val : Longint);
begin
TPageRange(GetRecordPtr^).nFromPage := val;
end;
function __TPageRange__Wrapper.getnFromPage : Longint;
begin
result := TPageRange(GetRecordPtr^).nFromPage;
end;
procedure __TPageRange__Wrapper.setnToPage(const val : Longint);
begin
TPageRange(GetRecordPtr^).nToPage := val;
end;
function __TPageRange__Wrapper.getnToPage : Longint;
begin
result := TPageRange(GetRecordPtr^).nToPage;
end;
function __TPageSet__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TPageSet__Wrapper.setcbStruct(const val : Cardinal);
begin
TPageSet(GetRecordPtr^).cbStruct := val;
end;
function __TPageSet__Wrapper.getcbStruct : Cardinal;
begin
result := TPageSet(GetRecordPtr^).cbStruct;
end;
procedure __TPageSet__Wrapper.setfOddPages(const val : BOOL);
begin
TPageSet(GetRecordPtr^).fOddPages := val;
end;
function __TPageSet__Wrapper.getfOddPages : BOOL;
begin
result := TPageSet(GetRecordPtr^).fOddPages;
end;
procedure __TPageSet__Wrapper.setfEvenPages(const val : BOOL);
begin
TPageSet(GetRecordPtr^).fEvenPages := val;
end;
function __TPageSet__Wrapper.getfEvenPages : BOOL;
begin
result := TPageSet(GetRecordPtr^).fEvenPages;
end;
procedure __TPageSet__Wrapper.setcPageRange(const val : Cardinal);
begin
TPageSet(GetRecordPtr^).cPageRange := val;
end;
function __TPageSet__Wrapper.getcPageRange : Cardinal;
begin
result := TPageSet(GetRecordPtr^).cPageRange;
end;
function __TParamData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TParamData__Wrapper.setvt(const val : TVarType);
begin
TParamData(GetRecordPtr^).vt := val;
end;
function __TParamData__Wrapper.getvt : TVarType;
begin
result := TParamData(GetRecordPtr^).vt;
end;
function __TParamDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TParamDesc__Wrapper.setwParamFlags(const val : Word);
begin
TParamDesc(GetRecordPtr^).wParamFlags := val;
end;
function __TParamDesc__Wrapper.getwParamFlags : Word;
begin
result := TParamDesc(GetRecordPtr^).wParamFlags;
end;
function __TParamDescEx__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TParamDescEx__Wrapper.setcBytes(const val : Longint);
begin
TParamDescEx(GetRecordPtr^).cBytes := val;
end;
function __TParamDescEx__Wrapper.getcBytes : Longint;
begin
result := TParamDescEx(GetRecordPtr^).cBytes;
end;
procedure __TParamDescEx__Wrapper.setFourBytePad(const val : Longint);
begin
TParamDescEx(GetRecordPtr^).FourBytePad := val;
end;
function __TParamDescEx__Wrapper.getFourBytePad : Longint;
begin
result := TParamDescEx(GetRecordPtr^).FourBytePad;
end;
function __TPictDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TPictDesc__Wrapper.setcbSizeofstruct(const val : Integer);
begin
TPictDesc(GetRecordPtr^).cbSizeofstruct := val;
end;
function __TPictDesc__Wrapper.getcbSizeofstruct : Integer;
begin
result := TPictDesc(GetRecordPtr^).cbSizeofstruct;
end;
procedure __TPictDesc__Wrapper.setpicType(const val : Integer);
begin
TPictDesc(GetRecordPtr^).picType := val;
end;
function __TPictDesc__Wrapper.getpicType : Integer;
begin
result := TPictDesc(GetRecordPtr^).picType;
end;
procedure __TPictDesc__Wrapper.sethBitmap(const val : THandle);
begin
TPictDesc(GetRecordPtr^).hBitmap := val;
end;
function __TPictDesc__Wrapper.gethBitmap : THandle;
begin
result := TPictDesc(GetRecordPtr^).hBitmap;
end;
procedure __TPictDesc__Wrapper.sethpal(const val : THandle);
begin
TPictDesc(GetRecordPtr^).hpal := val;
end;
function __TPictDesc__Wrapper.gethpal : THandle;
begin
result := TPictDesc(GetRecordPtr^).hpal;
end;
procedure __TPictDesc__Wrapper.sethMeta(const val : THandle);
begin
TPictDesc(GetRecordPtr^).hMeta := val;
end;
function __TPictDesc__Wrapper.gethMeta : THandle;
begin
result := TPictDesc(GetRecordPtr^).hMeta;
end;
procedure __TPictDesc__Wrapper.setxExt(const val : Integer);
begin
TPictDesc(GetRecordPtr^).xExt := val;
end;
function __TPictDesc__Wrapper.getxExt : Integer;
begin
result := TPictDesc(GetRecordPtr^).xExt;
end;
procedure __TPictDesc__Wrapper.setyExt(const val : Integer);
begin
TPictDesc(GetRecordPtr^).yExt := val;
end;
function __TPictDesc__Wrapper.getyExt : Integer;
begin
result := TPictDesc(GetRecordPtr^).yExt;
end;
procedure __TPictDesc__Wrapper.sethIcon(const val : THandle);
begin
TPictDesc(GetRecordPtr^).hIcon := val;
end;
function __TPictDesc__Wrapper.gethIcon : THandle;
begin
result := TPictDesc(GetRecordPtr^).hIcon;
end;
procedure __TPictDesc__Wrapper.sethemf(const val : THandle);
begin
TPictDesc(GetRecordPtr^).hemf := val;
end;
function __TPictDesc__Wrapper.gethemf : THandle;
begin
result := TPictDesc(GetRecordPtr^).hemf;
end;
function __TPointF__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TPointF__Wrapper.setx(const val : Single);
begin
TPointF(GetRecordPtr^).x := val;
end;
function __TPointF__Wrapper.getx : Single;
begin
result := TPointF(GetRecordPtr^).x;
end;
procedure __TPointF__Wrapper.sety(const val : Single);
begin
TPointF(GetRecordPtr^).y := val;
end;
function __TPointF__Wrapper.gety : Single;
begin
result := TPointF(GetRecordPtr^).y;
end;
function __TPropPageInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TPropPageInfo__Wrapper.setcb(const val : Longint);
begin
TPropPageInfo(GetRecordPtr^).cb := val;
end;
function __TPropPageInfo__Wrapper.getcb : Longint;
begin
result := TPropPageInfo(GetRecordPtr^).cb;
end;
procedure __TPropPageInfo__Wrapper.setdwHelpContext(const val : Longint);
begin
TPropPageInfo(GetRecordPtr^).dwHelpContext := val;
end;
function __TPropPageInfo__Wrapper.getdwHelpContext : Longint;
begin
result := TPropPageInfo(GetRecordPtr^).dwHelpContext;
end;
function __TPropSpec__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TPropSpec__Wrapper.setulKind(const val : ULONG);
begin
TPropSpec(GetRecordPtr^).ulKind := val;
end;
function __TPropSpec__Wrapper.getulKind : ULONG;
begin
result := TPropSpec(GetRecordPtr^).ulKind;
end;
procedure __TPropSpec__Wrapper.setPROPID(const val : TPropID);
begin
TPropSpec(GetRecordPtr^).PROPID := val;
end;
function __TPropSpec__Wrapper.getPROPID : TPropID;
begin
result := TPropSpec(GetRecordPtr^).PROPID;
end;
function __TPropVariant__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TPropVariant__Wrapper.setvt(const val : TVarType);
begin
TPropVariant(GetRecordPtr^).vt := val;
end;
function __TPropVariant__Wrapper.getvt : TVarType;
begin
result := TPropVariant(GetRecordPtr^).vt;
end;
procedure __TPropVariant__Wrapper.setwReserved1(const val : Word);
begin
TPropVariant(GetRecordPtr^).wReserved1 := val;
end;
function __TPropVariant__Wrapper.getwReserved1 : Word;
begin
result := TPropVariant(GetRecordPtr^).wReserved1;
end;
procedure __TPropVariant__Wrapper.setwReserved2(const val : Word);
begin
TPropVariant(GetRecordPtr^).wReserved2 := val;
end;
function __TPropVariant__Wrapper.getwReserved2 : Word;
begin
result := TPropVariant(GetRecordPtr^).wReserved2;
end;
procedure __TPropVariant__Wrapper.setwReserved3(const val : Word);
begin
TPropVariant(GetRecordPtr^).wReserved3 := val;
end;
function __TPropVariant__Wrapper.getwReserved3 : Word;
begin
result := TPropVariant(GetRecordPtr^).wReserved3;
end;
procedure __TPropVariant__Wrapper.setbVal(const val : Byte);
begin
TPropVariant(GetRecordPtr^).bVal := val;
end;
function __TPropVariant__Wrapper.getbVal : Byte;
begin
result := TPropVariant(GetRecordPtr^).bVal;
end;
procedure __TPropVariant__Wrapper.setiVal(const val : SmallInt);
begin
TPropVariant(GetRecordPtr^).iVal := val;
end;
function __TPropVariant__Wrapper.getiVal : SmallInt;
begin
result := TPropVariant(GetRecordPtr^).iVal;
end;
procedure __TPropVariant__Wrapper.setuiVal(const val : Word);
begin
TPropVariant(GetRecordPtr^).uiVal := val;
end;
function __TPropVariant__Wrapper.getuiVal : Word;
begin
result := TPropVariant(GetRecordPtr^).uiVal;
end;
procedure __TPropVariant__Wrapper.setboolVal(const val : TOleBool);
begin
TPropVariant(GetRecordPtr^).boolVal := val;
end;
function __TPropVariant__Wrapper.getboolVal : TOleBool;
begin
result := TPropVariant(GetRecordPtr^).boolVal;
end;
procedure __TPropVariant__Wrapper.setBOOL(const val : TOleBool);
begin
TPropVariant(GetRecordPtr^).BOOL := val;
end;
function __TPropVariant__Wrapper.getBOOL : TOleBool;
begin
result := TPropVariant(GetRecordPtr^).BOOL;
end;
procedure __TPropVariant__Wrapper.setlVal(const val : Longint);
begin
TPropVariant(GetRecordPtr^).lVal := val;
end;
function __TPropVariant__Wrapper.getlVal : Longint;
begin
result := TPropVariant(GetRecordPtr^).lVal;
end;
procedure __TPropVariant__Wrapper.setulVal(const val : Cardinal);
begin
TPropVariant(GetRecordPtr^).ulVal := val;
end;
function __TPropVariant__Wrapper.getulVal : Cardinal;
begin
result := TPropVariant(GetRecordPtr^).ulVal;
end;
procedure __TPropVariant__Wrapper.setfltVal(const val : Single);
begin
TPropVariant(GetRecordPtr^).fltVal := val;
end;
function __TPropVariant__Wrapper.getfltVal : Single;
begin
result := TPropVariant(GetRecordPtr^).fltVal;
end;
procedure __TPropVariant__Wrapper.setSCODE(const val : SCODE);
begin
TPropVariant(GetRecordPtr^).SCODE := val;
end;
function __TPropVariant__Wrapper.getSCODE : SCODE;
begin
result := TPropVariant(GetRecordPtr^).SCODE;
end;
procedure __TPropVariant__Wrapper.setdblVal(const val : Double);
begin
TPropVariant(GetRecordPtr^).dblVal := val;
end;
function __TPropVariant__Wrapper.getdblVal : Double;
begin
result := TPropVariant(GetRecordPtr^).dblVal;
end;
procedure __TPropVariant__Wrapper.setcyVal(const val : Currency);
begin
TPropVariant(GetRecordPtr^).cyVal := val;
end;
function __TPropVariant__Wrapper.getcyVal : Currency;
begin
result := TPropVariant(GetRecordPtr^).cyVal;
end;
procedure __TPropVariant__Wrapper.setdate(const val : TOleDate);
begin
TPropVariant(GetRecordPtr^).date := val;
end;
function __TPropVariant__Wrapper.getdate : TOleDate;
begin
result := TPropVariant(GetRecordPtr^).date;
end;
function __TQaContainer__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TQaContainer__Wrapper.setcbSize(const val : Longint);
begin
TQaContainer(GetRecordPtr^).cbSize := val;
end;
function __TQaContainer__Wrapper.getcbSize : Longint;
begin
result := TQaContainer(GetRecordPtr^).cbSize;
end;
procedure __TQaContainer__Wrapper.setdwAmbientFlags(const val : Longint);
begin
TQaContainer(GetRecordPtr^).dwAmbientFlags := val;
end;
function __TQaContainer__Wrapper.getdwAmbientFlags : Longint;
begin
result := TQaContainer(GetRecordPtr^).dwAmbientFlags;
end;
procedure __TQaContainer__Wrapper.setcolorFore(const val : OLE_COLOR);
begin
TQaContainer(GetRecordPtr^).colorFore := val;
end;
function __TQaContainer__Wrapper.getcolorFore : OLE_COLOR;
begin
result := TQaContainer(GetRecordPtr^).colorFore;
end;
procedure __TQaContainer__Wrapper.setcolorBack(const val : OLE_COLOR);
begin
TQaContainer(GetRecordPtr^).colorBack := val;
end;
function __TQaContainer__Wrapper.getcolorBack : OLE_COLOR;
begin
result := TQaContainer(GetRecordPtr^).colorBack;
end;
procedure __TQaContainer__Wrapper.setdwAppearance(const val : Longint);
begin
TQaContainer(GetRecordPtr^).dwAppearance := val;
end;
function __TQaContainer__Wrapper.getdwAppearance : Longint;
begin
result := TQaContainer(GetRecordPtr^).dwAppearance;
end;
procedure __TQaContainer__Wrapper.setlcid(const val : Longint);
begin
TQaContainer(GetRecordPtr^).lcid := val;
end;
function __TQaContainer__Wrapper.getlcid : Longint;
begin
result := TQaContainer(GetRecordPtr^).lcid;
end;
function __TQaControl__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TQaControl__Wrapper.setcbSize(const val : Longint);
begin
TQaControl(GetRecordPtr^).cbSize := val;
end;
function __TQaControl__Wrapper.getcbSize : Longint;
begin
result := TQaControl(GetRecordPtr^).cbSize;
end;
procedure __TQaControl__Wrapper.setdwMiscStatus(const val : Longint);
begin
TQaControl(GetRecordPtr^).dwMiscStatus := val;
end;
function __TQaControl__Wrapper.getdwMiscStatus : Longint;
begin
result := TQaControl(GetRecordPtr^).dwMiscStatus;
end;
procedure __TQaControl__Wrapper.setdwViewStatus(const val : Longint);
begin
TQaControl(GetRecordPtr^).dwViewStatus := val;
end;
function __TQaControl__Wrapper.getdwViewStatus : Longint;
begin
result := TQaControl(GetRecordPtr^).dwViewStatus;
end;
procedure __TQaControl__Wrapper.setdwEventCookie(const val : Longint);
begin
TQaControl(GetRecordPtr^).dwEventCookie := val;
end;
function __TQaControl__Wrapper.getdwEventCookie : Longint;
begin
result := TQaControl(GetRecordPtr^).dwEventCookie;
end;
procedure __TQaControl__Wrapper.setdwPropNotifyCookie(const val : Longint);
begin
TQaControl(GetRecordPtr^).dwPropNotifyCookie := val;
end;
function __TQaControl__Wrapper.getdwPropNotifyCookie : Longint;
begin
result := TQaControl(GetRecordPtr^).dwPropNotifyCookie;
end;
procedure __TQaControl__Wrapper.setdwPointerActivationPolicy(const val : Longint);
begin
TQaControl(GetRecordPtr^).dwPointerActivationPolicy := val;
end;
function __TQaControl__Wrapper.getdwPointerActivationPolicy : Longint;
begin
result := TQaControl(GetRecordPtr^).dwPointerActivationPolicy;
end;
function __TRemStgMedium__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRemStgMedium__Wrapper.settymed(const val : Longint);
begin
TRemStgMedium(GetRecordPtr^).tymed := val;
end;
function __TRemStgMedium__Wrapper.gettymed : Longint;
begin
result := TRemStgMedium(GetRecordPtr^).tymed;
end;
procedure __TRemStgMedium__Wrapper.setdwHandleType(const val : Longint);
begin
TRemStgMedium(GetRecordPtr^).dwHandleType := val;
end;
function __TRemStgMedium__Wrapper.getdwHandleType : Longint;
begin
result := TRemStgMedium(GetRecordPtr^).dwHandleType;
end;
procedure __TRemStgMedium__Wrapper.setpData(const val : Longint);
begin
TRemStgMedium(GetRecordPtr^).pData := val;
end;
function __TRemStgMedium__Wrapper.getpData : Longint;
begin
result := TRemStgMedium(GetRecordPtr^).pData;
end;
procedure __TRemStgMedium__Wrapper.setpUnkForRelease(const val : Longint);
begin
TRemStgMedium(GetRecordPtr^).pUnkForRelease := val;
end;
function __TRemStgMedium__Wrapper.getpUnkForRelease : Longint;
begin
result := TRemStgMedium(GetRecordPtr^).pUnkForRelease;
end;
procedure __TRemStgMedium__Wrapper.setcbData(const val : Longint);
begin
TRemStgMedium(GetRecordPtr^).cbData := val;
end;
function __TRemStgMedium__Wrapper.getcbData : Longint;
begin
result := TRemStgMedium(GetRecordPtr^).cbData;
end;
function __TRpcOleMessage__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRpcOleMessage__Wrapper.setdataRepresentation(const val : TRpcOleDataRep);
begin
TRpcOleMessage(GetRecordPtr^).dataRepresentation := val;
end;
function __TRpcOleMessage__Wrapper.getdataRepresentation : TRpcOleDataRep;
begin
result := TRpcOleMessage(GetRecordPtr^).dataRepresentation;
end;
procedure __TRpcOleMessage__Wrapper.setcbBuffer(const val : Longint);
begin
TRpcOleMessage(GetRecordPtr^).cbBuffer := val;
end;
function __TRpcOleMessage__Wrapper.getcbBuffer : Longint;
begin
result := TRpcOleMessage(GetRecordPtr^).cbBuffer;
end;
procedure __TRpcOleMessage__Wrapper.setiMethod(const val : Longint);
begin
TRpcOleMessage(GetRecordPtr^).iMethod := val;
end;
function __TRpcOleMessage__Wrapper.getiMethod : Longint;
begin
result := TRpcOleMessage(GetRecordPtr^).iMethod;
end;
procedure __TRpcOleMessage__Wrapper.setrpcFlags(const val : Longint);
begin
TRpcOleMessage(GetRecordPtr^).rpcFlags := val;
end;
function __TRpcOleMessage__Wrapper.getrpcFlags : Longint;
begin
result := TRpcOleMessage(GetRecordPtr^).rpcFlags;
end;
function __TSafeArray__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSafeArray__Wrapper.setcDims(const val : Word);
begin
TSafeArray(GetRecordPtr^).cDims := val;
end;
function __TSafeArray__Wrapper.getcDims : Word;
begin
result := TSafeArray(GetRecordPtr^).cDims;
end;
procedure __TSafeArray__Wrapper.setfFeatures(const val : Word);
begin
TSafeArray(GetRecordPtr^).fFeatures := val;
end;
function __TSafeArray__Wrapper.getfFeatures : Word;
begin
result := TSafeArray(GetRecordPtr^).fFeatures;
end;
procedure __TSafeArray__Wrapper.setcbElements(const val : Longint);
begin
TSafeArray(GetRecordPtr^).cbElements := val;
end;
function __TSafeArray__Wrapper.getcbElements : Longint;
begin
result := TSafeArray(GetRecordPtr^).cbElements;
end;
procedure __TSafeArray__Wrapper.setcLocks(const val : Longint);
begin
TSafeArray(GetRecordPtr^).cLocks := val;
end;
function __TSafeArray__Wrapper.getcLocks : Longint;
begin
result := TSafeArray(GetRecordPtr^).cLocks;
end;
function __TSafeArrayBound__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSafeArrayBound__Wrapper.setcElements(const val : Longint);
begin
TSafeArrayBound(GetRecordPtr^).cElements := val;
end;
function __TSafeArrayBound__Wrapper.getcElements : Longint;
begin
result := TSafeArrayBound(GetRecordPtr^).cElements;
end;
procedure __TSafeArrayBound__Wrapper.setlLbound(const val : Longint);
begin
TSafeArrayBound(GetRecordPtr^).lLbound := val;
end;
function __TSafeArrayBound__Wrapper.getlLbound : Longint;
begin
result := TSafeArrayBound(GetRecordPtr^).lLbound;
end;
function __TSOleAuthenticationService__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSOleAuthenticationService__Wrapper.setdwAuthnSvc(const val : Longint);
begin
TSOleAuthenticationService(GetRecordPtr^).dwAuthnSvc := val;
end;
function __TSOleAuthenticationService__Wrapper.getdwAuthnSvc : Longint;
begin
result := TSOleAuthenticationService(GetRecordPtr^).dwAuthnSvc;
end;
procedure __TSOleAuthenticationService__Wrapper.setdwAuthzSvc(const val : Longint);
begin
TSOleAuthenticationService(GetRecordPtr^).dwAuthzSvc := val;
end;
function __TSOleAuthenticationService__Wrapper.getdwAuthzSvc : Longint;
begin
result := TSOleAuthenticationService(GetRecordPtr^).dwAuthzSvc;
end;
function __TStatData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TStatData__Wrapper.setadvf(const val : Longint);
begin
TStatData(GetRecordPtr^).advf := val;
end;
function __TStatData__Wrapper.getadvf : Longint;
begin
result := TStatData(GetRecordPtr^).advf;
end;
procedure __TStatData__Wrapper.setdwConnection(const val : Longint);
begin
TStatData(GetRecordPtr^).dwConnection := val;
end;
function __TStatData__Wrapper.getdwConnection : Longint;
begin
result := TStatData(GetRecordPtr^).dwConnection;
end;
function __TStatPropSetStg__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TStatPropSetStg__Wrapper.setgrfFlags(const val : DWORD);
begin
TStatPropSetStg(GetRecordPtr^).grfFlags := val;
end;
function __TStatPropSetStg__Wrapper.getgrfFlags : DWORD;
begin
result := TStatPropSetStg(GetRecordPtr^).grfFlags;
end;
procedure __TStatPropSetStg__Wrapper.setdwOSVersion(const val : DWORD);
begin
TStatPropSetStg(GetRecordPtr^).dwOSVersion := val;
end;
function __TStatPropSetStg__Wrapper.getdwOSVersion : DWORD;
begin
result := TStatPropSetStg(GetRecordPtr^).dwOSVersion;
end;
function __TStatPropStg__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TStatPropStg__Wrapper.setPROPID(const val : TPropID);
begin
TStatPropStg(GetRecordPtr^).PROPID := val;
end;
function __TStatPropStg__Wrapper.getPROPID : TPropID;
begin
result := TStatPropStg(GetRecordPtr^).PROPID;
end;
procedure __TStatPropStg__Wrapper.setvt(const val : TVarType);
begin
TStatPropStg(GetRecordPtr^).vt := val;
end;
function __TStatPropStg__Wrapper.getvt : TVarType;
begin
result := TStatPropStg(GetRecordPtr^).vt;
end;
function __TStgMedium__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TStgMedium__Wrapper.settymed(const val : Longint);
begin
TStgMedium(GetRecordPtr^).tymed := val;
end;
function __TStgMedium__Wrapper.gettymed : Longint;
begin
result := TStgMedium(GetRecordPtr^).tymed;
end;
procedure __TStgMedium__Wrapper.sethMetaFilePict(const val : THandle);
begin
TStgMedium(GetRecordPtr^).hMetaFilePict := val;
end;
function __TStgMedium__Wrapper.gethMetaFilePict : THandle;
begin
result := TStgMedium(GetRecordPtr^).hMetaFilePict;
end;
procedure __TStgMedium__Wrapper.sethEnhMetaFile(const val : THandle);
begin
TStgMedium(GetRecordPtr^).hEnhMetaFile := val;
end;
function __TStgMedium__Wrapper.gethEnhMetaFile : THandle;
begin
result := TStgMedium(GetRecordPtr^).hEnhMetaFile;
end;
procedure __TStgMedium__Wrapper.sethGlobal(const val : hGlobal);
begin
TStgMedium(GetRecordPtr^).hGlobal := val;
end;
function __TStgMedium__Wrapper.gethGlobal : hGlobal;
begin
result := TStgMedium(GetRecordPtr^).hGlobal;
end;
function __TTextMetricOle__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TTextMetricOle__Wrapper.settmHeight(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmHeight := val;
end;
function __TTextMetricOle__Wrapper.gettmHeight : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmHeight;
end;
procedure __TTextMetricOle__Wrapper.settmAscent(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmAscent := val;
end;
function __TTextMetricOle__Wrapper.gettmAscent : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmAscent;
end;
procedure __TTextMetricOle__Wrapper.settmDescent(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmDescent := val;
end;
function __TTextMetricOle__Wrapper.gettmDescent : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmDescent;
end;
procedure __TTextMetricOle__Wrapper.settmInternalLeading(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmInternalLeading := val;
end;
function __TTextMetricOle__Wrapper.gettmInternalLeading : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmInternalLeading;
end;
procedure __TTextMetricOle__Wrapper.settmExternalLeading(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmExternalLeading := val;
end;
function __TTextMetricOle__Wrapper.gettmExternalLeading : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmExternalLeading;
end;
procedure __TTextMetricOle__Wrapper.settmAveCharWidth(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmAveCharWidth := val;
end;
function __TTextMetricOle__Wrapper.gettmAveCharWidth : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmAveCharWidth;
end;
procedure __TTextMetricOle__Wrapper.settmMaxCharWidth(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmMaxCharWidth := val;
end;
function __TTextMetricOle__Wrapper.gettmMaxCharWidth : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmMaxCharWidth;
end;
procedure __TTextMetricOle__Wrapper.settmWeight(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmWeight := val;
end;
function __TTextMetricOle__Wrapper.gettmWeight : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmWeight;
end;
procedure __TTextMetricOle__Wrapper.settmOverhang(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmOverhang := val;
end;
function __TTextMetricOle__Wrapper.gettmOverhang : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmOverhang;
end;
procedure __TTextMetricOle__Wrapper.settmDigitizedAspectX(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmDigitizedAspectX := val;
end;
function __TTextMetricOle__Wrapper.gettmDigitizedAspectX : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmDigitizedAspectX;
end;
procedure __TTextMetricOle__Wrapper.settmDigitizedAspectY(const val : Longint);
begin
TTextMetricOle(GetRecordPtr^).tmDigitizedAspectY := val;
end;
function __TTextMetricOle__Wrapper.gettmDigitizedAspectY : Longint;
begin
result := TTextMetricOle(GetRecordPtr^).tmDigitizedAspectY;
end;
procedure __TTextMetricOle__Wrapper.settmFirstChar(const val : WideChar);
begin
TTextMetricOle(GetRecordPtr^).tmFirstChar := val;
end;
function __TTextMetricOle__Wrapper.gettmFirstChar : WideChar;
begin
result := TTextMetricOle(GetRecordPtr^).tmFirstChar;
end;
procedure __TTextMetricOle__Wrapper.settmLastChar(const val : WideChar);
begin
TTextMetricOle(GetRecordPtr^).tmLastChar := val;
end;
function __TTextMetricOle__Wrapper.gettmLastChar : WideChar;
begin
result := TTextMetricOle(GetRecordPtr^).tmLastChar;
end;
procedure __TTextMetricOle__Wrapper.settmDefaultChar(const val : WideChar);
begin
TTextMetricOle(GetRecordPtr^).tmDefaultChar := val;
end;
function __TTextMetricOle__Wrapper.gettmDefaultChar : WideChar;
begin
result := TTextMetricOle(GetRecordPtr^).tmDefaultChar;
end;
procedure __TTextMetricOle__Wrapper.settmBreakChar(const val : WideChar);
begin
TTextMetricOle(GetRecordPtr^).tmBreakChar := val;
end;
function __TTextMetricOle__Wrapper.gettmBreakChar : WideChar;
begin
result := TTextMetricOle(GetRecordPtr^).tmBreakChar;
end;
procedure __TTextMetricOle__Wrapper.settmItalic(const val : Byte);
begin
TTextMetricOle(GetRecordPtr^).tmItalic := val;
end;
function __TTextMetricOle__Wrapper.gettmItalic : Byte;
begin
result := TTextMetricOle(GetRecordPtr^).tmItalic;
end;
procedure __TTextMetricOle__Wrapper.settmUnderlined(const val : Byte);
begin
TTextMetricOle(GetRecordPtr^).tmUnderlined := val;
end;
function __TTextMetricOle__Wrapper.gettmUnderlined : Byte;
begin
result := TTextMetricOle(GetRecordPtr^).tmUnderlined;
end;
procedure __TTextMetricOle__Wrapper.settmStruckOut(const val : Byte);
begin
TTextMetricOle(GetRecordPtr^).tmStruckOut := val;
end;
function __TTextMetricOle__Wrapper.gettmStruckOut : Byte;
begin
result := TTextMetricOle(GetRecordPtr^).tmStruckOut;
end;
procedure __TTextMetricOle__Wrapper.settmPitchAndFamily(const val : Byte);
begin
TTextMetricOle(GetRecordPtr^).tmPitchAndFamily := val;
end;
function __TTextMetricOle__Wrapper.gettmPitchAndFamily : Byte;
begin
result := TTextMetricOle(GetRecordPtr^).tmPitchAndFamily;
end;
procedure __TTextMetricOle__Wrapper.settmCharSet(const val : Byte);
begin
TTextMetricOle(GetRecordPtr^).tmCharSet := val;
end;
function __TTextMetricOle__Wrapper.gettmCharSet : Byte;
begin
result := TTextMetricOle(GetRecordPtr^).tmCharSet;
end;
function __TTLibAttr__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TTLibAttr__Wrapper.setlcid(const val : TLCID);
begin
TTLibAttr(GetRecordPtr^).lcid := val;
end;
function __TTLibAttr__Wrapper.getlcid : TLCID;
begin
result := TTLibAttr(GetRecordPtr^).lcid;
end;
procedure __TTLibAttr__Wrapper.setsyskind(const val : TSysKind);
begin
TTLibAttr(GetRecordPtr^).syskind := val;
end;
function __TTLibAttr__Wrapper.getsyskind : TSysKind;
begin
result := TTLibAttr(GetRecordPtr^).syskind;
end;
procedure __TTLibAttr__Wrapper.setwMajorVerNum(const val : Word);
begin
TTLibAttr(GetRecordPtr^).wMajorVerNum := val;
end;
function __TTLibAttr__Wrapper.getwMajorVerNum : Word;
begin
result := TTLibAttr(GetRecordPtr^).wMajorVerNum;
end;
procedure __TTLibAttr__Wrapper.setwMinorVerNum(const val : Word);
begin
TTLibAttr(GetRecordPtr^).wMinorVerNum := val;
end;
function __TTLibAttr__Wrapper.getwMinorVerNum : Word;
begin
result := TTLibAttr(GetRecordPtr^).wMinorVerNum;
end;
procedure __TTLibAttr__Wrapper.setwLibFlags(const val : Word);
begin
TTLibAttr(GetRecordPtr^).wLibFlags := val;
end;
function __TTLibAttr__Wrapper.getwLibFlags : Word;
begin
result := TTLibAttr(GetRecordPtr^).wLibFlags;
end;
function __TTypeAttr__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TTypeAttr__Wrapper.setlcid(const val : TLCID);
begin
TTypeAttr(GetRecordPtr^).lcid := val;
end;
function __TTypeAttr__Wrapper.getlcid : TLCID;
begin
result := TTypeAttr(GetRecordPtr^).lcid;
end;
procedure __TTypeAttr__Wrapper.setdwReserved(const val : Longint);
begin
TTypeAttr(GetRecordPtr^).dwReserved := val;
end;
function __TTypeAttr__Wrapper.getdwReserved : Longint;
begin
result := TTypeAttr(GetRecordPtr^).dwReserved;
end;
procedure __TTypeAttr__Wrapper.setmemidConstructor(const val : TMemberID);
begin
TTypeAttr(GetRecordPtr^).memidConstructor := val;
end;
function __TTypeAttr__Wrapper.getmemidConstructor : TMemberID;
begin
result := TTypeAttr(GetRecordPtr^).memidConstructor;
end;
procedure __TTypeAttr__Wrapper.setmemidDestructor(const val : TMemberID);
begin
TTypeAttr(GetRecordPtr^).memidDestructor := val;
end;
function __TTypeAttr__Wrapper.getmemidDestructor : TMemberID;
begin
result := TTypeAttr(GetRecordPtr^).memidDestructor;
end;
procedure __TTypeAttr__Wrapper.setcbSizeInstance(const val : Longint);
begin
TTypeAttr(GetRecordPtr^).cbSizeInstance := val;
end;
function __TTypeAttr__Wrapper.getcbSizeInstance : Longint;
begin
result := TTypeAttr(GetRecordPtr^).cbSizeInstance;
end;
procedure __TTypeAttr__Wrapper.settypekind(const val : TTypeKind);
begin
TTypeAttr(GetRecordPtr^).typekind := val;
end;
function __TTypeAttr__Wrapper.gettypekind : TTypeKind;
begin
result := TTypeAttr(GetRecordPtr^).typekind;
end;
procedure __TTypeAttr__Wrapper.setcFuncs(const val : Word);
begin
TTypeAttr(GetRecordPtr^).cFuncs := val;
end;
function __TTypeAttr__Wrapper.getcFuncs : Word;
begin
result := TTypeAttr(GetRecordPtr^).cFuncs;
end;
procedure __TTypeAttr__Wrapper.setcVars(const val : Word);
begin
TTypeAttr(GetRecordPtr^).cVars := val;
end;
function __TTypeAttr__Wrapper.getcVars : Word;
begin
result := TTypeAttr(GetRecordPtr^).cVars;
end;
procedure __TTypeAttr__Wrapper.setcImplTypes(const val : Word);
begin
TTypeAttr(GetRecordPtr^).cImplTypes := val;
end;
function __TTypeAttr__Wrapper.getcImplTypes : Word;
begin
result := TTypeAttr(GetRecordPtr^).cImplTypes;
end;
procedure __TTypeAttr__Wrapper.setcbSizeVft(const val : Word);
begin
TTypeAttr(GetRecordPtr^).cbSizeVft := val;
end;
function __TTypeAttr__Wrapper.getcbSizeVft : Word;
begin
result := TTypeAttr(GetRecordPtr^).cbSizeVft;
end;
procedure __TTypeAttr__Wrapper.setcbAlignment(const val : Word);
begin
TTypeAttr(GetRecordPtr^).cbAlignment := val;
end;
function __TTypeAttr__Wrapper.getcbAlignment : Word;
begin
result := TTypeAttr(GetRecordPtr^).cbAlignment;
end;
procedure __TTypeAttr__Wrapper.setwTypeFlags(const val : Word);
begin
TTypeAttr(GetRecordPtr^).wTypeFlags := val;
end;
function __TTypeAttr__Wrapper.getwTypeFlags : Word;
begin
result := TTypeAttr(GetRecordPtr^).wTypeFlags;
end;
procedure __TTypeAttr__Wrapper.setwMajorVerNum(const val : Word);
begin
TTypeAttr(GetRecordPtr^).wMajorVerNum := val;
end;
function __TTypeAttr__Wrapper.getwMajorVerNum : Word;
begin
result := TTypeAttr(GetRecordPtr^).wMajorVerNum;
end;
procedure __TTypeAttr__Wrapper.setwMinorVerNum(const val : Word);
begin
TTypeAttr(GetRecordPtr^).wMinorVerNum := val;
end;
function __TTypeAttr__Wrapper.getwMinorVerNum : Word;
begin
result := TTypeAttr(GetRecordPtr^).wMinorVerNum;
end;
function __TTypeDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TTypeDesc__Wrapper.setvt(const val : TVarType);
begin
TTypeDesc(GetRecordPtr^).vt := val;
end;
function __TTypeDesc__Wrapper.getvt : TVarType;
begin
result := TTypeDesc(GetRecordPtr^).vt;
end;
procedure __TTypeDesc__Wrapper.setHRefType(const val : HRefType);
begin
TTypeDesc(GetRecordPtr^).HRefType := val;
end;
function __TTypeDesc__Wrapper.getHRefType : HRefType;
begin
result := TTypeDesc(GetRecordPtr^).HRefType;
end;
function __TVarDesc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TVarDesc__Wrapper.setmemid(const val : TMemberID);
begin
TVarDesc(GetRecordPtr^).memid := val;
end;
function __TVarDesc__Wrapper.getmemid : TMemberID;
begin
result := TVarDesc(GetRecordPtr^).memid;
end;
procedure __TVarDesc__Wrapper.setoInst(const val : Longint);
begin
TVarDesc(GetRecordPtr^).oInst := val;
end;
function __TVarDesc__Wrapper.getoInst : Longint;
begin
result := TVarDesc(GetRecordPtr^).oInst;
end;
procedure __TVarDesc__Wrapper.setwVarFlags(const val : Word);
begin
TVarDesc(GetRecordPtr^).wVarFlags := val;
end;
function __TVarDesc__Wrapper.getwVarFlags : Word;
begin
result := TVarDesc(GetRecordPtr^).wVarFlags;
end;
procedure __TVarDesc__Wrapper.setvarkind(const val : TVarKind);
begin
TVarDesc(GetRecordPtr^).varkind := val;
end;
function __TVarDesc__Wrapper.getvarkind : TVarKind;
begin
result := TVarDesc(GetRecordPtr^).varkind;
end;
function __TVariantArg__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TVariantArg__Wrapper.setvt(const val : TVarType);
begin
TVariantArg(GetRecordPtr^).vt := val;
end;
function __TVariantArg__Wrapper.getvt : TVarType;
begin
result := TVariantArg(GetRecordPtr^).vt;
end;
procedure __TVariantArg__Wrapper.setwReserved1(const val : Word);
begin
TVariantArg(GetRecordPtr^).wReserved1 := val;
end;
function __TVariantArg__Wrapper.getwReserved1 : Word;
begin
result := TVariantArg(GetRecordPtr^).wReserved1;
end;
procedure __TVariantArg__Wrapper.setwReserved2(const val : Word);
begin
TVariantArg(GetRecordPtr^).wReserved2 := val;
end;
function __TVariantArg__Wrapper.getwReserved2 : Word;
begin
result := TVariantArg(GetRecordPtr^).wReserved2;
end;
procedure __TVariantArg__Wrapper.setwReserved3(const val : Word);
begin
TVariantArg(GetRecordPtr^).wReserved3 := val;
end;
function __TVariantArg__Wrapper.getwReserved3 : Word;
begin
result := TVariantArg(GetRecordPtr^).wReserved3;
end;
procedure __TVariantArg__Wrapper.setbVal(const val : Byte);
begin
TVariantArg(GetRecordPtr^).bVal := val;
end;
function __TVariantArg__Wrapper.getbVal : Byte;
begin
result := TVariantArg(GetRecordPtr^).bVal;
end;
procedure __TVariantArg__Wrapper.setiVal(const val : SmallInt);
begin
TVariantArg(GetRecordPtr^).iVal := val;
end;
function __TVariantArg__Wrapper.getiVal : SmallInt;
begin
result := TVariantArg(GetRecordPtr^).iVal;
end;
procedure __TVariantArg__Wrapper.setlVal(const val : Longint);
begin
TVariantArg(GetRecordPtr^).lVal := val;
end;
function __TVariantArg__Wrapper.getlVal : Longint;
begin
result := TVariantArg(GetRecordPtr^).lVal;
end;
procedure __TVariantArg__Wrapper.setfltVal(const val : Single);
begin
TVariantArg(GetRecordPtr^).fltVal := val;
end;
function __TVariantArg__Wrapper.getfltVal : Single;
begin
result := TVariantArg(GetRecordPtr^).fltVal;
end;
procedure __TVariantArg__Wrapper.setdblVal(const val : Double);
begin
TVariantArg(GetRecordPtr^).dblVal := val;
end;
function __TVariantArg__Wrapper.getdblVal : Double;
begin
result := TVariantArg(GetRecordPtr^).dblVal;
end;
procedure __TVariantArg__Wrapper.setvbool(const val : TOleBool);
begin
TVariantArg(GetRecordPtr^).vbool := val;
end;
function __TVariantArg__Wrapper.getvbool : TOleBool;
begin
result := TVariantArg(GetRecordPtr^).vbool;
end;
procedure __TVariantArg__Wrapper.setcyVal(const val : Currency);
begin
TVariantArg(GetRecordPtr^).cyVal := val;
end;
function __TVariantArg__Wrapper.getcyVal : Currency;
begin
result := TVariantArg(GetRecordPtr^).cyVal;
end;
procedure __TVariantArg__Wrapper.setdate(const val : TOleDate);
begin
TVariantArg(GetRecordPtr^).date := val;
end;
function __TVariantArg__Wrapper.getdate : TOleDate;
begin
result := TVariantArg(GetRecordPtr^).date;
end;
procedure __TVariantArg__Wrapper.setcVal(const val : Char);
begin
TVariantArg(GetRecordPtr^).cVal := val;
end;
function __TVariantArg__Wrapper.getcVal : Char;
begin
result := TVariantArg(GetRecordPtr^).cVal;
end;
procedure __TVariantArg__Wrapper.setuiVal(const val : Word);
begin
TVariantArg(GetRecordPtr^).uiVal := val;
end;
function __TVariantArg__Wrapper.getuiVal : Word;
begin
result := TVariantArg(GetRecordPtr^).uiVal;
end;
procedure __TVariantArg__Wrapper.setulVal(const val : LongWord);
begin
TVariantArg(GetRecordPtr^).ulVal := val;
end;
function __TVariantArg__Wrapper.getulVal : LongWord;
begin
result := TVariantArg(GetRecordPtr^).ulVal;
end;
procedure __TVariantArg__Wrapper.setintVal(const val : Integer);
begin
TVariantArg(GetRecordPtr^).intVal := val;
end;
function __TVariantArg__Wrapper.getintVal : Integer;
begin
result := TVariantArg(GetRecordPtr^).intVal;
end;
procedure __TVariantArg__Wrapper.setuintVal(const val : LongWord);
begin
TVariantArg(GetRecordPtr^).uintVal := val;
end;
function __TVariantArg__Wrapper.getuintVal : LongWord;
begin
result := TVariantArg(GetRecordPtr^).uintVal;
end;
function __TYPEATTR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TYPEATTR__Wrapper.setlcid(const val : TLCID);
begin
TYPEATTR(GetRecordPtr^).lcid := val;
end;
function __TYPEATTR__Wrapper.getlcid : TLCID;
begin
result := TYPEATTR(GetRecordPtr^).lcid;
end;
procedure __TYPEATTR__Wrapper.setdwReserved(const val : Longint);
begin
TYPEATTR(GetRecordPtr^).dwReserved := val;
end;
function __TYPEATTR__Wrapper.getdwReserved : Longint;
begin
result := TYPEATTR(GetRecordPtr^).dwReserved;
end;
procedure __TYPEATTR__Wrapper.setmemidConstructor(const val : TMemberID);
begin
TYPEATTR(GetRecordPtr^).memidConstructor := val;
end;
function __TYPEATTR__Wrapper.getmemidConstructor : TMemberID;
begin
result := TYPEATTR(GetRecordPtr^).memidConstructor;
end;
procedure __TYPEATTR__Wrapper.setmemidDestructor(const val : TMemberID);
begin
TYPEATTR(GetRecordPtr^).memidDestructor := val;
end;
function __TYPEATTR__Wrapper.getmemidDestructor : TMemberID;
begin
result := TYPEATTR(GetRecordPtr^).memidDestructor;
end;
procedure __TYPEATTR__Wrapper.setcbSizeInstance(const val : Longint);
begin
TYPEATTR(GetRecordPtr^).cbSizeInstance := val;
end;
function __TYPEATTR__Wrapper.getcbSizeInstance : Longint;
begin
result := TYPEATTR(GetRecordPtr^).cbSizeInstance;
end;
procedure __TYPEATTR__Wrapper.settypekind(const val : TTypeKind);
begin
TYPEATTR(GetRecordPtr^).typekind := val;
end;
function __TYPEATTR__Wrapper.gettypekind : TTypeKind;
begin
result := TYPEATTR(GetRecordPtr^).typekind;
end;
procedure __TYPEATTR__Wrapper.setcFuncs(const val : Word);
begin
TYPEATTR(GetRecordPtr^).cFuncs := val;
end;
function __TYPEATTR__Wrapper.getcFuncs : Word;
begin
result := TYPEATTR(GetRecordPtr^).cFuncs;
end;
procedure __TYPEATTR__Wrapper.setcVars(const val : Word);
begin
TYPEATTR(GetRecordPtr^).cVars := val;
end;
function __TYPEATTR__Wrapper.getcVars : Word;
begin
result := TYPEATTR(GetRecordPtr^).cVars;
end;
procedure __TYPEATTR__Wrapper.setcImplTypes(const val : Word);
begin
TYPEATTR(GetRecordPtr^).cImplTypes := val;
end;
function __TYPEATTR__Wrapper.getcImplTypes : Word;
begin
result := TYPEATTR(GetRecordPtr^).cImplTypes;
end;
procedure __TYPEATTR__Wrapper.setcbSizeVft(const val : Word);
begin
TYPEATTR(GetRecordPtr^).cbSizeVft := val;
end;
function __TYPEATTR__Wrapper.getcbSizeVft : Word;
begin
result := TYPEATTR(GetRecordPtr^).cbSizeVft;
end;
procedure __TYPEATTR__Wrapper.setcbAlignment(const val : Word);
begin
TYPEATTR(GetRecordPtr^).cbAlignment := val;
end;
function __TYPEATTR__Wrapper.getcbAlignment : Word;
begin
result := TYPEATTR(GetRecordPtr^).cbAlignment;
end;
procedure __TYPEATTR__Wrapper.setwTypeFlags(const val : Word);
begin
TYPEATTR(GetRecordPtr^).wTypeFlags := val;
end;
function __TYPEATTR__Wrapper.getwTypeFlags : Word;
begin
result := TYPEATTR(GetRecordPtr^).wTypeFlags;
end;
procedure __TYPEATTR__Wrapper.setwMajorVerNum(const val : Word);
begin
TYPEATTR(GetRecordPtr^).wMajorVerNum := val;
end;
function __TYPEATTR__Wrapper.getwMajorVerNum : Word;
begin
result := TYPEATTR(GetRecordPtr^).wMajorVerNum;
end;
procedure __TYPEATTR__Wrapper.setwMinorVerNum(const val : Word);
begin
TYPEATTR(GetRecordPtr^).wMinorVerNum := val;
end;
function __TYPEATTR__Wrapper.getwMinorVerNum : Word;
begin
result := TYPEATTR(GetRecordPtr^).wMinorVerNum;
end;
function __TYPEDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TYPEDESC__Wrapper.setvt(const val : TVarType);
begin
TYPEDESC(GetRecordPtr^).vt := val;
end;
function __TYPEDESC__Wrapper.getvt : TVarType;
begin
result := TYPEDESC(GetRecordPtr^).vt;
end;
procedure __TYPEDESC__Wrapper.setHRefType(const val : HRefType);
begin
TYPEDESC(GetRecordPtr^).HRefType := val;
end;
function __TYPEDESC__Wrapper.getHRefType : HRefType;
begin
result := TYPEDESC(GetRecordPtr^).HRefType;
end;
function __VARDESC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __VARDESC__Wrapper.setmemid(const val : TMemberID);
begin
VARDESC(GetRecordPtr^).memid := val;
end;
function __VARDESC__Wrapper.getmemid : TMemberID;
begin
result := VARDESC(GetRecordPtr^).memid;
end;
procedure __VARDESC__Wrapper.setoInst(const val : Longint);
begin
VARDESC(GetRecordPtr^).oInst := val;
end;
function __VARDESC__Wrapper.getoInst : Longint;
begin
result := VARDESC(GetRecordPtr^).oInst;
end;
procedure __VARDESC__Wrapper.setwVarFlags(const val : Word);
begin
VARDESC(GetRecordPtr^).wVarFlags := val;
end;
function __VARDESC__Wrapper.getwVarFlags : Word;
begin
result := VARDESC(GetRecordPtr^).wVarFlags;
end;
procedure __VARDESC__Wrapper.setvarkind(const val : TVarKind);
begin
VARDESC(GetRecordPtr^).varkind := val;
end;
function __VARDESC__Wrapper.getvarkind : TVarKind;
begin
result := VARDESC(GetRecordPtr^).varkind;
end;
function __COSERVERINFO_ : IDispatch;
begin
  result := ___COSERVERINFO__Wrapper.Create;
end;
function __OBJECTID_ : IDispatch;
begin
  result := ___OBJECTID__Wrapper.Create;
end;
function __tagOLECMD_ : IDispatch;
begin
  result := ___tagOLECMD__Wrapper.Create;
end;
function __tagOLECMDTEXT_ : IDispatch;
begin
  result := ___tagOLECMDTEXT__Wrapper.Create;
end;
function _ARRAYDESC_ : IDispatch;
begin
  result := __ARRAYDESC__Wrapper.Create;
end;
function _BIND_OPTS_ : IDispatch;
begin
  result := __BIND_OPTS__Wrapper.Create;
end;
function _BINDPTR_ : IDispatch;
begin
  result := __BINDPTR__Wrapper.Create;
end;
function _BLOB_ : IDispatch;
begin
  result := __BLOB__Wrapper.Create;
end;
function _BORDERWIDTHS_ : IDispatch;
begin
  result := __BORDERWIDTHS__Wrapper.Create;
end;
function _CABOOL_ : IDispatch;
begin
  result := __CABOOL__Wrapper.Create;
end;
function _CABSTR_ : IDispatch;
begin
  result := __CABSTR__Wrapper.Create;
end;
function _CACLIPDATA_ : IDispatch;
begin
  result := __CACLIPDATA__Wrapper.Create;
end;
function _CACLSID_ : IDispatch;
begin
  result := __CACLSID__Wrapper.Create;
end;
function _CACY_ : IDispatch;
begin
  result := __CACY__Wrapper.Create;
end;
function _CADATE_ : IDispatch;
begin
  result := __CADATE__Wrapper.Create;
end;
function _CADBL_ : IDispatch;
begin
  result := __CADBL__Wrapper.Create;
end;
function _CADWORD_ : IDispatch;
begin
  result := __CADWORD__Wrapper.Create;
end;
function _CAFILETIME_ : IDispatch;
begin
  result := __CAFILETIME__Wrapper.Create;
end;
function _CAFLT_ : IDispatch;
begin
  result := __CAFLT__Wrapper.Create;
end;
function _CAH_ : IDispatch;
begin
  result := __CAH__Wrapper.Create;
end;
function _CAI_ : IDispatch;
begin
  result := __CAI__Wrapper.Create;
end;
function _CAL_ : IDispatch;
begin
  result := __CAL__Wrapper.Create;
end;
function _CALPOLESTR_ : IDispatch;
begin
  result := __CALPOLESTR__Wrapper.Create;
end;
function _CALPSTR_ : IDispatch;
begin
  result := __CALPSTR__Wrapper.Create;
end;
function _CALPWSTR_ : IDispatch;
begin
  result := __CALPWSTR__Wrapper.Create;
end;
function _CAPROPVARIANT_ : IDispatch;
begin
  result := __CAPROPVARIANT__Wrapper.Create;
end;
function _CASCODE_ : IDispatch;
begin
  result := __CASCODE__Wrapper.Create;
end;
function _CAUB_ : IDispatch;
begin
  result := __CAUB__Wrapper.Create;
end;
function _CAUH_ : IDispatch;
begin
  result := __CAUH__Wrapper.Create;
end;
function _CAUI_ : IDispatch;
begin
  result := __CAUI__Wrapper.Create;
end;
function _CAUL_ : IDispatch;
begin
  result := __CAUL__Wrapper.Create;
end;
function _CAUUID_ : IDispatch;
begin
  result := __CAUUID__Wrapper.Create;
end;
function _CLIPDATA_ : IDispatch;
begin
  result := __CLIPDATA__Wrapper.Create;
end;
function _CONNECTDATA_ : IDispatch;
begin
  result := __CONNECTDATA__Wrapper.Create;
end;
function _CONTROLINFO_ : IDispatch;
begin
  result := __CONTROLINFO__Wrapper.Create;
end;
function _COSERVERINFO_ : IDispatch;
begin
  result := __COSERVERINFO__Wrapper.Create;
end;
function _CUSTDATA_ : IDispatch;
begin
  result := __CUSTDATA__Wrapper.Create;
end;
function _CUSTDATAITEM_ : IDispatch;
begin
  result := __CUSTDATAITEM__Wrapper.Create;
end;
function _DECIMAL_ : IDispatch;
begin
  result := __DECIMAL__Wrapper.Create;
end;
function _DISPPARAMS_ : IDispatch;
begin
  result := __DISPPARAMS__Wrapper.Create;
end;
function _DVTARGETDEVICE_ : IDispatch;
begin
  result := __DVTARGETDEVICE__Wrapper.Create;
end;
function _ELEMDESC_ : IDispatch;
begin
  result := __ELEMDESC__Wrapper.Create;
end;
function _EXCEPINFO_ : IDispatch;
begin
  result := __EXCEPINFO__Wrapper.Create;
end;
function _FMTID_ : IDispatch;
begin
  result := __FMTID__Wrapper.Create;
end;
function _FONTDESC_ : IDispatch;
begin
  result := __FONTDESC__Wrapper.Create;
end;
function _FUNCDESC_ : IDispatch;
begin
  result := __FUNCDESC__Wrapper.Create;
end;
function _IDLDESC_ : IDispatch;
begin
  result := __IDLDESC__Wrapper.Create;
end;
function _INTERFACEDATA_ : IDispatch;
begin
  result := __INTERFACEDATA__Wrapper.Create;
end;
function _INTERFACEINFO_ : IDispatch;
begin
  result := __INTERFACEINFO__Wrapper.Create;
end;
function _LICINFO_ : IDispatch;
begin
  result := __LICINFO__Wrapper.Create;
end;
function _METHODDATA_ : IDispatch;
begin
  result := __METHODDATA__Wrapper.Create;
end;
function _MULTI_QI_ : IDispatch;
begin
  result := __MULTI_QI__Wrapper.Create;
end;
function _OBJECTDESCRIPTOR_ : IDispatch;
begin
  result := __OBJECTDESCRIPTOR__Wrapper.Create;
end;
function _OBJECTID_ : IDispatch;
begin
  result := __OBJECTID__Wrapper.Create;
end;
function _OCPFIPARAMS_ : IDispatch;
begin
  result := __OCPFIPARAMS__Wrapper.Create;
end;
function _OLECMD_ : IDispatch;
begin
  result := __OLECMD__Wrapper.Create;
end;
function _OLECMDTEXT_ : IDispatch;
begin
  result := __OLECMDTEXT__Wrapper.Create;
end;
function _OLEINPLACEFRAMEINFO_ : IDispatch;
begin
  result := __OLEINPLACEFRAMEINFO__Wrapper.Create;
end;
function _OLEMENUGROUPWIDTHS_ : IDispatch;
begin
  result := __OLEMENUGROUPWIDTHS__Wrapper.Create;
end;
function _OLEVERB_ : IDispatch;
begin
  result := __OLEVERB__Wrapper.Create;
end;
function _PAGERANGE_ : IDispatch;
begin
  result := __PAGERANGE__Wrapper.Create;
end;
function _PAGESET_ : IDispatch;
begin
  result := __PAGESET__Wrapper.Create;
end;
function _PARAMDATA_ : IDispatch;
begin
  result := __PARAMDATA__Wrapper.Create;
end;
function _PARAMDESC_ : IDispatch;
begin
  result := __PARAMDESC__Wrapper.Create;
end;
function _PARAMDESCEX_ : IDispatch;
begin
  result := __PARAMDESCEX__Wrapper.Create;
end;
function _PICTDESC_ : IDispatch;
begin
  result := __PICTDESC__Wrapper.Create;
end;
function _POINTF_ : IDispatch;
begin
  result := __POINTF__Wrapper.Create;
end;
function _PROPPAGEINFO_ : IDispatch;
begin
  result := __PROPPAGEINFO__Wrapper.Create;
end;
function _PROPSPEC_ : IDispatch;
begin
  result := __PROPSPEC__Wrapper.Create;
end;
function _PROPVARIANT_ : IDispatch;
begin
  result := __PROPVARIANT__Wrapper.Create;
end;
function _RemSTGMEDIUM_ : IDispatch;
begin
  result := __RemSTGMEDIUM__Wrapper.Create;
end;
function _RPCOLEMESSAGE_ : IDispatch;
begin
  result := __RPCOLEMESSAGE__Wrapper.Create;
end;
function _SAFEARRAY_ : IDispatch;
begin
  result := __SAFEARRAY__Wrapper.Create;
end;
function _SAFEARRAYBOUND_ : IDispatch;
begin
  result := __SAFEARRAYBOUND__Wrapper.Create;
end;
function _SOLE_AUTHENTICATION_SERVICE_ : IDispatch;
begin
  result := __SOLE_AUTHENTICATION_SERVICE__Wrapper.Create;
end;
function _STATDATA_ : IDispatch;
begin
  result := __STATDATA__Wrapper.Create;
end;
function _STATPROPSETSTG_ : IDispatch;
begin
  result := __STATPROPSETSTG__Wrapper.Create;
end;
function _STATPROPSTG_ : IDispatch;
begin
  result := __STATPROPSTG__Wrapper.Create;
end;
function _STGMEDIUM_ : IDispatch;
begin
  result := __STGMEDIUM__Wrapper.Create;
end;
function _tagARRAYDESC_ : IDispatch;
begin
  result := __tagARRAYDESC__Wrapper.Create;
end;
function _tagBIND_OPTS_ : IDispatch;
begin
  result := __tagBIND_OPTS__Wrapper.Create;
end;
function _tagBINDPTR_ : IDispatch;
begin
  result := __tagBINDPTR__Wrapper.Create;
end;
function _tagBLOB_ : IDispatch;
begin
  result := __tagBLOB__Wrapper.Create;
end;
function _tagCABOOL_ : IDispatch;
begin
  result := __tagCABOOL__Wrapper.Create;
end;
function _tagCABSTR_ : IDispatch;
begin
  result := __tagCABSTR__Wrapper.Create;
end;
function _tagCACLIPDATA_ : IDispatch;
begin
  result := __tagCACLIPDATA__Wrapper.Create;
end;
function _tagCACLSID_ : IDispatch;
begin
  result := __tagCACLSID__Wrapper.Create;
end;
function _tagCACY_ : IDispatch;
begin
  result := __tagCACY__Wrapper.Create;
end;
function _tagCADATE_ : IDispatch;
begin
  result := __tagCADATE__Wrapper.Create;
end;
function _tagCADBL_ : IDispatch;
begin
  result := __tagCADBL__Wrapper.Create;
end;
function _tagCADWORD_ : IDispatch;
begin
  result := __tagCADWORD__Wrapper.Create;
end;
function _tagCAFILETIME_ : IDispatch;
begin
  result := __tagCAFILETIME__Wrapper.Create;
end;
function _tagCAFLT_ : IDispatch;
begin
  result := __tagCAFLT__Wrapper.Create;
end;
function _tagCAH_ : IDispatch;
begin
  result := __tagCAH__Wrapper.Create;
end;
function _tagCAI_ : IDispatch;
begin
  result := __tagCAI__Wrapper.Create;
end;
function _tagCAL_ : IDispatch;
begin
  result := __tagCAL__Wrapper.Create;
end;
function _tagCALPOLESTR_ : IDispatch;
begin
  result := __tagCALPOLESTR__Wrapper.Create;
end;
function _tagCALPSTR_ : IDispatch;
begin
  result := __tagCALPSTR__Wrapper.Create;
end;
function _tagCALPWSTR_ : IDispatch;
begin
  result := __tagCALPWSTR__Wrapper.Create;
end;
function _tagCAPROPVARIANT_ : IDispatch;
begin
  result := __tagCAPROPVARIANT__Wrapper.Create;
end;
function _tagCASCODE_ : IDispatch;
begin
  result := __tagCASCODE__Wrapper.Create;
end;
function _tagCAUB_ : IDispatch;
begin
  result := __tagCAUB__Wrapper.Create;
end;
function _tagCAUH_ : IDispatch;
begin
  result := __tagCAUH__Wrapper.Create;
end;
function _tagCAUI_ : IDispatch;
begin
  result := __tagCAUI__Wrapper.Create;
end;
function _tagCAUL_ : IDispatch;
begin
  result := __tagCAUL__Wrapper.Create;
end;
function _tagCAUUID_ : IDispatch;
begin
  result := __tagCAUUID__Wrapper.Create;
end;
function _tagCLIPDATA_ : IDispatch;
begin
  result := __tagCLIPDATA__Wrapper.Create;
end;
function _tagCONNECTDATA_ : IDispatch;
begin
  result := __tagCONNECTDATA__Wrapper.Create;
end;
function _tagCONTROLINFO_ : IDispatch;
begin
  result := __tagCONTROLINFO__Wrapper.Create;
end;
function _tagCUSTDATA_ : IDispatch;
begin
  result := __tagCUSTDATA__Wrapper.Create;
end;
function _tagCUSTDATAITEM_ : IDispatch;
begin
  result := __tagCUSTDATAITEM__Wrapper.Create;
end;
function _tagDEC_ : IDispatch;
begin
  result := __tagDEC__Wrapper.Create;
end;
function _tagDISPPARAMS_ : IDispatch;
begin
  result := __tagDISPPARAMS__Wrapper.Create;
end;
function _tagDVTARGETDEVICE_ : IDispatch;
begin
  result := __tagDVTARGETDEVICE__Wrapper.Create;
end;
function _tagELEMDESC_ : IDispatch;
begin
  result := __tagELEMDESC__Wrapper.Create;
end;
function _tagEXCEPINFO_ : IDispatch;
begin
  result := __tagEXCEPINFO__Wrapper.Create;
end;
function _tagFONTDESC_ : IDispatch;
begin
  result := __tagFONTDESC__Wrapper.Create;
end;
function _tagFORMATETC_ : IDispatch;
begin
  result := __tagFORMATETC__Wrapper.Create;
end;
function _tagFUNCDESC_ : IDispatch;
begin
  result := __tagFUNCDESC__Wrapper.Create;
end;
function _tagIDLDESC_ : IDispatch;
begin
  result := __tagIDLDESC__Wrapper.Create;
end;
function _tagINTERFACEDATA_ : IDispatch;
begin
  result := __tagINTERFACEDATA__Wrapper.Create;
end;
function _tagINTERFACEINFO_ : IDispatch;
begin
  result := __tagINTERFACEINFO__Wrapper.Create;
end;
function _tagLICINFO_ : IDispatch;
begin
  result := __tagLICINFO__Wrapper.Create;
end;
function _tagMETHODDATA_ : IDispatch;
begin
  result := __tagMETHODDATA__Wrapper.Create;
end;
function _tagMULTI_QI_ : IDispatch;
begin
  result := __tagMULTI_QI__Wrapper.Create;
end;
function _tagOBJECTDESCRIPTOR_ : IDispatch;
begin
  result := __tagOBJECTDESCRIPTOR__Wrapper.Create;
end;
function _tagOCPFIPARAMS_ : IDispatch;
begin
  result := __tagOCPFIPARAMS__Wrapper.Create;
end;
function _tagOIFI_ : IDispatch;
begin
  result := __tagOIFI__Wrapper.Create;
end;
function _tagOleMenuGroupWidths_ : IDispatch;
begin
  result := __tagOleMenuGroupWidths__Wrapper.Create;
end;
function _tagOLEVERB_ : IDispatch;
begin
  result := __tagOLEVERB__Wrapper.Create;
end;
function _tagPAGERANGE_ : IDispatch;
begin
  result := __tagPAGERANGE__Wrapper.Create;
end;
function _tagPAGESET_ : IDispatch;
begin
  result := __tagPAGESET__Wrapper.Create;
end;
function _tagPARAMDATA_ : IDispatch;
begin
  result := __tagPARAMDATA__Wrapper.Create;
end;
function _tagPARAMDESC_ : IDispatch;
begin
  result := __tagPARAMDESC__Wrapper.Create;
end;
function _tagPARAMDESCEX_ : IDispatch;
begin
  result := __tagPARAMDESCEX__Wrapper.Create;
end;
function _tagPICTDESC_ : IDispatch;
begin
  result := __tagPICTDESC__Wrapper.Create;
end;
function _tagPOINTF_ : IDispatch;
begin
  result := __tagPOINTF__Wrapper.Create;
end;
function _tagPROPPAGEINFO_ : IDispatch;
begin
  result := __tagPROPPAGEINFO__Wrapper.Create;
end;
function _tagPROPSPEC_ : IDispatch;
begin
  result := __tagPROPSPEC__Wrapper.Create;
end;
function _tagPROPVARIANT_ : IDispatch;
begin
  result := __tagPROPVARIANT__Wrapper.Create;
end;
function _tagQACONTAINER_ : IDispatch;
begin
  result := __tagQACONTAINER__Wrapper.Create;
end;
function _tagQACONTROL_ : IDispatch;
begin
  result := __tagQACONTROL__Wrapper.Create;
end;
function _tagRemSTGMEDIUM_ : IDispatch;
begin
  result := __tagRemSTGMEDIUM__Wrapper.Create;
end;
function _tagRPCOLEMESSAGE_ : IDispatch;
begin
  result := __tagRPCOLEMESSAGE__Wrapper.Create;
end;
function _tagSAFEARRAY_ : IDispatch;
begin
  result := __tagSAFEARRAY__Wrapper.Create;
end;
function _tagSAFEARRAYBOUND_ : IDispatch;
begin
  result := __tagSAFEARRAYBOUND__Wrapper.Create;
end;
function _tagSOLE_AUTHENTICATION_SERVICE_ : IDispatch;
begin
  result := __tagSOLE_AUTHENTICATION_SERVICE__Wrapper.Create;
end;
function _tagSTATDATA_ : IDispatch;
begin
  result := __tagSTATDATA__Wrapper.Create;
end;
function _tagSTATPROPSETSTG_ : IDispatch;
begin
  result := __tagSTATPROPSETSTG__Wrapper.Create;
end;
function _tagSTATPROPSTG_ : IDispatch;
begin
  result := __tagSTATPROPSTG__Wrapper.Create;
end;
function _tagSTATSTG_ : IDispatch;
begin
  result := __tagSTATSTG__Wrapper.Create;
end;
function _tagSTGMEDIUM_ : IDispatch;
begin
  result := __tagSTGMEDIUM__Wrapper.Create;
end;
function _tagTLIBATTR_ : IDispatch;
begin
  result := __tagTLIBATTR__Wrapper.Create;
end;
function _tagTYPEATTR_ : IDispatch;
begin
  result := __tagTYPEATTR__Wrapper.Create;
end;
function _tagTYPEDESC_ : IDispatch;
begin
  result := __tagTYPEDESC__Wrapper.Create;
end;
function _tagVARDESC_ : IDispatch;
begin
  result := __tagVARDESC__Wrapper.Create;
end;
function _tagVARIANT_ : IDispatch;
begin
  result := __tagVARIANT__Wrapper.Create;
end;
function _TArrayDesc_ : IDispatch;
begin
  result := __TArrayDesc__Wrapper.Create;
end;
function _TBindOpts_ : IDispatch;
begin
  result := __TBindOpts__Wrapper.Create;
end;
function _TBindPtr_ : IDispatch;
begin
  result := __TBindPtr__Wrapper.Create;
end;
function _TBlob_ : IDispatch;
begin
  result := __TBlob__Wrapper.Create;
end;
function _TBorderWidths_ : IDispatch;
begin
  result := __TBorderWidths__Wrapper.Create;
end;
function _TCABOOL_ : IDispatch;
begin
  result := __TCABOOL__Wrapper.Create;
end;
function _TCABSTR_ : IDispatch;
begin
  result := __TCABSTR__Wrapper.Create;
end;
function _TCACLIPDATA_ : IDispatch;
begin
  result := __TCACLIPDATA__Wrapper.Create;
end;
function _TCACLSID_ : IDispatch;
begin
  result := __TCACLSID__Wrapper.Create;
end;
function _TCACY_ : IDispatch;
begin
  result := __TCACY__Wrapper.Create;
end;
function _TCADATE_ : IDispatch;
begin
  result := __TCADATE__Wrapper.Create;
end;
function _TCADBL_ : IDispatch;
begin
  result := __TCADBL__Wrapper.Create;
end;
function _TCAFILETIME_ : IDispatch;
begin
  result := __TCAFILETIME__Wrapper.Create;
end;
function _TCAFLT_ : IDispatch;
begin
  result := __TCAFLT__Wrapper.Create;
end;
function _TCAGUID_ : IDispatch;
begin
  result := __TCAGUID__Wrapper.Create;
end;
function _TCAH_ : IDispatch;
begin
  result := __TCAH__Wrapper.Create;
end;
function _TCAI_ : IDispatch;
begin
  result := __TCAI__Wrapper.Create;
end;
function _TCAL_ : IDispatch;
begin
  result := __TCAL__Wrapper.Create;
end;
function _TCALongint_ : IDispatch;
begin
  result := __TCALongint__Wrapper.Create;
end;
function _TCALPSTR_ : IDispatch;
begin
  result := __TCALPSTR__Wrapper.Create;
end;
function _TCALPWSTR_ : IDispatch;
begin
  result := __TCALPWSTR__Wrapper.Create;
end;
function _TCAPOleStr_ : IDispatch;
begin
  result := __TCAPOleStr__Wrapper.Create;
end;
function _TCAPROPVARIANT_ : IDispatch;
begin
  result := __TCAPROPVARIANT__Wrapper.Create;
end;
function _TCASCODE_ : IDispatch;
begin
  result := __TCASCODE__Wrapper.Create;
end;
function _TCATEGORYINFO_ : IDispatch;
begin
  result := __TCATEGORYINFO__Wrapper.Create;
end;
function _TCAUB_ : IDispatch;
begin
  result := __TCAUB__Wrapper.Create;
end;
function _TCAUH_ : IDispatch;
begin
  result := __TCAUH__Wrapper.Create;
end;
function _TCAUI_ : IDispatch;
begin
  result := __TCAUI__Wrapper.Create;
end;
function _TCAUL_ : IDispatch;
begin
  result := __TCAUL__Wrapper.Create;
end;
function _TClipData_ : IDispatch;
begin
  result := __TClipData__Wrapper.Create;
end;
function _TConnectData_ : IDispatch;
begin
  result := __TConnectData__Wrapper.Create;
end;
function _TControlInfo_ : IDispatch;
begin
  result := __TControlInfo__Wrapper.Create;
end;
function _TCoServerInfo_ : IDispatch;
begin
  result := __TCoServerInfo__Wrapper.Create;
end;
function _TCustData_ : IDispatch;
begin
  result := __TCustData__Wrapper.Create;
end;
function _TCustDataItem_ : IDispatch;
begin
  result := __TCustDataItem__Wrapper.Create;
end;
function _TDecimal_ : IDispatch;
begin
  result := __TDecimal__Wrapper.Create;
end;
function _TDispParams_ : IDispatch;
begin
  result := __TDispParams__Wrapper.Create;
end;
function _TDVTargetDevice_ : IDispatch;
begin
  result := __TDVTargetDevice__Wrapper.Create;
end;
function _TElemDesc_ : IDispatch;
begin
  result := __TElemDesc__Wrapper.Create;
end;
function _TExcepInfo_ : IDispatch;
begin
  result := __TExcepInfo__Wrapper.Create;
end;
function _TFmtID_ : IDispatch;
begin
  result := __TFmtID__Wrapper.Create;
end;
function _TFontDesc_ : IDispatch;
begin
  result := __TFontDesc__Wrapper.Create;
end;
function _TFuncDesc_ : IDispatch;
begin
  result := __TFuncDesc__Wrapper.Create;
end;
function _TIDLDesc_ : IDispatch;
begin
  result := __TIDLDesc__Wrapper.Create;
end;
function _TInterfaceData_ : IDispatch;
begin
  result := __TInterfaceData__Wrapper.Create;
end;
function _TInterfaceInfo_ : IDispatch;
begin
  result := __TInterfaceInfo__Wrapper.Create;
end;
function _TLIBATTR_ : IDispatch;
begin
  result := __TLIBATTR__Wrapper.Create;
end;
function _TLicInfo_ : IDispatch;
begin
  result := __TLicInfo__Wrapper.Create;
end;
function _TLinkSrcDescriptor_ : IDispatch;
begin
  result := __TLinkSrcDescriptor__Wrapper.Create;
end;
function _TMethodData_ : IDispatch;
begin
  result := __TMethodData__Wrapper.Create;
end;
function _TMultiQI_ : IDispatch;
begin
  result := __TMultiQI__Wrapper.Create;
end;
function _TObjectDescriptor_ : IDispatch;
begin
  result := __TObjectDescriptor__Wrapper.Create;
end;
function _TObjectID_ : IDispatch;
begin
  result := __TObjectID__Wrapper.Create;
end;
function _TOCPFIParams_ : IDispatch;
begin
  result := __TOCPFIParams__Wrapper.Create;
end;
function _TOleCmd_ : IDispatch;
begin
  result := __TOleCmd__Wrapper.Create;
end;
function _TOleCmdText_ : IDispatch;
begin
  result := __TOleCmdText__Wrapper.Create;
end;
function _TOleInPlaceFrameInfo_ : IDispatch;
begin
  result := __TOleInPlaceFrameInfo__Wrapper.Create;
end;
function _TOleMenuGroupWidths_ : IDispatch;
begin
  result := __TOleMenuGroupWidths__Wrapper.Create;
end;
function _TOleVerb_ : IDispatch;
begin
  result := __TOleVerb__Wrapper.Create;
end;
function _TPageRange_ : IDispatch;
begin
  result := __TPageRange__Wrapper.Create;
end;
function _TPageSet_ : IDispatch;
begin
  result := __TPageSet__Wrapper.Create;
end;
function _TParamData_ : IDispatch;
begin
  result := __TParamData__Wrapper.Create;
end;
function _TParamDesc_ : IDispatch;
begin
  result := __TParamDesc__Wrapper.Create;
end;
function _TParamDescEx_ : IDispatch;
begin
  result := __TParamDescEx__Wrapper.Create;
end;
function _TPictDesc_ : IDispatch;
begin
  result := __TPictDesc__Wrapper.Create;
end;
function _TPointF_ : IDispatch;
begin
  result := __TPointF__Wrapper.Create;
end;
function _TPropPageInfo_ : IDispatch;
begin
  result := __TPropPageInfo__Wrapper.Create;
end;
function _TPropSpec_ : IDispatch;
begin
  result := __TPropSpec__Wrapper.Create;
end;
function _TPropVariant_ : IDispatch;
begin
  result := __TPropVariant__Wrapper.Create;
end;
function _TQaContainer_ : IDispatch;
begin
  result := __TQaContainer__Wrapper.Create;
end;
function _TQaControl_ : IDispatch;
begin
  result := __TQaControl__Wrapper.Create;
end;
function _TRemStgMedium_ : IDispatch;
begin
  result := __TRemStgMedium__Wrapper.Create;
end;
function _TRpcOleMessage_ : IDispatch;
begin
  result := __TRpcOleMessage__Wrapper.Create;
end;
function _TSafeArray_ : IDispatch;
begin
  result := __TSafeArray__Wrapper.Create;
end;
function _TSafeArrayBound_ : IDispatch;
begin
  result := __TSafeArrayBound__Wrapper.Create;
end;
function _TSOleAuthenticationService_ : IDispatch;
begin
  result := __TSOleAuthenticationService__Wrapper.Create;
end;
function _TStatData_ : IDispatch;
begin
  result := __TStatData__Wrapper.Create;
end;
function _TStatPropSetStg_ : IDispatch;
begin
  result := __TStatPropSetStg__Wrapper.Create;
end;
function _TStatPropStg_ : IDispatch;
begin
  result := __TStatPropStg__Wrapper.Create;
end;
function _TStgMedium_ : IDispatch;
begin
  result := __TStgMedium__Wrapper.Create;
end;
function _TTextMetricOle_ : IDispatch;
begin
  result := __TTextMetricOle__Wrapper.Create;
end;
function _TTLibAttr_ : IDispatch;
begin
  result := __TTLibAttr__Wrapper.Create;
end;
function _TTypeAttr_ : IDispatch;
begin
  result := __TTypeAttr__Wrapper.Create;
end;
function _TTypeDesc_ : IDispatch;
begin
  result := __TTypeDesc__Wrapper.Create;
end;
function _TVarDesc_ : IDispatch;
begin
  result := __TVarDesc__Wrapper.Create;
end;
function _TVariantArg_ : IDispatch;
begin
  result := __TVariantArg__Wrapper.Create;
end;
function _TYPEATTR_ : IDispatch;
begin
  result := __TYPEATTR__Wrapper.Create;
end;
function _TYPEDESC_ : IDispatch;
begin
  result := __TYPEDESC__Wrapper.Create;
end;
function _VARDESC_ : IDispatch;
begin
  result := __VARDESC__Wrapper.Create;
end;
function __TGUID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TGUID__Wrapper.setD1(const val : LongWord);
begin
TGUID(GetRecordPtr^).D1 := val;
end;
function __TGUID__Wrapper.getD1 : LongWord;
begin
result := TGUID(GetRecordPtr^).D1;
end;
procedure __TGUID__Wrapper.setD2(const val : Word);
begin
TGUID(GetRecordPtr^).D2 := val;
end;
function __TGUID__Wrapper.getD2 : Word;
begin
result := TGUID(GetRecordPtr^).D2;
end;
procedure __TGUID__Wrapper.setD3(const val : Word);
begin
TGUID(GetRecordPtr^).D3 := val;
end;
function __TGUID__Wrapper.getD3 : Word;
begin
result := TGUID(GetRecordPtr^).D3;
end;
function __TFileTime__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFileTime__Wrapper.setdwLowDateTime(const val : DWORD);
begin
TFileTime(GetRecordPtr^).dwLowDateTime := val;
end;
function __TFileTime__Wrapper.getdwLowDateTime : DWORD;
begin
result := TFileTime(GetRecordPtr^).dwLowDateTime;
end;
procedure __TFileTime__Wrapper.setdwHighDateTime(const val : DWORD);
begin
TFileTime(GetRecordPtr^).dwHighDateTime := val;
end;
function __TFileTime__Wrapper.getdwHighDateTime : DWORD;
begin
result := TFileTime(GetRecordPtr^).dwHighDateTime;
end;
function __TSystemTime__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSystemTime__Wrapper.setwYear(const val : Word);
begin
TSystemTime(GetRecordPtr^).wYear := val;
end;
function __TSystemTime__Wrapper.getwYear : Word;
begin
result := TSystemTime(GetRecordPtr^).wYear;
end;
procedure __TSystemTime__Wrapper.setwMonth(const val : Word);
begin
TSystemTime(GetRecordPtr^).wMonth := val;
end;
function __TSystemTime__Wrapper.getwMonth : Word;
begin
result := TSystemTime(GetRecordPtr^).wMonth;
end;
procedure __TSystemTime__Wrapper.setwDayOfWeek(const val : Word);
begin
TSystemTime(GetRecordPtr^).wDayOfWeek := val;
end;
function __TSystemTime__Wrapper.getwDayOfWeek : Word;
begin
result := TSystemTime(GetRecordPtr^).wDayOfWeek;
end;
procedure __TSystemTime__Wrapper.setwDay(const val : Word);
begin
TSystemTime(GetRecordPtr^).wDay := val;
end;
function __TSystemTime__Wrapper.getwDay : Word;
begin
result := TSystemTime(GetRecordPtr^).wDay;
end;
procedure __TSystemTime__Wrapper.setwHour(const val : Word);
begin
TSystemTime(GetRecordPtr^).wHour := val;
end;
function __TSystemTime__Wrapper.getwHour : Word;
begin
result := TSystemTime(GetRecordPtr^).wHour;
end;
procedure __TSystemTime__Wrapper.setwMinute(const val : Word);
begin
TSystemTime(GetRecordPtr^).wMinute := val;
end;
function __TSystemTime__Wrapper.getwMinute : Word;
begin
result := TSystemTime(GetRecordPtr^).wMinute;
end;
procedure __TSystemTime__Wrapper.setwSecond(const val : Word);
begin
TSystemTime(GetRecordPtr^).wSecond := val;
end;
function __TSystemTime__Wrapper.getwSecond : Word;
begin
result := TSystemTime(GetRecordPtr^).wSecond;
end;
procedure __TSystemTime__Wrapper.setwMilliseconds(const val : Word);
begin
TSystemTime(GetRecordPtr^).wMilliseconds := val;
end;
function __TSystemTime__Wrapper.getwMilliseconds : Word;
begin
result := TSystemTime(GetRecordPtr^).wMilliseconds;
end;
function ____IsEqualGUID__Wrapper(const p0 : IDispatch;
const p1 : IDispatch): Boolean;
var
__p0 : ^TGUID;
__i0 : IDispatch;
__p1 : ^TGUID;
__i1 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := IsEqualGUID(__p0^,__p1^);
end;

function ____CoCreateGuid__Wrapper(const p0 : IDispatch): HRESULT;
var
__p0 : ^TGUID;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := CoCreateGuid(__p0^);
end;

function ____CoFileTimeToDosDateTime__Wrapper(const p0 : IDispatch;
var p1 : Word;
var p2 : Word): BOOL;
var
__p0 : ^TFileTime;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := CoFileTimeToDosDateTime(__p0^,p1,p2);
end;

function ____CoDosDateTimeToFileTime__Wrapper(p0 : Word;
p1 : Word;
const p2 : IDispatch): BOOL;
var
__p2 : ^TFileTime;
__i2 : IDispatch;
begin
if p2 = nil then exit;
__p2 := (p2 as IDCRecordWrapper).GetRecordPtr;
result := CoDosDateTimeToFileTime(p0,p1,__p2^);
end;

function ____CoFileTimeNow__Wrapper(const p0 : IDispatch): HRESULT;
var
__p0 : ^TFileTime;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := CoFileTimeNow(__p0^);
end;

function ____SystemTimeToVariantTime__Wrapper(const p0 : IDispatch;
var p1 : TOleDate): Integer;
var
__p0 : ^TSystemTime;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := SystemTimeToVariantTime(__p0^,p1);
end;

function ____VariantTimeToSystemTime__Wrapper(p0 : TOleDate;
const p1 : IDispatch): Integer;
var
__p1 : ^TSystemTime;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := VariantTimeToSystemTime(p0,__p1^);
end;

function ____QueryPathOfRegTypeLib__Wrapper(const p0 : IDispatch;
p1 : Word;
p2 : Word;
p3 : TLCID;
var p4 : WideString): HRESULT;
var
__p0 : ^TGUID;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := QueryPathOfRegTypeLib(__p0^,p1,p2,p3,p4);
end;

function ____UnRegisterTypeLib__Wrapper(const p0 : IDispatch;
p1 : Word;
p2 : Word;
p3 : TLCID;
p4 : TSysKind): HRESULT;
var
__p0 : ^TGUID;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := UnRegisterTypeLib(__p0^,p1,p2,p3,p4);
end;

function ____DispGetParam__Wrapper(const p0 : IDispatch;
p1 : Integer;
p2 : TVarType;
var p3 : OleVariant;
var p4 : Integer): HRESULT;
var
__p0 : ^TDispParams;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := DispGetParam(__p0^,p1,p2,p3,p4);
end;

procedure ____ClearCustData__Wrapper(const p0 : IDispatch);
var
__p0 : ^TCustData;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
ClearCustData(__p0^);
end;

function ____OleCreateMenuDescriptor__Wrapper(p0 : HMenu;
const p1 : IDispatch): HMenu;
var
__p1 : ^TOleMenuGroupWidths;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := OleCreateMenuDescriptor(p0,__p1^);
end;

procedure ____ReleaseStgMedium__Wrapper(const p0 : IDispatch);
var
__p0 : ^TStgMedium;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
ReleaseStgMedium(__p0^);
end;

function ____OleCreatePropertyFrameIndirect__Wrapper(const p0 : IDispatch): HRESULT;
var
__p0 : ^TOCPFIParams;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := OleCreatePropertyFrameIndirect(__p0^);
end;


type ___COSERVERINFO__Wrapper__ = class(___COSERVERINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___COSERVERINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_COSERVERINFOToVariant(var R : _COSERVERINFO) : OleVariant;
var
__rw : ___COSERVERINFO__Wrapper__;
begin
__rw := ___COSERVERINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_COSERVERINFO(const V : OleVariant) : _COSERVERINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _COSERVERINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___OBJECTID__Wrapper__ = class(___OBJECTID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___OBJECTID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_OBJECTIDToVariant(var R : _OBJECTID) : OleVariant;
var
__rw : ___OBJECTID__Wrapper__;
begin
__rw := ___OBJECTID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_OBJECTID(const V : OleVariant) : _OBJECTID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _OBJECTID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagOLECMD__Wrapper__ = class(___tagOLECMD__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagOLECMD__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagOLECMDToVariant(var R : _tagOLECMD) : OleVariant;
var
__rw : ___tagOLECMD__Wrapper__;
begin
__rw := ___tagOLECMD__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagOLECMD(const V : OleVariant) : _tagOLECMD;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagOLECMD((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagOLECMDTEXT__Wrapper__ = class(___tagOLECMDTEXT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagOLECMDTEXT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagOLECMDTEXTToVariant(var R : _tagOLECMDTEXT) : OleVariant;
var
__rw : ___tagOLECMDTEXT__Wrapper__;
begin
__rw := ___tagOLECMDTEXT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagOLECMDTEXT(const V : OleVariant) : _tagOLECMDTEXT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagOLECMDTEXT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ARRAYDESC__Wrapper__ = class(__ARRAYDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ARRAYDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertARRAYDESCToVariant(var R : ARRAYDESC) : OleVariant;
var
__rw : __ARRAYDESC__Wrapper__;
begin
__rw := __ARRAYDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToARRAYDESC(const V : OleVariant) : ARRAYDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ARRAYDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __BIND_OPTS__Wrapper__ = class(__BIND_OPTS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __BIND_OPTS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertBIND_OPTSToVariant(var R : BIND_OPTS) : OleVariant;
var
__rw : __BIND_OPTS__Wrapper__;
begin
__rw := __BIND_OPTS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToBIND_OPTS(const V : OleVariant) : BIND_OPTS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := BIND_OPTS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __BINDPTR__Wrapper__ = class(__BINDPTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __BINDPTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertBINDPTRToVariant(var R : BINDPTR) : OleVariant;
var
__rw : __BINDPTR__Wrapper__;
begin
__rw := __BINDPTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToBINDPTR(const V : OleVariant) : BINDPTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := BINDPTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __BLOB__Wrapper__ = class(__BLOB__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __BLOB__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertBLOBToVariant(var R : BLOB) : OleVariant;
var
__rw : __BLOB__Wrapper__;
begin
__rw := __BLOB__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToBLOB(const V : OleVariant) : BLOB;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := BLOB((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __BORDERWIDTHS__Wrapper__ = class(__BORDERWIDTHS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __BORDERWIDTHS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertBORDERWIDTHSToVariant(var R : BORDERWIDTHS) : OleVariant;
var
__rw : __BORDERWIDTHS__Wrapper__;
begin
__rw := __BORDERWIDTHS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToBORDERWIDTHS(const V : OleVariant) : BORDERWIDTHS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := BORDERWIDTHS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CABOOL__Wrapper__ = class(__CABOOL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CABOOL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCABOOLToVariant(var R : CABOOL) : OleVariant;
var
__rw : __CABOOL__Wrapper__;
begin
__rw := __CABOOL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCABOOL(const V : OleVariant) : CABOOL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CABOOL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CABSTR__Wrapper__ = class(__CABSTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CABSTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCABSTRToVariant(var R : CABSTR) : OleVariant;
var
__rw : __CABSTR__Wrapper__;
begin
__rw := __CABSTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCABSTR(const V : OleVariant) : CABSTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CABSTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CACLIPDATA__Wrapper__ = class(__CACLIPDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CACLIPDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCACLIPDATAToVariant(var R : CACLIPDATA) : OleVariant;
var
__rw : __CACLIPDATA__Wrapper__;
begin
__rw := __CACLIPDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCACLIPDATA(const V : OleVariant) : CACLIPDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CACLIPDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CACLSID__Wrapper__ = class(__CACLSID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CACLSID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCACLSIDToVariant(var R : CACLSID) : OleVariant;
var
__rw : __CACLSID__Wrapper__;
begin
__rw := __CACLSID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCACLSID(const V : OleVariant) : CACLSID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CACLSID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CACY__Wrapper__ = class(__CACY__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CACY__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCACYToVariant(var R : CACY) : OleVariant;
var
__rw : __CACY__Wrapper__;
begin
__rw := __CACY__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCACY(const V : OleVariant) : CACY;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CACY((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CADATE__Wrapper__ = class(__CADATE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CADATE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCADATEToVariant(var R : CADATE) : OleVariant;
var
__rw : __CADATE__Wrapper__;
begin
__rw := __CADATE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCADATE(const V : OleVariant) : CADATE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CADATE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CADBL__Wrapper__ = class(__CADBL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CADBL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCADBLToVariant(var R : CADBL) : OleVariant;
var
__rw : __CADBL__Wrapper__;
begin
__rw := __CADBL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCADBL(const V : OleVariant) : CADBL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CADBL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CADWORD__Wrapper__ = class(__CADWORD__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CADWORD__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCADWORDToVariant(var R : CADWORD) : OleVariant;
var
__rw : __CADWORD__Wrapper__;
begin
__rw := __CADWORD__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCADWORD(const V : OleVariant) : CADWORD;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CADWORD((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAFILETIME__Wrapper__ = class(__CAFILETIME__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAFILETIME__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAFILETIMEToVariant(var R : CAFILETIME) : OleVariant;
var
__rw : __CAFILETIME__Wrapper__;
begin
__rw := __CAFILETIME__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAFILETIME(const V : OleVariant) : CAFILETIME;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAFILETIME((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAFLT__Wrapper__ = class(__CAFLT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAFLT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAFLTToVariant(var R : CAFLT) : OleVariant;
var
__rw : __CAFLT__Wrapper__;
begin
__rw := __CAFLT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAFLT(const V : OleVariant) : CAFLT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAFLT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAH__Wrapper__ = class(__CAH__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAH__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAHToVariant(var R : CAH) : OleVariant;
var
__rw : __CAH__Wrapper__;
begin
__rw := __CAH__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAH(const V : OleVariant) : CAH;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAH((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAI__Wrapper__ = class(__CAI__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAI__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAIToVariant(var R : CAI) : OleVariant;
var
__rw : __CAI__Wrapper__;
begin
__rw := __CAI__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAI(const V : OleVariant) : CAI;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAI((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAL__Wrapper__ = class(__CAL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCALToVariant(var R : CAL) : OleVariant;
var
__rw : __CAL__Wrapper__;
begin
__rw := __CAL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAL(const V : OleVariant) : CAL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CALPOLESTR__Wrapper__ = class(__CALPOLESTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CALPOLESTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCALPOLESTRToVariant(var R : CALPOLESTR) : OleVariant;
var
__rw : __CALPOLESTR__Wrapper__;
begin
__rw := __CALPOLESTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCALPOLESTR(const V : OleVariant) : CALPOLESTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CALPOLESTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CALPSTR__Wrapper__ = class(__CALPSTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CALPSTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCALPSTRToVariant(var R : CALPSTR) : OleVariant;
var
__rw : __CALPSTR__Wrapper__;
begin
__rw := __CALPSTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCALPSTR(const V : OleVariant) : CALPSTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CALPSTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CALPWSTR__Wrapper__ = class(__CALPWSTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CALPWSTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCALPWSTRToVariant(var R : CALPWSTR) : OleVariant;
var
__rw : __CALPWSTR__Wrapper__;
begin
__rw := __CALPWSTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCALPWSTR(const V : OleVariant) : CALPWSTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CALPWSTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAPROPVARIANT__Wrapper__ = class(__CAPROPVARIANT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAPROPVARIANT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAPROPVARIANTToVariant(var R : CAPROPVARIANT) : OleVariant;
var
__rw : __CAPROPVARIANT__Wrapper__;
begin
__rw := __CAPROPVARIANT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAPROPVARIANT(const V : OleVariant) : CAPROPVARIANT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAPROPVARIANT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CASCODE__Wrapper__ = class(__CASCODE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CASCODE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCASCODEToVariant(var R : CASCODE) : OleVariant;
var
__rw : __CASCODE__Wrapper__;
begin
__rw := __CASCODE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCASCODE(const V : OleVariant) : CASCODE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CASCODE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAUB__Wrapper__ = class(__CAUB__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAUB__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAUBToVariant(var R : CAUB) : OleVariant;
var
__rw : __CAUB__Wrapper__;
begin
__rw := __CAUB__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAUB(const V : OleVariant) : CAUB;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAUB((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAUH__Wrapper__ = class(__CAUH__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAUH__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAUHToVariant(var R : CAUH) : OleVariant;
var
__rw : __CAUH__Wrapper__;
begin
__rw := __CAUH__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAUH(const V : OleVariant) : CAUH;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAUH((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAUI__Wrapper__ = class(__CAUI__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAUI__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAUIToVariant(var R : CAUI) : OleVariant;
var
__rw : __CAUI__Wrapper__;
begin
__rw := __CAUI__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAUI(const V : OleVariant) : CAUI;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAUI((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAUL__Wrapper__ = class(__CAUL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAUL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAULToVariant(var R : CAUL) : OleVariant;
var
__rw : __CAUL__Wrapper__;
begin
__rw := __CAUL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAUL(const V : OleVariant) : CAUL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAUL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAUUID__Wrapper__ = class(__CAUUID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAUUID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAUUIDToVariant(var R : CAUUID) : OleVariant;
var
__rw : __CAUUID__Wrapper__;
begin
__rw := __CAUUID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAUUID(const V : OleVariant) : CAUUID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAUUID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CLIPDATA__Wrapper__ = class(__CLIPDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CLIPDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCLIPDATAToVariant(var R : CLIPDATA) : OleVariant;
var
__rw : __CLIPDATA__Wrapper__;
begin
__rw := __CLIPDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCLIPDATA(const V : OleVariant) : CLIPDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CLIPDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CONNECTDATA__Wrapper__ = class(__CONNECTDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CONNECTDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCONNECTDATAToVariant(var R : CONNECTDATA) : OleVariant;
var
__rw : __CONNECTDATA__Wrapper__;
begin
__rw := __CONNECTDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCONNECTDATA(const V : OleVariant) : CONNECTDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CONNECTDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CONTROLINFO__Wrapper__ = class(__CONTROLINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CONTROLINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCONTROLINFOToVariant(var R : CONTROLINFO) : OleVariant;
var
__rw : __CONTROLINFO__Wrapper__;
begin
__rw := __CONTROLINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCONTROLINFO(const V : OleVariant) : CONTROLINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CONTROLINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __COSERVERINFO__Wrapper__ = class(__COSERVERINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __COSERVERINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCOSERVERINFOToVariant(var R : COSERVERINFO) : OleVariant;
var
__rw : __COSERVERINFO__Wrapper__;
begin
__rw := __COSERVERINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCOSERVERINFO(const V : OleVariant) : COSERVERINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := COSERVERINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CUSTDATA__Wrapper__ = class(__CUSTDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CUSTDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCUSTDATAToVariant(var R : CUSTDATA) : OleVariant;
var
__rw : __CUSTDATA__Wrapper__;
begin
__rw := __CUSTDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCUSTDATA(const V : OleVariant) : CUSTDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CUSTDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CUSTDATAITEM__Wrapper__ = class(__CUSTDATAITEM__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CUSTDATAITEM__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCUSTDATAITEMToVariant(var R : CUSTDATAITEM) : OleVariant;
var
__rw : __CUSTDATAITEM__Wrapper__;
begin
__rw := __CUSTDATAITEM__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCUSTDATAITEM(const V : OleVariant) : CUSTDATAITEM;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CUSTDATAITEM((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __DECIMAL__Wrapper__ = class(__DECIMAL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __DECIMAL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertDECIMALToVariant(var R : DECIMAL) : OleVariant;
var
__rw : __DECIMAL__Wrapper__;
begin
__rw := __DECIMAL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToDECIMAL(const V : OleVariant) : DECIMAL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := DECIMAL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __DISPPARAMS__Wrapper__ = class(__DISPPARAMS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __DISPPARAMS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertDISPPARAMSToVariant(var R : DISPPARAMS) : OleVariant;
var
__rw : __DISPPARAMS__Wrapper__;
begin
__rw := __DISPPARAMS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToDISPPARAMS(const V : OleVariant) : DISPPARAMS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := DISPPARAMS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __DVTARGETDEVICE__Wrapper__ = class(__DVTARGETDEVICE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __DVTARGETDEVICE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertDVTARGETDEVICEToVariant(var R : DVTARGETDEVICE) : OleVariant;
var
__rw : __DVTARGETDEVICE__Wrapper__;
begin
__rw := __DVTARGETDEVICE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToDVTARGETDEVICE(const V : OleVariant) : DVTARGETDEVICE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := DVTARGETDEVICE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ELEMDESC__Wrapper__ = class(__ELEMDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ELEMDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertELEMDESCToVariant(var R : ELEMDESC) : OleVariant;
var
__rw : __ELEMDESC__Wrapper__;
begin
__rw := __ELEMDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToELEMDESC(const V : OleVariant) : ELEMDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ELEMDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __EXCEPINFO__Wrapper__ = class(__EXCEPINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __EXCEPINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertEXCEPINFOToVariant(var R : EXCEPINFO) : OleVariant;
var
__rw : __EXCEPINFO__Wrapper__;
begin
__rw := __EXCEPINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToEXCEPINFO(const V : OleVariant) : EXCEPINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := EXCEPINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FMTID__Wrapper__ = class(__FMTID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FMTID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFMTIDToVariant(var R : FMTID) : OleVariant;
var
__rw : __FMTID__Wrapper__;
begin
__rw := __FMTID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFMTID(const V : OleVariant) : FMTID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FMTID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FONTDESC__Wrapper__ = class(__FONTDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FONTDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFONTDESCToVariant(var R : FONTDESC) : OleVariant;
var
__rw : __FONTDESC__Wrapper__;
begin
__rw := __FONTDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFONTDESC(const V : OleVariant) : FONTDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FONTDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FUNCDESC__Wrapper__ = class(__FUNCDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FUNCDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFUNCDESCToVariant(var R : FUNCDESC) : OleVariant;
var
__rw : __FUNCDESC__Wrapper__;
begin
__rw := __FUNCDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFUNCDESC(const V : OleVariant) : FUNCDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FUNCDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __IDLDESC__Wrapper__ = class(__IDLDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __IDLDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertIDLDESCToVariant(var R : IDLDESC) : OleVariant;
var
__rw : __IDLDESC__Wrapper__;
begin
__rw := __IDLDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToIDLDESC(const V : OleVariant) : IDLDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := IDLDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __INTERFACEDATA__Wrapper__ = class(__INTERFACEDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __INTERFACEDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertINTERFACEDATAToVariant(var R : INTERFACEDATA) : OleVariant;
var
__rw : __INTERFACEDATA__Wrapper__;
begin
__rw := __INTERFACEDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToINTERFACEDATA(const V : OleVariant) : INTERFACEDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := INTERFACEDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __INTERFACEINFO__Wrapper__ = class(__INTERFACEINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __INTERFACEINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertINTERFACEINFOToVariant(var R : INTERFACEINFO) : OleVariant;
var
__rw : __INTERFACEINFO__Wrapper__;
begin
__rw := __INTERFACEINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToINTERFACEINFO(const V : OleVariant) : INTERFACEINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := INTERFACEINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __LICINFO__Wrapper__ = class(__LICINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __LICINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertLICINFOToVariant(var R : LICINFO) : OleVariant;
var
__rw : __LICINFO__Wrapper__;
begin
__rw := __LICINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToLICINFO(const V : OleVariant) : LICINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := LICINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __METHODDATA__Wrapper__ = class(__METHODDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __METHODDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertMETHODDATAToVariant(var R : METHODDATA) : OleVariant;
var
__rw : __METHODDATA__Wrapper__;
begin
__rw := __METHODDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToMETHODDATA(const V : OleVariant) : METHODDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := METHODDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __MULTI_QI__Wrapper__ = class(__MULTI_QI__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __MULTI_QI__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertMULTI_QIToVariant(var R : MULTI_QI) : OleVariant;
var
__rw : __MULTI_QI__Wrapper__;
begin
__rw := __MULTI_QI__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToMULTI_QI(const V : OleVariant) : MULTI_QI;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := MULTI_QI((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __OBJECTDESCRIPTOR__Wrapper__ = class(__OBJECTDESCRIPTOR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __OBJECTDESCRIPTOR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertOBJECTDESCRIPTORToVariant(var R : OBJECTDESCRIPTOR) : OleVariant;
var
__rw : __OBJECTDESCRIPTOR__Wrapper__;
begin
__rw := __OBJECTDESCRIPTOR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToOBJECTDESCRIPTOR(const V : OleVariant) : OBJECTDESCRIPTOR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := OBJECTDESCRIPTOR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __OBJECTID__Wrapper__ = class(__OBJECTID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __OBJECTID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertOBJECTIDToVariant(var R : OBJECTID) : OleVariant;
var
__rw : __OBJECTID__Wrapper__;
begin
__rw := __OBJECTID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToOBJECTID(const V : OleVariant) : OBJECTID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := OBJECTID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __OCPFIPARAMS__Wrapper__ = class(__OCPFIPARAMS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __OCPFIPARAMS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertOCPFIPARAMSToVariant(var R : OCPFIPARAMS) : OleVariant;
var
__rw : __OCPFIPARAMS__Wrapper__;
begin
__rw := __OCPFIPARAMS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToOCPFIPARAMS(const V : OleVariant) : OCPFIPARAMS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := OCPFIPARAMS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __OLECMD__Wrapper__ = class(__OLECMD__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __OLECMD__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertOLECMDToVariant(var R : OLECMD) : OleVariant;
var
__rw : __OLECMD__Wrapper__;
begin
__rw := __OLECMD__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToOLECMD(const V : OleVariant) : OLECMD;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := OLECMD((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __OLECMDTEXT__Wrapper__ = class(__OLECMDTEXT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __OLECMDTEXT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertOLECMDTEXTToVariant(var R : OLECMDTEXT) : OleVariant;
var
__rw : __OLECMDTEXT__Wrapper__;
begin
__rw := __OLECMDTEXT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToOLECMDTEXT(const V : OleVariant) : OLECMDTEXT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := OLECMDTEXT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __OLEINPLACEFRAMEINFO__Wrapper__ = class(__OLEINPLACEFRAMEINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __OLEINPLACEFRAMEINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertOLEINPLACEFRAMEINFOToVariant(var R : OLEINPLACEFRAMEINFO) : OleVariant;
var
__rw : __OLEINPLACEFRAMEINFO__Wrapper__;
begin
__rw := __OLEINPLACEFRAMEINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToOLEINPLACEFRAMEINFO(const V : OleVariant) : OLEINPLACEFRAMEINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := OLEINPLACEFRAMEINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __OLEMENUGROUPWIDTHS__Wrapper__ = class(__OLEMENUGROUPWIDTHS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __OLEMENUGROUPWIDTHS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertOLEMENUGROUPWIDTHSToVariant(var R : OLEMENUGROUPWIDTHS) : OleVariant;
var
__rw : __OLEMENUGROUPWIDTHS__Wrapper__;
begin
__rw := __OLEMENUGROUPWIDTHS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToOLEMENUGROUPWIDTHS(const V : OleVariant) : OLEMENUGROUPWIDTHS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := OLEMENUGROUPWIDTHS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __OLEVERB__Wrapper__ = class(__OLEVERB__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __OLEVERB__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertOLEVERBToVariant(var R : OLEVERB) : OleVariant;
var
__rw : __OLEVERB__Wrapper__;
begin
__rw := __OLEVERB__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToOLEVERB(const V : OleVariant) : OLEVERB;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := OLEVERB((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PAGERANGE__Wrapper__ = class(__PAGERANGE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PAGERANGE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPAGERANGEToVariant(var R : PAGERANGE) : OleVariant;
var
__rw : __PAGERANGE__Wrapper__;
begin
__rw := __PAGERANGE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPAGERANGE(const V : OleVariant) : PAGERANGE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PAGERANGE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PAGESET__Wrapper__ = class(__PAGESET__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PAGESET__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPAGESETToVariant(var R : PAGESET) : OleVariant;
var
__rw : __PAGESET__Wrapper__;
begin
__rw := __PAGESET__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPAGESET(const V : OleVariant) : PAGESET;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PAGESET((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PARAMDATA__Wrapper__ = class(__PARAMDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PARAMDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPARAMDATAToVariant(var R : PARAMDATA) : OleVariant;
var
__rw : __PARAMDATA__Wrapper__;
begin
__rw := __PARAMDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPARAMDATA(const V : OleVariant) : PARAMDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PARAMDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PARAMDESC__Wrapper__ = class(__PARAMDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PARAMDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPARAMDESCToVariant(var R : PARAMDESC) : OleVariant;
var
__rw : __PARAMDESC__Wrapper__;
begin
__rw := __PARAMDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPARAMDESC(const V : OleVariant) : PARAMDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PARAMDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PARAMDESCEX__Wrapper__ = class(__PARAMDESCEX__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PARAMDESCEX__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPARAMDESCEXToVariant(var R : PARAMDESCEX) : OleVariant;
var
__rw : __PARAMDESCEX__Wrapper__;
begin
__rw := __PARAMDESCEX__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPARAMDESCEX(const V : OleVariant) : PARAMDESCEX;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PARAMDESCEX((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PICTDESC__Wrapper__ = class(__PICTDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PICTDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPICTDESCToVariant(var R : PICTDESC) : OleVariant;
var
__rw : __PICTDESC__Wrapper__;
begin
__rw := __PICTDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPICTDESC(const V : OleVariant) : PICTDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PICTDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __POINTF__Wrapper__ = class(__POINTF__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __POINTF__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPOINTFToVariant(var R : POINTF) : OleVariant;
var
__rw : __POINTF__Wrapper__;
begin
__rw := __POINTF__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPOINTF(const V : OleVariant) : POINTF;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := POINTF((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PROPPAGEINFO__Wrapper__ = class(__PROPPAGEINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PROPPAGEINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPROPPAGEINFOToVariant(var R : PROPPAGEINFO) : OleVariant;
var
__rw : __PROPPAGEINFO__Wrapper__;
begin
__rw := __PROPPAGEINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPROPPAGEINFO(const V : OleVariant) : PROPPAGEINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PROPPAGEINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PROPSPEC__Wrapper__ = class(__PROPSPEC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PROPSPEC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPROPSPECToVariant(var R : PROPSPEC) : OleVariant;
var
__rw : __PROPSPEC__Wrapper__;
begin
__rw := __PROPSPEC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPROPSPEC(const V : OleVariant) : PROPSPEC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PROPSPEC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PROPVARIANT__Wrapper__ = class(__PROPVARIANT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PROPVARIANT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPROPVARIANTToVariant(var R : PROPVARIANT) : OleVariant;
var
__rw : __PROPVARIANT__Wrapper__;
begin
__rw := __PROPVARIANT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPROPVARIANT(const V : OleVariant) : PROPVARIANT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PROPVARIANT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __RemSTGMEDIUM__Wrapper__ = class(__RemSTGMEDIUM__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __RemSTGMEDIUM__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertRemSTGMEDIUMToVariant(var R : RemSTGMEDIUM) : OleVariant;
var
__rw : __RemSTGMEDIUM__Wrapper__;
begin
__rw := __RemSTGMEDIUM__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToRemSTGMEDIUM(const V : OleVariant) : RemSTGMEDIUM;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := RemSTGMEDIUM((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __RPCOLEMESSAGE__Wrapper__ = class(__RPCOLEMESSAGE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __RPCOLEMESSAGE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertRPCOLEMESSAGEToVariant(var R : RPCOLEMESSAGE) : OleVariant;
var
__rw : __RPCOLEMESSAGE__Wrapper__;
begin
__rw := __RPCOLEMESSAGE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToRPCOLEMESSAGE(const V : OleVariant) : RPCOLEMESSAGE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := RPCOLEMESSAGE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SAFEARRAY__Wrapper__ = class(__SAFEARRAY__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SAFEARRAY__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSAFEARRAYToVariant(var R : SAFEARRAY) : OleVariant;
var
__rw : __SAFEARRAY__Wrapper__;
begin
__rw := __SAFEARRAY__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSAFEARRAY(const V : OleVariant) : SAFEARRAY;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SAFEARRAY((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SAFEARRAYBOUND__Wrapper__ = class(__SAFEARRAYBOUND__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SAFEARRAYBOUND__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSAFEARRAYBOUNDToVariant(var R : SAFEARRAYBOUND) : OleVariant;
var
__rw : __SAFEARRAYBOUND__Wrapper__;
begin
__rw := __SAFEARRAYBOUND__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSAFEARRAYBOUND(const V : OleVariant) : SAFEARRAYBOUND;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SAFEARRAYBOUND((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SOLE_AUTHENTICATION_SERVICE__Wrapper__ = class(__SOLE_AUTHENTICATION_SERVICE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SOLE_AUTHENTICATION_SERVICE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSOLE_AUTHENTICATION_SERVICEToVariant(var R : SOLE_AUTHENTICATION_SERVICE) : OleVariant;
var
__rw : __SOLE_AUTHENTICATION_SERVICE__Wrapper__;
begin
__rw := __SOLE_AUTHENTICATION_SERVICE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSOLE_AUTHENTICATION_SERVICE(const V : OleVariant) : SOLE_AUTHENTICATION_SERVICE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SOLE_AUTHENTICATION_SERVICE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __STATDATA__Wrapper__ = class(__STATDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __STATDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSTATDATAToVariant(var R : STATDATA) : OleVariant;
var
__rw : __STATDATA__Wrapper__;
begin
__rw := __STATDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSTATDATA(const V : OleVariant) : STATDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := STATDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __STATPROPSETSTG__Wrapper__ = class(__STATPROPSETSTG__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __STATPROPSETSTG__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSTATPROPSETSTGToVariant(var R : STATPROPSETSTG) : OleVariant;
var
__rw : __STATPROPSETSTG__Wrapper__;
begin
__rw := __STATPROPSETSTG__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSTATPROPSETSTG(const V : OleVariant) : STATPROPSETSTG;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := STATPROPSETSTG((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __STATPROPSTG__Wrapper__ = class(__STATPROPSTG__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __STATPROPSTG__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSTATPROPSTGToVariant(var R : STATPROPSTG) : OleVariant;
var
__rw : __STATPROPSTG__Wrapper__;
begin
__rw := __STATPROPSTG__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSTATPROPSTG(const V : OleVariant) : STATPROPSTG;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := STATPROPSTG((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __STGMEDIUM__Wrapper__ = class(__STGMEDIUM__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __STGMEDIUM__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSTGMEDIUMToVariant(var R : STGMEDIUM) : OleVariant;
var
__rw : __STGMEDIUM__Wrapper__;
begin
__rw := __STGMEDIUM__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSTGMEDIUM(const V : OleVariant) : STGMEDIUM;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := STGMEDIUM((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagARRAYDESC__Wrapper__ = class(__tagARRAYDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagARRAYDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagARRAYDESCToVariant(var R : tagARRAYDESC) : OleVariant;
var
__rw : __tagARRAYDESC__Wrapper__;
begin
__rw := __tagARRAYDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagARRAYDESC(const V : OleVariant) : tagARRAYDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagARRAYDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagBIND_OPTS__Wrapper__ = class(__tagBIND_OPTS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagBIND_OPTS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagBIND_OPTSToVariant(var R : tagBIND_OPTS) : OleVariant;
var
__rw : __tagBIND_OPTS__Wrapper__;
begin
__rw := __tagBIND_OPTS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagBIND_OPTS(const V : OleVariant) : tagBIND_OPTS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagBIND_OPTS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagBINDPTR__Wrapper__ = class(__tagBINDPTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagBINDPTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagBINDPTRToVariant(var R : tagBINDPTR) : OleVariant;
var
__rw : __tagBINDPTR__Wrapper__;
begin
__rw := __tagBINDPTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagBINDPTR(const V : OleVariant) : tagBINDPTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagBINDPTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagBLOB__Wrapper__ = class(__tagBLOB__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagBLOB__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagBLOBToVariant(var R : tagBLOB) : OleVariant;
var
__rw : __tagBLOB__Wrapper__;
begin
__rw := __tagBLOB__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagBLOB(const V : OleVariant) : tagBLOB;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagBLOB((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCABOOL__Wrapper__ = class(__tagCABOOL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCABOOL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCABOOLToVariant(var R : tagCABOOL) : OleVariant;
var
__rw : __tagCABOOL__Wrapper__;
begin
__rw := __tagCABOOL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCABOOL(const V : OleVariant) : tagCABOOL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCABOOL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCABSTR__Wrapper__ = class(__tagCABSTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCABSTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCABSTRToVariant(var R : tagCABSTR) : OleVariant;
var
__rw : __tagCABSTR__Wrapper__;
begin
__rw := __tagCABSTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCABSTR(const V : OleVariant) : tagCABSTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCABSTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCACLIPDATA__Wrapper__ = class(__tagCACLIPDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCACLIPDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCACLIPDATAToVariant(var R : tagCACLIPDATA) : OleVariant;
var
__rw : __tagCACLIPDATA__Wrapper__;
begin
__rw := __tagCACLIPDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCACLIPDATA(const V : OleVariant) : tagCACLIPDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCACLIPDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCACLSID__Wrapper__ = class(__tagCACLSID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCACLSID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCACLSIDToVariant(var R : tagCACLSID) : OleVariant;
var
__rw : __tagCACLSID__Wrapper__;
begin
__rw := __tagCACLSID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCACLSID(const V : OleVariant) : tagCACLSID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCACLSID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCACY__Wrapper__ = class(__tagCACY__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCACY__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCACYToVariant(var R : tagCACY) : OleVariant;
var
__rw : __tagCACY__Wrapper__;
begin
__rw := __tagCACY__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCACY(const V : OleVariant) : tagCACY;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCACY((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCADATE__Wrapper__ = class(__tagCADATE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCADATE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCADATEToVariant(var R : tagCADATE) : OleVariant;
var
__rw : __tagCADATE__Wrapper__;
begin
__rw := __tagCADATE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCADATE(const V : OleVariant) : tagCADATE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCADATE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCADBL__Wrapper__ = class(__tagCADBL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCADBL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCADBLToVariant(var R : tagCADBL) : OleVariant;
var
__rw : __tagCADBL__Wrapper__;
begin
__rw := __tagCADBL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCADBL(const V : OleVariant) : tagCADBL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCADBL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCADWORD__Wrapper__ = class(__tagCADWORD__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCADWORD__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCADWORDToVariant(var R : tagCADWORD) : OleVariant;
var
__rw : __tagCADWORD__Wrapper__;
begin
__rw := __tagCADWORD__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCADWORD(const V : OleVariant) : tagCADWORD;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCADWORD((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAFILETIME__Wrapper__ = class(__tagCAFILETIME__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAFILETIME__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCAFILETIMEToVariant(var R : tagCAFILETIME) : OleVariant;
var
__rw : __tagCAFILETIME__Wrapper__;
begin
__rw := __tagCAFILETIME__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAFILETIME(const V : OleVariant) : tagCAFILETIME;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAFILETIME((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAFLT__Wrapper__ = class(__tagCAFLT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAFLT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCAFLTToVariant(var R : tagCAFLT) : OleVariant;
var
__rw : __tagCAFLT__Wrapper__;
begin
__rw := __tagCAFLT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAFLT(const V : OleVariant) : tagCAFLT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAFLT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAH__Wrapper__ = class(__tagCAH__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAH__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCAHToVariant(var R : tagCAH) : OleVariant;
var
__rw : __tagCAH__Wrapper__;
begin
__rw := __tagCAH__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAH(const V : OleVariant) : tagCAH;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAH((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAI__Wrapper__ = class(__tagCAI__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAI__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCAIToVariant(var R : tagCAI) : OleVariant;
var
__rw : __tagCAI__Wrapper__;
begin
__rw := __tagCAI__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAI(const V : OleVariant) : tagCAI;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAI((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAL__Wrapper__ = class(__tagCAL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCALToVariant(var R : tagCAL) : OleVariant;
var
__rw : __tagCAL__Wrapper__;
begin
__rw := __tagCAL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAL(const V : OleVariant) : tagCAL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCALPOLESTR__Wrapper__ = class(__tagCALPOLESTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCALPOLESTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCALPOLESTRToVariant(var R : tagCALPOLESTR) : OleVariant;
var
__rw : __tagCALPOLESTR__Wrapper__;
begin
__rw := __tagCALPOLESTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCALPOLESTR(const V : OleVariant) : tagCALPOLESTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCALPOLESTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCALPSTR__Wrapper__ = class(__tagCALPSTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCALPSTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCALPSTRToVariant(var R : tagCALPSTR) : OleVariant;
var
__rw : __tagCALPSTR__Wrapper__;
begin
__rw := __tagCALPSTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCALPSTR(const V : OleVariant) : tagCALPSTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCALPSTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCALPWSTR__Wrapper__ = class(__tagCALPWSTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCALPWSTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCALPWSTRToVariant(var R : tagCALPWSTR) : OleVariant;
var
__rw : __tagCALPWSTR__Wrapper__;
begin
__rw := __tagCALPWSTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCALPWSTR(const V : OleVariant) : tagCALPWSTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCALPWSTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAPROPVARIANT__Wrapper__ = class(__tagCAPROPVARIANT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAPROPVARIANT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCAPROPVARIANTToVariant(var R : tagCAPROPVARIANT) : OleVariant;
var
__rw : __tagCAPROPVARIANT__Wrapper__;
begin
__rw := __tagCAPROPVARIANT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAPROPVARIANT(const V : OleVariant) : tagCAPROPVARIANT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAPROPVARIANT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCASCODE__Wrapper__ = class(__tagCASCODE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCASCODE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCASCODEToVariant(var R : tagCASCODE) : OleVariant;
var
__rw : __tagCASCODE__Wrapper__;
begin
__rw := __tagCASCODE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCASCODE(const V : OleVariant) : tagCASCODE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCASCODE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAUB__Wrapper__ = class(__tagCAUB__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAUB__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCAUBToVariant(var R : tagCAUB) : OleVariant;
var
__rw : __tagCAUB__Wrapper__;
begin
__rw := __tagCAUB__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAUB(const V : OleVariant) : tagCAUB;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAUB((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAUH__Wrapper__ = class(__tagCAUH__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAUH__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCAUHToVariant(var R : tagCAUH) : OleVariant;
var
__rw : __tagCAUH__Wrapper__;
begin
__rw := __tagCAUH__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAUH(const V : OleVariant) : tagCAUH;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAUH((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAUI__Wrapper__ = class(__tagCAUI__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAUI__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCAUIToVariant(var R : tagCAUI) : OleVariant;
var
__rw : __tagCAUI__Wrapper__;
begin
__rw := __tagCAUI__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAUI(const V : OleVariant) : tagCAUI;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAUI((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAUL__Wrapper__ = class(__tagCAUL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAUL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCAULToVariant(var R : tagCAUL) : OleVariant;
var
__rw : __tagCAUL__Wrapper__;
begin
__rw := __tagCAUL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAUL(const V : OleVariant) : tagCAUL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAUL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCAUUID__Wrapper__ = class(__tagCAUUID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCAUUID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCAUUIDToVariant(var R : tagCAUUID) : OleVariant;
var
__rw : __tagCAUUID__Wrapper__;
begin
__rw := __tagCAUUID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCAUUID(const V : OleVariant) : tagCAUUID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCAUUID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCLIPDATA__Wrapper__ = class(__tagCLIPDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCLIPDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCLIPDATAToVariant(var R : tagCLIPDATA) : OleVariant;
var
__rw : __tagCLIPDATA__Wrapper__;
begin
__rw := __tagCLIPDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCLIPDATA(const V : OleVariant) : tagCLIPDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCLIPDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCONNECTDATA__Wrapper__ = class(__tagCONNECTDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCONNECTDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCONNECTDATAToVariant(var R : tagCONNECTDATA) : OleVariant;
var
__rw : __tagCONNECTDATA__Wrapper__;
begin
__rw := __tagCONNECTDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCONNECTDATA(const V : OleVariant) : tagCONNECTDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCONNECTDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCONTROLINFO__Wrapper__ = class(__tagCONTROLINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCONTROLINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCONTROLINFOToVariant(var R : tagCONTROLINFO) : OleVariant;
var
__rw : __tagCONTROLINFO__Wrapper__;
begin
__rw := __tagCONTROLINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCONTROLINFO(const V : OleVariant) : tagCONTROLINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCONTROLINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCUSTDATA__Wrapper__ = class(__tagCUSTDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCUSTDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCUSTDATAToVariant(var R : tagCUSTDATA) : OleVariant;
var
__rw : __tagCUSTDATA__Wrapper__;
begin
__rw := __tagCUSTDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCUSTDATA(const V : OleVariant) : tagCUSTDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCUSTDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCUSTDATAITEM__Wrapper__ = class(__tagCUSTDATAITEM__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCUSTDATAITEM__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCUSTDATAITEMToVariant(var R : tagCUSTDATAITEM) : OleVariant;
var
__rw : __tagCUSTDATAITEM__Wrapper__;
begin
__rw := __tagCUSTDATAITEM__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCUSTDATAITEM(const V : OleVariant) : tagCUSTDATAITEM;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCUSTDATAITEM((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagDEC__Wrapper__ = class(__tagDEC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagDEC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagDECToVariant(var R : tagDEC) : OleVariant;
var
__rw : __tagDEC__Wrapper__;
begin
__rw := __tagDEC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagDEC(const V : OleVariant) : tagDEC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagDEC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagDISPPARAMS__Wrapper__ = class(__tagDISPPARAMS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagDISPPARAMS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagDISPPARAMSToVariant(var R : tagDISPPARAMS) : OleVariant;
var
__rw : __tagDISPPARAMS__Wrapper__;
begin
__rw := __tagDISPPARAMS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagDISPPARAMS(const V : OleVariant) : tagDISPPARAMS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagDISPPARAMS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagDVTARGETDEVICE__Wrapper__ = class(__tagDVTARGETDEVICE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagDVTARGETDEVICE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagDVTARGETDEVICEToVariant(var R : tagDVTARGETDEVICE) : OleVariant;
var
__rw : __tagDVTARGETDEVICE__Wrapper__;
begin
__rw := __tagDVTARGETDEVICE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagDVTARGETDEVICE(const V : OleVariant) : tagDVTARGETDEVICE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagDVTARGETDEVICE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagELEMDESC__Wrapper__ = class(__tagELEMDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagELEMDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagELEMDESCToVariant(var R : tagELEMDESC) : OleVariant;
var
__rw : __tagELEMDESC__Wrapper__;
begin
__rw := __tagELEMDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagELEMDESC(const V : OleVariant) : tagELEMDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagELEMDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagEXCEPINFO__Wrapper__ = class(__tagEXCEPINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagEXCEPINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagEXCEPINFOToVariant(var R : tagEXCEPINFO) : OleVariant;
var
__rw : __tagEXCEPINFO__Wrapper__;
begin
__rw := __tagEXCEPINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagEXCEPINFO(const V : OleVariant) : tagEXCEPINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagEXCEPINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagFONTDESC__Wrapper__ = class(__tagFONTDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagFONTDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagFONTDESCToVariant(var R : tagFONTDESC) : OleVariant;
var
__rw : __tagFONTDESC__Wrapper__;
begin
__rw := __tagFONTDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagFONTDESC(const V : OleVariant) : tagFONTDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagFONTDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagFORMATETC__Wrapper__ = class(__tagFORMATETC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagFORMATETC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagFORMATETCToVariant(var R : tagFORMATETC) : OleVariant;
var
__rw : __tagFORMATETC__Wrapper__;
begin
__rw := __tagFORMATETC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagFORMATETC(const V : OleVariant) : tagFORMATETC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagFORMATETC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagFUNCDESC__Wrapper__ = class(__tagFUNCDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagFUNCDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagFUNCDESCToVariant(var R : tagFUNCDESC) : OleVariant;
var
__rw : __tagFUNCDESC__Wrapper__;
begin
__rw := __tagFUNCDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagFUNCDESC(const V : OleVariant) : tagFUNCDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagFUNCDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagIDLDESC__Wrapper__ = class(__tagIDLDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagIDLDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagIDLDESCToVariant(var R : tagIDLDESC) : OleVariant;
var
__rw : __tagIDLDESC__Wrapper__;
begin
__rw := __tagIDLDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagIDLDESC(const V : OleVariant) : tagIDLDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagIDLDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagINTERFACEDATA__Wrapper__ = class(__tagINTERFACEDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagINTERFACEDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagINTERFACEDATAToVariant(var R : tagINTERFACEDATA) : OleVariant;
var
__rw : __tagINTERFACEDATA__Wrapper__;
begin
__rw := __tagINTERFACEDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagINTERFACEDATA(const V : OleVariant) : tagINTERFACEDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagINTERFACEDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagINTERFACEINFO__Wrapper__ = class(__tagINTERFACEINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagINTERFACEINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagINTERFACEINFOToVariant(var R : tagINTERFACEINFO) : OleVariant;
var
__rw : __tagINTERFACEINFO__Wrapper__;
begin
__rw := __tagINTERFACEINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagINTERFACEINFO(const V : OleVariant) : tagINTERFACEINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagINTERFACEINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagLICINFO__Wrapper__ = class(__tagLICINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagLICINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagLICINFOToVariant(var R : tagLICINFO) : OleVariant;
var
__rw : __tagLICINFO__Wrapper__;
begin
__rw := __tagLICINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagLICINFO(const V : OleVariant) : tagLICINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagLICINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagMETHODDATA__Wrapper__ = class(__tagMETHODDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagMETHODDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagMETHODDATAToVariant(var R : tagMETHODDATA) : OleVariant;
var
__rw : __tagMETHODDATA__Wrapper__;
begin
__rw := __tagMETHODDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagMETHODDATA(const V : OleVariant) : tagMETHODDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagMETHODDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagMULTI_QI__Wrapper__ = class(__tagMULTI_QI__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagMULTI_QI__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagMULTI_QIToVariant(var R : tagMULTI_QI) : OleVariant;
var
__rw : __tagMULTI_QI__Wrapper__;
begin
__rw := __tagMULTI_QI__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagMULTI_QI(const V : OleVariant) : tagMULTI_QI;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagMULTI_QI((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagOBJECTDESCRIPTOR__Wrapper__ = class(__tagOBJECTDESCRIPTOR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagOBJECTDESCRIPTOR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagOBJECTDESCRIPTORToVariant(var R : tagOBJECTDESCRIPTOR) : OleVariant;
var
__rw : __tagOBJECTDESCRIPTOR__Wrapper__;
begin
__rw := __tagOBJECTDESCRIPTOR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagOBJECTDESCRIPTOR(const V : OleVariant) : tagOBJECTDESCRIPTOR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagOBJECTDESCRIPTOR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagOCPFIPARAMS__Wrapper__ = class(__tagOCPFIPARAMS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagOCPFIPARAMS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagOCPFIPARAMSToVariant(var R : tagOCPFIPARAMS) : OleVariant;
var
__rw : __tagOCPFIPARAMS__Wrapper__;
begin
__rw := __tagOCPFIPARAMS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagOCPFIPARAMS(const V : OleVariant) : tagOCPFIPARAMS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagOCPFIPARAMS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagOIFI__Wrapper__ = class(__tagOIFI__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagOIFI__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagOIFIToVariant(var R : tagOIFI) : OleVariant;
var
__rw : __tagOIFI__Wrapper__;
begin
__rw := __tagOIFI__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagOIFI(const V : OleVariant) : tagOIFI;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagOIFI((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagOleMenuGroupWidths__Wrapper__ = class(__tagOleMenuGroupWidths__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagOleMenuGroupWidths__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagOleMenuGroupWidthsToVariant(var R : tagOleMenuGroupWidths) : OleVariant;
var
__rw : __tagOleMenuGroupWidths__Wrapper__;
begin
__rw := __tagOleMenuGroupWidths__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagOleMenuGroupWidths(const V : OleVariant) : tagOleMenuGroupWidths;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagOleMenuGroupWidths((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagOLEVERB__Wrapper__ = class(__tagOLEVERB__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagOLEVERB__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagOLEVERBToVariant(var R : tagOLEVERB) : OleVariant;
var
__rw : __tagOLEVERB__Wrapper__;
begin
__rw := __tagOLEVERB__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagOLEVERB(const V : OleVariant) : tagOLEVERB;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagOLEVERB((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagPAGERANGE__Wrapper__ = class(__tagPAGERANGE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagPAGERANGE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagPAGERANGEToVariant(var R : tagPAGERANGE) : OleVariant;
var
__rw : __tagPAGERANGE__Wrapper__;
begin
__rw := __tagPAGERANGE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagPAGERANGE(const V : OleVariant) : tagPAGERANGE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagPAGERANGE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagPAGESET__Wrapper__ = class(__tagPAGESET__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagPAGESET__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagPAGESETToVariant(var R : tagPAGESET) : OleVariant;
var
__rw : __tagPAGESET__Wrapper__;
begin
__rw := __tagPAGESET__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagPAGESET(const V : OleVariant) : tagPAGESET;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagPAGESET((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagPARAMDATA__Wrapper__ = class(__tagPARAMDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagPARAMDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagPARAMDATAToVariant(var R : tagPARAMDATA) : OleVariant;
var
__rw : __tagPARAMDATA__Wrapper__;
begin
__rw := __tagPARAMDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagPARAMDATA(const V : OleVariant) : tagPARAMDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagPARAMDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagPARAMDESC__Wrapper__ = class(__tagPARAMDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagPARAMDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagPARAMDESCToVariant(var R : tagPARAMDESC) : OleVariant;
var
__rw : __tagPARAMDESC__Wrapper__;
begin
__rw := __tagPARAMDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagPARAMDESC(const V : OleVariant) : tagPARAMDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagPARAMDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagPARAMDESCEX__Wrapper__ = class(__tagPARAMDESCEX__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagPARAMDESCEX__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagPARAMDESCEXToVariant(var R : tagPARAMDESCEX) : OleVariant;
var
__rw : __tagPARAMDESCEX__Wrapper__;
begin
__rw := __tagPARAMDESCEX__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagPARAMDESCEX(const V : OleVariant) : tagPARAMDESCEX;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagPARAMDESCEX((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagPICTDESC__Wrapper__ = class(__tagPICTDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagPICTDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagPICTDESCToVariant(var R : tagPICTDESC) : OleVariant;
var
__rw : __tagPICTDESC__Wrapper__;
begin
__rw := __tagPICTDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagPICTDESC(const V : OleVariant) : tagPICTDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagPICTDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagPOINTF__Wrapper__ = class(__tagPOINTF__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagPOINTF__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagPOINTFToVariant(var R : tagPOINTF) : OleVariant;
var
__rw : __tagPOINTF__Wrapper__;
begin
__rw := __tagPOINTF__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagPOINTF(const V : OleVariant) : tagPOINTF;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagPOINTF((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagPROPPAGEINFO__Wrapper__ = class(__tagPROPPAGEINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagPROPPAGEINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagPROPPAGEINFOToVariant(var R : tagPROPPAGEINFO) : OleVariant;
var
__rw : __tagPROPPAGEINFO__Wrapper__;
begin
__rw := __tagPROPPAGEINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagPROPPAGEINFO(const V : OleVariant) : tagPROPPAGEINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagPROPPAGEINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagPROPSPEC__Wrapper__ = class(__tagPROPSPEC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagPROPSPEC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagPROPSPECToVariant(var R : tagPROPSPEC) : OleVariant;
var
__rw : __tagPROPSPEC__Wrapper__;
begin
__rw := __tagPROPSPEC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagPROPSPEC(const V : OleVariant) : tagPROPSPEC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagPROPSPEC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagPROPVARIANT__Wrapper__ = class(__tagPROPVARIANT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagPROPVARIANT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagPROPVARIANTToVariant(var R : tagPROPVARIANT) : OleVariant;
var
__rw : __tagPROPVARIANT__Wrapper__;
begin
__rw := __tagPROPVARIANT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagPROPVARIANT(const V : OleVariant) : tagPROPVARIANT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagPROPVARIANT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagQACONTAINER__Wrapper__ = class(__tagQACONTAINER__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagQACONTAINER__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagQACONTAINERToVariant(var R : tagQACONTAINER) : OleVariant;
var
__rw : __tagQACONTAINER__Wrapper__;
begin
__rw := __tagQACONTAINER__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagQACONTAINER(const V : OleVariant) : tagQACONTAINER;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagQACONTAINER((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagQACONTROL__Wrapper__ = class(__tagQACONTROL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagQACONTROL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagQACONTROLToVariant(var R : tagQACONTROL) : OleVariant;
var
__rw : __tagQACONTROL__Wrapper__;
begin
__rw := __tagQACONTROL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagQACONTROL(const V : OleVariant) : tagQACONTROL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagQACONTROL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagRemSTGMEDIUM__Wrapper__ = class(__tagRemSTGMEDIUM__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagRemSTGMEDIUM__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagRemSTGMEDIUMToVariant(var R : tagRemSTGMEDIUM) : OleVariant;
var
__rw : __tagRemSTGMEDIUM__Wrapper__;
begin
__rw := __tagRemSTGMEDIUM__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagRemSTGMEDIUM(const V : OleVariant) : tagRemSTGMEDIUM;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagRemSTGMEDIUM((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagRPCOLEMESSAGE__Wrapper__ = class(__tagRPCOLEMESSAGE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagRPCOLEMESSAGE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagRPCOLEMESSAGEToVariant(var R : tagRPCOLEMESSAGE) : OleVariant;
var
__rw : __tagRPCOLEMESSAGE__Wrapper__;
begin
__rw := __tagRPCOLEMESSAGE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagRPCOLEMESSAGE(const V : OleVariant) : tagRPCOLEMESSAGE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagRPCOLEMESSAGE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagSAFEARRAY__Wrapper__ = class(__tagSAFEARRAY__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagSAFEARRAY__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagSAFEARRAYToVariant(var R : tagSAFEARRAY) : OleVariant;
var
__rw : __tagSAFEARRAY__Wrapper__;
begin
__rw := __tagSAFEARRAY__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagSAFEARRAY(const V : OleVariant) : tagSAFEARRAY;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagSAFEARRAY((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagSAFEARRAYBOUND__Wrapper__ = class(__tagSAFEARRAYBOUND__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagSAFEARRAYBOUND__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagSAFEARRAYBOUNDToVariant(var R : tagSAFEARRAYBOUND) : OleVariant;
var
__rw : __tagSAFEARRAYBOUND__Wrapper__;
begin
__rw := __tagSAFEARRAYBOUND__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagSAFEARRAYBOUND(const V : OleVariant) : tagSAFEARRAYBOUND;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagSAFEARRAYBOUND((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagSOLE_AUTHENTICATION_SERVICE__Wrapper__ = class(__tagSOLE_AUTHENTICATION_SERVICE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagSOLE_AUTHENTICATION_SERVICE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagSOLE_AUTHENTICATION_SERVICEToVariant(var R : tagSOLE_AUTHENTICATION_SERVICE) : OleVariant;
var
__rw : __tagSOLE_AUTHENTICATION_SERVICE__Wrapper__;
begin
__rw := __tagSOLE_AUTHENTICATION_SERVICE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagSOLE_AUTHENTICATION_SERVICE(const V : OleVariant) : tagSOLE_AUTHENTICATION_SERVICE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagSOLE_AUTHENTICATION_SERVICE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagSTATDATA__Wrapper__ = class(__tagSTATDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagSTATDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagSTATDATAToVariant(var R : tagSTATDATA) : OleVariant;
var
__rw : __tagSTATDATA__Wrapper__;
begin
__rw := __tagSTATDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagSTATDATA(const V : OleVariant) : tagSTATDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagSTATDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagSTATPROPSETSTG__Wrapper__ = class(__tagSTATPROPSETSTG__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagSTATPROPSETSTG__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagSTATPROPSETSTGToVariant(var R : tagSTATPROPSETSTG) : OleVariant;
var
__rw : __tagSTATPROPSETSTG__Wrapper__;
begin
__rw := __tagSTATPROPSETSTG__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagSTATPROPSETSTG(const V : OleVariant) : tagSTATPROPSETSTG;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagSTATPROPSETSTG((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagSTATPROPSTG__Wrapper__ = class(__tagSTATPROPSTG__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagSTATPROPSTG__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagSTATPROPSTGToVariant(var R : tagSTATPROPSTG) : OleVariant;
var
__rw : __tagSTATPROPSTG__Wrapper__;
begin
__rw := __tagSTATPROPSTG__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagSTATPROPSTG(const V : OleVariant) : tagSTATPROPSTG;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagSTATPROPSTG((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagSTATSTG__Wrapper__ = class(__tagSTATSTG__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagSTATSTG__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagSTATSTGToVariant(var R : tagSTATSTG) : OleVariant;
var
__rw : __tagSTATSTG__Wrapper__;
begin
__rw := __tagSTATSTG__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagSTATSTG(const V : OleVariant) : tagSTATSTG;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagSTATSTG((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagSTGMEDIUM__Wrapper__ = class(__tagSTGMEDIUM__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagSTGMEDIUM__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagSTGMEDIUMToVariant(var R : tagSTGMEDIUM) : OleVariant;
var
__rw : __tagSTGMEDIUM__Wrapper__;
begin
__rw := __tagSTGMEDIUM__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagSTGMEDIUM(const V : OleVariant) : tagSTGMEDIUM;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagSTGMEDIUM((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagTLIBATTR__Wrapper__ = class(__tagTLIBATTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagTLIBATTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagTLIBATTRToVariant(var R : tagTLIBATTR) : OleVariant;
var
__rw : __tagTLIBATTR__Wrapper__;
begin
__rw := __tagTLIBATTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagTLIBATTR(const V : OleVariant) : tagTLIBATTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagTLIBATTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagTYPEATTR__Wrapper__ = class(__tagTYPEATTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagTYPEATTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagTYPEATTRToVariant(var R : tagTYPEATTR) : OleVariant;
var
__rw : __tagTYPEATTR__Wrapper__;
begin
__rw := __tagTYPEATTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagTYPEATTR(const V : OleVariant) : tagTYPEATTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagTYPEATTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagTYPEDESC__Wrapper__ = class(__tagTYPEDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagTYPEDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagTYPEDESCToVariant(var R : tagTYPEDESC) : OleVariant;
var
__rw : __tagTYPEDESC__Wrapper__;
begin
__rw := __tagTYPEDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagTYPEDESC(const V : OleVariant) : tagTYPEDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagTYPEDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagVARDESC__Wrapper__ = class(__tagVARDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagVARDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagVARDESCToVariant(var R : tagVARDESC) : OleVariant;
var
__rw : __tagVARDESC__Wrapper__;
begin
__rw := __tagVARDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagVARDESC(const V : OleVariant) : tagVARDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagVARDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagVARIANT__Wrapper__ = class(__tagVARIANT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagVARIANT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagVARIANTToVariant(var R : tagVARIANT) : OleVariant;
var
__rw : __tagVARIANT__Wrapper__;
begin
__rw := __tagVARIANT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagVARIANT(const V : OleVariant) : tagVARIANT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagVARIANT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TArrayDesc__Wrapper__ = class(__TArrayDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TArrayDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTArrayDescToVariant(var R : TArrayDesc) : OleVariant;
var
__rw : __TArrayDesc__Wrapper__;
begin
__rw := __TArrayDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTArrayDesc(const V : OleVariant) : TArrayDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TArrayDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TBindOpts__Wrapper__ = class(__TBindOpts__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TBindOpts__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTBindOptsToVariant(var R : TBindOpts) : OleVariant;
var
__rw : __TBindOpts__Wrapper__;
begin
__rw := __TBindOpts__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTBindOpts(const V : OleVariant) : TBindOpts;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TBindOpts((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TBindPtr__Wrapper__ = class(__TBindPtr__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TBindPtr__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTBindPtrToVariant(var R : TBindPtr) : OleVariant;
var
__rw : __TBindPtr__Wrapper__;
begin
__rw := __TBindPtr__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTBindPtr(const V : OleVariant) : TBindPtr;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TBindPtr((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TBlob__Wrapper__ = class(__TBlob__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TBlob__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTBlobToVariant(var R : TBlob) : OleVariant;
var
__rw : __TBlob__Wrapper__;
begin
__rw := __TBlob__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTBlob(const V : OleVariant) : TBlob;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TBlob((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TBorderWidths__Wrapper__ = class(__TBorderWidths__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TBorderWidths__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTBorderWidthsToVariant(var R : TBorderWidths) : OleVariant;
var
__rw : __TBorderWidths__Wrapper__;
begin
__rw := __TBorderWidths__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTBorderWidths(const V : OleVariant) : TBorderWidths;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TBorderWidths((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCABOOL__Wrapper__ = class(__TCABOOL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCABOOL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCABOOLToVariant(var R : TCABOOL) : OleVariant;
var
__rw : __TCABOOL__Wrapper__;
begin
__rw := __TCABOOL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCABOOL(const V : OleVariant) : TCABOOL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCABOOL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCABSTR__Wrapper__ = class(__TCABSTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCABSTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCABSTRToVariant(var R : TCABSTR) : OleVariant;
var
__rw : __TCABSTR__Wrapper__;
begin
__rw := __TCABSTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCABSTR(const V : OleVariant) : TCABSTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCABSTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCACLIPDATA__Wrapper__ = class(__TCACLIPDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCACLIPDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCACLIPDATAToVariant(var R : TCACLIPDATA) : OleVariant;
var
__rw : __TCACLIPDATA__Wrapper__;
begin
__rw := __TCACLIPDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCACLIPDATA(const V : OleVariant) : TCACLIPDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCACLIPDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCACLSID__Wrapper__ = class(__TCACLSID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCACLSID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCACLSIDToVariant(var R : TCACLSID) : OleVariant;
var
__rw : __TCACLSID__Wrapper__;
begin
__rw := __TCACLSID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCACLSID(const V : OleVariant) : TCACLSID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCACLSID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCACY__Wrapper__ = class(__TCACY__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCACY__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCACYToVariant(var R : TCACY) : OleVariant;
var
__rw : __TCACY__Wrapper__;
begin
__rw := __TCACY__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCACY(const V : OleVariant) : TCACY;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCACY((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCADATE__Wrapper__ = class(__TCADATE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCADATE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCADATEToVariant(var R : TCADATE) : OleVariant;
var
__rw : __TCADATE__Wrapper__;
begin
__rw := __TCADATE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCADATE(const V : OleVariant) : TCADATE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCADATE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCADBL__Wrapper__ = class(__TCADBL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCADBL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCADBLToVariant(var R : TCADBL) : OleVariant;
var
__rw : __TCADBL__Wrapper__;
begin
__rw := __TCADBL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCADBL(const V : OleVariant) : TCADBL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCADBL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAFILETIME__Wrapper__ = class(__TCAFILETIME__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAFILETIME__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAFILETIMEToVariant(var R : TCAFILETIME) : OleVariant;
var
__rw : __TCAFILETIME__Wrapper__;
begin
__rw := __TCAFILETIME__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAFILETIME(const V : OleVariant) : TCAFILETIME;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAFILETIME((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAFLT__Wrapper__ = class(__TCAFLT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAFLT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAFLTToVariant(var R : TCAFLT) : OleVariant;
var
__rw : __TCAFLT__Wrapper__;
begin
__rw := __TCAFLT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAFLT(const V : OleVariant) : TCAFLT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAFLT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAGUID__Wrapper__ = class(__TCAGUID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAGUID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAGUIDToVariant(var R : TCAGUID) : OleVariant;
var
__rw : __TCAGUID__Wrapper__;
begin
__rw := __TCAGUID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAGUID(const V : OleVariant) : TCAGUID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAGUID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAH__Wrapper__ = class(__TCAH__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAH__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAHToVariant(var R : TCAH) : OleVariant;
var
__rw : __TCAH__Wrapper__;
begin
__rw := __TCAH__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAH(const V : OleVariant) : TCAH;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAH((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAI__Wrapper__ = class(__TCAI__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAI__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAIToVariant(var R : TCAI) : OleVariant;
var
__rw : __TCAI__Wrapper__;
begin
__rw := __TCAI__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAI(const V : OleVariant) : TCAI;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAI((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAL__Wrapper__ = class(__TCAL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCALToVariant(var R : TCAL) : OleVariant;
var
__rw : __TCAL__Wrapper__;
begin
__rw := __TCAL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAL(const V : OleVariant) : TCAL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCALongint__Wrapper__ = class(__TCALongint__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCALongint__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCALongintToVariant(var R : TCALongint) : OleVariant;
var
__rw : __TCALongint__Wrapper__;
begin
__rw := __TCALongint__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCALongint(const V : OleVariant) : TCALongint;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCALongint((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCALPSTR__Wrapper__ = class(__TCALPSTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCALPSTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCALPSTRToVariant(var R : TCALPSTR) : OleVariant;
var
__rw : __TCALPSTR__Wrapper__;
begin
__rw := __TCALPSTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCALPSTR(const V : OleVariant) : TCALPSTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCALPSTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCALPWSTR__Wrapper__ = class(__TCALPWSTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCALPWSTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCALPWSTRToVariant(var R : TCALPWSTR) : OleVariant;
var
__rw : __TCALPWSTR__Wrapper__;
begin
__rw := __TCALPWSTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCALPWSTR(const V : OleVariant) : TCALPWSTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCALPWSTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAPOleStr__Wrapper__ = class(__TCAPOleStr__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAPOleStr__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAPOleStrToVariant(var R : TCAPOleStr) : OleVariant;
var
__rw : __TCAPOleStr__Wrapper__;
begin
__rw := __TCAPOleStr__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAPOleStr(const V : OleVariant) : TCAPOleStr;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAPOleStr((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAPROPVARIANT__Wrapper__ = class(__TCAPROPVARIANT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAPROPVARIANT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAPROPVARIANTToVariant(var R : TCAPROPVARIANT) : OleVariant;
var
__rw : __TCAPROPVARIANT__Wrapper__;
begin
__rw := __TCAPROPVARIANT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAPROPVARIANT(const V : OleVariant) : TCAPROPVARIANT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAPROPVARIANT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCASCODE__Wrapper__ = class(__TCASCODE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCASCODE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCASCODEToVariant(var R : TCASCODE) : OleVariant;
var
__rw : __TCASCODE__Wrapper__;
begin
__rw := __TCASCODE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCASCODE(const V : OleVariant) : TCASCODE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCASCODE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCATEGORYINFO__Wrapper__ = class(__TCATEGORYINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCATEGORYINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCATEGORYINFOToVariant(var R : TCATEGORYINFO) : OleVariant;
var
__rw : __TCATEGORYINFO__Wrapper__;
begin
__rw := __TCATEGORYINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCATEGORYINFO(const V : OleVariant) : TCATEGORYINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCATEGORYINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAUB__Wrapper__ = class(__TCAUB__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAUB__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAUBToVariant(var R : TCAUB) : OleVariant;
var
__rw : __TCAUB__Wrapper__;
begin
__rw := __TCAUB__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAUB(const V : OleVariant) : TCAUB;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAUB((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAUH__Wrapper__ = class(__TCAUH__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAUH__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAUHToVariant(var R : TCAUH) : OleVariant;
var
__rw : __TCAUH__Wrapper__;
begin
__rw := __TCAUH__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAUH(const V : OleVariant) : TCAUH;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAUH((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAUI__Wrapper__ = class(__TCAUI__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAUI__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAUIToVariant(var R : TCAUI) : OleVariant;
var
__rw : __TCAUI__Wrapper__;
begin
__rw := __TCAUI__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAUI(const V : OleVariant) : TCAUI;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAUI((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCAUL__Wrapper__ = class(__TCAUL__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCAUL__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCAULToVariant(var R : TCAUL) : OleVariant;
var
__rw : __TCAUL__Wrapper__;
begin
__rw := __TCAUL__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCAUL(const V : OleVariant) : TCAUL;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCAUL((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TClipData__Wrapper__ = class(__TClipData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TClipData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTClipDataToVariant(var R : TClipData) : OleVariant;
var
__rw : __TClipData__Wrapper__;
begin
__rw := __TClipData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTClipData(const V : OleVariant) : TClipData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TClipData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TConnectData__Wrapper__ = class(__TConnectData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TConnectData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTConnectDataToVariant(var R : TConnectData) : OleVariant;
var
__rw : __TConnectData__Wrapper__;
begin
__rw := __TConnectData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTConnectData(const V : OleVariant) : TConnectData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TConnectData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TControlInfo__Wrapper__ = class(__TControlInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TControlInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTControlInfoToVariant(var R : TControlInfo) : OleVariant;
var
__rw : __TControlInfo__Wrapper__;
begin
__rw := __TControlInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTControlInfo(const V : OleVariant) : TControlInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TControlInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCoServerInfo__Wrapper__ = class(__TCoServerInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCoServerInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCoServerInfoToVariant(var R : TCoServerInfo) : OleVariant;
var
__rw : __TCoServerInfo__Wrapper__;
begin
__rw := __TCoServerInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCoServerInfo(const V : OleVariant) : TCoServerInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCoServerInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCustData__Wrapper__ = class(__TCustData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCustData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCustDataToVariant(var R : TCustData) : OleVariant;
var
__rw : __TCustData__Wrapper__;
begin
__rw := __TCustData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCustData(const V : OleVariant) : TCustData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCustData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCustDataItem__Wrapper__ = class(__TCustDataItem__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCustDataItem__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCustDataItemToVariant(var R : TCustDataItem) : OleVariant;
var
__rw : __TCustDataItem__Wrapper__;
begin
__rw := __TCustDataItem__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCustDataItem(const V : OleVariant) : TCustDataItem;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCustDataItem((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDecimal__Wrapper__ = class(__TDecimal__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDecimal__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDecimalToVariant(var R : TDecimal) : OleVariant;
var
__rw : __TDecimal__Wrapper__;
begin
__rw := __TDecimal__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDecimal(const V : OleVariant) : TDecimal;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDecimal((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDispParams__Wrapper__ = class(__TDispParams__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDispParams__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDispParamsToVariant(var R : TDispParams) : OleVariant;
var
__rw : __TDispParams__Wrapper__;
begin
__rw := __TDispParams__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDispParams(const V : OleVariant) : TDispParams;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDispParams((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDVTargetDevice__Wrapper__ = class(__TDVTargetDevice__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDVTargetDevice__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDVTargetDeviceToVariant(var R : TDVTargetDevice) : OleVariant;
var
__rw : __TDVTargetDevice__Wrapper__;
begin
__rw := __TDVTargetDevice__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDVTargetDevice(const V : OleVariant) : TDVTargetDevice;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDVTargetDevice((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TElemDesc__Wrapper__ = class(__TElemDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TElemDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTElemDescToVariant(var R : TElemDesc) : OleVariant;
var
__rw : __TElemDesc__Wrapper__;
begin
__rw := __TElemDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTElemDesc(const V : OleVariant) : TElemDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TElemDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TExcepInfo__Wrapper__ = class(__TExcepInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TExcepInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTExcepInfoToVariant(var R : TExcepInfo) : OleVariant;
var
__rw : __TExcepInfo__Wrapper__;
begin
__rw := __TExcepInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTExcepInfo(const V : OleVariant) : TExcepInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TExcepInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFileTime__Wrapper__ = class(__TFileTime__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFileTime__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFileTimeToVariant(var R : TFileTime) : OleVariant;
var
__rw : __TFileTime__Wrapper__;
begin
__rw := __TFileTime__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFileTime(const V : OleVariant) : TFileTime;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFileTime((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFmtID__Wrapper__ = class(__TFmtID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFmtID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFmtIDToVariant(var R : TFmtID) : OleVariant;
var
__rw : __TFmtID__Wrapper__;
begin
__rw := __TFmtID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFmtID(const V : OleVariant) : TFmtID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFmtID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFontDesc__Wrapper__ = class(__TFontDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFontDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFontDescToVariant(var R : TFontDesc) : OleVariant;
var
__rw : __TFontDesc__Wrapper__;
begin
__rw := __TFontDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFontDesc(const V : OleVariant) : TFontDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFontDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFuncDesc__Wrapper__ = class(__TFuncDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFuncDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFuncDescToVariant(var R : TFuncDesc) : OleVariant;
var
__rw : __TFuncDesc__Wrapper__;
begin
__rw := __TFuncDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFuncDesc(const V : OleVariant) : TFuncDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFuncDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TGUID__Wrapper__ = class(__TGUID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TGUID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTGUIDToVariant(var R : TGUID) : OleVariant;
var
__rw : __TGUID__Wrapper__;
begin
__rw := __TGUID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTGUID(const V : OleVariant) : TGUID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TGUID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TIDLDesc__Wrapper__ = class(__TIDLDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TIDLDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTIDLDescToVariant(var R : TIDLDesc) : OleVariant;
var
__rw : __TIDLDesc__Wrapper__;
begin
__rw := __TIDLDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTIDLDesc(const V : OleVariant) : TIDLDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TIDLDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TInterfaceData__Wrapper__ = class(__TInterfaceData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TInterfaceData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTInterfaceDataToVariant(var R : TInterfaceData) : OleVariant;
var
__rw : __TInterfaceData__Wrapper__;
begin
__rw := __TInterfaceData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTInterfaceData(const V : OleVariant) : TInterfaceData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TInterfaceData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TInterfaceInfo__Wrapper__ = class(__TInterfaceInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TInterfaceInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTInterfaceInfoToVariant(var R : TInterfaceInfo) : OleVariant;
var
__rw : __TInterfaceInfo__Wrapper__;
begin
__rw := __TInterfaceInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTInterfaceInfo(const V : OleVariant) : TInterfaceInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TInterfaceInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TLIBATTR__Wrapper__ = class(__TLIBATTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TLIBATTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTLIBATTRToVariant(var R : TLIBATTR) : OleVariant;
var
__rw : __TLIBATTR__Wrapper__;
begin
__rw := __TLIBATTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTLIBATTR(const V : OleVariant) : TLIBATTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TLIBATTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TLicInfo__Wrapper__ = class(__TLicInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TLicInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTLicInfoToVariant(var R : TLicInfo) : OleVariant;
var
__rw : __TLicInfo__Wrapper__;
begin
__rw := __TLicInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTLicInfo(const V : OleVariant) : TLicInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TLicInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TLinkSrcDescriptor__Wrapper__ = class(__TLinkSrcDescriptor__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TLinkSrcDescriptor__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTLinkSrcDescriptorToVariant(var R : TLinkSrcDescriptor) : OleVariant;
var
__rw : __TLinkSrcDescriptor__Wrapper__;
begin
__rw := __TLinkSrcDescriptor__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTLinkSrcDescriptor(const V : OleVariant) : TLinkSrcDescriptor;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TLinkSrcDescriptor((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TMethodData__Wrapper__ = class(__TMethodData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TMethodData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTMethodDataToVariant(var R : TMethodData) : OleVariant;
var
__rw : __TMethodData__Wrapper__;
begin
__rw := __TMethodData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTMethodData(const V : OleVariant) : TMethodData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TMethodData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TMultiQI__Wrapper__ = class(__TMultiQI__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TMultiQI__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTMultiQIToVariant(var R : TMultiQI) : OleVariant;
var
__rw : __TMultiQI__Wrapper__;
begin
__rw := __TMultiQI__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTMultiQI(const V : OleVariant) : TMultiQI;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TMultiQI((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TObjectDescriptor__Wrapper__ = class(__TObjectDescriptor__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TObjectDescriptor__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTObjectDescriptorToVariant(var R : TObjectDescriptor) : OleVariant;
var
__rw : __TObjectDescriptor__Wrapper__;
begin
__rw := __TObjectDescriptor__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTObjectDescriptor(const V : OleVariant) : TObjectDescriptor;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TObjectDescriptor((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TObjectID__Wrapper__ = class(__TObjectID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TObjectID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTObjectIDToVariant(var R : TObjectID) : OleVariant;
var
__rw : __TObjectID__Wrapper__;
begin
__rw := __TObjectID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTObjectID(const V : OleVariant) : TObjectID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TObjectID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TOCPFIParams__Wrapper__ = class(__TOCPFIParams__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TOCPFIParams__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTOCPFIParamsToVariant(var R : TOCPFIParams) : OleVariant;
var
__rw : __TOCPFIParams__Wrapper__;
begin
__rw := __TOCPFIParams__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTOCPFIParams(const V : OleVariant) : TOCPFIParams;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TOCPFIParams((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TOleCmd__Wrapper__ = class(__TOleCmd__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TOleCmd__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTOleCmdToVariant(var R : TOleCmd) : OleVariant;
var
__rw : __TOleCmd__Wrapper__;
begin
__rw := __TOleCmd__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTOleCmd(const V : OleVariant) : TOleCmd;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TOleCmd((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TOleCmdText__Wrapper__ = class(__TOleCmdText__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TOleCmdText__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTOleCmdTextToVariant(var R : TOleCmdText) : OleVariant;
var
__rw : __TOleCmdText__Wrapper__;
begin
__rw := __TOleCmdText__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTOleCmdText(const V : OleVariant) : TOleCmdText;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TOleCmdText((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TOleInPlaceFrameInfo__Wrapper__ = class(__TOleInPlaceFrameInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TOleInPlaceFrameInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTOleInPlaceFrameInfoToVariant(var R : TOleInPlaceFrameInfo) : OleVariant;
var
__rw : __TOleInPlaceFrameInfo__Wrapper__;
begin
__rw := __TOleInPlaceFrameInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTOleInPlaceFrameInfo(const V : OleVariant) : TOleInPlaceFrameInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TOleInPlaceFrameInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TOleMenuGroupWidths__Wrapper__ = class(__TOleMenuGroupWidths__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TOleMenuGroupWidths__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTOleMenuGroupWidthsToVariant(var R : TOleMenuGroupWidths) : OleVariant;
var
__rw : __TOleMenuGroupWidths__Wrapper__;
begin
__rw := __TOleMenuGroupWidths__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTOleMenuGroupWidths(const V : OleVariant) : TOleMenuGroupWidths;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TOleMenuGroupWidths((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TOleVerb__Wrapper__ = class(__TOleVerb__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TOleVerb__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTOleVerbToVariant(var R : TOleVerb) : OleVariant;
var
__rw : __TOleVerb__Wrapper__;
begin
__rw := __TOleVerb__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTOleVerb(const V : OleVariant) : TOleVerb;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TOleVerb((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPageRange__Wrapper__ = class(__TPageRange__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPageRange__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPageRangeToVariant(var R : TPageRange) : OleVariant;
var
__rw : __TPageRange__Wrapper__;
begin
__rw := __TPageRange__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPageRange(const V : OleVariant) : TPageRange;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPageRange((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPageSet__Wrapper__ = class(__TPageSet__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPageSet__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPageSetToVariant(var R : TPageSet) : OleVariant;
var
__rw : __TPageSet__Wrapper__;
begin
__rw := __TPageSet__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPageSet(const V : OleVariant) : TPageSet;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPageSet((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TParamData__Wrapper__ = class(__TParamData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TParamData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTParamDataToVariant(var R : TParamData) : OleVariant;
var
__rw : __TParamData__Wrapper__;
begin
__rw := __TParamData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTParamData(const V : OleVariant) : TParamData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TParamData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TParamDesc__Wrapper__ = class(__TParamDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TParamDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTParamDescToVariant(var R : TParamDesc) : OleVariant;
var
__rw : __TParamDesc__Wrapper__;
begin
__rw := __TParamDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTParamDesc(const V : OleVariant) : TParamDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TParamDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TParamDescEx__Wrapper__ = class(__TParamDescEx__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TParamDescEx__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTParamDescExToVariant(var R : TParamDescEx) : OleVariant;
var
__rw : __TParamDescEx__Wrapper__;
begin
__rw := __TParamDescEx__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTParamDescEx(const V : OleVariant) : TParamDescEx;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TParamDescEx((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPictDesc__Wrapper__ = class(__TPictDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPictDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPictDescToVariant(var R : TPictDesc) : OleVariant;
var
__rw : __TPictDesc__Wrapper__;
begin
__rw := __TPictDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPictDesc(const V : OleVariant) : TPictDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPictDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPointF__Wrapper__ = class(__TPointF__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPointF__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPointFToVariant(var R : TPointF) : OleVariant;
var
__rw : __TPointF__Wrapper__;
begin
__rw := __TPointF__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPointF(const V : OleVariant) : TPointF;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPointF((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPropPageInfo__Wrapper__ = class(__TPropPageInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPropPageInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPropPageInfoToVariant(var R : TPropPageInfo) : OleVariant;
var
__rw : __TPropPageInfo__Wrapper__;
begin
__rw := __TPropPageInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPropPageInfo(const V : OleVariant) : TPropPageInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPropPageInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPropSpec__Wrapper__ = class(__TPropSpec__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPropSpec__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPropSpecToVariant(var R : TPropSpec) : OleVariant;
var
__rw : __TPropSpec__Wrapper__;
begin
__rw := __TPropSpec__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPropSpec(const V : OleVariant) : TPropSpec;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPropSpec((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TPropVariant__Wrapper__ = class(__TPropVariant__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TPropVariant__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTPropVariantToVariant(var R : TPropVariant) : OleVariant;
var
__rw : __TPropVariant__Wrapper__;
begin
__rw := __TPropVariant__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTPropVariant(const V : OleVariant) : TPropVariant;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TPropVariant((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TQaContainer__Wrapper__ = class(__TQaContainer__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TQaContainer__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTQaContainerToVariant(var R : TQaContainer) : OleVariant;
var
__rw : __TQaContainer__Wrapper__;
begin
__rw := __TQaContainer__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTQaContainer(const V : OleVariant) : TQaContainer;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TQaContainer((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TQaControl__Wrapper__ = class(__TQaControl__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TQaControl__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTQaControlToVariant(var R : TQaControl) : OleVariant;
var
__rw : __TQaControl__Wrapper__;
begin
__rw := __TQaControl__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTQaControl(const V : OleVariant) : TQaControl;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TQaControl((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TRemStgMedium__Wrapper__ = class(__TRemStgMedium__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRemStgMedium__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRemStgMediumToVariant(var R : TRemStgMedium) : OleVariant;
var
__rw : __TRemStgMedium__Wrapper__;
begin
__rw := __TRemStgMedium__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRemStgMedium(const V : OleVariant) : TRemStgMedium;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRemStgMedium((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TRpcOleMessage__Wrapper__ = class(__TRpcOleMessage__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRpcOleMessage__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRpcOleMessageToVariant(var R : TRpcOleMessage) : OleVariant;
var
__rw : __TRpcOleMessage__Wrapper__;
begin
__rw := __TRpcOleMessage__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRpcOleMessage(const V : OleVariant) : TRpcOleMessage;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRpcOleMessage((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSafeArray__Wrapper__ = class(__TSafeArray__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSafeArray__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSafeArrayToVariant(var R : TSafeArray) : OleVariant;
var
__rw : __TSafeArray__Wrapper__;
begin
__rw := __TSafeArray__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSafeArray(const V : OleVariant) : TSafeArray;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSafeArray((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSafeArrayBound__Wrapper__ = class(__TSafeArrayBound__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSafeArrayBound__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSafeArrayBoundToVariant(var R : TSafeArrayBound) : OleVariant;
var
__rw : __TSafeArrayBound__Wrapper__;
begin
__rw := __TSafeArrayBound__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSafeArrayBound(const V : OleVariant) : TSafeArrayBound;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSafeArrayBound((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSOleAuthenticationService__Wrapper__ = class(__TSOleAuthenticationService__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSOleAuthenticationService__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSOleAuthenticationServiceToVariant(var R : TSOleAuthenticationService) : OleVariant;
var
__rw : __TSOleAuthenticationService__Wrapper__;
begin
__rw := __TSOleAuthenticationService__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSOleAuthenticationService(const V : OleVariant) : TSOleAuthenticationService;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSOleAuthenticationService((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TStatData__Wrapper__ = class(__TStatData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TStatData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTStatDataToVariant(var R : TStatData) : OleVariant;
var
__rw : __TStatData__Wrapper__;
begin
__rw := __TStatData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTStatData(const V : OleVariant) : TStatData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TStatData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TStatPropSetStg__Wrapper__ = class(__TStatPropSetStg__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TStatPropSetStg__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTStatPropSetStgToVariant(var R : TStatPropSetStg) : OleVariant;
var
__rw : __TStatPropSetStg__Wrapper__;
begin
__rw := __TStatPropSetStg__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTStatPropSetStg(const V : OleVariant) : TStatPropSetStg;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TStatPropSetStg((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TStatPropStg__Wrapper__ = class(__TStatPropStg__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TStatPropStg__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTStatPropStgToVariant(var R : TStatPropStg) : OleVariant;
var
__rw : __TStatPropStg__Wrapper__;
begin
__rw := __TStatPropStg__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTStatPropStg(const V : OleVariant) : TStatPropStg;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TStatPropStg((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TStgMedium__Wrapper__ = class(__TStgMedium__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TStgMedium__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTStgMediumToVariant(var R : TStgMedium) : OleVariant;
var
__rw : __TStgMedium__Wrapper__;
begin
__rw := __TStgMedium__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTStgMedium(const V : OleVariant) : TStgMedium;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TStgMedium((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSystemTime__Wrapper__ = class(__TSystemTime__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSystemTime__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSystemTimeToVariant(var R : TSystemTime) : OleVariant;
var
__rw : __TSystemTime__Wrapper__;
begin
__rw := __TSystemTime__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSystemTime(const V : OleVariant) : TSystemTime;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSystemTime((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TTextMetricOle__Wrapper__ = class(__TTextMetricOle__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TTextMetricOle__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTTextMetricOleToVariant(var R : TTextMetricOle) : OleVariant;
var
__rw : __TTextMetricOle__Wrapper__;
begin
__rw := __TTextMetricOle__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTTextMetricOle(const V : OleVariant) : TTextMetricOle;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TTextMetricOle((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TTLibAttr__Wrapper__ = class(__TTLibAttr__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TTLibAttr__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTTLibAttrToVariant(var R : TTLibAttr) : OleVariant;
var
__rw : __TTLibAttr__Wrapper__;
begin
__rw := __TTLibAttr__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTTLibAttr(const V : OleVariant) : TTLibAttr;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TTLibAttr((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TTypeAttr__Wrapper__ = class(__TTypeAttr__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TTypeAttr__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTTypeAttrToVariant(var R : TTypeAttr) : OleVariant;
var
__rw : __TTypeAttr__Wrapper__;
begin
__rw := __TTypeAttr__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTTypeAttr(const V : OleVariant) : TTypeAttr;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TTypeAttr((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TTypeDesc__Wrapper__ = class(__TTypeDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TTypeDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTTypeDescToVariant(var R : TTypeDesc) : OleVariant;
var
__rw : __TTypeDesc__Wrapper__;
begin
__rw := __TTypeDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTTypeDesc(const V : OleVariant) : TTypeDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TTypeDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TVarDesc__Wrapper__ = class(__TVarDesc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TVarDesc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTVarDescToVariant(var R : TVarDesc) : OleVariant;
var
__rw : __TVarDesc__Wrapper__;
begin
__rw := __TVarDesc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTVarDesc(const V : OleVariant) : TVarDesc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TVarDesc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TVariantArg__Wrapper__ = class(__TVariantArg__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TVariantArg__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTVariantArgToVariant(var R : TVariantArg) : OleVariant;
var
__rw : __TVariantArg__Wrapper__;
begin
__rw := __TVariantArg__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTVariantArg(const V : OleVariant) : TVariantArg;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TVariantArg((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TYPEATTR__Wrapper__ = class(__TYPEATTR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TYPEATTR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTYPEATTRToVariant(var R : TYPEATTR) : OleVariant;
var
__rw : __TYPEATTR__Wrapper__;
begin
__rw := __TYPEATTR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTYPEATTR(const V : OleVariant) : TYPEATTR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TYPEATTR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TYPEDESC__Wrapper__ = class(__TYPEDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TYPEDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTYPEDESCToVariant(var R : TYPEDESC) : OleVariant;
var
__rw : __TYPEDESC__Wrapper__;
begin
__rw := __TYPEDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTYPEDESC(const V : OleVariant) : TYPEDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TYPEDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __VARDESC__Wrapper__ = class(__VARDESC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __VARDESC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertVARDESCToVariant(var R : VARDESC) : OleVariant;
var
__rw : __VARDESC__Wrapper__;
begin
__rw := __VARDESC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToVARDESC(const V : OleVariant) : VARDESC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := VARDESC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..510] of string = (
'MEMCTX_TASK'
,'MEMCTX_SHARED'
,'MEMCTX_MACSYSTEM'
,'MEMCTX_UNKNOWN'
,'MEMCTX_SAME'
,'ROTFLAGS_REGISTRATIONKEEPSALIVE'
,'ROTFLAGS_ALLOWANYCLIENT'
,'CLSCTX_INPROC_SERVER'
,'CLSCTX_INPROC_HANDLER'
,'CLSCTX_LOCAL_SERVER'
,'CLSCTX_INPROC_SERVER16'
,'CLSCTX_REMOTE_SERVER'
,'CLSCTX_INPROC_HANDLER16'
,'CLSCTX_INPROC_SERVERX86'
,'CLSCTX_INPROC_HANDLERX86'
,'CLSCTX_ALL'
,'CLSCTX_INPROC'
,'CLSCTX_SERVER'
,'COM_RIGHTS_EXECUTE'
,'MSHLFLAGS_NORMAL'
,'MSHLFLAGS_TABLESTRONG'
,'MSHLFLAGS_TABLEWEAK'
,'MSHLFLAGS_NOPING'
,'MSHCTX_LOCAL'
,'MSHCTX_NOSHAREDMEM'
,'MSHCTX_DIFFERENTMACHINE'
,'MSHCTX_INPROC'
,'DVASPECT_CONTENT'
,'DVASPECT_THUMBNAIL'
,'DVASPECT_ICON'
,'DVASPECT_DOCPRINT'
,'STGC_DEFAULT'
,'STGC_OVERWRITE'
,'STGC_ONLYIFCURRENT'
,'STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE'
,'STGMOVE_MOVE'
,'STGMOVE_COPY'
,'STGMOVE_SHALLOWCOPY'
,'STATFLAG_DEFAULT'
,'STATFLAG_NONAME'
,'BIND_MAYBOTHERUSER'
,'BIND_JUSTTESTEXISTENCE'
,'MKSYS_NONE'
,'MKSYS_GENERICCOMPOSITE'
,'MKSYS_FILEMONIKER'
,'MKSYS_ANTIMONIKER'
,'MKSYS_ITEMMONIKER'
,'MKSYS_POINTERMONIKER'
,'MKRREDUCE_ONE'
,'MKRREDUCE_TOUSER'
,'MKRREDUCE_THROUGHUSER'
,'MKRREDUCE_ALL'
,'STGTY_STORAGE'
,'STGTY_STREAM'
,'STGTY_LOCKBYTES'
,'STGTY_PROPERTY'
,'STREAM_SEEK_SET'
,'STREAM_SEEK_CUR'
,'STREAM_SEEK_END'
,'LOCK_WRITE'
,'LOCK_EXCLUSIVE'
,'LOCK_ONLYONCE'
,'ADVF_NODATA'
,'ADVF_PRIMEFIRST'
,'ADVF_ONLYONCE'
,'ADVF_DATAONSTOP'
,'ADVFCACHE_NOHANDLER'
,'ADVFCACHE_FORCEBUILTIN'
,'ADVFCACHE_ONSAVE'
,'TYMED_HGLOBAL'
,'TYMED_FILE'
,'TYMED_ISTREAM'
,'TYMED_ISTORAGE'
,'TYMED_GDI'
,'TYMED_MFPICT'
,'TYMED_ENHMF'
,'TYMED_NULL'
,'DATADIR_GET'
,'DATADIR_SET'
,'CALLTYPE_TOPLEVEL'
,'CALLTYPE_NESTED'
,'CALLTYPE_ASYNC'
,'CALLTYPE_TOPLEVEL_CALLPENDING'
,'CALLTYPE_ASYNC_CALLPENDING'
,'SERVERCALL_ISHANDLED'
,'SERVERCALL_REJECTED'
,'SERVERCALL_RETRYLATER'
,'PENDINGTYPE_TOPLEVEL'
,'PENDINGTYPE_NESTED'
,'PENDINGMSG_CANCELCALL'
,'PENDINGMSG_WAITNOPROCESS'
,'PENDINGMSG_WAITDEFPROCESS'
,'PROPSETFLAG_DEFAULT'
,'PROPSETFLAG_NONSIMPLE'
,'PROPSETFLAG_ANSI'
,'REGCLS_SINGLEUSE'
,'REGCLS_MULTIPLEUSE'
,'REGCLS_MULTI_SEPARATE'
,'REGCLS_SUSPENDED'
,'MARSHALINTERFACE_MIN'
,'CWCSTORAGENAME'
,'STGM_DIRECT'
,'STGM_TRANSACTED'
,'STGM_SIMPLE'
,'STGM_DIRECT_SWMR'
,'STGM_READ'
,'STGM_WRITE'
,'STGM_READWRITE'
,'STGM_SHARE_DENY_NONE'
,'STGM_SHARE_DENY_READ'
,'STGM_SHARE_DENY_WRITE'
,'STGM_SHARE_EXCLUSIVE'
,'STGM_PRIORITY'
,'STGM_DELETEONRELEASE'
,'STGM_NOSCRATCH'
,'STGM_CREATE'
,'STGM_CONVERT'
,'STGM_FAILIFTHERE'
,'FADF_AUTO'
,'FADF_STATIC'
,'FADF_EMBEDDED'
,'FADF_FIXEDSIZE'
,'FADF_BSTR'
,'FADF_UNKNOWN'
,'FADF_DISPATCH'
,'FADF_VARIANT'
,'FADF_RESERVED'
,'VT_EMPTY'
,'VT_NULL'
,'VT_I2'
,'VT_I4'
,'VT_R4'
,'VT_R8'
,'VT_CY'
,'VT_DATE'
,'VT_BSTR'
,'VT_DISPATCH'
,'VT_ERROR'
,'VT_BOOL'
,'VT_VARIANT'
,'VT_UNKNOWN'
,'VT_DECIMAL'
,'VT_I1'
,'VT_UI1'
,'VT_UI2'
,'VT_UI4'
,'VT_I8'
,'VT_UI8'
,'VT_INT'
,'VT_UINT'
,'VT_VOID'
,'VT_HRESULT'
,'VT_PTR'
,'VT_SAFEARRAY'
,'VT_CARRAY'
,'VT_USERDEFINED'
,'VT_LPSTR'
,'VT_LPWSTR'
,'VT_INT_PTR'
,'VT_UINT_PTR'
,'VT_FILETIME'
,'VT_BLOB'
,'VT_STREAM'
,'VT_STORAGE'
,'VT_STREAMED_OBJECT'
,'VT_STORED_OBJECT'
,'VT_BLOB_OBJECT'
,'VT_CF'
,'VT_CLSID'
,'VT_VECTOR'
,'VT_ARRAY'
,'VT_BYREF'
,'VT_RESERVED'
,'VT_ILLEGAL'
,'VT_ILLEGALMASKED'
,'VT_TYPEMASK'
,'TKIND_ENUM'
,'TKIND_RECORD'
,'TKIND_MODULE'
,'TKIND_INTERFACE'
,'TKIND_DISPATCH'
,'TKIND_COCLASS'
,'TKIND_ALIAS'
,'TKIND_UNION'
,'TKIND_MAX'
,'CC_SAFECALL'
,'CC_CDECL'
,'CC_PASCAL'
,'CC_MACPASCAL'
,'CC_STDCALL'
,'CC_FPFASTCALL'
,'CC_SYSCALL'
,'CC_MPWCDECL'
,'CC_MPWPASCAL'
,'CC_MAX'
,'FUNC_VIRTUAL'
,'FUNC_PUREVIRTUAL'
,'FUNC_NONVIRTUAL'
,'FUNC_STATIC'
,'FUNC_DISPATCH'
,'INVOKE_FUNC'
,'INVOKE_PROPERTYGET'
,'INVOKE_PROPERTYPUT'
,'INVOKE_PROPERTYPUTREF'
,'VAR_PERINSTANCE'
,'VAR_STATIC'
,'VAR_CONST'
,'VAR_DISPATCH'
,'IMPLTYPEFLAG_FDEFAULT'
,'IMPLTYPEFLAG_FSOURCE'
,'IMPLTYPEFLAG_FRESTRICTED'
,'IMPLTYPEFLAG_FDEFAULTVTABLE'
,'TYPEFLAG_FAPPOBJECT'
,'TYPEFLAG_FCANCREATE'
,'TYPEFLAG_FLICENSED'
,'TYPEFLAG_FPREDECLID'
,'TYPEFLAG_FHIDDEN'
,'TYPEFLAG_FCONTROL'
,'TYPEFLAG_FDUAL'
,'TYPEFLAG_FNONEXTENSIBLE'
,'TYPEFLAG_FOLEAUTOMATION'
,'TYPEFLAG_FRESTRICTED'
,'TYPEFLAG_FAGGREGATABLE'
,'TYPEFLAG_FREPLACEABLE'
,'TYPEFLAG_FDISPATCHABLE'
,'TYPEFLAG_FREVERSEBIND'
,'FUNCFLAG_FRESTRICTED'
,'FUNCFLAG_FSOURCE'
,'FUNCFLAG_FBINDABLE'
,'FUNCFLAG_FREQUESTEDIT'
,'FUNCFLAG_FDISPLAYBIND'
,'FUNCFLAG_FDEFAULTBIND'
,'FUNCFLAG_FHIDDEN'
,'FUNCFLAG_FUSESGETLASTERROR'
,'FUNCFLAG_FDEFAULTCOLLELEM'
,'FUNCFLAG_FUIDEFAULT'
,'FUNCFLAG_FNONBROWSABLE'
,'FUNCFLAG_FREPLACEABLE'
,'FUNCFLAG_FIMMEDIATEBIND'
,'VARFLAG_FREADONLY'
,'VARFLAG_FSOURCE'
,'VARFLAG_FBINDABLE'
,'VARFLAG_FREQUESTEDIT'
,'VARFLAG_FDISPLAYBIND'
,'VARFLAG_FDEFAULTBIND'
,'VARFLAG_FHIDDEN'
,'VARFLAG_FRESTRICTED'
,'VARFLAG_FDEFAULTCOLLELEM'
,'VARFLAG_FUIDEFAULT'
,'VARFLAG_FNONBROWSABLE'
,'VARFLAG_FREPLACEABLE'
,'VARFLAG_FIMMEDIATEBIND'
,'DISPID_VALUE'
,'DISPID_UNKNOWN'
,'DISPID_STARTENUM'
,'DISPID_PROPERTYPUT'
,'DISPID_NEWENUM'
,'DISPID_EVALUATE'
,'DISPID_CONSTRUCTOR'
,'DISPID_DESTRUCTOR'
,'DISPID_COLLECT'
,'DISPID_WINDOWOBJECT'
,'DISPID_LOCATIONOBJECT'
,'DISPID_HISTORYOBJECT'
,'DISPID_NAVIGATOROBJECT'
,'DISPID_SECURITYCTX'
,'DISPID_AMBIENT_DLCONTROL'
,'DISPID_AMBIENT_USERAGENT'
,'DISPID_SECURITYDOMAIN'
,'DESCKIND_NONE'
,'DESCKIND_FUNCDESC'
,'DESCKIND_VARDESC'
,'DESCKIND_TYPECOMP'
,'DESCKIND_IMPLICITAPPOBJ'
,'DESCKIND_MAX'
,'SYS_WIN16'
,'SYS_WIN32'
,'SYS_MAC'
,'LIBFLAG_FRESTRICTED'
,'LIBFLAG_FCONTROL'
,'LIBFLAG_FHIDDEN'
,'LIBFLAG_FHASDISKIMAGE'
,'STDOLE_MAJORVERNUM'
,'STDOLE_MINORVERNUM'
,'STDOLE_LCID'
,'VARIANT_NOVALUEPROP'
,'VAR_TIMEVALUEONLY'
,'VAR_DATEVALUEONLY'
,'MEMBERID_NIL'
,'ID_DEFAULTINST'
,'DISPATCH_METHOD'
,'DISPATCH_PROPERTYGET'
,'DISPATCH_PROPERTYPUT'
,'DISPATCH_PROPERTYPUTREF'
,'DISPATCH_CONSTRUCT'
,'IDLFLAG_NONE'
,'IDLFLAG_FIN'
,'IDLFLAG_FOUT'
,'IDLFLAG_FLCID'
,'IDLFLAG_FRETVAL'
,'PARAMFLAG_NONE'
,'PARAMFLAG_FIN'
,'PARAMFLAG_FOUT'
,'PARAMFLAG_FLCID'
,'PARAMFLAG_FRETVAL'
,'PARAMFLAG_FOPT'
,'PARAMFLAG_FHASDEFAULT'
,'OLEIVERB_PRIMARY'
,'OLEIVERB_SHOW'
,'OLEIVERB_OPEN'
,'OLEIVERB_HIDE'
,'OLEIVERB_UIACTIVATE'
,'OLEIVERB_INPLACEACTIVATE'
,'OLEIVERB_DISCARDUNDOSTATE'
,'EMBDHLP_INPROC_HANDLER'
,'EMBDHLP_INPROC_SERVER'
,'EMBDHLP_CREATENOW'
,'EMBDHLP_DELAYCREATE'
,'OLECREATE_LEAVERUNNING'
,'UPDFCACHE_NODATACACHE'
,'UPDFCACHE_ONSAVECACHE'
,'UPDFCACHE_ONSTOPCACHE'
,'UPDFCACHE_NORMALCACHE'
,'UPDFCACHE_IFBLANK'
,'UPDFCACHE_ONLYIFBLANK'
,'UPDFCACHE_IFBLANKORONSAVECACHE'
,'UPDFCACHE_ALL'
,'UPDFCACHE_ALLBUTNODATACACHE'
,'DISCARDCACHE_SAVEIFDIRTY'
,'DISCARDCACHE_NOSAVE'
,'OLEGETMONIKER_ONLYIFTHERE'
,'OLEGETMONIKER_FORCEASSIGN'
,'OLEGETMONIKER_UNASSIGN'
,'OLEGETMONIKER_TEMPFORUSER'
,'OLEWHICHMK_CONTAINER'
,'OLEWHICHMK_OBJREL'
,'OLEWHICHMK_OBJFULL'
,'USERCLASSTYPE_FULL'
,'USERCLASSTYPE_SHORT'
,'USERCLASSTYPE_APPNAME'
,'OLEMISC_RECOMPOSEONRESIZE'
,'OLEMISC_ONLYICONIC'
,'OLEMISC_INSERTNOTREPLACE'
,'OLEMISC_STATIC'
,'OLEMISC_CANTLINKINSIDE'
,'OLEMISC_CANLINKBYOLE1'
,'OLEMISC_ISLINKOBJECT'
,'OLEMISC_INSIDEOUT'
,'OLEMISC_ACTIVATEWHENVISIBLE'
,'OLEMISC_RENDERINGISDEVICEINDEPENDENT'
,'OLEMISC_INVISIBLEATRUNTIME'
,'OLEMISC_ALWAYSRUN'
,'OLEMISC_ACTSLIKEBUTTON'
,'OLEMISC_ACTSLIKELABEL'
,'OLEMISC_NOUIACTIVATE'
,'OLEMISC_ALIGNABLE'
,'OLEMISC_SIMPLEFRAME'
,'OLEMISC_SETCLIENTSITEFIRST'
,'OLEMISC_IMEMODE'
,'OLEMISC_IGNOREACTIVATEWHENVISIBLE'
,'OLEMISC_WANTSTOMENUMERGE'
,'OLEMISC_SUPPORTSMULTILEVELUNDO'
,'OLECLOSE_SAVEIFDIRTY'
,'OLECLOSE_NOSAVE'
,'OLECLOSE_PROMPTSAVE'
,'OLERENDER_NONE'
,'OLERENDER_DRAW'
,'OLERENDER_FORMAT'
,'OLERENDER_ASIS'
,'OLEUPDATE_ALWAYS'
,'OLEUPDATE_ONCALL'
,'OLELINKBIND_EVENIFCLASSDIFF'
,'BINDSPEED_INDEFINITE'
,'BINDSPEED_MODERATE'
,'BINDSPEED_IMMEDIATE'
,'OLECONTF_EMBEDDINGS'
,'OLECONTF_LINKS'
,'OLECONTF_OTHERS'
,'OLECONTF_ONLYUSER'
,'OLECONTF_ONLYIFRUNNING'
,'DROPEFFECT_NONE'
,'DROPEFFECT_COPY'
,'DROPEFFECT_MOVE'
,'DROPEFFECT_LINK'
,'DROPEFFECT_SCROLL'
,'MK_ALT'
,'DD_DEFSCROLLINSET'
,'DD_DEFSCROLLDELAY'
,'DD_DEFSCROLLINTERVAL'
,'DD_DEFDRAGDELAY'
,'DD_DEFDRAGMINDIST'
,'OLEVERBATTRIB_NEVERDIRTIES'
,'OLEVERBATTRIB_ONCONTAINERMENU'
,'CTL_E_ILLEGALFUNCTIONCALL'
,'CTL_E_OVERFLOW'
,'CTL_E_OUTOFMEMORY'
,'CTL_E_DIVISIONBYZERO'
,'CTL_E_OUTOFSTRINGSPACE'
,'CTL_E_OUTOFSTACKSPACE'
,'CTL_E_BADFILENAMEORNUMBER'
,'CTL_E_FILENOTFOUND'
,'CTL_E_BADFILEMODE'
,'CTL_E_FILEALREADYOPEN'
,'CTL_E_DEVICEIOERROR'
,'CTL_E_FILEALREADYEXISTS'
,'CTL_E_BADRECORDLENGTH'
,'CTL_E_DISKFULL'
,'CTL_E_BADRECORDNUMBER'
,'CTL_E_BADFILENAME'
,'CTL_E_TOOMANYFILES'
,'CTL_E_DEVICEUNAVAILABLE'
,'CTL_E_PERMISSIONDENIED'
,'CTL_E_DISKNOTREADY'
,'CTL_E_PATHFILEACCESSERROR'
,'CTL_E_PATHNOTFOUND'
,'CTL_E_INVALIDPATTERNSTRING'
,'CTL_E_INVALIDUSEOFNULL'
,'CTL_E_INVALIDFILEFORMAT'
,'CTL_E_INVALIDPROPERTYVALUE'
,'CTL_E_INVALIDPROPERTYARRAYINDEX'
,'CTL_E_SETNOTSUPPORTEDATRUNTIME'
,'CTL_E_SETNOTSUPPORTED'
,'CTL_E_NEEDPROPERTYARRAYINDEX'
,'CTL_E_SETNOTPERMITTED'
,'CTL_E_GETNOTSUPPORTEDATRUNTIME'
,'CTL_E_GETNOTSUPPORTED'
,'CTL_E_PROPERTYNOTFOUND'
,'CTL_E_INVALIDCLIPBOARDFORMAT'
,'CTL_E_INVALIDPICTURE'
,'CTL_E_PRINTERERROR'
,'CTL_E_CANTSAVEFILETOTEMP'
,'CTL_E_SEARCHTEXTNOTFOUND'
,'CTL_E_REPLACEMENTSTOOLONG'
,'CTL_E_CUSTOM_FIRST'
,'CLASS_E_NOTLICENSED'
,'CONNECT_E_FIRST'
,'CONNECT_E_LAST'
,'CONNECT_S_FIRST'
,'CONNECT_S_LAST'
,'CONNECT_E_NOCONNECTION'
,'CONNECT_E_ADVISELIMIT'
,'CONNECT_E_CANNOTCONNECT'
,'CONNECT_E_OVERRIDDEN'
,'SELFREG_E_FIRST'
,'SELFREG_E_LAST'
,'SELFREG_S_FIRST'
,'SELFREG_S_LAST'
,'SELFREG_E_TYPELIB'
,'SELFREG_E_CLASS'
,'PERPROP_E_FIRST'
,'PERPROP_E_LAST'
,'PERPROP_S_FIRST'
,'PERPROP_S_LAST'
,'PERPROP_E_NOPAGEAVAILABLE'
,'OLEIVERB_PROPERTIES'
,'VT_STREAMED_PROPSET'
,'VT_STORED_PROPSET'
,'VT_BLOB_PROPSET'
,'VT_VERBOSE_ENUM'
,'VT_COLOR'
,'VT_XPOS_PIXELS'
,'VT_YPOS_PIXELS'
,'VT_XSIZE_PIXELS'
,'VT_YSIZE_PIXELS'
,'VT_XPOS_HIMETRIC'
,'VT_YPOS_HIMETRIC'
,'VT_XSIZE_HIMETRIC'
,'VT_YSIZE_HIMETRIC'
,'VT_TRISTATE'
,'VT_OPTEXCLUSIVE'
,'VT_FONT'
,'VT_PICTURE'
,'VT_HANDLE'
,'OCM__BASE'
,'OCM_COMMAND'
,'OCM_CTLCOLORBTN'
,'OCM_CTLCOLOREDIT'
,'OCM_CTLCOLORDLG'
,'OCM_CTLCOLORLISTBOX'
,'OCM_CTLCOLORMSGBOX'
,'OCM_CTLCOLORSCROLLBAR'
,'OCM_CTLCOLORSTATIC'
,'OCM_DRAWITEM'
,'OCM_MEASUREITEM'
,'OCM_DELETEITEM'
,'OCM_VKEYTOITEM'
,'OCM_CHARTOITEM'
,'OCM_COMPAREITEM'
,'OCM_HSCROLL'
,'OCM_VSCROLL'
,'OCM_PARENTNOTIFY'
,'OCM_NOTIFY'
,'CTRLINFO_EATS_RETURN'
,'CTRLINFO_EATS_ESCAPE'
,'XFORMCOORDS_POSITION'
,'XFORMCOORDS_SIZE'
,'XFORMCOORDS_HIMETRICTOCONTAINER'
,'XFORMCOORDS_CONTAINERTOHIMETRIC'
,'PROPPAGESTATUS_DIRTY'
,'PROPPAGESTATUS_VALIDATE'
,'PROPPAGESTATUS_CLEAN'
,'PICTURE_SCALABLE'
,'PICTURE_TRANSPARENT'
,'PICTYPE_UNINITIALIZED'
,'PICTYPE_NONE'
,'PICTYPE_BITMAP'
,'PICTYPE_METAFILE'
,'PICTYPE_ICON'
,'PICTYPE_ENHMETAFILE'
,'DISPID_AUTOSIZE'
,'DISPID_BACKCOLOR'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,MEMCTX_TASK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,MEMCTX_SHARED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,MEMCTX_MACSYSTEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,MEMCTX_UNKNOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,MEMCTX_SAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,ROTFLAGS_REGISTRATIONKEEPSALIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,ROTFLAGS_ALLOWANYCLIENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,CLSCTX_INPROC_SERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,CLSCTX_INPROC_HANDLER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,CLSCTX_LOCAL_SERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,CLSCTX_INPROC_SERVER16));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,CLSCTX_REMOTE_SERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,CLSCTX_INPROC_HANDLER16));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,CLSCTX_INPROC_SERVERX86));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,CLSCTX_INPROC_HANDLERX86));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,CLSCTX_ALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,CLSCTX_INPROC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,CLSCTX_SERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,COM_RIGHTS_EXECUTE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,MSHLFLAGS_NORMAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,MSHLFLAGS_TABLESTRONG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,MSHLFLAGS_TABLEWEAK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,MSHLFLAGS_NOPING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,MSHCTX_LOCAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,MSHCTX_NOSHAREDMEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,MSHCTX_DIFFERENTMACHINE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,MSHCTX_INPROC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,DVASPECT_CONTENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,DVASPECT_THUMBNAIL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,DVASPECT_ICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,DVASPECT_DOCPRINT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,STGC_DEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,STGC_OVERWRITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,STGC_ONLYIFCURRENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,STGMOVE_MOVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,STGMOVE_COPY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,STGMOVE_SHALLOWCOPY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,STATFLAG_DEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,STATFLAG_NONAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,BIND_MAYBOTHERUSER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,BIND_JUSTTESTEXISTENCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,MKSYS_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,MKSYS_GENERICCOMPOSITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,MKSYS_FILEMONIKER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,MKSYS_ANTIMONIKER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,MKSYS_ITEMMONIKER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,MKSYS_POINTERMONIKER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,MKRREDUCE_ONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,MKRREDUCE_TOUSER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,MKRREDUCE_THROUGHUSER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,MKRREDUCE_ALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,STGTY_STORAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,STGTY_STREAM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,STGTY_LOCKBYTES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,STGTY_PROPERTY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,STREAM_SEEK_SET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,STREAM_SEEK_CUR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,STREAM_SEEK_END));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,LOCK_WRITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,LOCK_EXCLUSIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,LOCK_ONLYONCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,ADVF_NODATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,ADVF_PRIMEFIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,ADVF_ONLYONCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,ADVF_DATAONSTOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,ADVFCACHE_NOHANDLER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,ADVFCACHE_FORCEBUILTIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,ADVFCACHE_ONSAVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,TYMED_HGLOBAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,TYMED_FILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,TYMED_ISTREAM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,TYMED_ISTORAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,TYMED_GDI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,TYMED_MFPICT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,TYMED_ENHMF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,TYMED_NULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,DATADIR_GET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,DATADIR_SET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,CALLTYPE_TOPLEVEL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,CALLTYPE_NESTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,CALLTYPE_ASYNC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,CALLTYPE_TOPLEVEL_CALLPENDING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,CALLTYPE_ASYNC_CALLPENDING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,SERVERCALL_ISHANDLED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,SERVERCALL_REJECTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,SERVERCALL_RETRYLATER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,PENDINGTYPE_TOPLEVEL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,PENDINGTYPE_NESTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,PENDINGMSG_CANCELCALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,PENDINGMSG_WAITNOPROCESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,PENDINGMSG_WAITDEFPROCESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,PROPSETFLAG_DEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,PROPSETFLAG_NONSIMPLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,PROPSETFLAG_ANSI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,REGCLS_SINGLEUSE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,REGCLS_MULTIPLEUSE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,REGCLS_MULTI_SEPARATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,REGCLS_SUSPENDED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,MARSHALINTERFACE_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,CWCSTORAGENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,STGM_DIRECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,STGM_TRANSACTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,STGM_SIMPLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,STGM_DIRECT_SWMR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[105] ,STGM_READ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[106] ,STGM_WRITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[107] ,STGM_READWRITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[108] ,STGM_SHARE_DENY_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[109] ,STGM_SHARE_DENY_READ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[110] ,STGM_SHARE_DENY_WRITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[111] ,STGM_SHARE_EXCLUSIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[112] ,STGM_PRIORITY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[113] ,STGM_DELETEONRELEASE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[114] ,STGM_NOSCRATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[115] ,STGM_CREATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[116] ,STGM_CONVERT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[117] ,STGM_FAILIFTHERE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[118] ,FADF_AUTO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[119] ,FADF_STATIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[120] ,FADF_EMBEDDED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[121] ,FADF_FIXEDSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[122] ,FADF_BSTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[123] ,FADF_UNKNOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[124] ,FADF_DISPATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[125] ,FADF_VARIANT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[126] ,FADF_RESERVED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[127] ,VT_EMPTY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[128] ,VT_NULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[129] ,VT_I2));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[130] ,VT_I4));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[131] ,VT_R4));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[132] ,VT_R8));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[133] ,VT_CY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[134] ,VT_DATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[135] ,VT_BSTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[136] ,VT_DISPATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[137] ,VT_ERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[138] ,VT_BOOL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[139] ,VT_VARIANT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[140] ,VT_UNKNOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[141] ,VT_DECIMAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[142] ,VT_I1));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[143] ,VT_UI1));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[144] ,VT_UI2));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[145] ,VT_UI4));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[146] ,VT_I8));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[147] ,VT_UI8));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[148] ,VT_INT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[149] ,VT_UINT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[150] ,VT_VOID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[151] ,VT_HRESULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[152] ,VT_PTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[153] ,VT_SAFEARRAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[154] ,VT_CARRAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[155] ,VT_USERDEFINED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[156] ,VT_LPSTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[157] ,VT_LPWSTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[158] ,VT_INT_PTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[159] ,VT_UINT_PTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[160] ,VT_FILETIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[161] ,VT_BLOB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[162] ,VT_STREAM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[163] ,VT_STORAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[164] ,VT_STREAMED_OBJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[165] ,VT_STORED_OBJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[166] ,VT_BLOB_OBJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[167] ,VT_CF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[168] ,VT_CLSID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[169] ,VT_VECTOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[170] ,VT_ARRAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[171] ,VT_BYREF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[172] ,VT_RESERVED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[173] ,VT_ILLEGAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[174] ,VT_ILLEGALMASKED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[175] ,VT_TYPEMASK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[176] ,TKIND_ENUM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[177] ,TKIND_RECORD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[178] ,TKIND_MODULE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[179] ,TKIND_INTERFACE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[180] ,TKIND_DISPATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[181] ,TKIND_COCLASS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[182] ,TKIND_ALIAS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[183] ,TKIND_UNION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[184] ,TKIND_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[185] ,CC_SAFECALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[186] ,CC_CDECL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[187] ,CC_PASCAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[188] ,CC_MACPASCAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[189] ,CC_STDCALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[190] ,CC_FPFASTCALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[191] ,CC_SYSCALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[192] ,CC_MPWCDECL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[193] ,CC_MPWPASCAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[194] ,CC_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[195] ,FUNC_VIRTUAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[196] ,FUNC_PUREVIRTUAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[197] ,FUNC_NONVIRTUAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[198] ,FUNC_STATIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[199] ,FUNC_DISPATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[200] ,INVOKE_FUNC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[201] ,INVOKE_PROPERTYGET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[202] ,INVOKE_PROPERTYPUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[203] ,INVOKE_PROPERTYPUTREF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[204] ,VAR_PERINSTANCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[205] ,VAR_STATIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[206] ,VAR_CONST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[207] ,VAR_DISPATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[208] ,IMPLTYPEFLAG_FDEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[209] ,IMPLTYPEFLAG_FSOURCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[210] ,IMPLTYPEFLAG_FRESTRICTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[211] ,IMPLTYPEFLAG_FDEFAULTVTABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[212] ,TYPEFLAG_FAPPOBJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[213] ,TYPEFLAG_FCANCREATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[214] ,TYPEFLAG_FLICENSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[215] ,TYPEFLAG_FPREDECLID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[216] ,TYPEFLAG_FHIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[217] ,TYPEFLAG_FCONTROL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[218] ,TYPEFLAG_FDUAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[219] ,TYPEFLAG_FNONEXTENSIBLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[220] ,TYPEFLAG_FOLEAUTOMATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[221] ,TYPEFLAG_FRESTRICTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[222] ,TYPEFLAG_FAGGREGATABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[223] ,TYPEFLAG_FREPLACEABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[224] ,TYPEFLAG_FDISPATCHABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[225] ,TYPEFLAG_FREVERSEBIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[226] ,FUNCFLAG_FRESTRICTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[227] ,FUNCFLAG_FSOURCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[228] ,FUNCFLAG_FBINDABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[229] ,FUNCFLAG_FREQUESTEDIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[230] ,FUNCFLAG_FDISPLAYBIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[231] ,FUNCFLAG_FDEFAULTBIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[232] ,FUNCFLAG_FHIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[233] ,FUNCFLAG_FUSESGETLASTERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[234] ,FUNCFLAG_FDEFAULTCOLLELEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[235] ,FUNCFLAG_FUIDEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[236] ,FUNCFLAG_FNONBROWSABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[237] ,FUNCFLAG_FREPLACEABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[238] ,FUNCFLAG_FIMMEDIATEBIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[239] ,VARFLAG_FREADONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[240] ,VARFLAG_FSOURCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[241] ,VARFLAG_FBINDABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[242] ,VARFLAG_FREQUESTEDIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[243] ,VARFLAG_FDISPLAYBIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[244] ,VARFLAG_FDEFAULTBIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[245] ,VARFLAG_FHIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[246] ,VARFLAG_FRESTRICTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[247] ,VARFLAG_FDEFAULTCOLLELEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[248] ,VARFLAG_FUIDEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[249] ,VARFLAG_FNONBROWSABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[250] ,VARFLAG_FREPLACEABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[251] ,VARFLAG_FIMMEDIATEBIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[252] ,DISPID_VALUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[253] ,DISPID_UNKNOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[254] ,DISPID_STARTENUM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[255] ,DISPID_PROPERTYPUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[256] ,DISPID_NEWENUM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[257] ,DISPID_EVALUATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[258] ,DISPID_CONSTRUCTOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[259] ,DISPID_DESTRUCTOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[260] ,DISPID_COLLECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[261] ,DISPID_WINDOWOBJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[262] ,DISPID_LOCATIONOBJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[263] ,DISPID_HISTORYOBJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[264] ,DISPID_NAVIGATOROBJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[265] ,DISPID_SECURITYCTX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[266] ,DISPID_AMBIENT_DLCONTROL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[267] ,DISPID_AMBIENT_USERAGENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[268] ,DISPID_SECURITYDOMAIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[269] ,DESCKIND_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[270] ,DESCKIND_FUNCDESC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[271] ,DESCKIND_VARDESC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[272] ,DESCKIND_TYPECOMP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[273] ,DESCKIND_IMPLICITAPPOBJ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[274] ,DESCKIND_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[275] ,SYS_WIN16));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[276] ,SYS_WIN32));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[277] ,SYS_MAC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[278] ,LIBFLAG_FRESTRICTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[279] ,LIBFLAG_FCONTROL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[280] ,LIBFLAG_FHIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[281] ,LIBFLAG_FHASDISKIMAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[282] ,STDOLE_MAJORVERNUM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[283] ,STDOLE_MINORVERNUM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[284] ,STDOLE_LCID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[285] ,VARIANT_NOVALUEPROP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[286] ,VAR_TIMEVALUEONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[287] ,VAR_DATEVALUEONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[288] ,MEMBERID_NIL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[289] ,ID_DEFAULTINST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[290] ,DISPATCH_METHOD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[291] ,DISPATCH_PROPERTYGET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[292] ,DISPATCH_PROPERTYPUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[293] ,DISPATCH_PROPERTYPUTREF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[294] ,DISPATCH_CONSTRUCT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[295] ,IDLFLAG_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[296] ,IDLFLAG_FIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[297] ,IDLFLAG_FOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[298] ,IDLFLAG_FLCID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[299] ,IDLFLAG_FRETVAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[300] ,PARAMFLAG_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[301] ,PARAMFLAG_FIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[302] ,PARAMFLAG_FOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[303] ,PARAMFLAG_FLCID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[304] ,PARAMFLAG_FRETVAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[305] ,PARAMFLAG_FOPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[306] ,PARAMFLAG_FHASDEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[307] ,OLEIVERB_PRIMARY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[308] ,OLEIVERB_SHOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[309] ,OLEIVERB_OPEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[310] ,OLEIVERB_HIDE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[311] ,OLEIVERB_UIACTIVATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[312] ,OLEIVERB_INPLACEACTIVATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[313] ,OLEIVERB_DISCARDUNDOSTATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[314] ,EMBDHLP_INPROC_HANDLER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[315] ,EMBDHLP_INPROC_SERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[316] ,EMBDHLP_CREATENOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[317] ,EMBDHLP_DELAYCREATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[318] ,OLECREATE_LEAVERUNNING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[319] ,UPDFCACHE_NODATACACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[320] ,UPDFCACHE_ONSAVECACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[321] ,UPDFCACHE_ONSTOPCACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[322] ,UPDFCACHE_NORMALCACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[323] ,UPDFCACHE_IFBLANK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[324] ,UPDFCACHE_ONLYIFBLANK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[325] ,UPDFCACHE_IFBLANKORONSAVECACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[326] ,UPDFCACHE_ALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[327] ,UPDFCACHE_ALLBUTNODATACACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[328] ,DISCARDCACHE_SAVEIFDIRTY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[329] ,DISCARDCACHE_NOSAVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[330] ,OLEGETMONIKER_ONLYIFTHERE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[331] ,OLEGETMONIKER_FORCEASSIGN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[332] ,OLEGETMONIKER_UNASSIGN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[333] ,OLEGETMONIKER_TEMPFORUSER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[334] ,OLEWHICHMK_CONTAINER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[335] ,OLEWHICHMK_OBJREL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[336] ,OLEWHICHMK_OBJFULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[337] ,USERCLASSTYPE_FULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[338] ,USERCLASSTYPE_SHORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[339] ,USERCLASSTYPE_APPNAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[340] ,OLEMISC_RECOMPOSEONRESIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[341] ,OLEMISC_ONLYICONIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[342] ,OLEMISC_INSERTNOTREPLACE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[343] ,OLEMISC_STATIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[344] ,OLEMISC_CANTLINKINSIDE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[345] ,OLEMISC_CANLINKBYOLE1));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[346] ,OLEMISC_ISLINKOBJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[347] ,OLEMISC_INSIDEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[348] ,OLEMISC_ACTIVATEWHENVISIBLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[349] ,OLEMISC_RENDERINGISDEVICEINDEPENDENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[350] ,OLEMISC_INVISIBLEATRUNTIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[351] ,OLEMISC_ALWAYSRUN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[352] ,OLEMISC_ACTSLIKEBUTTON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[353] ,OLEMISC_ACTSLIKELABEL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[354] ,OLEMISC_NOUIACTIVATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[355] ,OLEMISC_ALIGNABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[356] ,OLEMISC_SIMPLEFRAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[357] ,OLEMISC_SETCLIENTSITEFIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[358] ,OLEMISC_IMEMODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[359] ,OLEMISC_IGNOREACTIVATEWHENVISIBLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[360] ,OLEMISC_WANTSTOMENUMERGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[361] ,OLEMISC_SUPPORTSMULTILEVELUNDO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[362] ,OLECLOSE_SAVEIFDIRTY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[363] ,OLECLOSE_NOSAVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[364] ,OLECLOSE_PROMPTSAVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[365] ,OLERENDER_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[366] ,OLERENDER_DRAW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[367] ,OLERENDER_FORMAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[368] ,OLERENDER_ASIS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[369] ,OLEUPDATE_ALWAYS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[370] ,OLEUPDATE_ONCALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[371] ,OLELINKBIND_EVENIFCLASSDIFF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[372] ,BINDSPEED_INDEFINITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[373] ,BINDSPEED_MODERATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[374] ,BINDSPEED_IMMEDIATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[375] ,OLECONTF_EMBEDDINGS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[376] ,OLECONTF_LINKS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[377] ,OLECONTF_OTHERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[378] ,OLECONTF_ONLYUSER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[379] ,OLECONTF_ONLYIFRUNNING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[380] ,DROPEFFECT_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[381] ,DROPEFFECT_COPY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[382] ,DROPEFFECT_MOVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[383] ,DROPEFFECT_LINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[384] ,DROPEFFECT_SCROLL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[385] ,MK_ALT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[386] ,DD_DEFSCROLLINSET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[387] ,DD_DEFSCROLLDELAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[388] ,DD_DEFSCROLLINTERVAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[389] ,DD_DEFDRAGDELAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[390] ,DD_DEFDRAGMINDIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[391] ,OLEVERBATTRIB_NEVERDIRTIES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[392] ,OLEVERBATTRIB_ONCONTAINERMENU));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[393] ,CTL_E_ILLEGALFUNCTIONCALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[394] ,CTL_E_OVERFLOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[395] ,CTL_E_OUTOFMEMORY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[396] ,CTL_E_DIVISIONBYZERO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[397] ,CTL_E_OUTOFSTRINGSPACE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[398] ,CTL_E_OUTOFSTACKSPACE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[399] ,CTL_E_BADFILENAMEORNUMBER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[400] ,CTL_E_FILENOTFOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[401] ,CTL_E_BADFILEMODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[402] ,CTL_E_FILEALREADYOPEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[403] ,CTL_E_DEVICEIOERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[404] ,CTL_E_FILEALREADYEXISTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[405] ,CTL_E_BADRECORDLENGTH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[406] ,CTL_E_DISKFULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[407] ,CTL_E_BADRECORDNUMBER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[408] ,CTL_E_BADFILENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[409] ,CTL_E_TOOMANYFILES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[410] ,CTL_E_DEVICEUNAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[411] ,CTL_E_PERMISSIONDENIED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[412] ,CTL_E_DISKNOTREADY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[413] ,CTL_E_PATHFILEACCESSERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[414] ,CTL_E_PATHNOTFOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[415] ,CTL_E_INVALIDPATTERNSTRING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[416] ,CTL_E_INVALIDUSEOFNULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[417] ,CTL_E_INVALIDFILEFORMAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[418] ,CTL_E_INVALIDPROPERTYVALUE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[419] ,CTL_E_INVALIDPROPERTYARRAYINDEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[420] ,CTL_E_SETNOTSUPPORTEDATRUNTIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[421] ,CTL_E_SETNOTSUPPORTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[422] ,CTL_E_NEEDPROPERTYARRAYINDEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[423] ,CTL_E_SETNOTPERMITTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[424] ,CTL_E_GETNOTSUPPORTEDATRUNTIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[425] ,CTL_E_GETNOTSUPPORTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[426] ,CTL_E_PROPERTYNOTFOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[427] ,CTL_E_INVALIDCLIPBOARDFORMAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[428] ,CTL_E_INVALIDPICTURE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[429] ,CTL_E_PRINTERERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[430] ,CTL_E_CANTSAVEFILETOTEMP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[431] ,CTL_E_SEARCHTEXTNOTFOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[432] ,CTL_E_REPLACEMENTSTOOLONG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[433] ,CTL_E_CUSTOM_FIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[434] ,CLASS_E_NOTLICENSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[435] ,CONNECT_E_FIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[436] ,CONNECT_E_LAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[437] ,CONNECT_S_FIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[438] ,CONNECT_S_LAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[439] ,CONNECT_E_NOCONNECTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[440] ,CONNECT_E_ADVISELIMIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[441] ,CONNECT_E_CANNOTCONNECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[442] ,CONNECT_E_OVERRIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[443] ,SELFREG_E_FIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[444] ,SELFREG_E_LAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[445] ,SELFREG_S_FIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[446] ,SELFREG_S_LAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[447] ,SELFREG_E_TYPELIB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[448] ,SELFREG_E_CLASS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[449] ,PERPROP_E_FIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[450] ,PERPROP_E_LAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[451] ,PERPROP_S_FIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[452] ,PERPROP_S_LAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[453] ,PERPROP_E_NOPAGEAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[454] ,OLEIVERB_PROPERTIES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[455] ,VT_STREAMED_PROPSET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[456] ,VT_STORED_PROPSET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[457] ,VT_BLOB_PROPSET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[458] ,VT_VERBOSE_ENUM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[459] ,VT_COLOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[460] ,VT_XPOS_PIXELS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[461] ,VT_YPOS_PIXELS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[462] ,VT_XSIZE_PIXELS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[463] ,VT_YSIZE_PIXELS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[464] ,VT_XPOS_HIMETRIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[465] ,VT_YPOS_HIMETRIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[466] ,VT_XSIZE_HIMETRIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[467] ,VT_YSIZE_HIMETRIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[468] ,VT_TRISTATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[469] ,VT_OPTEXCLUSIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[470] ,VT_FONT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[471] ,VT_PICTURE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[472] ,VT_HANDLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[473] ,OCM__BASE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[474] ,OCM_COMMAND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[475] ,OCM_CTLCOLORBTN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[476] ,OCM_CTLCOLOREDIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[477] ,OCM_CTLCOLORDLG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[478] ,OCM_CTLCOLORLISTBOX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[479] ,OCM_CTLCOLORMSGBOX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[480] ,OCM_CTLCOLORSCROLLBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[481] ,OCM_CTLCOLORSTATIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[482] ,OCM_DRAWITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[483] ,OCM_MEASUREITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[484] ,OCM_DELETEITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[485] ,OCM_VKEYTOITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[486] ,OCM_CHARTOITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[487] ,OCM_COMPAREITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[488] ,OCM_HSCROLL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[489] ,OCM_VSCROLL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[490] ,OCM_PARENTNOTIFY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[491] ,OCM_NOTIFY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[492] ,CTRLINFO_EATS_RETURN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[493] ,CTRLINFO_EATS_ESCAPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[494] ,XFORMCOORDS_POSITION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[495] ,XFORMCOORDS_SIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[496] ,XFORMCOORDS_HIMETRICTOCONTAINER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[497] ,XFORMCOORDS_CONTAINERTOHIMETRIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[498] ,PROPPAGESTATUS_DIRTY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[499] ,PROPPAGESTATUS_VALIDATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[500] ,PROPPAGESTATUS_CLEAN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[501] ,PICTURE_SCALABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[502] ,PICTURE_TRANSPARENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[503] ,PICTYPE_UNINITIALIZED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[504] ,PICTYPE_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[505] ,PICTYPE_BITMAP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[506] ,PICTYPE_METAFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[507] ,PICTYPE_ICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[508] ,PICTYPE_ENHMETAFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[509] ,DISPID_AUTOSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[510] ,DISPID_BACKCOLOR));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const __ConstNames1 : array[0..205] of string = (
'DISPID_BACKSTYLE'
,'DISPID_BORDERCOLOR'
,'DISPID_BORDERSTYLE'
,'DISPID_BORDERWIDTH'
,'DISPID_DRAWMODE'
,'DISPID_DRAWSTYLE'
,'DISPID_DRAWWIDTH'
,'DISPID_FILLCOLOR'
,'DISPID_FILLSTYLE'
,'DISPID_FONT'
,'DISPID_FORECOLOR'
,'DISPID_ENABLED'
,'DISPID_HWND'
,'DISPID_TABSTOP'
,'DISPID_TEXT'
,'DISPID_CAPTION'
,'DISPID_BORDERVISIBLE'
,'DISPID_APPEARANCE'
,'DISPID_MOUSEPOINTER'
,'DISPID_MOUSEICON'
,'DISPID_PICTURE'
,'DISPID_VALID'
,'DISPID_READYSTATE'
,'DISPID_REFRESH'
,'DISPID_DOCLICK'
,'DISPID_ABOUTBOX'
,'DISPID_CLICK'
,'DISPID_DBLCLICK'
,'DISPID_KEYDOWN'
,'DISPID_KEYPRESS'
,'DISPID_KEYUP'
,'DISPID_MOUSEDOWN'
,'DISPID_MOUSEMOVE'
,'DISPID_MOUSEUP'
,'DISPID_ERROREVENT'
,'DISPID_READYSTATECHANGE'
,'DISPID_THIS'
,'DISPID_AMBIENT_BACKCOLOR'
,'DISPID_AMBIENT_DISPLAYNAME'
,'DISPID_AMBIENT_FONT'
,'DISPID_AMBIENT_FORECOLOR'
,'DISPID_AMBIENT_LOCALEID'
,'DISPID_AMBIENT_MESSAGEREFLECT'
,'DISPID_AMBIENT_SCALEUNITS'
,'DISPID_AMBIENT_TEXTALIGN'
,'DISPID_AMBIENT_USERMODE'
,'DISPID_AMBIENT_UIDEAD'
,'DISPID_AMBIENT_SHOWGRABHANDLES'
,'DISPID_AMBIENT_SHOWHATCHING'
,'DISPID_AMBIENT_DISPLAYASDEFAULT'
,'DISPID_AMBIENT_SUPPORTSMNEMONICS'
,'DISPID_AMBIENT_AUTOCLIP'
,'DISPID_AMBIENT_APPEARANCE'
,'DISPID_AMBIENT_PALETTE'
,'DISPID_AMBIENT_TRANSFERPRIORITY'
,'DISPID_Name'
,'DISPID_Delete'
,'DISPID_Object'
,'DISPID_Parent'
,'DISPID_FONT_NAME'
,'DISPID_FONT_SIZE'
,'DISPID_FONT_BOLD'
,'DISPID_FONT_ITALIC'
,'DISPID_FONT_UNDER'
,'DISPID_FONT_STRIKE'
,'DISPID_FONT_WEIGHT'
,'DISPID_FONT_CHARSET'
,'DISPID_PICT_HANDLE'
,'DISPID_PICT_HPAL'
,'DISPID_PICT_TYPE'
,'DISPID_PICT_WIDTH'
,'DISPID_PICT_HEIGHT'
,'DISPID_PICT_RENDER'
,'PID_DICTIONARY'
,'PID_CODEPAGE'
,'PID_FIRST_USABLE'
,'PID_FIRST_NAME_DEFAULT'
,'PID_LOCALE'
,'PID_MODIFY_TIME'
,'PID_SECURITY'
,'PID_ILLEGAL'
,'PIDSI_TITLE'
,'PIDSI_SUBJECT'
,'PIDSI_AUTHOR'
,'PIDSI_KEYWORDS'
,'PIDSI_COMMENTS'
,'PIDSI_TEMPLATE'
,'PIDSI_LASTAUTHOR'
,'PIDSI_REVNUMBER'
,'PIDSI_EDITTIME'
,'PIDSI_LASTPRINTED'
,'PIDSI_CREATE_DTM'
,'PIDSI_LASTSAVE_DTM'
,'PIDSI_PAGECOUNT'
,'PIDSI_WORDCOUNT'
,'PIDSI_CHARCOUNT'
,'PIDSI_THUMBNAIL'
,'PIDSI_APPNAME'
,'PIDSI_DOC_SECURITY'
,'PRSPEC_INVALID'
,'PRSPEC_LPWSTR'
,'PRSPEC_PROPID'
,'triUnchecked'
,'triChecked'
,'triGray'
,'REGKIND_DEFAULT'
,'REGKIND_REGISTER'
,'REGKIND_NONE'
,'PRINTFLAG_MAYBOTHERUSER'
,'PRINTFLAG_PROMPTUSER'
,'PRINTFLAG_USERMAYCHANGEPRINTER'
,'PRINTFLAG_RECOMPOSETODEVICE'
,'PRINTFLAG_DONTACTUALLYPRINT'
,'PRINTFLAG_FORCEPROPERTIES'
,'PRINTFLAG_PRINTTOFILE'
,'PAGESET_TOLASTPAGE'
,'OLECMDIDF_REFRESH_NORMAL'
,'OLECMDIDF_REFRESH_IFEXPIRED'
,'OLECMDIDF_REFRESH_CONTINUE'
,'OLECMDIDF_REFRESH_COMPLETELY'
,'OLECMDF_SUPPORTED'
,'OLECMDF_ENABLED'
,'OLECMDF_LATCHED'
,'OLECMDF_NINCHED'
,'OLECMDTEXTF_NONE'
,'OLECMDTEXTF_NAME'
,'OLECMDTEXTF_STATUS'
,'OLECMDEXECOPT_DODEFAULT'
,'OLECMDEXECOPT_PROMPTUSER'
,'OLECMDEXECOPT_DONTPROMPTUSER'
,'OLECMDEXECOPT_SHOWHELP'
,'OLECMDID_OPEN'
,'OLECMDID_NEW'
,'OLECMDID_SAVE'
,'OLECMDID_SAVEAS'
,'OLECMDID_SAVECOPYAS'
,'OLECMDID_PRINT'
,'OLECMDID_PRINTPREVIEW'
,'OLECMDID_PAGESETUP'
,'OLECMDID_SPELL'
,'OLECMDID_PROPERTIES'
,'OLECMDID_CUT'
,'OLECMDID_COPY'
,'OLECMDID_PASTE'
,'OLECMDID_PASTESPECIAL'
,'OLECMDID_UNDO'
,'OLECMDID_REDO'
,'OLECMDID_SELECTALL'
,'OLECMDID_CLEARSELECTION'
,'OLECMDID_ZOOM'
,'OLECMDID_GETZOOMRANGE'
,'OLECMDID_UPDATECOMMANDS'
,'OLECMDID_REFRESH'
,'OLECMDID_STOP'
,'OLECMDID_HIDETOOLBARS'
,'OLECMDID_SETPROGRESSMAX'
,'OLECMDID_SETPROGRESSPOS'
,'OLECMDID_SETPROGRESSTEXT'
,'OLECMDID_SETTITLE'
,'OLECMDID_SETDOWNLOADSTATE'
,'OLECMDID_STOPDOWNLOAD'
,'OLECMDERR_E_FIRST'
,'OLECMDERR_E_NOTSUPPORTED'
,'OLECMDERR_E_DISABLED'
,'OLECMDERR_E_NOHELP'
,'OLECMDERR_E_CANCELED'
,'OLECMDERR_E_UNKNOWNGROUP'
,'MSOCMDERR_E_FIRST'
,'MSOCMDERR_E_NOTSUPPORTED'
,'MSOCMDERR_E_DISABLED'
,'MSOCMDERR_E_NOHELP'
,'MSOCMDERR_E_CANCELED'
,'MSOCMDERR_E_UNKNOWNGROUP'
,'INTERFACESAFE_FOR_UNTRUSTED_CALLER'
,'INTERFACESAFE_FOR_UNTRUSTED_DATA'
,'fdexNameCaseSensitive'
,'fdexNameEnsure'
,'fdexNameImplicit'
,'fdexNameCaseInsensitive'
,'fdexPropCanGet'
,'fdexPropCannotGet'
,'fdexPropCanPut'
,'fdexPropCannotPut'
,'fdexPropCanPutRef'
,'fdexPropCannotPutRef'
,'fdexPropNoSideEffects'
,'fdexPropDynamicType'
,'fdexPropCanCall'
,'fdexPropCannotCall'
,'fdexPropCanConstruct'
,'fdexPropCannotConstruct'
,'fdexPropCanSourceEvents'
,'fdexPropCannotSourceEvents'
,'fdexPropCanAll'
,'fdexPropCannotAll'
,'fdexPropExtraAll'
,'fdexPropAll'
,'fdexEnumDefault'
,'fdexEnumAll'
,'COINIT_MULTITHREADED'
,'COINIT_APARTMENTTHREADED'
,'COINIT_DISABLE_OLE1DDE'
,'COINIT_SPEED_OVER_MEMORY'
,'ACTIVEOBJECT_STRONG'
,'ACTIVEOBJECT_WEAK'
,'PROPSETHDR_OSVERSION_UNKNOWN'
);
var __RegisteredConstsList1 : TList;
procedure __RegisterConsts1;
begin
__RegisteredConstsList1 := TList.Create;
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[0] ,DISPID_BACKSTYLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[1] ,DISPID_BORDERCOLOR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[2] ,DISPID_BORDERSTYLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[3] ,DISPID_BORDERWIDTH));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[4] ,DISPID_DRAWMODE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[5] ,DISPID_DRAWSTYLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[6] ,DISPID_DRAWWIDTH));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[7] ,DISPID_FILLCOLOR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[8] ,DISPID_FILLSTYLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[9] ,DISPID_FONT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[10] ,DISPID_FORECOLOR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[11] ,DISPID_ENABLED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[12] ,DISPID_HWND));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[13] ,DISPID_TABSTOP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[14] ,DISPID_TEXT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[15] ,DISPID_CAPTION));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[16] ,DISPID_BORDERVISIBLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[17] ,DISPID_APPEARANCE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[18] ,DISPID_MOUSEPOINTER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[19] ,DISPID_MOUSEICON));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[20] ,DISPID_PICTURE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[21] ,DISPID_VALID));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[22] ,DISPID_READYSTATE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[23] ,DISPID_REFRESH));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[24] ,DISPID_DOCLICK));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[25] ,DISPID_ABOUTBOX));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[26] ,DISPID_CLICK));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[27] ,DISPID_DBLCLICK));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[28] ,DISPID_KEYDOWN));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[29] ,DISPID_KEYPRESS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[30] ,DISPID_KEYUP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[31] ,DISPID_MOUSEDOWN));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[32] ,DISPID_MOUSEMOVE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[33] ,DISPID_MOUSEUP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[34] ,DISPID_ERROREVENT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[35] ,DISPID_READYSTATECHANGE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[36] ,DISPID_THIS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[37] ,DISPID_AMBIENT_BACKCOLOR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[38] ,DISPID_AMBIENT_DISPLAYNAME));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[39] ,DISPID_AMBIENT_FONT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[40] ,DISPID_AMBIENT_FORECOLOR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[41] ,DISPID_AMBIENT_LOCALEID));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[42] ,DISPID_AMBIENT_MESSAGEREFLECT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[43] ,DISPID_AMBIENT_SCALEUNITS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[44] ,DISPID_AMBIENT_TEXTALIGN));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[45] ,DISPID_AMBIENT_USERMODE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[46] ,DISPID_AMBIENT_UIDEAD));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[47] ,DISPID_AMBIENT_SHOWGRABHANDLES));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[48] ,DISPID_AMBIENT_SHOWHATCHING));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[49] ,DISPID_AMBIENT_DISPLAYASDEFAULT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[50] ,DISPID_AMBIENT_SUPPORTSMNEMONICS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[51] ,DISPID_AMBIENT_AUTOCLIP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[52] ,DISPID_AMBIENT_APPEARANCE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[53] ,DISPID_AMBIENT_PALETTE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[54] ,DISPID_AMBIENT_TRANSFERPRIORITY));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[55] ,DISPID_Name));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[56] ,DISPID_Delete));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[57] ,DISPID_Object));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[58] ,DISPID_Parent));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[59] ,DISPID_FONT_NAME));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[60] ,DISPID_FONT_SIZE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[61] ,DISPID_FONT_BOLD));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[62] ,DISPID_FONT_ITALIC));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[63] ,DISPID_FONT_UNDER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[64] ,DISPID_FONT_STRIKE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[65] ,DISPID_FONT_WEIGHT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[66] ,DISPID_FONT_CHARSET));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[67] ,DISPID_PICT_HANDLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[68] ,DISPID_PICT_HPAL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[69] ,DISPID_PICT_TYPE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[70] ,DISPID_PICT_WIDTH));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[71] ,DISPID_PICT_HEIGHT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[72] ,DISPID_PICT_RENDER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[73] ,PID_DICTIONARY));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[74] ,PID_CODEPAGE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[75] ,PID_FIRST_USABLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[76] ,PID_FIRST_NAME_DEFAULT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[77] ,PID_LOCALE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[78] ,PID_MODIFY_TIME));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[79] ,PID_SECURITY));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[80] ,PID_ILLEGAL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[81] ,PIDSI_TITLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[82] ,PIDSI_SUBJECT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[83] ,PIDSI_AUTHOR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[84] ,PIDSI_KEYWORDS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[85] ,PIDSI_COMMENTS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[86] ,PIDSI_TEMPLATE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[87] ,PIDSI_LASTAUTHOR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[88] ,PIDSI_REVNUMBER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[89] ,PIDSI_EDITTIME));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[90] ,PIDSI_LASTPRINTED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[91] ,PIDSI_CREATE_DTM));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[92] ,PIDSI_LASTSAVE_DTM));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[93] ,PIDSI_PAGECOUNT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[94] ,PIDSI_WORDCOUNT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[95] ,PIDSI_CHARCOUNT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[96] ,PIDSI_THUMBNAIL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[97] ,PIDSI_APPNAME));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[98] ,PIDSI_DOC_SECURITY));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[99] ,PRSPEC_INVALID));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[100] ,PRSPEC_LPWSTR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[101] ,PRSPEC_PROPID));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[102] ,triUnchecked));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[103] ,triChecked));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[104] ,triGray));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[105] ,REGKIND_DEFAULT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[106] ,REGKIND_REGISTER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[107] ,REGKIND_NONE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[108] ,PRINTFLAG_MAYBOTHERUSER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[109] ,PRINTFLAG_PROMPTUSER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[110] ,PRINTFLAG_USERMAYCHANGEPRINTER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[111] ,PRINTFLAG_RECOMPOSETODEVICE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[112] ,PRINTFLAG_DONTACTUALLYPRINT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[113] ,PRINTFLAG_FORCEPROPERTIES));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[114] ,PRINTFLAG_PRINTTOFILE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[115] ,PAGESET_TOLASTPAGE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[116] ,OLECMDIDF_REFRESH_NORMAL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[117] ,OLECMDIDF_REFRESH_IFEXPIRED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[118] ,OLECMDIDF_REFRESH_CONTINUE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[119] ,OLECMDIDF_REFRESH_COMPLETELY));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[120] ,OLECMDF_SUPPORTED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[121] ,OLECMDF_ENABLED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[122] ,OLECMDF_LATCHED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[123] ,OLECMDF_NINCHED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[124] ,OLECMDTEXTF_NONE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[125] ,OLECMDTEXTF_NAME));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[126] ,OLECMDTEXTF_STATUS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[127] ,OLECMDEXECOPT_DODEFAULT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[128] ,OLECMDEXECOPT_PROMPTUSER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[129] ,OLECMDEXECOPT_DONTPROMPTUSER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[130] ,OLECMDEXECOPT_SHOWHELP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[131] ,OLECMDID_OPEN));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[132] ,OLECMDID_NEW));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[133] ,OLECMDID_SAVE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[134] ,OLECMDID_SAVEAS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[135] ,OLECMDID_SAVECOPYAS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[136] ,OLECMDID_PRINT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[137] ,OLECMDID_PRINTPREVIEW));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[138] ,OLECMDID_PAGESETUP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[139] ,OLECMDID_SPELL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[140] ,OLECMDID_PROPERTIES));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[141] ,OLECMDID_CUT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[142] ,OLECMDID_COPY));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[143] ,OLECMDID_PASTE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[144] ,OLECMDID_PASTESPECIAL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[145] ,OLECMDID_UNDO));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[146] ,OLECMDID_REDO));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[147] ,OLECMDID_SELECTALL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[148] ,OLECMDID_CLEARSELECTION));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[149] ,OLECMDID_ZOOM));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[150] ,OLECMDID_GETZOOMRANGE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[151] ,OLECMDID_UPDATECOMMANDS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[152] ,OLECMDID_REFRESH));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[153] ,OLECMDID_STOP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[154] ,OLECMDID_HIDETOOLBARS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[155] ,OLECMDID_SETPROGRESSMAX));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[156] ,OLECMDID_SETPROGRESSPOS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[157] ,OLECMDID_SETPROGRESSTEXT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[158] ,OLECMDID_SETTITLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[159] ,OLECMDID_SETDOWNLOADSTATE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[160] ,OLECMDID_STOPDOWNLOAD));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[161] ,OLECMDERR_E_FIRST));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[162] ,OLECMDERR_E_NOTSUPPORTED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[163] ,OLECMDERR_E_DISABLED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[164] ,OLECMDERR_E_NOHELP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[165] ,OLECMDERR_E_CANCELED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[166] ,OLECMDERR_E_UNKNOWNGROUP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[167] ,MSOCMDERR_E_FIRST));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[168] ,MSOCMDERR_E_NOTSUPPORTED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[169] ,MSOCMDERR_E_DISABLED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[170] ,MSOCMDERR_E_NOHELP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[171] ,MSOCMDERR_E_CANCELED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[172] ,MSOCMDERR_E_UNKNOWNGROUP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[173] ,INTERFACESAFE_FOR_UNTRUSTED_CALLER));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[174] ,INTERFACESAFE_FOR_UNTRUSTED_DATA));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[175] ,fdexNameCaseSensitive));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[176] ,fdexNameEnsure));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[177] ,fdexNameImplicit));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[178] ,fdexNameCaseInsensitive));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[179] ,fdexPropCanGet));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[180] ,fdexPropCannotGet));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[181] ,fdexPropCanPut));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[182] ,fdexPropCannotPut));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[183] ,fdexPropCanPutRef));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[184] ,fdexPropCannotPutRef));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[185] ,fdexPropNoSideEffects));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[186] ,fdexPropDynamicType));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[187] ,fdexPropCanCall));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[188] ,fdexPropCannotCall));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[189] ,fdexPropCanConstruct));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[190] ,fdexPropCannotConstruct));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[191] ,fdexPropCanSourceEvents));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[192] ,fdexPropCannotSourceEvents));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[193] ,fdexPropCanAll));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[194] ,fdexPropCannotAll));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[195] ,fdexPropExtraAll));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[196] ,fdexPropAll));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[197] ,fdexEnumDefault));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[198] ,fdexEnumAll));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[199] ,COINIT_MULTITHREADED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[200] ,COINIT_APARTMENTTHREADED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[201] ,COINIT_DISABLE_OLE1DDE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[202] ,COINIT_SPEED_OVER_MEMORY));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[203] ,ACTIVEOBJECT_STRONG));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[204] ,ACTIVEOBJECT_WEAK));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[205] ,PROPSETHDR_OSVERSION_UNKNOWN));
end;

procedure __UnregisterConsts1;
var i : integer;
begin
__RegisteredConstsList1.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..309] of string = (
'_COSERVERINFO'
,'_OBJECTID'
,'_tagOLECMD'
,'_tagOLECMDTEXT'
,'ARRAYDESC'
,'BIND_OPTS'
,'BINDPTR'
,'BLOB'
,'BORDERWIDTHS'
,'CABOOL'
,'CABSTR'
,'CACLIPDATA'
,'CACLSID'
,'CACY'
,'CADATE'
,'CADBL'
,'CADWORD'
,'CAFILETIME'
,'CAFLT'
,'CAH'
,'CAI'
,'CAL'
,'CALPOLESTR'
,'CALPSTR'
,'CALPWSTR'
,'CAPROPVARIANT'
,'CASCODE'
,'CAUB'
,'CAUH'
,'CAUI'
,'CAUL'
,'CAUUID'
,'CLIPDATA'
,'CONNECTDATA'
,'CONTROLINFO'
,'COSERVERINFO'
,'CUSTDATA'
,'CUSTDATAITEM'
,'DECIMAL'
,'DISPPARAMS'
,'DVTARGETDEVICE'
,'ELEMDESC'
,'EXCEPINFO'
,'FMTID'
,'FONTDESC'
,'FUNCDESC'
,'IDLDESC'
,'INTERFACEDATA'
,'INTERFACEINFO'
,'LICINFO'
,'METHODDATA'
,'MULTI_QI'
,'OBJECTDESCRIPTOR'
,'OBJECTID'
,'OCPFIPARAMS'
,'OLECMD'
,'OLECMDTEXT'
,'OLEINPLACEFRAMEINFO'
,'OLEMENUGROUPWIDTHS'
,'OLEVERB'
,'PAGERANGE'
,'PAGESET'
,'PARAMDATA'
,'PARAMDESC'
,'PARAMDESCEX'
,'PICTDESC'
,'POINTF'
,'PROPPAGEINFO'
,'PROPSPEC'
,'PROPVARIANT'
,'RemSTGMEDIUM'
,'RPCOLEMESSAGE'
,'SAFEARRAY'
,'SAFEARRAYBOUND'
,'SOLE_AUTHENTICATION_SERVICE'
,'STATDATA'
,'STATPROPSETSTG'
,'STATPROPSTG'
,'STGMEDIUM'
,'tagARRAYDESC'
,'tagBIND_OPTS'
,'tagBINDPTR'
,'tagBLOB'
,'tagCABOOL'
,'tagCABSTR'
,'tagCACLIPDATA'
,'tagCACLSID'
,'tagCACY'
,'tagCADATE'
,'tagCADBL'
,'tagCADWORD'
,'tagCAFILETIME'
,'tagCAFLT'
,'tagCAH'
,'tagCAI'
,'tagCAL'
,'tagCALPOLESTR'
,'tagCALPSTR'
,'tagCALPWSTR'
,'tagCAPROPVARIANT'
,'tagCASCODE'
,'tagCAUB'
,'tagCAUH'
,'tagCAUI'
,'tagCAUL'
,'tagCAUUID'
,'tagCLIPDATA'
,'tagCONNECTDATA'
,'tagCONTROLINFO'
,'tagCUSTDATA'
,'tagCUSTDATAITEM'
,'tagDEC'
,'tagDISPPARAMS'
,'tagDVTARGETDEVICE'
,'tagELEMDESC'
,'tagEXCEPINFO'
,'tagFONTDESC'
,'tagFORMATETC'
,'tagFUNCDESC'
,'tagIDLDESC'
,'tagINTERFACEDATA'
,'tagINTERFACEINFO'
,'tagLICINFO'
,'tagMETHODDATA'
,'tagMULTI_QI'
,'tagOBJECTDESCRIPTOR'
,'tagOCPFIPARAMS'
,'tagOIFI'
,'tagOleMenuGroupWidths'
,'tagOLEVERB'
,'tagPAGERANGE'
,'tagPAGESET'
,'tagPARAMDATA'
,'tagPARAMDESC'
,'tagPARAMDESCEX'
,'tagPICTDESC'
,'tagPOINTF'
,'tagPROPPAGEINFO'
,'tagPROPSPEC'
,'tagPROPVARIANT'
,'tagQACONTAINER'
,'tagQACONTROL'
,'tagRemSTGMEDIUM'
,'tagRPCOLEMESSAGE'
,'tagSAFEARRAY'
,'tagSAFEARRAYBOUND'
,'tagSOLE_AUTHENTICATION_SERVICE'
,'tagSTATDATA'
,'tagSTATPROPSETSTG'
,'tagSTATPROPSTG'
,'tagSTATSTG'
,'tagSTGMEDIUM'
,'tagTLIBATTR'
,'tagTYPEATTR'
,'tagTYPEDESC'
,'tagVARDESC'
,'tagVARIANT'
,'TArrayDesc'
,'TBindOpts'
,'TBindPtr'
,'TBlob'
,'TBorderWidths'
,'TCABOOL'
,'TCABSTR'
,'TCACLIPDATA'
,'TCACLSID'
,'TCACY'
,'TCADATE'
,'TCADBL'
,'TCAFILETIME'
,'TCAFLT'
,'TCAGUID'
,'TCAH'
,'TCAI'
,'TCAL'
,'TCALongint'
,'TCALPSTR'
,'TCALPWSTR'
,'TCAPOleStr'
,'TCAPROPVARIANT'
,'TCASCODE'
,'TCATEGORYINFO'
,'TCAUB'
,'TCAUH'
,'TCAUI'
,'TCAUL'
,'TClipData'
,'TConnectData'
,'TControlInfo'
,'TCoServerInfo'
,'TCustData'
,'TCustDataItem'
,'TDecimal'
,'TDispParams'
,'TDVTargetDevice'
,'TElemDesc'
,'TExcepInfo'
,'TFmtID'
,'TFontDesc'
,'TFuncDesc'
,'TIDLDesc'
,'TInterfaceData'
,'TInterfaceInfo'
,'TLIBATTR'
,'TLicInfo'
,'TLinkSrcDescriptor'
,'TMethodData'
,'TMultiQI'
,'TObjectDescriptor'
,'TObjectID'
,'TOCPFIParams'
,'TOleCmd'
,'TOleCmdText'
,'TOleInPlaceFrameInfo'
,'TOleMenuGroupWidths'
,'TOleVerb'
,'TPageRange'
,'TPageSet'
,'TParamData'
,'TParamDesc'
,'TParamDescEx'
,'TPictDesc'
,'TPointF'
,'TPropPageInfo'
,'TPropSpec'
,'TPropVariant'
,'TQaContainer'
,'TQaControl'
,'TRemStgMedium'
,'TRpcOleMessage'
,'TSafeArray'
,'TSafeArrayBound'
,'TSOleAuthenticationService'
,'TStatData'
,'TStatPropSetStg'
,'TStatPropStg'
,'TStgMedium'
,'TTextMetricOle'
,'TTLibAttr'
,'TTypeAttr'
,'TTypeDesc'
,'TVarDesc'
,'TVariantArg'
,'TYPEATTR'
,'TYPEDESC'
,'VARDESC'
,'Succeeded'
,'Failed'
,'ResultCode'
,'ResultFacility'
,'ResultSeverity'
,'MakeResult'
,'IsEqualGUID'
,'CoBuildVersion'
,'CoInitialize'
,'CoUninitialize'
,'CoGetCurrentProcess'
,'CoRevokeMallocSpy'
,'CoInitializeEx'
,'CoRevokeClassObject'
,'CoResumeClassObjects'
,'CoSuspendClassObjects'
,'CoAddRefServerProcess'
,'CoReleaseServerProcess'
,'CoFreeLibrary'
,'CoFreeAllLibraries'
,'CoFreeUnusedLibraries'
,'CoImpersonateClient'
,'CoRevertToSelf'
,'CoCreateGuid'
,'CoFileTimeToDosDateTime'
,'CoDosDateTimeToFileTime'
,'CoFileTimeNow'
,'CoTaskMemAlloc'
,'CoTaskMemRealloc'
,'CoTaskMemFree'
,'DosDateTimeToVariantTime'
,'VariantTimeToDosDateTime'
,'SystemTimeToVariantTime'
,'VariantTimeToSystemTime'
,'VariantInit'
,'VariantClear'
,'VariantCopy'
,'VariantCopyInd'
,'VariantChangeType'
,'VariantChangeTypeEx'
,'WHashValOfLHashVal'
,'IsHashValCompatible'
,'QueryPathOfRegTypeLib'
,'UnRegisterTypeLib'
,'DispGetParam'
,'DispCallFunc'
,'RevokeActiveObject'
,'OaBuildVersion'
,'ClearCustData'
,'OleBuildVersion'
,'OleInitialize'
,'OleUninitialize'
,'RevokeDragDrop'
,'OleFlushClipboard'
,'OleCreateMenuDescriptor'
,'OleDestroyMenuDescriptor'
,'OleDuplicateData'
,'ReleaseStgMedium'
,'OleCreatePropertyFrameIndirect'
,'OleTranslateColor'
,'OleIconToCursor'
,'PROPSETHDR_OSVER_KIND'
,'PROPSETHDR_OSVER_MAJOR'
,'PROPSETHDR_OSVER_MINOR'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(__COSERVERINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(__OBJECTID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(__tagOLECMD_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[3],Addr(__tagOLECMDTEXT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[4],Addr(_ARRAYDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[5],Addr(_BIND_OPTS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[6],Addr(_BINDPTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[7],Addr(_BLOB_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[8],Addr(_BORDERWIDTHS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[9],Addr(_CABOOL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[10],Addr(_CABSTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[11],Addr(_CACLIPDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[12],Addr(_CACLSID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[13],Addr(_CACY_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[14],Addr(_CADATE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[15],Addr(_CADBL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[16],Addr(_CADWORD_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[17],Addr(_CAFILETIME_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[18],Addr(_CAFLT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[19],Addr(_CAH_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[20],Addr(_CAI_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[21],Addr(_CAL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[22],Addr(_CALPOLESTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[23],Addr(_CALPSTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[24],Addr(_CALPWSTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[25],Addr(_CAPROPVARIANT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[26],Addr(_CASCODE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[27],Addr(_CAUB_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[28],Addr(_CAUH_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[29],Addr(_CAUI_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[30],Addr(_CAUL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[31],Addr(_CAUUID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[32],Addr(_CLIPDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[33],Addr(_CONNECTDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[34],Addr(_CONTROLINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[35],Addr(_COSERVERINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[36],Addr(_CUSTDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[37],Addr(_CUSTDATAITEM_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[38],Addr(_DECIMAL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[39],Addr(_DISPPARAMS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[40],Addr(_DVTARGETDEVICE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[41],Addr(_ELEMDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[42],Addr(_EXCEPINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[43],Addr(_FMTID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[44],Addr(_FONTDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[45],Addr(_FUNCDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[46],Addr(_IDLDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[47],Addr(_INTERFACEDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[48],Addr(_INTERFACEINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[49],Addr(_LICINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[50],Addr(_METHODDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[51],Addr(_MULTI_QI_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[52],Addr(_OBJECTDESCRIPTOR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[53],Addr(_OBJECTID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[54],Addr(_OCPFIPARAMS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[55],Addr(_OLECMD_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[56],Addr(_OLECMDTEXT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[57],Addr(_OLEINPLACEFRAMEINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[58],Addr(_OLEMENUGROUPWIDTHS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[59],Addr(_OLEVERB_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[60],Addr(_PAGERANGE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[61],Addr(_PAGESET_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[62],Addr(_PARAMDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[63],Addr(_PARAMDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[64],Addr(_PARAMDESCEX_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[65],Addr(_PICTDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[66],Addr(_POINTF_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[67],Addr(_PROPPAGEINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[68],Addr(_PROPSPEC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[69],Addr(_PROPVARIANT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[70],Addr(_RemSTGMEDIUM_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[71],Addr(_RPCOLEMESSAGE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[72],Addr(_SAFEARRAY_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[73],Addr(_SAFEARRAYBOUND_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[74],Addr(_SOLE_AUTHENTICATION_SERVICE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[75],Addr(_STATDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[76],Addr(_STATPROPSETSTG_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[77],Addr(_STATPROPSTG_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[78],Addr(_STGMEDIUM_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[79],Addr(_tagARRAYDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[80],Addr(_tagBIND_OPTS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[81],Addr(_tagBINDPTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[82],Addr(_tagBLOB_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[83],Addr(_tagCABOOL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[84],Addr(_tagCABSTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[85],Addr(_tagCACLIPDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[86],Addr(_tagCACLSID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[87],Addr(_tagCACY_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[88],Addr(_tagCADATE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[89],Addr(_tagCADBL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[90],Addr(_tagCADWORD_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[91],Addr(_tagCAFILETIME_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[92],Addr(_tagCAFLT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[93],Addr(_tagCAH_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[94],Addr(_tagCAI_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[95],Addr(_tagCAL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[96],Addr(_tagCALPOLESTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[97],Addr(_tagCALPSTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[98],Addr(_tagCALPWSTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[99],Addr(_tagCAPROPVARIANT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[100],Addr(_tagCASCODE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[101],Addr(_tagCAUB_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[102],Addr(_tagCAUH_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[103],Addr(_tagCAUI_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[104],Addr(_tagCAUL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[105],Addr(_tagCAUUID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[106],Addr(_tagCLIPDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[107],Addr(_tagCONNECTDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[108],Addr(_tagCONTROLINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[109],Addr(_tagCUSTDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[110],Addr(_tagCUSTDATAITEM_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[111],Addr(_tagDEC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[112],Addr(_tagDISPPARAMS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[113],Addr(_tagDVTARGETDEVICE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[114],Addr(_tagELEMDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[115],Addr(_tagEXCEPINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[116],Addr(_tagFONTDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[117],Addr(_tagFORMATETC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[118],Addr(_tagFUNCDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[119],Addr(_tagIDLDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[120],Addr(_tagINTERFACEDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[121],Addr(_tagINTERFACEINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[122],Addr(_tagLICINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[123],Addr(_tagMETHODDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[124],Addr(_tagMULTI_QI_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[125],Addr(_tagOBJECTDESCRIPTOR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[126],Addr(_tagOCPFIPARAMS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[127],Addr(_tagOIFI_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[128],Addr(_tagOleMenuGroupWidths_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[129],Addr(_tagOLEVERB_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[130],Addr(_tagPAGERANGE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[131],Addr(_tagPAGESET_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[132],Addr(_tagPARAMDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[133],Addr(_tagPARAMDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[134],Addr(_tagPARAMDESCEX_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[135],Addr(_tagPICTDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[136],Addr(_tagPOINTF_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[137],Addr(_tagPROPPAGEINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[138],Addr(_tagPROPSPEC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[139],Addr(_tagPROPVARIANT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[140],Addr(_tagQACONTAINER_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[141],Addr(_tagQACONTROL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[142],Addr(_tagRemSTGMEDIUM_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[143],Addr(_tagRPCOLEMESSAGE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[144],Addr(_tagSAFEARRAY_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[145],Addr(_tagSAFEARRAYBOUND_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[146],Addr(_tagSOLE_AUTHENTICATION_SERVICE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[147],Addr(_tagSTATDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[148],Addr(_tagSTATPROPSETSTG_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[149],Addr(_tagSTATPROPSTG_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[150],Addr(_tagSTATSTG_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[151],Addr(_tagSTGMEDIUM_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[152],Addr(_tagTLIBATTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[153],Addr(_tagTYPEATTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[154],Addr(_tagTYPEDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[155],Addr(_tagVARDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[156],Addr(_tagVARIANT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[157],Addr(_TArrayDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[158],Addr(_TBindOpts_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[159],Addr(_TBindPtr_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[160],Addr(_TBlob_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[161],Addr(_TBorderWidths_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[162],Addr(_TCABOOL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[163],Addr(_TCABSTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[164],Addr(_TCACLIPDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[165],Addr(_TCACLSID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[166],Addr(_TCACY_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[167],Addr(_TCADATE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[168],Addr(_TCADBL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[169],Addr(_TCAFILETIME_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[170],Addr(_TCAFLT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[171],Addr(_TCAGUID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[172],Addr(_TCAH_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[173],Addr(_TCAI_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[174],Addr(_TCAL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[175],Addr(_TCALongint_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[176],Addr(_TCALPSTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[177],Addr(_TCALPWSTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[178],Addr(_TCAPOleStr_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[179],Addr(_TCAPROPVARIANT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[180],Addr(_TCASCODE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[181],Addr(_TCATEGORYINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[182],Addr(_TCAUB_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[183],Addr(_TCAUH_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[184],Addr(_TCAUI_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[185],Addr(_TCAUL_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[186],Addr(_TClipData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[187],Addr(_TConnectData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[188],Addr(_TControlInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[189],Addr(_TCoServerInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[190],Addr(_TCustData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[191],Addr(_TCustDataItem_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[192],Addr(_TDecimal_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[193],Addr(_TDispParams_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[194],Addr(_TDVTargetDevice_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[195],Addr(_TElemDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[196],Addr(_TExcepInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[197],Addr(_TFmtID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[198],Addr(_TFontDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[199],Addr(_TFuncDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[200],Addr(_TIDLDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[201],Addr(_TInterfaceData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[202],Addr(_TInterfaceInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[203],Addr(_TLIBATTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[204],Addr(_TLicInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[205],Addr(_TLinkSrcDescriptor_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[206],Addr(_TMethodData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[207],Addr(_TMultiQI_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[208],Addr(_TObjectDescriptor_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[209],Addr(_TObjectID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[210],Addr(_TOCPFIParams_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[211],Addr(_TOleCmd_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[212],Addr(_TOleCmdText_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[213],Addr(_TOleInPlaceFrameInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[214],Addr(_TOleMenuGroupWidths_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[215],Addr(_TOleVerb_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[216],Addr(_TPageRange_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[217],Addr(_TPageSet_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[218],Addr(_TParamData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[219],Addr(_TParamDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[220],Addr(_TParamDescEx_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[221],Addr(_TPictDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[222],Addr(_TPointF_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[223],Addr(_TPropPageInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[224],Addr(_TPropSpec_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[225],Addr(_TPropVariant_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[226],Addr(_TQaContainer_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[227],Addr(_TQaControl_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[228],Addr(_TRemStgMedium_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[229],Addr(_TRpcOleMessage_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[230],Addr(_TSafeArray_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[231],Addr(_TSafeArrayBound_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[232],Addr(_TSOleAuthenticationService_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[233],Addr(_TStatData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[234],Addr(_TStatPropSetStg_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[235],Addr(_TStatPropStg_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[236],Addr(_TStgMedium_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[237],Addr(_TTextMetricOle_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[238],Addr(_TTLibAttr_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[239],Addr(_TTypeAttr_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[240],Addr(_TTypeDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[241],Addr(_TVarDesc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[242],Addr(_TVariantArg_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[243],Addr(_TYPEATTR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[244],Addr(_TYPEDESC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[245],Addr(_VARDESC_)));
RegisterProc(nil,MethodNames[246],mtProc,TypeInfo(_T0),[
TypeInfo(HRESULT),TypeInfo(Boolean)],Addr(Succeeded),cRegister);

RegisterProc(nil,MethodNames[247],mtProc,TypeInfo(_T1),[
TypeInfo(HRESULT),TypeInfo(Boolean)],Addr(Failed),cRegister);

RegisterProc(nil,MethodNames[248],mtProc,TypeInfo(_T2),[
TypeInfo(HRESULT),TypeInfo(Integer)],Addr(ResultCode),cRegister);

RegisterProc(nil,MethodNames[249],mtProc,TypeInfo(_T3),[
TypeInfo(HRESULT),TypeInfo(Integer)],Addr(ResultFacility),cRegister);

RegisterProc(nil,MethodNames[250],mtProc,TypeInfo(_T4),[
TypeInfo(HRESULT),TypeInfo(Integer)],Addr(ResultSeverity),cRegister);

RegisterProc(nil,MethodNames[251],mtProc,TypeInfo(_T5),[
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(HRESULT)],Addr(MakeResult),cRegister);

RegisterProc(nil,MethodNames[252],mtProc,TypeInfo(_T6),[
TypeInfo(IDispatch),
TypeInfo(IDispatch),TypeInfo(Boolean)],Addr(____IsEqualGUID__Wrapper),cRegister);

RegisterProc(nil,MethodNames[253],mtProc,TypeInfo(_T9),[TypeInfo(Longint)],Addr(CoBuildVersion),cStdCall);

RegisterProc(nil,MethodNames[254],mtProc,TypeInfo(_T10),[
TypeInfoPointer,TypeInfo(HRESULT)],Addr(CoInitialize),cStdCall);

RegisterProc(nil,MethodNames[255],mtProc,TypeInfo(_T11),NoParams,Addr(CoUninitialize),cStdCall);

RegisterProc(nil,MethodNames[256],mtProc,TypeInfo(_T13),[TypeInfo(Longint)],Addr(CoGetCurrentProcess),cStdCall);

RegisterProc(nil,MethodNames[257],mtProc,TypeInfo(_T15),[TypeInfo(HRESULT)],Addr(CoRevokeMallocSpy),cStdCall);

RegisterProc(nil,MethodNames[258],mtProc,TypeInfo(_T16),[
TypeInfoPointer,
TypeInfo(Longint),TypeInfo(HRESULT)],Addr(CoInitializeEx),cStdCall);

RegisterProc(nil,MethodNames[259],mtProc,TypeInfo(_T19),[
TypeInfo(Longint),TypeInfo(HRESULT)],Addr(CoRevokeClassObject),cStdCall);

RegisterProc(nil,MethodNames[260],mtProc,TypeInfo(_T20),[TypeInfo(HRESULT)],Addr(CoResumeClassObjects),cStdCall);

RegisterProc(nil,MethodNames[261],mtProc,TypeInfo(_T21),[TypeInfo(HRESULT)],Addr(CoSuspendClassObjects),cStdCall);

RegisterProc(nil,MethodNames[262],mtProc,TypeInfo(_T22),[TypeInfo(Longint)],Addr(CoAddRefServerProcess),cStdCall);

RegisterProc(nil,MethodNames[263],mtProc,TypeInfo(_T23),[TypeInfo(Longint)],Addr(CoReleaseServerProcess),cStdCall);

RegisterProc(nil,MethodNames[264],mtProc,TypeInfo(_T38),[
TypeInfo(THandle)],Addr(CoFreeLibrary),cStdCall);

RegisterProc(nil,MethodNames[265],mtProc,TypeInfo(_T39),NoParams,Addr(CoFreeAllLibraries),cStdCall);

RegisterProc(nil,MethodNames[266],mtProc,TypeInfo(_T40),NoParams,Addr(CoFreeUnusedLibraries),cStdCall);

RegisterProc(nil,MethodNames[267],mtProc,TypeInfo(_T47),[TypeInfo(HRESULT)],Addr(CoImpersonateClient),cStdCall);

RegisterProc(nil,MethodNames[268],mtProc,TypeInfo(_T48),[TypeInfo(HRESULT)],Addr(CoRevertToSelf),cStdCall);

RegisterProc(nil,MethodNames[269],mtProc,TypeInfo(_T63),[
TypeInfo(IDispatch),TypeInfo(HRESULT)],Addr(____CoCreateGuid__Wrapper),cRegister);

RegisterProc(nil,MethodNames[270],mtProc,TypeInfo(_T64),[
TypeInfo(IDispatch),
TypeInfo(Word),
TypeInfo(Word),TypeInfo(BOOL)],Addr(____CoFileTimeToDosDateTime__Wrapper),cRegister);

RegisterProc(nil,MethodNames[271],mtProc,TypeInfo(_T65),[
TypeInfo(Word),
TypeInfo(Word),
TypeInfo(IDispatch),TypeInfo(BOOL)],Addr(____CoDosDateTimeToFileTime__Wrapper),cRegister);

RegisterProc(nil,MethodNames[272],mtProc,TypeInfo(_T66),[
TypeInfo(IDispatch),TypeInfo(HRESULT)],Addr(____CoFileTimeNow__Wrapper),cRegister);

RegisterProc(nil,MethodNames[273],mtProc,TypeInfo(_T71),[
TypeInfo(Longint),TypeInfoPointer],Addr(CoTaskMemAlloc),cStdCall);

RegisterProc(nil,MethodNames[274],mtProc,TypeInfo(_T72),[
TypeInfoPointer,
TypeInfo(Longint),TypeInfoPointer],Addr(CoTaskMemRealloc),cStdCall);

RegisterProc(nil,MethodNames[275],mtProc,TypeInfo(_T73),[
TypeInfoPointer],Addr(CoTaskMemFree),cStdCall);

RegisterProc(nil,MethodNames[276],mtProc,TypeInfo(_T108),[
TypeInfo(Word),
TypeInfo(Word),
TypeInfo(TOleDate),TypeInfo(Integer)],Addr(DosDateTimeToVariantTime),cStdCall);

RegisterProc(nil,MethodNames[277],mtProc,TypeInfo(_T109),[
TypeInfo(TOleDate),
TypeInfo(Word),
TypeInfo(Word),TypeInfo(Integer)],Addr(VariantTimeToDosDateTime),cStdCall);

RegisterProc(nil,MethodNames[278],mtProc,TypeInfo(_T110),[
TypeInfo(IDispatch),
TypeInfo(TOleDate),TypeInfo(Integer)],Addr(____SystemTimeToVariantTime__Wrapper),cRegister);

RegisterProc(nil,MethodNames[279],mtProc,TypeInfo(_T111),[
TypeInfo(TOleDate),
TypeInfo(IDispatch),TypeInfo(Integer)],Addr(____VariantTimeToSystemTime__Wrapper),cRegister);

RegisterProc(nil,MethodNames[280],mtProc,TypeInfo(_T135),[
TypeInfo(OleVariant)],Addr(VariantInit),cStdCall);

RegisterProc(nil,MethodNames[281],mtProc,TypeInfo(_T136),[
TypeInfo(OleVariant),TypeInfo(HRESULT)],Addr(VariantClear),cStdCall);

RegisterProc(nil,MethodNames[282],mtProc,TypeInfo(_T137),[
TypeInfo(OleVariant),
TypeInfo(OleVariant),TypeInfo(HRESULT)],Addr(VariantCopy),cStdCall);

RegisterProc(nil,MethodNames[283],mtProc,TypeInfo(_T138),[
TypeInfo(OleVariant),
TypeInfo(OleVariant),TypeInfo(HRESULT)],Addr(VariantCopyInd),cStdCall);

RegisterProc(nil,MethodNames[284],mtProc,TypeInfo(_T139),[
TypeInfo(OleVariant),
TypeInfo(OleVariant),
TypeInfo(Word),
TypeInfo(TVarType),TypeInfo(HRESULT)],Addr(VariantChangeType),cStdCall);

RegisterProc(nil,MethodNames[285],mtProc,TypeInfo(_T140),[
TypeInfo(OleVariant),
TypeInfo(OleVariant),
TypeInfo(TLCID),
TypeInfo(Word),
TypeInfo(TVarType),TypeInfo(HRESULT)],Addr(VariantChangeTypeEx),cStdCall);

RegisterProc(nil,MethodNames[286],mtProc,TypeInfo(_T146),[
TypeInfo(Longint),TypeInfo(Word)],Addr(WHashValOfLHashVal),cRegister);

RegisterProc(nil,MethodNames[287],mtProc,TypeInfo(_T147),[
TypeInfo(Longint),
TypeInfo(Longint),TypeInfo(Boolean)],Addr(IsHashValCompatible),cRegister);

RegisterProc(nil,MethodNames[288],mtProc,TypeInfo(_T151),[
TypeInfo(IDispatch),
TypeInfo(Word),
TypeInfo(Word),
TypeInfo(TLCID),
TypeInfo(WideString),TypeInfo(HRESULT)],Addr(____QueryPathOfRegTypeLib__Wrapper),cRegister);

RegisterProc(nil,MethodNames[289],mtProc,TypeInfo(_T153),[
TypeInfo(IDispatch),
TypeInfo(Word),
TypeInfo(Word),
TypeInfo(TLCID),
TypeInfo(TSysKind),TypeInfo(HRESULT)],Addr(____UnRegisterTypeLib__Wrapper),cRegister);

RegisterProc(nil,MethodNames[290],mtProc,TypeInfo(_T156),[
TypeInfo(IDispatch),
TypeInfo(Integer),
TypeInfo(TVarType),
TypeInfo(OleVariant),
TypeInfo(Integer),TypeInfo(HRESULT)],Addr(____DispGetParam__Wrapper),cRegister);

RegisterProc(nil,MethodNames[291],mtProc,TypeInfo(_T161),[
TypeInfoPointer,
TypeInfo(Longint),
TypeInfo(TCallConv),
TypeInfo(TVarType),
TypeInfo(Longint),
TypeInfo(TVarType),
TypeInfo(OleVariant),
TypeInfo(OleVariant),TypeInfo(HRESULT)],Addr(DispCallFunc),cStdCall);

RegisterProc(nil,MethodNames[292],mtProc,TypeInfo(_T163),[
TypeInfo(Longint),
TypeInfoPointer,TypeInfo(HRESULT)],Addr(RevokeActiveObject),cStdCall);

RegisterProc(nil,MethodNames[293],mtProc,TypeInfo(_T168),[TypeInfo(Longint)],Addr(OaBuildVersion),cStdCall);

RegisterProc(nil,MethodNames[294],mtProc,TypeInfo(_T169),[
TypeInfo(IDispatch)],Addr(____ClearCustData__Wrapper),cRegister);

RegisterProc(nil,MethodNames[295],mtProc,TypeInfo(_T170),[TypeInfo(HRESULT)],Addr(OleBuildVersion),cStdCall);

RegisterProc(nil,MethodNames[296],mtProc,TypeInfo(_T177),[
TypeInfoPointer,TypeInfo(HRESULT)],Addr(OleInitialize),cStdCall);

RegisterProc(nil,MethodNames[297],mtProc,TypeInfo(_T178),NoParams,Addr(OleUninitialize),cStdCall);

RegisterProc(nil,MethodNames[298],mtProc,TypeInfo(_T201),[
TypeInfo(HWND),TypeInfo(HRESULT)],Addr(RevokeDragDrop),cStdCall);

RegisterProc(nil,MethodNames[299],mtProc,TypeInfo(_T205),[TypeInfo(HRESULT)],Addr(OleFlushClipboard),cStdCall);

RegisterProc(nil,MethodNames[300],mtProc,TypeInfo(_T207),[
TypeInfo(HMenu),
TypeInfo(IDispatch),TypeInfo(HMenu)],Addr(____OleCreateMenuDescriptor__Wrapper),cRegister);

RegisterProc(nil,MethodNames[301],mtProc,TypeInfo(_T209),[
TypeInfo(HMenu),TypeInfo(HRESULT)],Addr(OleDestroyMenuDescriptor),cStdCall);

RegisterProc(nil,MethodNames[302],mtProc,TypeInfo(_T211),[
TypeInfo(THandle),
TypeInfo(TClipFormat),
TypeInfo(Integer),TypeInfo(THandle)],Addr(OleDuplicateData),cStdCall);

RegisterProc(nil,MethodNames[303],mtProc,TypeInfo(_T216),[
TypeInfo(IDispatch)],Addr(____ReleaseStgMedium__Wrapper),cRegister);

RegisterProc(nil,MethodNames[304],mtProc,TypeInfo(_T242),[
TypeInfo(IDispatch),TypeInfo(HRESULT)],Addr(____OleCreatePropertyFrameIndirect__Wrapper),cRegister);

RegisterProc(nil,MethodNames[305],mtProc,TypeInfo(_T243),[
TypeInfo(TOleColor),
TypeInfo(HPALETTE),
TypeInfo(TColorRef),TypeInfo(HRESULT)],Addr(OleTranslateColor),cStdCall);

RegisterProc(nil,MethodNames[306],mtProc,TypeInfo(_T250),[
TypeInfo(THandle),
TypeInfo(THandle),TypeInfo(HCursor)],Addr(OleIconToCursor),cStdCall);

RegisterProc(nil,MethodNames[307],mtProc,TypeInfo(_T251),[
TypeInfo(DWORD),TypeInfo(Word)],Addr(PROPSETHDR_OSVER_KIND),cRegister);

RegisterProc(nil,MethodNames[308],mtProc,TypeInfo(_T252),[
TypeInfo(DWORD),TypeInfo(Byte)],Addr(PROPSETHDR_OSVER_MAJOR),cRegister);

RegisterProc(nil,MethodNames[309],mtProc,TypeInfo(_T253),[
TypeInfo(DWORD),TypeInfo(Byte)],Addr(PROPSETHDR_OSVER_MINOR),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'CoGetMalloc',mtProc,TypeInfo(_T12),[
TypeInfo(Longint),
TypeInfo(IMalloc),TypeInfo(HRESULT)],Addr(CoGetMalloc),cStdCall)}

{RegisterProc(nil,'CoRegisterMallocSpy',mtProc,TypeInfo(_T14),[
TypeInfo(IMallocSpy),TypeInfo(HRESULT)],Addr(CoRegisterMallocSpy),cStdCall)}

{RegisterProc(nil,'CoReleaseMarshalData',mtProc,TypeInfo(_T29),[
TypeInfo(IStream),TypeInfo(HRESULT)],Addr(CoReleaseMarshalData),cStdCall)}

{RegisterProc(nil,'CoDisconnectObject',mtProc,TypeInfo(_T30),[
TypeInfo(IUnknown),
TypeInfo(Longint),TypeInfo(HRESULT)],Addr(CoDisconnectObject),cStdCall)}

{RegisterProc(nil,'CoLockObjectExternal',mtProc,TypeInfo(_T31),[
TypeInfo(IUnknown),
TypeInfo(BOOL),
TypeInfo(BOOL),TypeInfo(HRESULT)],Addr(CoLockObjectExternal),cStdCall)}

{RegisterProc(nil,'CoIsHandlerConnected',mtProc,TypeInfo(_T33),[
TypeInfo(IUnknown),TypeInfo(BOOL)],Addr(CoIsHandlerConnected),cStdCall)}

{RegisterProc(nil,'CoCreateFreeThreadedMarshaler',mtProc,TypeInfo(_T36),[
TypeInfo(IUnknown),
TypeInfo(IUnknown),TypeInfo(HRESULT)],Addr(CoCreateFreeThreadedMarshaler),cStdCall)}

{RegisterProc(nil,'CoLoadLibrary',mtProc,TypeInfo(_T37),[
TypeInfoPWideChar,
TypeInfo(BOOL),TypeInfo(THandle)],Addr(CoLoadLibrary),cStdCall)}

{RegisterProc(nil,'CoInitializeSecurity',mtProc,TypeInfo(_T41),[
TypeInfoPointer,
TypeInfo(Longint),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Longint),
TypeInfo(Longint),
TypeInfoPointer,
TypeInfo(Longint),
TypeInfoPointer,TypeInfo(HRESULT)],Addr(CoInitializeSecurity),cStdCall)}

{RegisterProc(nil,'CoQueryProxyBlanket',mtProc,TypeInfo(_T43),[
TypeInfo(IUnknown),
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(HRESULT)],Addr(CoQueryProxyBlanket),cStdCall)}

{RegisterProc(nil,'CoSetProxyBlanket',mtProc,TypeInfo(_T44),[
TypeInfo(IUnknown),
TypeInfo(Longint),
TypeInfo(Longint),
TypeInfoPWideChar,
TypeInfo(Longint),
TypeInfo(Longint),
TypeInfoPointer,
TypeInfo(Longint),TypeInfo(HRESULT)],Addr(CoSetProxyBlanket),cStdCall)}

{RegisterProc(nil,'CoCopyProxy',mtProc,TypeInfo(_T45),[
TypeInfo(IUnknown),
TypeInfo(IUnknown),TypeInfo(HRESULT)],Addr(CoCopyProxy),cStdCall)}

{RegisterProc(nil,'CoQueryClientBlanket',mtProc,TypeInfo(_T46),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(Longint),
TypeInfo(Longint),
TypeInfoPointer,
TypeInfo(Longint),TypeInfo(HRESULT)],Addr(CoQueryClientBlanket),cStdCall)}

{RegisterProc(nil,'CoQueryAuthenticationServices',mtProc,TypeInfo(_T49),[
TypeInfoPointer,
TypeInfoPointer,TypeInfo(HRESULT)],Addr(CoQueryAuthenticationServices),cStdCall)}

{RegisterProc(nil,'CoSwitchCallContext',mtProc,TypeInfo(_T50),[
TypeInfo(IUnknown),
TypeInfo(IUnknown),TypeInfo(HRESULT)],Addr(CoSwitchCallContext),cStdCall)}

{RegisterProc(nil,'CoGetInstanceFromFile',mtProc,TypeInfo(_T52),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(IUnknown),
TypeInfo(Longint),
TypeInfo(Longint),
TypeInfoPWideChar,
TypeInfo(Longint),
TypeInfoPointer,TypeInfo(HRESULT)],Addr(CoGetInstanceFromFile),cStdCall)}

{RegisterProc(nil,'CoGetInstanceFromIStorage',mtProc,TypeInfo(_T53),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(IUnknown),
TypeInfo(Longint),
TypeInfo(IUnknown),
TypeInfo(Longint),
TypeInfoPointer,TypeInfo(HRESULT)],Addr(CoGetInstanceFromIStorage),cStdCall)}

{RegisterProc(nil,'CoRegisterMessageFilter',mtProc,TypeInfo(_T67),[
TypeInfo(IMessageFilter),
TypeInfo(IMessageFilter),TypeInfo(HRESULT)],Addr(CoRegisterMessageFilter),cStdCall)}

{RegisterProc(nil,'CreateDataAdviseHolder',mtProc,TypeInfo(_T74),[
TypeInfo(IDataAdviseHolder),TypeInfo(HRESULT)],Addr(CreateDataAdviseHolder),cStdCall)}

{RegisterProc(nil,'StgCreateDocfile',mtProc,TypeInfo(_T76),[
TypeInfoPWideChar,
TypeInfo(Longint),
TypeInfo(Longint),
TypeInfo(IStorage),TypeInfo(HRESULT)],Addr(StgCreateDocfile),cStdCall)}

{RegisterProc(nil,'StgCreateDocfileOnILockBytes',mtProc,TypeInfo(_T77),[
TypeInfo(ILockBytes),
TypeInfo(Longint),
TypeInfo(Longint),
TypeInfo(IStorage),TypeInfo(HRESULT)],Addr(StgCreateDocfileOnILockBytes),cStdCall)}

{RegisterProc(nil,'StgOpenStorage',mtProc,TypeInfo(_T78),[
TypeInfoPWideChar,
TypeInfo(IStorage),
TypeInfo(Longint),
TypeInfoPointer,
TypeInfo(Longint),
TypeInfo(IStorage),TypeInfo(HRESULT)],Addr(StgOpenStorage),cStdCall)}

{RegisterProc(nil,'StgOpenStorageOnILockBytes',mtProc,TypeInfo(_T79),[
TypeInfo(ILockBytes),
TypeInfo(IStorage),
TypeInfo(Longint),
TypeInfoPointer,
TypeInfo(Longint),
TypeInfo(IStorage),TypeInfo(HRESULT)],Addr(StgOpenStorageOnILockBytes),cStdCall)}

{RegisterProc(nil,'StgIsStorageFile',mtProc,TypeInfo(_T80),[
TypeInfoPWideChar,TypeInfo(HRESULT)],Addr(StgIsStorageFile),cStdCall)}

{RegisterProc(nil,'StgIsStorageILockBytes',mtProc,TypeInfo(_T81),[
TypeInfo(ILockBytes),TypeInfo(HRESULT)],Addr(StgIsStorageILockBytes),cStdCall)}

{RegisterProc(nil,'StgOpenAsyncDocfileOnIFillLockBytes',mtProc,TypeInfo(_T83),[
TypeInfo(IFillLockBytes),
TypeInfo(Longint),
TypeInfo(Longint),
TypeInfo(IStorage),TypeInfo(HRESULT)],Addr(StgOpenAsyncDocfileOnIFillLockBytes),cStdCall)}

{RegisterProc(nil,'StgGetIFillLockBytesOnILockBytes',mtProc,TypeInfo(_T84),[
TypeInfo(ILockBytes),
TypeInfo(IFillLockBytes),TypeInfo(HRESULT)],Addr(StgGetIFillLockBytesOnILockBytes),cStdCall)}

{RegisterProc(nil,'StgGetIFillLockBytesOnFile',mtProc,TypeInfo(_T85),[
TypeInfoPWideChar,
TypeInfo(IFillLockBytes),TypeInfo(HRESULT)],Addr(StgGetIFillLockBytesOnFile),cStdCall)}

{RegisterProc(nil,'StgOpenLayoutDocfile',mtProc,TypeInfo(_T86),[
TypeInfoPWideChar,
TypeInfo(Longint),
TypeInfo(Longint),
TypeInfo(IStorage),TypeInfo(HRESULT)],Addr(StgOpenLayoutDocfile),cStdCall)}

{RegisterProc(nil,'MkParseDisplayName',mtProc,TypeInfo(_T89),[
TypeInfo(IBindCtx),
TypeInfoPWideChar,
TypeInfo(Longint),
TypeInfo(IMoniker),TypeInfo(HRESULT)],Addr(MkParseDisplayName),cStdCall)}

{RegisterProc(nil,'MonikerRelativePathTo',mtProc,TypeInfo(_T90),[
TypeInfo(IMoniker),
TypeInfo(IMoniker),
TypeInfo(IMoniker),
TypeInfo(BOOL),TypeInfo(HRESULT)],Addr(MonikerRelativePathTo),cStdCall)}

{RegisterProc(nil,'MonikerCommonPrefixWith',mtProc,TypeInfo(_T91),[
TypeInfo(IMoniker),
TypeInfo(IMoniker),
TypeInfo(IMoniker),TypeInfo(HRESULT)],Addr(MonikerCommonPrefixWith),cStdCall)}

{RegisterProc(nil,'CreateBindCtx',mtProc,TypeInfo(_T92),[
TypeInfo(Longint),
TypeInfo(IBindCtx),TypeInfo(HRESULT)],Addr(CreateBindCtx),cStdCall)}

{RegisterProc(nil,'CreateGenericComposite',mtProc,TypeInfo(_T93),[
TypeInfo(IMoniker),
TypeInfo(IMoniker),
TypeInfo(IMoniker),TypeInfo(HRESULT)],Addr(CreateGenericComposite),cStdCall)}

{RegisterProc(nil,'CreateFileMoniker',mtProc,TypeInfo(_T95),[
TypeInfoPWideChar,
TypeInfo(IMoniker),TypeInfo(HRESULT)],Addr(CreateFileMoniker),cStdCall)}

{RegisterProc(nil,'CreateItemMoniker',mtProc,TypeInfo(_T96),[
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(IMoniker),TypeInfo(HRESULT)],Addr(CreateItemMoniker),cStdCall)}

{RegisterProc(nil,'CreateAntiMoniker',mtProc,TypeInfo(_T97),[
TypeInfo(IMoniker),TypeInfo(HRESULT)],Addr(CreateAntiMoniker),cStdCall)}

{RegisterProc(nil,'CreatePointerMoniker',mtProc,TypeInfo(_T98),[
TypeInfo(IUnknown),
TypeInfo(IMoniker),TypeInfo(HRESULT)],Addr(CreatePointerMoniker),cStdCall)}

{RegisterProc(nil,'GetRunningObjectTable',mtProc,TypeInfo(_T99),[
TypeInfo(Longint),
TypeInfo(IRunningObjectTable),TypeInfo(HRESULT)],Addr(GetRunningObjectTable),cStdCall)}

{RegisterProc(nil,'SysAllocString',mtProc,TypeInfo(_T100),[
TypeInfoPWideChar,TypeInfoPWideChar],Addr(SysAllocString),cStdCall)}

{RegisterProc(nil,'SysReAllocString',mtProc,TypeInfo(_T101),[
TypeInfoPWideChar,
TypeInfoPWideChar,TypeInfo(Integer)],Addr(SysReAllocString),cStdCall)}

{RegisterProc(nil,'SysAllocStringLen',mtProc,TypeInfo(_T102),[
TypeInfoPWideChar,
TypeInfo(Integer),TypeInfoPWideChar],Addr(SysAllocStringLen),cStdCall)}

{RegisterProc(nil,'SysReAllocStringLen',mtProc,TypeInfo(_T103),[
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(Integer),TypeInfo(Integer)],Addr(SysReAllocStringLen),cStdCall)}

{RegisterProc(nil,'SysFreeString',mtProc,TypeInfo(_T104),[
TypeInfoPWideChar],Addr(SysFreeString),cStdCall)}

{RegisterProc(nil,'SysStringLen',mtProc,TypeInfo(_T105),[
TypeInfoPWideChar,TypeInfo(Integer)],Addr(SysStringLen),cStdCall)}

{RegisterProc(nil,'SysStringByteLen',mtProc,TypeInfo(_T106),[
TypeInfoPWideChar,TypeInfo(Integer)],Addr(SysStringByteLen),cStdCall)}

{RegisterProc(nil,'SysAllocStringByteLen',mtProc,TypeInfo(_T107),[
TypeInfoPChar,
TypeInfo(Integer),TypeInfoPWideChar],Addr(SysAllocStringByteLen),cStdCall)}

{RegisterProc(nil,'SafeArrayAllocDescriptor',mtProc,TypeInfo(_T112),[
TypeInfo(Integer),
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayAllocDescriptor),cStdCall)}

{RegisterProc(nil,'SafeArrayAllocData',mtProc,TypeInfo(_T113),[
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayAllocData),cStdCall)}

{RegisterProc(nil,'SafeArrayCreate',mtProc,TypeInfo(_T114),[
TypeInfo(TVarType),
TypeInfo(Integer),
TypeInfoUntyped,TypeInfoPointer],Addr(SafeArrayCreate),cStdCall)}

{RegisterProc(nil,'SafeArrayCreateVector',mtProc,TypeInfo(_T115),[
TypeInfo(TVarType),
TypeInfo(Longint),
TypeInfo(Longint),TypeInfoPointer],Addr(SafeArrayCreateVector),cStdCall)}

{RegisterProc(nil,'SafeArrayCreateVectorEx',mtProc,TypeInfo(_T116),[
TypeInfo(TVarType),
TypeInfo(Longint),
TypeInfo(Longint),
TypeInfoPointer,TypeInfoPointer],Addr(SafeArrayCreateVectorEx),cStdCall)}

{RegisterProc(nil,'SafeArrayCreateEx',mtProc,TypeInfo(_T117),[
TypeInfo(TVarType),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfoPointer,TypeInfoPointer],Addr(SafeArrayCreateEx),cStdCall)}

{RegisterProc(nil,'SafeArrayCopyData',mtProc,TypeInfo(_T118),[
TypeInfoPointer,
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayCopyData),cStdCall)}

{RegisterProc(nil,'SafeArrayDestroyDescriptor',mtProc,TypeInfo(_T119),[
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayDestroyDescriptor),cStdCall)}

{RegisterProc(nil,'SafeArrayDestroyData',mtProc,TypeInfo(_T120),[
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayDestroyData),cStdCall)}

{RegisterProc(nil,'SafeArrayDestroy',mtProc,TypeInfo(_T121),[
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayDestroy),cStdCall)}

{RegisterProc(nil,'SafeArrayGetDim',mtProc,TypeInfo(_T123),[
TypeInfoPointer,TypeInfo(Integer)],Addr(SafeArrayGetDim),cStdCall)}

{RegisterProc(nil,'SafeArrayGetElemsize',mtProc,TypeInfo(_T124),[
TypeInfoPointer,TypeInfo(Integer)],Addr(SafeArrayGetElemsize),cStdCall)}

{RegisterProc(nil,'SafeArrayGetUBound',mtProc,TypeInfo(_T125),[
TypeInfoPointer,
TypeInfo(Integer),
TypeInfo(Longint),TypeInfo(HRESULT)],Addr(SafeArrayGetUBound),cStdCall)}

{RegisterProc(nil,'SafeArrayGetLBound',mtProc,TypeInfo(_T126),[
TypeInfoPointer,
TypeInfo(Integer),
TypeInfo(Longint),TypeInfo(HRESULT)],Addr(SafeArrayGetLBound),cStdCall)}

{RegisterProc(nil,'SafeArrayLock',mtProc,TypeInfo(_T127),[
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayLock),cStdCall)}

{RegisterProc(nil,'SafeArrayUnlock',mtProc,TypeInfo(_T128),[
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayUnlock),cStdCall)}

{RegisterProc(nil,'SafeArrayAccessData',mtProc,TypeInfo(_T129),[
TypeInfoPointer,
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayAccessData),cStdCall)}

{RegisterProc(nil,'SafeArrayUnaccessData',mtProc,TypeInfo(_T130),[
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayUnaccessData),cStdCall)}

{RegisterProc(nil,'SafeArrayGetElement',mtProc,TypeInfo(_T131),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoUntyped,TypeInfo(HRESULT)],Addr(SafeArrayGetElement),cStdCall)}

{RegisterProc(nil,'SafeArrayPutElement',mtProc,TypeInfo(_T132),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoUntyped,TypeInfo(HRESULT)],Addr(SafeArrayPutElement),cStdCall)}

{RegisterProc(nil,'SafeArrayCopy',mtProc,TypeInfo(_T133),[
TypeInfoPointer,
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayCopy),cStdCall)}

{RegisterProc(nil,'SafeArrayPtrOfIndex',mtProc,TypeInfo(_T134),[
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(HRESULT)],Addr(SafeArrayPtrOfIndex),cStdCall)}

{RegisterProc(nil,'VectorFromBstr',mtProc,TypeInfo(_T141),[
TypeInfoPWideChar,
TypeInfoPointer,TypeInfo(HRESULT)],Addr(VectorFromBstr),cStdCall)}

{RegisterProc(nil,'BstrFromVector',mtProc,TypeInfo(_T142),[
TypeInfoPointer,
TypeInfoPWideChar,TypeInfo(HRESULT)],Addr(BstrFromVector),cStdCall)}

{RegisterProc(nil,'LHashValOfNameSys',mtProc,TypeInfo(_T143),[
TypeInfo(TSysKind),
TypeInfo(TLCID),
TypeInfoPWideChar,TypeInfo(Longint)],Addr(LHashValOfNameSys),cStdCall)}

{RegisterProc(nil,'LHashValOfNameSysA',mtProc,TypeInfo(_T144),[
TypeInfo(TSysKind),
TypeInfo(TLCID),
TypeInfoPChar,TypeInfo(Longint)],Addr(LHashValOfNameSysA),cStdCall)}

{RegisterProc(nil,'LHashValOfName',mtProc,TypeInfo(_T145),[
TypeInfo(TLCID),
TypeInfoPWideChar,TypeInfo(Longint)],Addr(LHashValOfName),cRegister)}

{RegisterProc(nil,'LoadTypeLib',mtProc,TypeInfo(_T148),[
TypeInfoPWideChar,
TypeInfo(ITypeLib),TypeInfo(HRESULT)],Addr(LoadTypeLib),cStdCall)}

{RegisterProc(nil,'LoadTypeLibEx',mtProc,TypeInfo(_T149),[
TypeInfoPWideChar,
TypeInfo(TRegKind),
TypeInfo(ITypeLib),TypeInfo(HRESULT)],Addr(LoadTypeLibEx),cStdCall)}

{RegisterProc(nil,'RegisterTypeLib',mtProc,TypeInfo(_T152),[
TypeInfo(ITypeLib),
TypeInfoPWideChar,
TypeInfoPWideChar,TypeInfo(HRESULT)],Addr(RegisterTypeLib),cStdCall)}

{RegisterProc(nil,'CreateTypeLib',mtProc,TypeInfo(_T154),[
TypeInfo(TSysKind),
TypeInfoPWideChar,
TypeInfo(ICreateTypeLib),TypeInfo(HRESULT)],Addr(CreateTypeLib),cStdCall)}

{RegisterProc(nil,'CreateTypeLib2',mtProc,TypeInfo(_T155),[
TypeInfo(TSysKind),
TypeInfoPWideChar,
TypeInfo(ICreateTypeLib2),TypeInfo(HRESULT)],Addr(CreateTypeLib2),cStdCall)}

{RegisterProc(nil,'DispGetIDsOfNames',mtProc,TypeInfo(_T157),[
TypeInfo(ITypeInfo),
TypeInfoPointer,
TypeInfo(Integer),
TypeInfoPointer,TypeInfo(HRESULT)],Addr(DispGetIDsOfNames),cStdCall)}

{RegisterProc(nil,'CreateStdDispatch',mtProc,TypeInfo(_T160),[
TypeInfo(IUnknown),
TypeInfoPointer,
TypeInfo(ITypeInfo),
TypeInfo(IUnknown),TypeInfo(HRESULT)],Addr(CreateStdDispatch),cStdCall)}

{RegisterProc(nil,'SetErrorInfo',mtProc,TypeInfo(_T165),[
TypeInfo(Longint),
TypeInfo(IErrorInfo),TypeInfo(HRESULT)],Addr(SetErrorInfo),cStdCall)}

{RegisterProc(nil,'GetErrorInfo',mtProc,TypeInfo(_T166),[
TypeInfo(Longint),
TypeInfo(IErrorInfo),TypeInfo(HRESULT)],Addr(GetErrorInfo),cStdCall)}

{RegisterProc(nil,'CreateErrorInfo',mtProc,TypeInfo(_T167),[
TypeInfo(ICreateErrorInfo),TypeInfo(HRESULT)],Addr(CreateErrorInfo),cStdCall)}

{RegisterProc(nil,'WriteFmtUserTypeStg',mtProc,TypeInfo(_T175),[
TypeInfo(IStorage),
TypeInfo(TClipFormat),
TypeInfoPWideChar,TypeInfo(HRESULT)],Addr(WriteFmtUserTypeStg),cStdCall)}

{RegisterProc(nil,'ReadFmtUserTypeStg',mtProc,TypeInfo(_T176),[
TypeInfo(IStorage),
TypeInfo(TClipFormat),
TypeInfoPWideChar,TypeInfo(HRESULT)],Addr(ReadFmtUserTypeStg),cStdCall)}

{RegisterProc(nil,'OleQueryLinkFromData',mtProc,TypeInfo(_T179),[
TypeInfo(IDataObject),TypeInfo(HRESULT)],Addr(OleQueryLinkFromData),cStdCall)}

{RegisterProc(nil,'OleQueryCreateFromData',mtProc,TypeInfo(_T180),[
TypeInfo(IDataObject),TypeInfo(HRESULT)],Addr(OleQueryCreateFromData),cStdCall)}

{RegisterProc(nil,'OleSave',mtProc,TypeInfo(_T195),[
TypeInfo(IPersistStorage),
TypeInfo(IStorage),
TypeInfo(BOOL),TypeInfo(HRESULT)],Addr(OleSave),cStdCall)}

{RegisterProc(nil,'OleSaveToStream',mtProc,TypeInfo(_T197),[
TypeInfo(IPersistStream),
TypeInfo(IStream),TypeInfo(HRESULT)],Addr(OleSaveToStream),cStdCall)}

{RegisterProc(nil,'OleSetContainedObject',mtProc,TypeInfo(_T198),[
TypeInfo(IUnknown),
TypeInfo(BOOL),TypeInfo(HRESULT)],Addr(OleSetContainedObject),cStdCall)}

{RegisterProc(nil,'OleNoteObjectVisible',mtProc,TypeInfo(_T199),[
TypeInfo(IUnknown),
TypeInfo(BOOL),TypeInfo(HRESULT)],Addr(OleNoteObjectVisible),cStdCall)}

{RegisterProc(nil,'RegisterDragDrop',mtProc,TypeInfo(_T200),[
TypeInfo(HWND),
TypeInfo(IDropTarget),TypeInfo(HRESULT)],Addr(RegisterDragDrop),cStdCall)}

{RegisterProc(nil,'DoDragDrop',mtProc,TypeInfo(_T202),[
TypeInfo(IDataObject),
TypeInfo(IDropSource),
TypeInfo(Longint),
TypeInfo(Longint),TypeInfo(HRESULT)],Addr(DoDragDrop),cStdCall)}

{RegisterProc(nil,'OleSetClipboard',mtProc,TypeInfo(_T203),[
TypeInfo(IDataObject),TypeInfo(HRESULT)],Addr(OleSetClipboard),cStdCall)}

{RegisterProc(nil,'OleGetClipboard',mtProc,TypeInfo(_T204),[
TypeInfo(IDataObject),TypeInfo(HRESULT)],Addr(OleGetClipboard),cStdCall)}

{RegisterProc(nil,'OleIsCurrentClipboard',mtProc,TypeInfo(_T206),[
TypeInfo(IDataObject),TypeInfo(HRESULT)],Addr(OleIsCurrentClipboard),cStdCall)}

{RegisterProc(nil,'OleSetMenuDescriptor',mtProc,TypeInfo(_T208),[
TypeInfo(HMenu),
TypeInfo(HWND),
TypeInfo(HWND),
TypeInfo(IOleInPlaceFrame),
TypeInfo(IOleInPlaceActiveObject),TypeInfo(HRESULT)],Addr(OleSetMenuDescriptor),cStdCall)}

{RegisterProc(nil,'OleRun',mtProc,TypeInfo(_T213),[
TypeInfo(IUnknown),TypeInfo(HRESULT)],Addr(OleRun),cStdCall)}

{RegisterProc(nil,'OleIsRunning',mtProc,TypeInfo(_T214),[
TypeInfo(IOleObject),TypeInfo(BOOL)],Addr(OleIsRunning),cStdCall)}

{RegisterProc(nil,'OleLockRunning',mtProc,TypeInfo(_T215),[
TypeInfo(IUnknown),
TypeInfo(BOOL),
TypeInfo(BOOL),TypeInfo(HRESULT)],Addr(OleLockRunning),cStdCall)}

{RegisterProc(nil,'CreateOleAdviseHolder',mtProc,TypeInfo(_T217),[
TypeInfo(IOleAdviseHolder),TypeInfo(HRESULT)],Addr(CreateOleAdviseHolder),cStdCall)}

{RegisterProc(nil,'IsAccelerator',mtProc,TypeInfo(_T220),[
TypeInfo(hAccel),
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(Word),TypeInfo(BOOL)],Addr(IsAccelerator),cStdCall)}

{RegisterProc(nil,'OleGetIconOfFile',mtProc,TypeInfo(_T221),[
TypeInfoPWideChar,
TypeInfo(BOOL),TypeInfo(hGlobal)],Addr(OleGetIconOfFile),cStdCall)}

{RegisterProc(nil,'OleMetafilePictFromIconAndLabel',mtProc,TypeInfo(_T223),[
TypeInfo(hIcon),
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(Integer),TypeInfo(hGlobal)],Addr(OleMetafilePictFromIconAndLabel),cStdCall)}

{RegisterProc(nil,'OleConvertIStorageToOLESTREAM',mtProc,TypeInfo(_T228),[
TypeInfo(IStorage),
TypeInfoPointer,TypeInfo(HRESULT)],Addr(OleConvertIStorageToOLESTREAM),cStdCall)}

{RegisterProc(nil,'OleConvertOLESTREAMToIStorage',mtProc,TypeInfo(_T229),[
TypeInfoPointer,
TypeInfo(IStorage),
TypeInfoPointer,TypeInfo(HRESULT)],Addr(OleConvertOLESTREAMToIStorage),cStdCall)}

{RegisterProc(nil,'GetHGlobalFromILockBytes',mtProc,TypeInfo(_T232),[
TypeInfo(ILockBytes),
TypeInfo(hGlobal),TypeInfo(HRESULT)],Addr(GetHGlobalFromILockBytes),cStdCall)}

{RegisterProc(nil,'CreateILockBytesOnHGlobal',mtProc,TypeInfo(_T233),[
TypeInfo(hGlobal),
TypeInfo(BOOL),
TypeInfo(ILockBytes),TypeInfo(HRESULT)],Addr(CreateILockBytesOnHGlobal),cStdCall)}

{RegisterProc(nil,'GetHGlobalFromStream',mtProc,TypeInfo(_T234),[
TypeInfo(IStream),
TypeInfo(hGlobal),TypeInfo(HRESULT)],Addr(GetHGlobalFromStream),cStdCall)}

{RegisterProc(nil,'CreateStreamOnHGlobal',mtProc,TypeInfo(_T235),[
TypeInfo(hGlobal),
TypeInfo(BOOL),
TypeInfo(IStream),TypeInfo(HRESULT)],Addr(CreateStreamOnHGlobal),cStdCall)}

{RegisterProc(nil,'GetConvertStg',mtProc,TypeInfo(_T239),[
TypeInfo(IStorage),TypeInfo(HRESULT)],Addr(GetConvertStg),cStdCall)}

{RegisterProc(nil,'SetConvertStg',mtProc,TypeInfo(_T240),[
TypeInfo(IStorage),
TypeInfo(BOOL),TypeInfo(HRESULT)],Addr(SetConvertStg),cStdCall)}

{RegisterProc(nil,'OleCreatePropertyFrame',mtProc,TypeInfo(_T241),[
TypeInfo(HWND),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfoPWideChar,
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(TLCID),
TypeInfo(Longint),
TypeInfoPointer,TypeInfo(HRESULT)],Addr(OleCreatePropertyFrame),cStdCall)}

{RegisterProc(nil,'OleLoadPictureFile',mtProc,TypeInfo(_T248),[
TypeInfo(OleVariant),
TypeInfo(IDispatch),TypeInfo(HRESULT)],Addr(OleLoadPictureFile),cStdCall)}

{RegisterProc(nil,'OleSavePictureFile',mtProc,TypeInfo(_T249),[
TypeInfo(IDispatch),
TypeInfoPWideChar,TypeInfo(HRESULT)],Addr(OleSavePictureFile),cStdCall)}

__RegisterClasses;
__RegisterConsts0;
__RegisterConsts1;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterConsts1;
__UnregisterProcs;
end.
