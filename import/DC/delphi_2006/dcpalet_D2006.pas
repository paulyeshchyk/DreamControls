{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit dcpalet_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  dcscript,
  dcpalette,
  windows,
  messages,
  classes,
  sysutils,
  graphics,
  controls,
  forms,
  buttons,
  comctrls,
  commctrl,
  menus,
  dcsystem,
  dcdreamlib,
  dcapi,
  dcconsts,
  dccommon,
  dcgen,
  activex,
  Variants,
  dcpalet;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : TStrings;
p1 : TStrings) of object;

_T1 = function : TPaletteList of object;

_T2 = function : TNewFormControlList of object;

_T3 = function : TPaletteOptions of object;

_T4 = function : TNewFormOptions of object;

_T5 = procedure (p0 : TStrings) of object;

_T6 = _T5;

_T7 = procedure  of object;

_T8 = _T7;

_T9 = _T7;

_T10 = _T7;

function __DC__GetTDCPageControl__PredefinedPages(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDCPageControl(Instance).PredefinedPages);
end;

procedure __DC__SetTDCPageControl__PredefinedPages(Instance : TObject; Params : PVariantArgList);
begin
TDCPageControl(Instance).PredefinedPages:=TStrings(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTDCPageControl__OnlyDefinedItems(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCPageControl(Instance).OnlyDefinedItems;
end;

procedure __DC__SetTDCPageControl__OnlyDefinedItems(Instance : TObject; Params : PVariantArgList);
begin
TDCPageControl(Instance).OnlyDefinedItems:=OleVariant(Params^[0]);
end;

function __DC__GetTDCPageControl__UseGlobalOptions(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCPageControl(Instance).UseGlobalOptions;
end;

procedure __DC__SetTDCPageControl__UseGlobalOptions(Instance : TObject; Params : PVariantArgList);
begin
TDCPageControl(Instance).UseGlobalOptions:=OleVariant(Params^[0]);
end;

function __DC__GetTNewFormControlList__NewFormControls(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TNewFormControlList(Instance).NewFormControls[OleVariant(Params^[0])]);
end;

function __DC__GetTPaletteList__Palettes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TPaletteList(Instance).Palettes[OleVariant(Params^[0])]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TDCPageControl,'PredefinedPages',__DC__GetTDCPageControl__PredefinedPages,__DC__SetTDCPageControl__PredefinedPages);
RegisterProperty(TDCPageControl,'OnlyDefinedItems',__DC__GetTDCPageControl__OnlyDefinedItems,__DC__SetTDCPageControl__OnlyDefinedItems);
RegisterProperty(TDCPageControl,'UseGlobalOptions',__DC__GetTDCPageControl__UseGlobalOptions,__DC__SetTDCPageControl__UseGlobalOptions);
RegisterIndexedProperty(TNewFormControlList,'NewFormControls',1,True,__DC__GetTNewFormControlList__NewFormControls,nil);
RegisterIndexedProperty(TPaletteList,'Palettes',1,True,__DC__GetTPaletteList__Palettes,nil);
end;

const __ConstNames0 : array[0..1] of string = (
'cPaletteButtonSize'
,'GlogalUseActiveX'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,cPaletteButtonSize));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,GlogalUseActiveX));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..8] of TClass = (
TCompPaletteOptions,
TDCCompPalette,
TDCPageControl,
TNewFormControlList,
TNewFormOptions,
TNewFormPageControl,
TPageControlOptions,
TPaletteList,
TPaletteOptions
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..6] of string = (
'ConvertPalettePages'
,'PaletteList'
,'NewFormControlList'
,'GlobalPaletteOptions'
,'GlobalNewFormControlOptions'
,'AssignPalettePages'
,'AssignNewFormPages'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TStrings),
TypeInfo(TStrings)],Addr(ConvertPalettePages),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[TypeInfo(TPaletteList)],Addr(PaletteList),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[TypeInfo(TNewFormControlList)],Addr(NewFormControlList),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),[TypeInfo(TPaletteOptions)],Addr(GlobalPaletteOptions),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T4),[TypeInfo(TNewFormOptions)],Addr(GlobalNewFormControlOptions),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T5),[
TypeInfo(TStrings)],Addr(AssignPalettePages),cRegister);

RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T6),[
TypeInfo(TStrings)],Addr(AssignNewFormPages),cRegister);

RegisterProc(TCompPaletteOptions,'Create',mtConstructor,TypeInfo(_T7),NoParams,Addr(TCompPaletteOptions.Create),cRegister);

//RegRegisterMethod(TDCPageControl,'LoadGlobalOptions',TypeInfo(_T8),NoParams, pointer(236));
RegRegisterMethod(TDCPageControl,'LoadGlobalOptions',TypeInfo(_T8),NoParams,  getVMTProcAddr('TDCPageControl','LoadGlobalOptions',236));


//RegRegisterMethod(TDCPageControl,'InitData',TypeInfo(_T9),NoParams, pointer(240));
RegRegisterMethod(TDCPageControl,'InitData',TypeInfo(_T9),NoParams,  getVMTProcAddr('TDCPageControl','InitData',240));


//RegRegisterMethod(TDCPageControl,'RefreshData',TypeInfo(_T10),NoParams, pointer(244));
RegRegisterMethod(TDCPageControl,'RefreshData',TypeInfo(_T10),NoParams,  getVMTProcAddr('TDCPageControl','RefreshData',244));


end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
