{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IDNTLM_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  IdSSLOpenSSLHeaders,
  IdNTLM;
function Converttype_1_message_headerToVariant(var R : type_1_message_header) : OleVariant;
function ConvertVariantTotype_1_message_header(const V : OleVariant) : type_1_message_header;
function Converttype_2_message_headerToVariant(var R : type_2_message_header) : OleVariant;
function ConvertVariantTotype_2_message_header(const V : OleVariant) : type_2_message_header;
function Converttype_3_message_headerToVariant(var R : type_3_message_header) : OleVariant;
function ConvertVariantTotype_3_message_header(const V : OleVariant) : type_3_message_header;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __type_1_message_header__Wrapper = class(TDCRecordWrapper)
private
fR : type_1_message_header;
public
function GetRecordPtr : pointer; override;
published
procedure set_type(const val : LongWord);
function get_type : LongWord;
property _type : LongWord read get_type write set_type;
procedure setflags(const val : LongWord);
function getflags : LongWord;
property flags : LongWord read getflags write setflags;
procedure setdom_len1(const val : Word);
function getdom_len1 : Word;
property dom_len1 : Word read getdom_len1 write setdom_len1;
procedure setdom_len2(const val : Word);
function getdom_len2 : Word;
property dom_len2 : Word read getdom_len2 write setdom_len2;
procedure setdom_off(const val : LongWord);
function getdom_off : LongWord;
property dom_off : LongWord read getdom_off write setdom_off;
procedure sethost_len1(const val : Word);
function gethost_len1 : Word;
property host_len1 : Word read gethost_len1 write sethost_len1;
procedure sethost_len2(const val : Word);
function gethost_len2 : Word;
property host_len2 : Word read gethost_len2 write sethost_len2;
procedure sethost_off(const val : LongWord);
function gethost_off : LongWord;
property host_off : LongWord read gethost_off write sethost_off;
end;
type __type_2_message_header__Wrapper = class(TDCRecordWrapper)
private
fR : type_2_message_header;
public
function GetRecordPtr : pointer; override;
published
procedure set_type(const val : LongWord);
function get_type : LongWord;
property _type : LongWord read get_type write set_type;
procedure sethost_len1(const val : Word);
function gethost_len1 : Word;
property host_len1 : Word read gethost_len1 write sethost_len1;
procedure sethost_len2(const val : Word);
function gethost_len2 : Word;
property host_len2 : Word read gethost_len2 write sethost_len2;
procedure sethost_off(const val : LongWord);
function gethost_off : LongWord;
property host_off : LongWord read gethost_off write sethost_off;
procedure setflags(const val : LongWord);
function getflags : LongWord;
property flags : LongWord read getflags write setflags;
procedure setsome_len1(const val : Word);
function getsome_len1 : Word;
property some_len1 : Word read getsome_len1 write setsome_len1;
procedure setsome_len2(const val : Word);
function getsome_len2 : Word;
property some_len2 : Word read getsome_len2 write setsome_len2;
procedure setsome_off(const val : LongWord);
function getsome_off : LongWord;
property some_off : LongWord read getsome_off write setsome_off;
procedure setsome1_len1(const val : Word);
function getsome1_len1 : Word;
property some1_len1 : Word read getsome1_len1 write setsome1_len1;
procedure setsome1_len2(const val : Word);
function getsome1_len2 : Word;
property some1_len2 : Word read getsome1_len2 write setsome1_len2;
procedure setsome1_off(const val : LongWord);
function getsome1_off : LongWord;
property some1_off : LongWord read getsome1_off write setsome1_off;
end;
type __type_3_message_header__Wrapper = class(TDCRecordWrapper)
private
fR : type_3_message_header;
public
function GetRecordPtr : pointer; override;
published
procedure set_type(const val : LongWord);
function get_type : LongWord;
property _type : LongWord read get_type write set_type;
procedure setlm_resp_len1(const val : Word);
function getlm_resp_len1 : Word;
property lm_resp_len1 : Word read getlm_resp_len1 write setlm_resp_len1;
procedure setlm_resp_len2(const val : Word);
function getlm_resp_len2 : Word;
property lm_resp_len2 : Word read getlm_resp_len2 write setlm_resp_len2;
procedure setlm_resp_off(const val : LongWord);
function getlm_resp_off : LongWord;
property lm_resp_off : LongWord read getlm_resp_off write setlm_resp_off;
procedure setnt_resp_len1(const val : Word);
function getnt_resp_len1 : Word;
property nt_resp_len1 : Word read getnt_resp_len1 write setnt_resp_len1;
procedure setnt_resp_len2(const val : Word);
function getnt_resp_len2 : Word;
property nt_resp_len2 : Word read getnt_resp_len2 write setnt_resp_len2;
procedure setnt_resp_off(const val : LongWord);
function getnt_resp_off : LongWord;
property nt_resp_off : LongWord read getnt_resp_off write setnt_resp_off;
procedure setdom_len1(const val : Word);
function getdom_len1 : Word;
property dom_len1 : Word read getdom_len1 write setdom_len1;
procedure setdom_len2(const val : Word);
function getdom_len2 : Word;
property dom_len2 : Word read getdom_len2 write setdom_len2;
procedure setdom_off(const val : LongWord);
function getdom_off : LongWord;
property dom_off : LongWord read getdom_off write setdom_off;
procedure setuser_len1(const val : Word);
function getuser_len1 : Word;
property user_len1 : Word read getuser_len1 write setuser_len1;
procedure setuser_len2(const val : Word);
function getuser_len2 : Word;
property user_len2 : Word read getuser_len2 write setuser_len2;
procedure setuser_off(const val : LongWord);
function getuser_off : LongWord;
property user_off : LongWord read getuser_off write setuser_off;
procedure sethost_len1(const val : Word);
function gethost_len1 : Word;
property host_len1 : Word read gethost_len1 write sethost_len1;
procedure sethost_len2(const val : Word);
function gethost_len2 : Word;
property host_len2 : Word read gethost_len2 write sethost_len2;
procedure sethost_off(const val : LongWord);
function gethost_off : LongWord;
property host_off : LongWord read gethost_off write sethost_off;
procedure setzero(const val : LongWord);
function getzero : LongWord;
property zero : LongWord read getzero write setzero;
procedure setmsg_len(const val : LongWord);
function getmsg_len : LongWord;
property msg_len : LongWord read getmsg_len write setmsg_len;
procedure setflags(const val : LongWord);
function getflags : LongWord;
property flags : LongWord read getflags write setflags;
end;
type
_T0 = function (p0 : String;
p1 : String): String of object;

_T1 = function (p0 : WideString;
p1 : WideString;
p2 : WideString;
p3 : String;
p4 : String): String of object;

function __type_1_message_header__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __type_1_message_header__Wrapper.set_type(const val : LongWord);
begin
type_1_message_header(GetRecordPtr^)._type := val;
end;
function __type_1_message_header__Wrapper.get_type : LongWord;
begin
result := type_1_message_header(GetRecordPtr^)._type;
end;
procedure __type_1_message_header__Wrapper.setflags(const val : LongWord);
begin
type_1_message_header(GetRecordPtr^).flags := val;
end;
function __type_1_message_header__Wrapper.getflags : LongWord;
begin
result := type_1_message_header(GetRecordPtr^).flags;
end;
procedure __type_1_message_header__Wrapper.setdom_len1(const val : Word);
begin
type_1_message_header(GetRecordPtr^).dom_len1 := val;
end;
function __type_1_message_header__Wrapper.getdom_len1 : Word;
begin
result := type_1_message_header(GetRecordPtr^).dom_len1;
end;
procedure __type_1_message_header__Wrapper.setdom_len2(const val : Word);
begin
type_1_message_header(GetRecordPtr^).dom_len2 := val;
end;
function __type_1_message_header__Wrapper.getdom_len2 : Word;
begin
result := type_1_message_header(GetRecordPtr^).dom_len2;
end;
procedure __type_1_message_header__Wrapper.setdom_off(const val : LongWord);
begin
type_1_message_header(GetRecordPtr^).dom_off := val;
end;
function __type_1_message_header__Wrapper.getdom_off : LongWord;
begin
result := type_1_message_header(GetRecordPtr^).dom_off;
end;
procedure __type_1_message_header__Wrapper.sethost_len1(const val : Word);
begin
type_1_message_header(GetRecordPtr^).host_len1 := val;
end;
function __type_1_message_header__Wrapper.gethost_len1 : Word;
begin
result := type_1_message_header(GetRecordPtr^).host_len1;
end;
procedure __type_1_message_header__Wrapper.sethost_len2(const val : Word);
begin
type_1_message_header(GetRecordPtr^).host_len2 := val;
end;
function __type_1_message_header__Wrapper.gethost_len2 : Word;
begin
result := type_1_message_header(GetRecordPtr^).host_len2;
end;
procedure __type_1_message_header__Wrapper.sethost_off(const val : LongWord);
begin
type_1_message_header(GetRecordPtr^).host_off := val;
end;
function __type_1_message_header__Wrapper.gethost_off : LongWord;
begin
result := type_1_message_header(GetRecordPtr^).host_off;
end;
function __type_2_message_header__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __type_2_message_header__Wrapper.set_type(const val : LongWord);
begin
type_2_message_header(GetRecordPtr^)._type := val;
end;
function __type_2_message_header__Wrapper.get_type : LongWord;
begin
result := type_2_message_header(GetRecordPtr^)._type;
end;
procedure __type_2_message_header__Wrapper.sethost_len1(const val : Word);
begin
type_2_message_header(GetRecordPtr^).host_len1 := val;
end;
function __type_2_message_header__Wrapper.gethost_len1 : Word;
begin
result := type_2_message_header(GetRecordPtr^).host_len1;
end;
procedure __type_2_message_header__Wrapper.sethost_len2(const val : Word);
begin
type_2_message_header(GetRecordPtr^).host_len2 := val;
end;
function __type_2_message_header__Wrapper.gethost_len2 : Word;
begin
result := type_2_message_header(GetRecordPtr^).host_len2;
end;
procedure __type_2_message_header__Wrapper.sethost_off(const val : LongWord);
begin
type_2_message_header(GetRecordPtr^).host_off := val;
end;
function __type_2_message_header__Wrapper.gethost_off : LongWord;
begin
result := type_2_message_header(GetRecordPtr^).host_off;
end;
procedure __type_2_message_header__Wrapper.setflags(const val : LongWord);
begin
type_2_message_header(GetRecordPtr^).flags := val;
end;
function __type_2_message_header__Wrapper.getflags : LongWord;
begin
result := type_2_message_header(GetRecordPtr^).flags;
end;
procedure __type_2_message_header__Wrapper.setsome_len1(const val : Word);
begin
type_2_message_header(GetRecordPtr^).some_len1 := val;
end;
function __type_2_message_header__Wrapper.getsome_len1 : Word;
begin
result := type_2_message_header(GetRecordPtr^).some_len1;
end;
procedure __type_2_message_header__Wrapper.setsome_len2(const val : Word);
begin
type_2_message_header(GetRecordPtr^).some_len2 := val;
end;
function __type_2_message_header__Wrapper.getsome_len2 : Word;
begin
result := type_2_message_header(GetRecordPtr^).some_len2;
end;
procedure __type_2_message_header__Wrapper.setsome_off(const val : LongWord);
begin
type_2_message_header(GetRecordPtr^).some_off := val;
end;
function __type_2_message_header__Wrapper.getsome_off : LongWord;
begin
result := type_2_message_header(GetRecordPtr^).some_off;
end;
procedure __type_2_message_header__Wrapper.setsome1_len1(const val : Word);
begin
type_2_message_header(GetRecordPtr^).some1_len1 := val;
end;
function __type_2_message_header__Wrapper.getsome1_len1 : Word;
begin
result := type_2_message_header(GetRecordPtr^).some1_len1;
end;
procedure __type_2_message_header__Wrapper.setsome1_len2(const val : Word);
begin
type_2_message_header(GetRecordPtr^).some1_len2 := val;
end;
function __type_2_message_header__Wrapper.getsome1_len2 : Word;
begin
result := type_2_message_header(GetRecordPtr^).some1_len2;
end;
procedure __type_2_message_header__Wrapper.setsome1_off(const val : LongWord);
begin
type_2_message_header(GetRecordPtr^).some1_off := val;
end;
function __type_2_message_header__Wrapper.getsome1_off : LongWord;
begin
result := type_2_message_header(GetRecordPtr^).some1_off;
end;
function __type_3_message_header__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __type_3_message_header__Wrapper.set_type(const val : LongWord);
begin
type_3_message_header(GetRecordPtr^)._type := val;
end;
function __type_3_message_header__Wrapper.get_type : LongWord;
begin
result := type_3_message_header(GetRecordPtr^)._type;
end;
procedure __type_3_message_header__Wrapper.setlm_resp_len1(const val : Word);
begin
type_3_message_header(GetRecordPtr^).lm_resp_len1 := val;
end;
function __type_3_message_header__Wrapper.getlm_resp_len1 : Word;
begin
result := type_3_message_header(GetRecordPtr^).lm_resp_len1;
end;
procedure __type_3_message_header__Wrapper.setlm_resp_len2(const val : Word);
begin
type_3_message_header(GetRecordPtr^).lm_resp_len2 := val;
end;
function __type_3_message_header__Wrapper.getlm_resp_len2 : Word;
begin
result := type_3_message_header(GetRecordPtr^).lm_resp_len2;
end;
procedure __type_3_message_header__Wrapper.setlm_resp_off(const val : LongWord);
begin
type_3_message_header(GetRecordPtr^).lm_resp_off := val;
end;
function __type_3_message_header__Wrapper.getlm_resp_off : LongWord;
begin
result := type_3_message_header(GetRecordPtr^).lm_resp_off;
end;
procedure __type_3_message_header__Wrapper.setnt_resp_len1(const val : Word);
begin
type_3_message_header(GetRecordPtr^).nt_resp_len1 := val;
end;
function __type_3_message_header__Wrapper.getnt_resp_len1 : Word;
begin
result := type_3_message_header(GetRecordPtr^).nt_resp_len1;
end;
procedure __type_3_message_header__Wrapper.setnt_resp_len2(const val : Word);
begin
type_3_message_header(GetRecordPtr^).nt_resp_len2 := val;
end;
function __type_3_message_header__Wrapper.getnt_resp_len2 : Word;
begin
result := type_3_message_header(GetRecordPtr^).nt_resp_len2;
end;
procedure __type_3_message_header__Wrapper.setnt_resp_off(const val : LongWord);
begin
type_3_message_header(GetRecordPtr^).nt_resp_off := val;
end;
function __type_3_message_header__Wrapper.getnt_resp_off : LongWord;
begin
result := type_3_message_header(GetRecordPtr^).nt_resp_off;
end;
procedure __type_3_message_header__Wrapper.setdom_len1(const val : Word);
begin
type_3_message_header(GetRecordPtr^).dom_len1 := val;
end;
function __type_3_message_header__Wrapper.getdom_len1 : Word;
begin
result := type_3_message_header(GetRecordPtr^).dom_len1;
end;
procedure __type_3_message_header__Wrapper.setdom_len2(const val : Word);
begin
type_3_message_header(GetRecordPtr^).dom_len2 := val;
end;
function __type_3_message_header__Wrapper.getdom_len2 : Word;
begin
result := type_3_message_header(GetRecordPtr^).dom_len2;
end;
procedure __type_3_message_header__Wrapper.setdom_off(const val : LongWord);
begin
type_3_message_header(GetRecordPtr^).dom_off := val;
end;
function __type_3_message_header__Wrapper.getdom_off : LongWord;
begin
result := type_3_message_header(GetRecordPtr^).dom_off;
end;
procedure __type_3_message_header__Wrapper.setuser_len1(const val : Word);
begin
type_3_message_header(GetRecordPtr^).user_len1 := val;
end;
function __type_3_message_header__Wrapper.getuser_len1 : Word;
begin
result := type_3_message_header(GetRecordPtr^).user_len1;
end;
procedure __type_3_message_header__Wrapper.setuser_len2(const val : Word);
begin
type_3_message_header(GetRecordPtr^).user_len2 := val;
end;
function __type_3_message_header__Wrapper.getuser_len2 : Word;
begin
result := type_3_message_header(GetRecordPtr^).user_len2;
end;
procedure __type_3_message_header__Wrapper.setuser_off(const val : LongWord);
begin
type_3_message_header(GetRecordPtr^).user_off := val;
end;
function __type_3_message_header__Wrapper.getuser_off : LongWord;
begin
result := type_3_message_header(GetRecordPtr^).user_off;
end;
procedure __type_3_message_header__Wrapper.sethost_len1(const val : Word);
begin
type_3_message_header(GetRecordPtr^).host_len1 := val;
end;
function __type_3_message_header__Wrapper.gethost_len1 : Word;
begin
result := type_3_message_header(GetRecordPtr^).host_len1;
end;
procedure __type_3_message_header__Wrapper.sethost_len2(const val : Word);
begin
type_3_message_header(GetRecordPtr^).host_len2 := val;
end;
function __type_3_message_header__Wrapper.gethost_len2 : Word;
begin
result := type_3_message_header(GetRecordPtr^).host_len2;
end;
procedure __type_3_message_header__Wrapper.sethost_off(const val : LongWord);
begin
type_3_message_header(GetRecordPtr^).host_off := val;
end;
function __type_3_message_header__Wrapper.gethost_off : LongWord;
begin
result := type_3_message_header(GetRecordPtr^).host_off;
end;
procedure __type_3_message_header__Wrapper.setzero(const val : LongWord);
begin
type_3_message_header(GetRecordPtr^).zero := val;
end;
function __type_3_message_header__Wrapper.getzero : LongWord;
begin
result := type_3_message_header(GetRecordPtr^).zero;
end;
procedure __type_3_message_header__Wrapper.setmsg_len(const val : LongWord);
begin
type_3_message_header(GetRecordPtr^).msg_len := val;
end;
function __type_3_message_header__Wrapper.getmsg_len : LongWord;
begin
result := type_3_message_header(GetRecordPtr^).msg_len;
end;
procedure __type_3_message_header__Wrapper.setflags(const val : LongWord);
begin
type_3_message_header(GetRecordPtr^).flags := val;
end;
function __type_3_message_header__Wrapper.getflags : LongWord;
begin
result := type_3_message_header(GetRecordPtr^).flags;
end;
function _type_1_message_header_ : IDispatch;
begin
  result := __type_1_message_header__Wrapper.Create;
end;
function _type_2_message_header_ : IDispatch;
begin
  result := __type_2_message_header__Wrapper.Create;
end;
function _type_3_message_header_ : IDispatch;
begin
  result := __type_3_message_header__Wrapper.Create;
end;

type __type_1_message_header__Wrapper__ = class(__type_1_message_header__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __type_1_message_header__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Converttype_1_message_headerToVariant(var R : type_1_message_header) : OleVariant;
var
__rw : __type_1_message_header__Wrapper__;
begin
__rw := __type_1_message_header__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotype_1_message_header(const V : OleVariant) : type_1_message_header;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := type_1_message_header((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __type_2_message_header__Wrapper__ = class(__type_2_message_header__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __type_2_message_header__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Converttype_2_message_headerToVariant(var R : type_2_message_header) : OleVariant;
var
__rw : __type_2_message_header__Wrapper__;
begin
__rw := __type_2_message_header__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotype_2_message_header(const V : OleVariant) : type_2_message_header;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := type_2_message_header((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __type_3_message_header__Wrapper__ = class(__type_3_message_header__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __type_3_message_header__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Converttype_3_message_headerToVariant(var R : type_3_message_header) : OleVariant;
var
__rw : __type_3_message_header__Wrapper__;
begin
__rw := __type_3_message_header__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotype_3_message_header(const V : OleVariant) : type_3_message_header;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := type_3_message_header((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..4] of string = (
'type_1_message_header'
,'type_2_message_header'
,'type_3_message_header'
,'BuildType1Message'
,'BuildType3Message'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_type_1_message_header_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_type_2_message_header_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(_type_3_message_header_)));
RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T0),[
TypeInfo(String),
TypeInfo(String),TypeInfo(String)],Addr(BuildType1Message),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T1),[
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(WideString),
TypeInfo(String),
TypeInfo(String),TypeInfo(String)],Addr(BuildType3Message),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
