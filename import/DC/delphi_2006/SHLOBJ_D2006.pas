{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit SHLOBJ_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  Types,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  ActiveX,
  CommCtrl,
  ShellAPI,
  RegStr,
  Messages,
  WinInet,
  UrlMon,
  ShlObj;
function Convert_browseinfoToVariant(var R : _browseinfo) : OleVariant;
function ConvertVariantTo_browseinfo(const V : OleVariant) : _browseinfo;
function Convert_browseinfoAToVariant(var R : _browseinfoA) : OleVariant;
function ConvertVariantTo_browseinfoA(const V : OleVariant) : _browseinfoA;
function Convert_browseinfoWToVariant(var R : _browseinfoW) : OleVariant;
function ConvertVariantTo_browseinfoW(const V : OleVariant) : _browseinfoW;
function Convert_CMINVOKECOMMANDINFOToVariant(var R : _CMINVOKECOMMANDINFO) : OleVariant;
function ConvertVariantTo_CMINVOKECOMMANDINFO(const V : OleVariant) : _CMINVOKECOMMANDINFO;
function Convert_CMInvokeCommandInfoExToVariant(var R : _CMInvokeCommandInfoEx) : OleVariant;
function ConvertVariantTo_CMInvokeCommandInfoEx(const V : OleVariant) : _CMInvokeCommandInfoEx;
function Convert_DROPFILESToVariant(var R : _DROPFILES) : OleVariant;
function ConvertVariantTo_DROPFILES(const V : OleVariant) : _DROPFILES;
function Convert_FILEDESCRIPTORToVariant(var R : _FILEDESCRIPTOR) : OleVariant;
function ConvertVariantTo_FILEDESCRIPTOR(const V : OleVariant) : _FILEDESCRIPTOR;
function Convert_FILEDESCRIPTORAToVariant(var R : _FILEDESCRIPTORA) : OleVariant;
function ConvertVariantTo_FILEDESCRIPTORA(const V : OleVariant) : _FILEDESCRIPTORA;
function Convert_FILEDESCRIPTORWToVariant(var R : _FILEDESCRIPTORW) : OleVariant;
function ConvertVariantTo_FILEDESCRIPTORW(const V : OleVariant) : _FILEDESCRIPTORW;
function Convert_FILEGROUPDESCRIPTORToVariant(var R : _FILEGROUPDESCRIPTOR) : OleVariant;
function ConvertVariantTo_FILEGROUPDESCRIPTOR(const V : OleVariant) : _FILEGROUPDESCRIPTOR;
function Convert_FILEGROUPDESCRIPTORAToVariant(var R : _FILEGROUPDESCRIPTORA) : OleVariant;
function ConvertVariantTo_FILEGROUPDESCRIPTORA(const V : OleVariant) : _FILEGROUPDESCRIPTORA;
function Convert_FILEGROUPDESCRIPTORWToVariant(var R : _FILEGROUPDESCRIPTORW) : OleVariant;
function ConvertVariantTo_FILEGROUPDESCRIPTORW(const V : OleVariant) : _FILEGROUPDESCRIPTORW;
function Convert_IDAToVariant(var R : _IDA) : OleVariant;
function ConvertVariantTo_IDA(const V : OleVariant) : _IDA;
function Convert_ITEMIDLISTToVariant(var R : _ITEMIDLIST) : OleVariant;
function ConvertVariantTo_ITEMIDLIST(const V : OleVariant) : _ITEMIDLIST;
function Convert_NRESARRAYToVariant(var R : _NRESARRAY) : OleVariant;
function ConvertVariantTo_NRESARRAY(const V : OleVariant) : _NRESARRAY;
function Convert_SHDESCRIPTIONIDToVariant(var R : _SHDESCRIPTIONID) : OleVariant;
function ConvertVariantTo_SHDESCRIPTIONID(const V : OleVariant) : _SHDESCRIPTIONID;
function Convert_SHELLDETAILSToVariant(var R : _SHELLDETAILS) : OleVariant;
function ConvertVariantTo_SHELLDETAILS(const V : OleVariant) : _SHELLDETAILS;
function Convert_SHITEMIDToVariant(var R : _SHITEMID) : OleVariant;
function ConvertVariantTo_SHITEMID(const V : OleVariant) : _SHITEMID;
function Convert_STRRETToVariant(var R : _STRRET) : OleVariant;
function ConvertVariantTo_STRRET(const V : OleVariant) : _STRRET;
function Convert_SV2CVW2_PARAMSToVariant(var R : _SV2CVW2_PARAMS) : OleVariant;
function ConvertVariantTo_SV2CVW2_PARAMS(const V : OleVariant) : _SV2CVW2_PARAMS;
function Convert_tagCOMPONENTToVariant(var R : _tagCOMPONENT) : OleVariant;
function ConvertVariantTo_tagCOMPONENT(const V : OleVariant) : _tagCOMPONENT;
function Convert_tagCOMPONENTSOPTToVariant(var R : _tagCOMPONENTSOPT) : OleVariant;
function ConvertVariantTo_tagCOMPONENTSOPT(const V : OleVariant) : _tagCOMPONENTSOPT;
function Convert_tagCOMPPOSToVariant(var R : _tagCOMPPOS) : OleVariant;
function ConvertVariantTo_tagCOMPPOS(const V : OleVariant) : _tagCOMPPOS;
function Convert_tagWALLPAPEROPTToVariant(var R : _tagWALLPAPEROPT) : OleVariant;
function ConvertVariantTo_tagWALLPAPEROPT(const V : OleVariant) : _tagWALLPAPEROPT;
function ConvertBROWSEINFOToVariant(var R : BROWSEINFO) : OleVariant;
function ConvertVariantToBROWSEINFO(const V : OleVariant) : BROWSEINFO;
function ConvertBROWSEINFOAToVariant(var R : BROWSEINFOA) : OleVariant;
function ConvertVariantToBROWSEINFOA(const V : OleVariant) : BROWSEINFOA;
function ConvertBROWSEINFOWToVariant(var R : BROWSEINFOW) : OleVariant;
function ConvertVariantToBROWSEINFOW(const V : OleVariant) : BROWSEINFOW;
function ConvertCIDAToVariant(var R : CIDA) : OleVariant;
function ConvertVariantToCIDA(const V : OleVariant) : CIDA;
function ConvertCMINVOKECOMMANDINFOToVariant(var R : CMINVOKECOMMANDINFO) : OleVariant;
function ConvertVariantToCMINVOKECOMMANDINFO(const V : OleVariant) : CMINVOKECOMMANDINFO;
function ConvertCMINVOKECOMMANDINFOEXToVariant(var R : CMINVOKECOMMANDINFOEX) : OleVariant;
function ConvertVariantToCMINVOKECOMMANDINFOEX(const V : OleVariant) : CMINVOKECOMMANDINFOEX;
function ConvertDESKBANDINFOToVariant(var R : DESKBANDINFO) : OleVariant;
function ConvertVariantToDESKBANDINFO(const V : OleVariant) : DESKBANDINFO;
function ConvertDROPFILESToVariant(var R : DROPFILES) : OleVariant;
function ConvertVariantToDROPFILES(const V : OleVariant) : DROPFILES;
function ConvertFILEDESCRIPTORToVariant(var R : FILEDESCRIPTOR) : OleVariant;
function ConvertVariantToFILEDESCRIPTOR(const V : OleVariant) : FILEDESCRIPTOR;
function ConvertFILEDESCRIPTORAToVariant(var R : FILEDESCRIPTORA) : OleVariant;
function ConvertVariantToFILEDESCRIPTORA(const V : OleVariant) : FILEDESCRIPTORA;
function ConvertFILEDESCRIPTORWToVariant(var R : FILEDESCRIPTORW) : OleVariant;
function ConvertVariantToFILEDESCRIPTORW(const V : OleVariant) : FILEDESCRIPTORW;
function ConvertFILEGROUPDESCRIPTORToVariant(var R : FILEGROUPDESCRIPTOR) : OleVariant;
function ConvertVariantToFILEGROUPDESCRIPTOR(const V : OleVariant) : FILEGROUPDESCRIPTOR;
function ConvertFILEGROUPDESCRIPTORAToVariant(var R : FILEGROUPDESCRIPTORA) : OleVariant;
function ConvertVariantToFILEGROUPDESCRIPTORA(const V : OleVariant) : FILEGROUPDESCRIPTORA;
function ConvertFILEGROUPDESCRIPTORWToVariant(var R : FILEGROUPDESCRIPTORW) : OleVariant;
function ConvertVariantToFILEGROUPDESCRIPTORW(const V : OleVariant) : FILEGROUPDESCRIPTORW;
function ConvertFOLDERSETTINGSToVariant(var R : FOLDERSETTINGS) : OleVariant;
function ConvertVariantToFOLDERSETTINGS(const V : OleVariant) : FOLDERSETTINGS;
function ConvertFVSHOWINFOToVariant(var R : FVSHOWINFO) : OleVariant;
function ConvertVariantToFVSHOWINFO(const V : OleVariant) : FVSHOWINFO;
function ConvertITEMIDLISTToVariant(var R : ITEMIDLIST) : OleVariant;
function ConvertVariantToITEMIDLIST(const V : OleVariant) : ITEMIDLIST;
function ConvertNRESARRAYToVariant(var R : NRESARRAY) : OleVariant;
function ConvertVariantToNRESARRAY(const V : OleVariant) : NRESARRAY;
function ConvertSHCOLUMNIDToVariant(var R : SHCOLUMNID) : OleVariant;
function ConvertVariantToSHCOLUMNID(const V : OleVariant) : SHCOLUMNID;
function ConvertSHDESCRIPTIONIDToVariant(var R : SHDESCRIPTIONID) : OleVariant;
function ConvertVariantToSHDESCRIPTIONID(const V : OleVariant) : SHDESCRIPTIONID;
function ConvertSHDRAGIMAGEToVariant(var R : SHDRAGIMAGE) : OleVariant;
function ConvertVariantToSHDRAGIMAGE(const V : OleVariant) : SHDRAGIMAGE;
function ConvertSHELLDETAILSToVariant(var R : SHELLDETAILS) : OleVariant;
function ConvertVariantToSHELLDETAILS(const V : OleVariant) : SHELLDETAILS;
function ConvertSHELLFLAGSTATEToVariant(var R : SHELLFLAGSTATE) : OleVariant;
function ConvertVariantToSHELLFLAGSTATE(const V : OleVariant) : SHELLFLAGSTATE;
function ConvertSHELLVIEWIDToVariant(var R : SHELLVIEWID) : OleVariant;
function ConvertVariantToSHELLVIEWID(const V : OleVariant) : SHELLVIEWID;
function ConvertSHITEMIDToVariant(var R : SHITEMID) : OleVariant;
function ConvertVariantToSHITEMID(const V : OleVariant) : SHITEMID;
function ConvertSTRRETToVariant(var R : STRRET) : OleVariant;
function ConvertVariantToSTRRET(const V : OleVariant) : STRRET;
function ConvertSV2CVW2_PARAMSToVariant(var R : SV2CVW2_PARAMS) : OleVariant;
function ConvertVariantToSV2CVW2_PARAMS(const V : OleVariant) : SV2CVW2_PARAMS;
function ConverttagExtraSearchToVariant(var R : tagExtraSearch) : OleVariant;
function ConvertVariantTotagExtraSearch(const V : OleVariant) : tagExtraSearch;
function ConvertTBrowseInfoToVariant(var R : TBrowseInfo) : OleVariant;
function ConvertVariantToTBrowseInfo(const V : OleVariant) : TBrowseInfo;
function ConvertTBrowseInfoAToVariant(var R : TBrowseInfoA) : OleVariant;
function ConvertVariantToTBrowseInfoA(const V : OleVariant) : TBrowseInfoA;
function ConvertTBrowseInfoWToVariant(var R : TBrowseInfoW) : OleVariant;
function ConvertVariantToTBrowseInfoW(const V : OleVariant) : TBrowseInfoW;
function ConvertTCMInvokeCommandInfoToVariant(var R : TCMInvokeCommandInfo) : OleVariant;
function ConvertVariantToTCMInvokeCommandInfo(const V : OleVariant) : TCMInvokeCommandInfo;
function ConvertTCMInvokeCommandInfoExToVariant(var R : TCMInvokeCommandInfoEx) : OleVariant;
function ConvertVariantToTCMInvokeCommandInfoEx(const V : OleVariant) : TCMInvokeCommandInfoEx;
function ConvertTComponentsOptToVariant(var R : TComponentsOpt) : OleVariant;
function ConvertVariantToTComponentsOpt(const V : OleVariant) : TComponentsOpt;
function ConvertTCompPosToVariant(var R : TCompPos) : OleVariant;
function ConvertVariantToTCompPos(const V : OleVariant) : TCompPos;
function ConvertTDeskBandInfoToVariant(var R : TDeskBandInfo) : OleVariant;
function ConvertVariantToTDeskBandInfo(const V : OleVariant) : TDeskBandInfo;
function ConvertTDropFilesToVariant(var R : TDropFiles) : OleVariant;
function ConvertVariantToTDropFiles(const V : OleVariant) : TDropFiles;
function ConvertTExtraSearchToVariant(var R : TExtraSearch) : OleVariant;
function ConvertVariantToTExtraSearch(const V : OleVariant) : TExtraSearch;
function ConvertTFileDescriptorToVariant(var R : TFileDescriptor) : OleVariant;
function ConvertVariantToTFileDescriptor(const V : OleVariant) : TFileDescriptor;
function ConvertTFileDescriptorAToVariant(var R : TFileDescriptorA) : OleVariant;
function ConvertVariantToTFileDescriptorA(const V : OleVariant) : TFileDescriptorA;
function ConvertTFileDescriptorWToVariant(var R : TFileDescriptorW) : OleVariant;
function ConvertVariantToTFileDescriptorW(const V : OleVariant) : TFileDescriptorW;
function ConvertTFileGroupDescriptorToVariant(var R : TFileGroupDescriptor) : OleVariant;
function ConvertVariantToTFileGroupDescriptor(const V : OleVariant) : TFileGroupDescriptor;
function ConvertTFileGroupDescriptorAToVariant(var R : TFileGroupDescriptorA) : OleVariant;
function ConvertVariantToTFileGroupDescriptorA(const V : OleVariant) : TFileGroupDescriptorA;
function ConvertTFileGroupDescriptorWToVariant(var R : TFileGroupDescriptorW) : OleVariant;
function ConvertVariantToTFileGroupDescriptorW(const V : OleVariant) : TFileGroupDescriptorW;
function ConvertTFolderSettingsToVariant(var R : TFolderSettings) : OleVariant;
function ConvertVariantToTFolderSettings(const V : OleVariant) : TFolderSettings;
function ConvertTFVShowInfoToVariant(var R : TFVShowInfo) : OleVariant;
function ConvertVariantToTFVShowInfo(const V : OleVariant) : TFVShowInfo;
function ConvertTIDAToVariant(var R : TIDA) : OleVariant;
function ConvertVariantToTIDA(const V : OleVariant) : TIDA;
function ConvertTItemIDListToVariant(var R : TItemIDList) : OleVariant;
function ConvertVariantToTItemIDList(const V : OleVariant) : TItemIDList;
function ConvertTNResArrayToVariant(var R : TNResArray) : OleVariant;
function ConvertVariantToTNResArray(const V : OleVariant) : TNResArray;
function ConvertTShColumnIDToVariant(var R : TShColumnID) : OleVariant;
function ConvertVariantToTShColumnID(const V : OleVariant) : TShColumnID;
function ConvertTShComponentToVariant(var R : TShComponent) : OleVariant;
function ConvertVariantToTShComponent(const V : OleVariant) : TShComponent;
function ConvertTSHDescriptionIDToVariant(var R : TSHDescriptionID) : OleVariant;
function ConvertVariantToTSHDescriptionID(const V : OleVariant) : TSHDescriptionID;
function ConvertTShDragImageToVariant(var R : TShDragImage) : OleVariant;
function ConvertVariantToTShDragImage(const V : OleVariant) : TShDragImage;
function ConvertTShellDetailsToVariant(var R : TShellDetails) : OleVariant;
function ConvertVariantToTShellDetails(const V : OleVariant) : TShellDetails;
function ConvertTShellFlagStateToVariant(var R : TShellFlagState) : OleVariant;
function ConvertVariantToTShellFlagState(const V : OleVariant) : TShellFlagState;
function ConvertTShellViewIDToVariant(var R : TShellViewID) : OleVariant;
function ConvertVariantToTShellViewID(const V : OleVariant) : TShellViewID;
function ConvertTSHItemIDToVariant(var R : TSHItemID) : OleVariant;
function ConvertVariantToTSHItemID(const V : OleVariant) : TSHItemID;
function ConvertTStrRetToVariant(var R : TStrRet) : OleVariant;
function ConvertVariantToTStrRet(const V : OleVariant) : TStrRet;
function ConvertTSV2CreateParamsToVariant(var R : TSV2CreateParams) : OleVariant;
function ConvertVariantToTSV2CreateParams(const V : OleVariant) : TSV2CreateParams;
function ConvertTWallPaperOptToVariant(var R : TWallPaperOpt) : OleVariant;
function ConvertVariantToTWallPaperOpt(const V : OleVariant) : TWallPaperOpt;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type ___browseinfo__Wrapper = class(TDCRecordWrapper)
private
fR : _browseinfo;
public
function GetRecordPtr : pointer; override;
published
procedure setulFlags(const val : UINT);
function getulFlags : UINT;
property ulFlags : UINT read getulFlags write setulFlags;
procedure setLParam(const val : LParam);
function getLParam : LParam;
property LParam : LParam read getLParam write setLParam;
procedure setiImage(const val : Integer);
function getiImage : Integer;
property iImage : Integer read getiImage write setiImage;
end;
type ___browseinfoA__Wrapper = class(TDCRecordWrapper)
private
fR : _browseinfoA;
public
function GetRecordPtr : pointer; override;
published
procedure setulFlags(const val : UINT);
function getulFlags : UINT;
property ulFlags : UINT read getulFlags write setulFlags;
procedure setLParam(const val : LParam);
function getLParam : LParam;
property LParam : LParam read getLParam write setLParam;
procedure setiImage(const val : Integer);
function getiImage : Integer;
property iImage : Integer read getiImage write setiImage;
end;
type ___browseinfoW__Wrapper = class(TDCRecordWrapper)
private
fR : _browseinfoW;
public
function GetRecordPtr : pointer; override;
published
procedure setulFlags(const val : UINT);
function getulFlags : UINT;
property ulFlags : UINT read getulFlags write setulFlags;
procedure setLParam(const val : LParam);
function getLParam : LParam;
property LParam : LParam read getLParam write setLParam;
procedure setiImage(const val : Integer);
function getiImage : Integer;
property iImage : Integer read getiImage write setiImage;
end;
type ___CMINVOKECOMMANDINFO__Wrapper = class(TDCRecordWrapper)
private
fR : _CMINVOKECOMMANDINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : DWORD);
function getfMask : DWORD;
property fMask : DWORD read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure sethIcon(const val : THandle);
function gethIcon : THandle;
property hIcon : THandle read gethIcon write sethIcon;
end;
type ___CMInvokeCommandInfoEx__Wrapper = class(TDCRecordWrapper)
private
fR : _CMInvokeCommandInfoEx;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : DWORD);
function getfMask : DWORD;
property fMask : DWORD read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure sethIcon(const val : THandle);
function gethIcon : THandle;
property hIcon : THandle read gethIcon write sethIcon;
end;
type ___DROPFILES__Wrapper = class(TDCRecordWrapper)
private
fR : _DROPFILES;
public
function GetRecordPtr : pointer; override;
published
procedure setpFiles(const val : DWORD);
function getpFiles : DWORD;
property pFiles : DWORD read getpFiles write setpFiles;
procedure setfNC(const val : BOOL);
function getfNC : BOOL;
property fNC : BOOL read getfNC write setfNC;
procedure setfWide(const val : BOOL);
function getfWide : BOOL;
property fWide : BOOL read getfWide write setfWide;
end;
type ___FILEDESCRIPTOR__Wrapper = class(TDCRecordWrapper)
private
fR : _FILEDESCRIPTOR;
public
function GetRecordPtr : pointer; override;
published
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwFileAttributes(const val : DWORD);
function getdwFileAttributes : DWORD;
property dwFileAttributes : DWORD read getdwFileAttributes write setdwFileAttributes;
procedure setnFileSizeHigh(const val : DWORD);
function getnFileSizeHigh : DWORD;
property nFileSizeHigh : DWORD read getnFileSizeHigh write setnFileSizeHigh;
procedure setnFileSizeLow(const val : DWORD);
function getnFileSizeLow : DWORD;
property nFileSizeLow : DWORD read getnFileSizeLow write setnFileSizeLow;
end;
type ___FILEDESCRIPTORA__Wrapper = class(TDCRecordWrapper)
private
fR : _FILEDESCRIPTORA;
public
function GetRecordPtr : pointer; override;
published
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwFileAttributes(const val : DWORD);
function getdwFileAttributes : DWORD;
property dwFileAttributes : DWORD read getdwFileAttributes write setdwFileAttributes;
procedure setnFileSizeHigh(const val : DWORD);
function getnFileSizeHigh : DWORD;
property nFileSizeHigh : DWORD read getnFileSizeHigh write setnFileSizeHigh;
procedure setnFileSizeLow(const val : DWORD);
function getnFileSizeLow : DWORD;
property nFileSizeLow : DWORD read getnFileSizeLow write setnFileSizeLow;
end;
type ___FILEDESCRIPTORW__Wrapper = class(TDCRecordWrapper)
private
fR : _FILEDESCRIPTORW;
public
function GetRecordPtr : pointer; override;
published
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwFileAttributes(const val : DWORD);
function getdwFileAttributes : DWORD;
property dwFileAttributes : DWORD read getdwFileAttributes write setdwFileAttributes;
procedure setnFileSizeHigh(const val : DWORD);
function getnFileSizeHigh : DWORD;
property nFileSizeHigh : DWORD read getnFileSizeHigh write setnFileSizeHigh;
procedure setnFileSizeLow(const val : DWORD);
function getnFileSizeLow : DWORD;
property nFileSizeLow : DWORD read getnFileSizeLow write setnFileSizeLow;
end;
type ___FILEGROUPDESCRIPTOR__Wrapper = class(TDCRecordWrapper)
private
fR : _FILEGROUPDESCRIPTOR;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type ___FILEGROUPDESCRIPTORA__Wrapper = class(TDCRecordWrapper)
private
fR : _FILEGROUPDESCRIPTORA;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type ___FILEGROUPDESCRIPTORW__Wrapper = class(TDCRecordWrapper)
private
fR : _FILEGROUPDESCRIPTORW;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type ___IDA__Wrapper = class(TDCRecordWrapper)
private
fR : _IDA;
public
function GetRecordPtr : pointer; override;
published
procedure setcidl(const val : UINT);
function getcidl : UINT;
property cidl : UINT read getcidl write setcidl;
end;
type ___ITEMIDLIST__Wrapper = class(TDCRecordWrapper)
private
fR : _ITEMIDLIST;
public
function GetRecordPtr : pointer; override;
published
end;
type ___NRESARRAY__Wrapper = class(TDCRecordWrapper)
private
fR : _NRESARRAY;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type ___SHDESCRIPTIONID__Wrapper = class(TDCRecordWrapper)
private
fR : _SHDESCRIPTIONID;
public
function GetRecordPtr : pointer; override;
published
procedure setdwDescriptionId(const val : DWORD);
function getdwDescriptionId : DWORD;
property dwDescriptionId : DWORD read getdwDescriptionId write setdwDescriptionId;
end;
type ___SHELLDETAILS__Wrapper = class(TDCRecordWrapper)
private
fR : _SHELLDETAILS;
public
function GetRecordPtr : pointer; override;
published
procedure setfmt(const val : Integer);
function getfmt : Integer;
property fmt : Integer read getfmt write setfmt;
procedure setcxChar(const val : Integer);
function getcxChar : Integer;
property cxChar : Integer read getcxChar write setcxChar;
end;
type ___SHITEMID__Wrapper = class(TDCRecordWrapper)
private
fR : _SHITEMID;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Word);
function getcb : Word;
property cb : Word read getcb write setcb;
end;
type ___STRRET__Wrapper = class(TDCRecordWrapper)
private
fR : _STRRET;
public
function GetRecordPtr : pointer; override;
published
procedure setuType(const val : UINT);
function getuType : UINT;
property uType : UINT read getuType write setuType;
procedure setuOffset(const val : UINT);
function getuOffset : UINT;
property uOffset : UINT read getuOffset write setuOffset;
end;
type ___SV2CVW2_PARAMS__Wrapper = class(TDCRecordWrapper)
private
fR : _SV2CVW2_PARAMS;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
end;
type ___tagCOMPONENT__Wrapper = class(TDCRecordWrapper)
private
fR : _tagCOMPONENT;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwID(const val : DWORD);
function getdwID : DWORD;
property dwID : DWORD read getdwID write setdwID;
procedure setiComponentType(const val : Integer);
function getiComponentType : Integer;
property iComponentType : Integer read getiComponentType write setiComponentType;
procedure setfChecked(const val : BOOL);
function getfChecked : BOOL;
property fChecked : BOOL read getfChecked write setfChecked;
procedure setfDirty(const val : BOOL);
function getfDirty : BOOL;
property fDirty : BOOL read getfDirty write setfDirty;
procedure setfNoScroll(const val : BOOL);
function getfNoScroll : BOOL;
property fNoScroll : BOOL read getfNoScroll write setfNoScroll;
end;
type ___tagCOMPONENTSOPT__Wrapper = class(TDCRecordWrapper)
private
fR : _tagCOMPONENTSOPT;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setfEnableComponents(const val : BOOL);
function getfEnableComponents : BOOL;
property fEnableComponents : BOOL read getfEnableComponents write setfEnableComponents;
procedure setfActiveDesktop(const val : BOOL);
function getfActiveDesktop : BOOL;
property fActiveDesktop : BOOL read getfActiveDesktop write setfActiveDesktop;
end;
type ___tagCOMPPOS__Wrapper = class(TDCRecordWrapper)
private
fR : _tagCOMPPOS;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setiLeft(const val : Integer);
function getiLeft : Integer;
property iLeft : Integer read getiLeft write setiLeft;
procedure setiTop(const val : Integer);
function getiTop : Integer;
property iTop : Integer read getiTop write setiTop;
procedure setdwWidth(const val : DWORD);
function getdwWidth : DWORD;
property dwWidth : DWORD read getdwWidth write setdwWidth;
procedure setdwHeight(const val : DWORD);
function getdwHeight : DWORD;
property dwHeight : DWORD read getdwHeight write setdwHeight;
procedure setizIndex(const val : Integer);
function getizIndex : Integer;
property izIndex : Integer read getizIndex write setizIndex;
procedure setfCanResize(const val : BOOL);
function getfCanResize : BOOL;
property fCanResize : BOOL read getfCanResize write setfCanResize;
procedure setfCanResizeX(const val : BOOL);
function getfCanResizeX : BOOL;
property fCanResizeX : BOOL read getfCanResizeX write setfCanResizeX;
procedure setfCanResizeY(const val : BOOL);
function getfCanResizeY : BOOL;
property fCanResizeY : BOOL read getfCanResizeY write setfCanResizeY;
procedure setiPreferredLeftPercent(const val : Integer);
function getiPreferredLeftPercent : Integer;
property iPreferredLeftPercent : Integer read getiPreferredLeftPercent write setiPreferredLeftPercent;
procedure setiPreferredTopPercent(const val : Integer);
function getiPreferredTopPercent : Integer;
property iPreferredTopPercent : Integer read getiPreferredTopPercent write setiPreferredTopPercent;
end;
type ___tagWALLPAPEROPT__Wrapper = class(TDCRecordWrapper)
private
fR : _tagWALLPAPEROPT;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwStyle(const val : DWORD);
function getdwStyle : DWORD;
property dwStyle : DWORD read getdwStyle write setdwStyle;
end;
type __BROWSEINFO__Wrapper = class(TDCRecordWrapper)
private
fR : BROWSEINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setulFlags(const val : UINT);
function getulFlags : UINT;
property ulFlags : UINT read getulFlags write setulFlags;
procedure setLParam(const val : LParam);
function getLParam : LParam;
property LParam : LParam read getLParam write setLParam;
procedure setiImage(const val : Integer);
function getiImage : Integer;
property iImage : Integer read getiImage write setiImage;
end;
type __BROWSEINFOA__Wrapper = class(TDCRecordWrapper)
private
fR : BROWSEINFOA;
public
function GetRecordPtr : pointer; override;
published
procedure setulFlags(const val : UINT);
function getulFlags : UINT;
property ulFlags : UINT read getulFlags write setulFlags;
procedure setLParam(const val : LParam);
function getLParam : LParam;
property LParam : LParam read getLParam write setLParam;
procedure setiImage(const val : Integer);
function getiImage : Integer;
property iImage : Integer read getiImage write setiImage;
end;
type __BROWSEINFOW__Wrapper = class(TDCRecordWrapper)
private
fR : BROWSEINFOW;
public
function GetRecordPtr : pointer; override;
published
procedure setulFlags(const val : UINT);
function getulFlags : UINT;
property ulFlags : UINT read getulFlags write setulFlags;
procedure setLParam(const val : LParam);
function getLParam : LParam;
property LParam : LParam read getLParam write setLParam;
procedure setiImage(const val : Integer);
function getiImage : Integer;
property iImage : Integer read getiImage write setiImage;
end;
type __CIDA__Wrapper = class(TDCRecordWrapper)
private
fR : CIDA;
public
function GetRecordPtr : pointer; override;
published
procedure setcidl(const val : UINT);
function getcidl : UINT;
property cidl : UINT read getcidl write setcidl;
end;
type __CMINVOKECOMMANDINFO__Wrapper = class(TDCRecordWrapper)
private
fR : CMINVOKECOMMANDINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : DWORD);
function getfMask : DWORD;
property fMask : DWORD read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure sethIcon(const val : THandle);
function gethIcon : THandle;
property hIcon : THandle read gethIcon write sethIcon;
end;
type __CMINVOKECOMMANDINFOEX__Wrapper = class(TDCRecordWrapper)
private
fR : CMINVOKECOMMANDINFOEX;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : DWORD);
function getfMask : DWORD;
property fMask : DWORD read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure sethIcon(const val : THandle);
function gethIcon : THandle;
property hIcon : THandle read gethIcon write sethIcon;
end;
type __DESKBANDINFO__Wrapper = class(TDCRecordWrapper)
private
fR : DESKBANDINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setdwMask(const val : DWORD);
function getdwMask : DWORD;
property dwMask : DWORD read getdwMask write setdwMask;
procedure setdwModeFlags(const val : DWORD);
function getdwModeFlags : DWORD;
property dwModeFlags : DWORD read getdwModeFlags write setdwModeFlags;
procedure setcrBkgnd(const val : COLORREF);
function getcrBkgnd : COLORREF;
property crBkgnd : COLORREF read getcrBkgnd write setcrBkgnd;
end;
type __DROPFILES__Wrapper = class(TDCRecordWrapper)
private
fR : DROPFILES;
public
function GetRecordPtr : pointer; override;
published
procedure setpFiles(const val : DWORD);
function getpFiles : DWORD;
property pFiles : DWORD read getpFiles write setpFiles;
procedure setfNC(const val : BOOL);
function getfNC : BOOL;
property fNC : BOOL read getfNC write setfNC;
procedure setfWide(const val : BOOL);
function getfWide : BOOL;
property fWide : BOOL read getfWide write setfWide;
end;
type __FILEDESCRIPTOR__Wrapper = class(TDCRecordWrapper)
private
fR : FILEDESCRIPTOR;
public
function GetRecordPtr : pointer; override;
published
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwFileAttributes(const val : DWORD);
function getdwFileAttributes : DWORD;
property dwFileAttributes : DWORD read getdwFileAttributes write setdwFileAttributes;
procedure setnFileSizeHigh(const val : DWORD);
function getnFileSizeHigh : DWORD;
property nFileSizeHigh : DWORD read getnFileSizeHigh write setnFileSizeHigh;
procedure setnFileSizeLow(const val : DWORD);
function getnFileSizeLow : DWORD;
property nFileSizeLow : DWORD read getnFileSizeLow write setnFileSizeLow;
end;
type __FILEDESCRIPTORA__Wrapper = class(TDCRecordWrapper)
private
fR : FILEDESCRIPTORA;
public
function GetRecordPtr : pointer; override;
published
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwFileAttributes(const val : DWORD);
function getdwFileAttributes : DWORD;
property dwFileAttributes : DWORD read getdwFileAttributes write setdwFileAttributes;
procedure setnFileSizeHigh(const val : DWORD);
function getnFileSizeHigh : DWORD;
property nFileSizeHigh : DWORD read getnFileSizeHigh write setnFileSizeHigh;
procedure setnFileSizeLow(const val : DWORD);
function getnFileSizeLow : DWORD;
property nFileSizeLow : DWORD read getnFileSizeLow write setnFileSizeLow;
end;
type __FILEDESCRIPTORW__Wrapper = class(TDCRecordWrapper)
private
fR : FILEDESCRIPTORW;
public
function GetRecordPtr : pointer; override;
published
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwFileAttributes(const val : DWORD);
function getdwFileAttributes : DWORD;
property dwFileAttributes : DWORD read getdwFileAttributes write setdwFileAttributes;
procedure setnFileSizeHigh(const val : DWORD);
function getnFileSizeHigh : DWORD;
property nFileSizeHigh : DWORD read getnFileSizeHigh write setnFileSizeHigh;
procedure setnFileSizeLow(const val : DWORD);
function getnFileSizeLow : DWORD;
property nFileSizeLow : DWORD read getnFileSizeLow write setnFileSizeLow;
end;
type __FILEGROUPDESCRIPTOR__Wrapper = class(TDCRecordWrapper)
private
fR : FILEGROUPDESCRIPTOR;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type __FILEGROUPDESCRIPTORA__Wrapper = class(TDCRecordWrapper)
private
fR : FILEGROUPDESCRIPTORA;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type __FILEGROUPDESCRIPTORW__Wrapper = class(TDCRecordWrapper)
private
fR : FILEGROUPDESCRIPTORW;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type __FOLDERSETTINGS__Wrapper = class(TDCRecordWrapper)
private
fR : FOLDERSETTINGS;
public
function GetRecordPtr : pointer; override;
published
procedure setViewMode(const val : UINT);
function getViewMode : UINT;
property ViewMode : UINT read getViewMode write setViewMode;
procedure setfFlags(const val : UINT);
function getfFlags : UINT;
property fFlags : UINT read getfFlags write setfFlags;
end;
type __FVSHOWINFO__Wrapper = class(TDCRecordWrapper)
private
fR : FVSHOWINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setiShow(const val : Integer);
function getiShow : Integer;
property iShow : Integer read getiShow write setiShow;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
end;
type __ITEMIDLIST__Wrapper = class(TDCRecordWrapper)
private
fR : ITEMIDLIST;
public
function GetRecordPtr : pointer; override;
published
end;
type __NRESARRAY__Wrapper = class(TDCRecordWrapper)
private
fR : NRESARRAY;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type __SHCOLUMNID__Wrapper = class(TDCRecordWrapper)
private
fR : SHCOLUMNID;
public
function GetRecordPtr : pointer; override;
published
procedure setpid(const val : DWORD);
function getpid : DWORD;
property pid : DWORD read getpid write setpid;
end;
type __SHDESCRIPTIONID__Wrapper = class(TDCRecordWrapper)
private
fR : SHDESCRIPTIONID;
public
function GetRecordPtr : pointer; override;
published
procedure setdwDescriptionId(const val : DWORD);
function getdwDescriptionId : DWORD;
property dwDescriptionId : DWORD read getdwDescriptionId write setdwDescriptionId;
end;
type __SHDRAGIMAGE__Wrapper = class(TDCRecordWrapper)
private
fR : SHDRAGIMAGE;
public
function GetRecordPtr : pointer; override;
published
procedure setcrColorKey(const val : COLORREF);
function getcrColorKey : COLORREF;
property crColorKey : COLORREF read getcrColorKey write setcrColorKey;
end;
type __SHELLDETAILS__Wrapper = class(TDCRecordWrapper)
private
fR : SHELLDETAILS;
public
function GetRecordPtr : pointer; override;
published
procedure setfmt(const val : Integer);
function getfmt : Integer;
property fmt : Integer read getfmt write setfmt;
procedure setcxChar(const val : Integer);
function getcxChar : Integer;
property cxChar : Integer read getcxChar write setcxChar;
end;
type __SHELLFLAGSTATE__Wrapper = class(TDCRecordWrapper)
private
fR : SHELLFLAGSTATE;
public
function GetRecordPtr : pointer; override;
published
procedure setData(const val : Word);
function getData : Word;
property Data : Word read getData write setData;
end;
type __SHELLVIEWID__Wrapper = class(TDCRecordWrapper)
private
fR : SHELLVIEWID;
public
function GetRecordPtr : pointer; override;
published
procedure setD1(const val : LongWord);
function getD1 : LongWord;
property D1 : LongWord read getD1 write setD1;
procedure setD2(const val : Word);
function getD2 : Word;
property D2 : Word read getD2 write setD2;
procedure setD3(const val : Word);
function getD3 : Word;
property D3 : Word read getD3 write setD3;
end;
type __SHITEMID__Wrapper = class(TDCRecordWrapper)
private
fR : SHITEMID;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Word);
function getcb : Word;
property cb : Word read getcb write setcb;
end;
type __STRRET__Wrapper = class(TDCRecordWrapper)
private
fR : STRRET;
public
function GetRecordPtr : pointer; override;
published
procedure setuType(const val : UINT);
function getuType : UINT;
property uType : UINT read getuType write setuType;
procedure setuOffset(const val : UINT);
function getuOffset : UINT;
property uOffset : UINT read getuOffset write setuOffset;
end;
type __SV2CVW2_PARAMS__Wrapper = class(TDCRecordWrapper)
private
fR : SV2CVW2_PARAMS;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
end;
type __tagExtraSearch__Wrapper = class(TDCRecordWrapper)
private
fR : tagExtraSearch;
public
function GetRecordPtr : pointer; override;
published
end;
type __TBrowseInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TBrowseInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setulFlags(const val : UINT);
function getulFlags : UINT;
property ulFlags : UINT read getulFlags write setulFlags;
procedure setLParam(const val : LParam);
function getLParam : LParam;
property LParam : LParam read getLParam write setLParam;
procedure setiImage(const val : Integer);
function getiImage : Integer;
property iImage : Integer read getiImage write setiImage;
end;
type __TBrowseInfoA__Wrapper = class(TDCRecordWrapper)
private
fR : TBrowseInfoA;
public
function GetRecordPtr : pointer; override;
published
procedure setulFlags(const val : UINT);
function getulFlags : UINT;
property ulFlags : UINT read getulFlags write setulFlags;
procedure setLParam(const val : LParam);
function getLParam : LParam;
property LParam : LParam read getLParam write setLParam;
procedure setiImage(const val : Integer);
function getiImage : Integer;
property iImage : Integer read getiImage write setiImage;
end;
type __TBrowseInfoW__Wrapper = class(TDCRecordWrapper)
private
fR : TBrowseInfoW;
public
function GetRecordPtr : pointer; override;
published
procedure setulFlags(const val : UINT);
function getulFlags : UINT;
property ulFlags : UINT read getulFlags write setulFlags;
procedure setLParam(const val : LParam);
function getLParam : LParam;
property LParam : LParam read getLParam write setLParam;
procedure setiImage(const val : Integer);
function getiImage : Integer;
property iImage : Integer read getiImage write setiImage;
end;
type __TCMInvokeCommandInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TCMInvokeCommandInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : DWORD);
function getfMask : DWORD;
property fMask : DWORD read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure sethIcon(const val : THandle);
function gethIcon : THandle;
property hIcon : THandle read gethIcon write sethIcon;
end;
type __TCMInvokeCommandInfoEx__Wrapper = class(TDCRecordWrapper)
private
fR : TCMInvokeCommandInfoEx;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setfMask(const val : DWORD);
function getfMask : DWORD;
property fMask : DWORD read getfMask write setfMask;
procedure setnShow(const val : Integer);
function getnShow : Integer;
property nShow : Integer read getnShow write setnShow;
procedure setdwHotKey(const val : DWORD);
function getdwHotKey : DWORD;
property dwHotKey : DWORD read getdwHotKey write setdwHotKey;
procedure sethIcon(const val : THandle);
function gethIcon : THandle;
property hIcon : THandle read gethIcon write sethIcon;
end;
type __TComponentsOpt__Wrapper = class(TDCRecordWrapper)
private
fR : TComponentsOpt;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setfEnableComponents(const val : BOOL);
function getfEnableComponents : BOOL;
property fEnableComponents : BOOL read getfEnableComponents write setfEnableComponents;
procedure setfActiveDesktop(const val : BOOL);
function getfActiveDesktop : BOOL;
property fActiveDesktop : BOOL read getfActiveDesktop write setfActiveDesktop;
end;
type __TCompPos__Wrapper = class(TDCRecordWrapper)
private
fR : TCompPos;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setiLeft(const val : Integer);
function getiLeft : Integer;
property iLeft : Integer read getiLeft write setiLeft;
procedure setiTop(const val : Integer);
function getiTop : Integer;
property iTop : Integer read getiTop write setiTop;
procedure setdwWidth(const val : DWORD);
function getdwWidth : DWORD;
property dwWidth : DWORD read getdwWidth write setdwWidth;
procedure setdwHeight(const val : DWORD);
function getdwHeight : DWORD;
property dwHeight : DWORD read getdwHeight write setdwHeight;
procedure setizIndex(const val : Integer);
function getizIndex : Integer;
property izIndex : Integer read getizIndex write setizIndex;
procedure setfCanResize(const val : BOOL);
function getfCanResize : BOOL;
property fCanResize : BOOL read getfCanResize write setfCanResize;
procedure setfCanResizeX(const val : BOOL);
function getfCanResizeX : BOOL;
property fCanResizeX : BOOL read getfCanResizeX write setfCanResizeX;
procedure setfCanResizeY(const val : BOOL);
function getfCanResizeY : BOOL;
property fCanResizeY : BOOL read getfCanResizeY write setfCanResizeY;
procedure setiPreferredLeftPercent(const val : Integer);
function getiPreferredLeftPercent : Integer;
property iPreferredLeftPercent : Integer read getiPreferredLeftPercent write setiPreferredLeftPercent;
procedure setiPreferredTopPercent(const val : Integer);
function getiPreferredTopPercent : Integer;
property iPreferredTopPercent : Integer read getiPreferredTopPercent write setiPreferredTopPercent;
end;
type __TDeskBandInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TDeskBandInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setdwMask(const val : DWORD);
function getdwMask : DWORD;
property dwMask : DWORD read getdwMask write setdwMask;
procedure setdwModeFlags(const val : DWORD);
function getdwModeFlags : DWORD;
property dwModeFlags : DWORD read getdwModeFlags write setdwModeFlags;
procedure setcrBkgnd(const val : COLORREF);
function getcrBkgnd : COLORREF;
property crBkgnd : COLORREF read getcrBkgnd write setcrBkgnd;
end;
type __TDropFiles__Wrapper = class(TDCRecordWrapper)
private
fR : TDropFiles;
public
function GetRecordPtr : pointer; override;
published
procedure setpFiles(const val : DWORD);
function getpFiles : DWORD;
property pFiles : DWORD read getpFiles write setpFiles;
procedure setfNC(const val : BOOL);
function getfNC : BOOL;
property fNC : BOOL read getfNC write setfNC;
procedure setfWide(const val : BOOL);
function getfWide : BOOL;
property fWide : BOOL read getfWide write setfWide;
end;
type __TExtraSearch__Wrapper = class(TDCRecordWrapper)
private
fR : TExtraSearch;
public
function GetRecordPtr : pointer; override;
published
end;
type __TFileDescriptor__Wrapper = class(TDCRecordWrapper)
private
fR : TFileDescriptor;
public
function GetRecordPtr : pointer; override;
published
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwFileAttributes(const val : DWORD);
function getdwFileAttributes : DWORD;
property dwFileAttributes : DWORD read getdwFileAttributes write setdwFileAttributes;
procedure setnFileSizeHigh(const val : DWORD);
function getnFileSizeHigh : DWORD;
property nFileSizeHigh : DWORD read getnFileSizeHigh write setnFileSizeHigh;
procedure setnFileSizeLow(const val : DWORD);
function getnFileSizeLow : DWORD;
property nFileSizeLow : DWORD read getnFileSizeLow write setnFileSizeLow;
end;
type __TFileDescriptorA__Wrapper = class(TDCRecordWrapper)
private
fR : TFileDescriptorA;
public
function GetRecordPtr : pointer; override;
published
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwFileAttributes(const val : DWORD);
function getdwFileAttributes : DWORD;
property dwFileAttributes : DWORD read getdwFileAttributes write setdwFileAttributes;
procedure setnFileSizeHigh(const val : DWORD);
function getnFileSizeHigh : DWORD;
property nFileSizeHigh : DWORD read getnFileSizeHigh write setnFileSizeHigh;
procedure setnFileSizeLow(const val : DWORD);
function getnFileSizeLow : DWORD;
property nFileSizeLow : DWORD read getnFileSizeLow write setnFileSizeLow;
end;
type __TFileDescriptorW__Wrapper = class(TDCRecordWrapper)
private
fR : TFileDescriptorW;
public
function GetRecordPtr : pointer; override;
published
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwFileAttributes(const val : DWORD);
function getdwFileAttributes : DWORD;
property dwFileAttributes : DWORD read getdwFileAttributes write setdwFileAttributes;
procedure setnFileSizeHigh(const val : DWORD);
function getnFileSizeHigh : DWORD;
property nFileSizeHigh : DWORD read getnFileSizeHigh write setnFileSizeHigh;
procedure setnFileSizeLow(const val : DWORD);
function getnFileSizeLow : DWORD;
property nFileSizeLow : DWORD read getnFileSizeLow write setnFileSizeLow;
end;
type __TFileGroupDescriptor__Wrapper = class(TDCRecordWrapper)
private
fR : TFileGroupDescriptor;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type __TFileGroupDescriptorA__Wrapper = class(TDCRecordWrapper)
private
fR : TFileGroupDescriptorA;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type __TFileGroupDescriptorW__Wrapper = class(TDCRecordWrapper)
private
fR : TFileGroupDescriptorW;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type __TFolderSettings__Wrapper = class(TDCRecordWrapper)
private
fR : TFolderSettings;
public
function GetRecordPtr : pointer; override;
published
procedure setViewMode(const val : UINT);
function getViewMode : UINT;
property ViewMode : UINT read getViewMode write setViewMode;
procedure setfFlags(const val : UINT);
function getfFlags : UINT;
property fFlags : UINT read getfFlags write setfFlags;
end;
type __TFVShowInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TFVShowInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setiShow(const val : Integer);
function getiShow : Integer;
property iShow : Integer read getiShow write setiShow;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
end;
type __TIDA__Wrapper = class(TDCRecordWrapper)
private
fR : TIDA;
public
function GetRecordPtr : pointer; override;
published
procedure setcidl(const val : UINT);
function getcidl : UINT;
property cidl : UINT read getcidl write setcidl;
end;
type __TItemIDList__Wrapper = class(TDCRecordWrapper)
private
fR : TItemIDList;
public
function GetRecordPtr : pointer; override;
published
end;
type __TNResArray__Wrapper = class(TDCRecordWrapper)
private
fR : TNResArray;
public
function GetRecordPtr : pointer; override;
published
procedure setcItems(const val : UINT);
function getcItems : UINT;
property cItems : UINT read getcItems write setcItems;
end;
type __TShColumnID__Wrapper = class(TDCRecordWrapper)
private
fR : TShColumnID;
public
function GetRecordPtr : pointer; override;
published
procedure setpid(const val : DWORD);
function getpid : DWORD;
property pid : DWORD read getpid write setpid;
end;
type __TShComponent__Wrapper = class(TDCRecordWrapper)
private
fR : TShComponent;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwID(const val : DWORD);
function getdwID : DWORD;
property dwID : DWORD read getdwID write setdwID;
procedure setiComponentType(const val : Integer);
function getiComponentType : Integer;
property iComponentType : Integer read getiComponentType write setiComponentType;
procedure setfChecked(const val : BOOL);
function getfChecked : BOOL;
property fChecked : BOOL read getfChecked write setfChecked;
procedure setfDirty(const val : BOOL);
function getfDirty : BOOL;
property fDirty : BOOL read getfDirty write setfDirty;
procedure setfNoScroll(const val : BOOL);
function getfNoScroll : BOOL;
property fNoScroll : BOOL read getfNoScroll write setfNoScroll;
end;
type __TSHDescriptionID__Wrapper = class(TDCRecordWrapper)
private
fR : TSHDescriptionID;
public
function GetRecordPtr : pointer; override;
published
procedure setdwDescriptionId(const val : DWORD);
function getdwDescriptionId : DWORD;
property dwDescriptionId : DWORD read getdwDescriptionId write setdwDescriptionId;
end;
type __TShDragImage__Wrapper = class(TDCRecordWrapper)
private
fR : TShDragImage;
public
function GetRecordPtr : pointer; override;
published
procedure setcrColorKey(const val : COLORREF);
function getcrColorKey : COLORREF;
property crColorKey : COLORREF read getcrColorKey write setcrColorKey;
end;
type __TShellDetails__Wrapper = class(TDCRecordWrapper)
private
fR : TShellDetails;
public
function GetRecordPtr : pointer; override;
published
procedure setfmt(const val : Integer);
function getfmt : Integer;
property fmt : Integer read getfmt write setfmt;
procedure setcxChar(const val : Integer);
function getcxChar : Integer;
property cxChar : Integer read getcxChar write setcxChar;
end;
type __TShellFlagState__Wrapper = class(TDCRecordWrapper)
private
fR : TShellFlagState;
public
function GetRecordPtr : pointer; override;
published
procedure setData(const val : Word);
function getData : Word;
property Data : Word read getData write setData;
end;
type __TShellViewID__Wrapper = class(TDCRecordWrapper)
private
fR : TShellViewID;
public
function GetRecordPtr : pointer; override;
published
procedure setD1(const val : LongWord);
function getD1 : LongWord;
property D1 : LongWord read getD1 write setD1;
procedure setD2(const val : Word);
function getD2 : Word;
property D2 : Word read getD2 write setD2;
procedure setD3(const val : Word);
function getD3 : Word;
property D3 : Word read getD3 write setD3;
end;
type __TSHItemID__Wrapper = class(TDCRecordWrapper)
private
fR : TSHItemID;
public
function GetRecordPtr : pointer; override;
published
procedure setcb(const val : Word);
function getcb : Word;
property cb : Word read getcb write setcb;
end;
type __TStrRet__Wrapper = class(TDCRecordWrapper)
private
fR : TStrRet;
public
function GetRecordPtr : pointer; override;
published
procedure setuType(const val : UINT);
function getuType : UINT;
property uType : UINT read getuType write setuType;
procedure setuOffset(const val : UINT);
function getuOffset : UINT;
property uOffset : UINT read getuOffset write setuOffset;
end;
type __TSV2CreateParams__Wrapper = class(TDCRecordWrapper)
private
fR : TSV2CreateParams;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
end;
type __TWallPaperOpt__Wrapper = class(TDCRecordWrapper)
private
fR : TWallPaperOpt;
public
function GetRecordPtr : pointer; override;
published
procedure setdwSize(const val : DWORD);
function getdwSize : DWORD;
property dwSize : DWORD read getdwSize write setdwSize;
procedure setdwStyle(const val : DWORD);
function getdwStyle : DWORD;
property dwStyle : DWORD read getdwStyle write setdwStyle;
end;
type
{_T0 = function (var p0 : IMalloc): HResult of object;}

{_T1 = function (p0 : PItemIDList;
p1 : PChar): BOOL of object;}

{_T2 = function (p0 : PItemIDList;
p1 : PAnsiChar): BOOL of object;}

{_T3 = function (p0 : PItemIDList;
p1 : PWideChar): BOOL of object;}

{_T4 = function (p0 : hwnd;
p1 : Integer;
var p2 : PItemIDList): HResult of object;}

{_T5 = function (p0 : hwnd;
p1 : PChar;
p2 : Integer;
p3 : BOOL): BOOL of object;}

{_T6 = function (p0 : hwnd;
p1 : PAnsiChar;
p2 : Integer;
p3 : BOOL): BOOL of object;}

{_T7 = function (p0 : hwnd;
p1 : PWideChar;
p2 : Integer;
p3 : BOOL): BOOL of object;}

{_T12 = function (var p0 : IShellFolder): HResult of object;}

_T13 = procedure (p0 : Longint;
p1 : UINT;
p2 : Pointer;
p3 : Pointer) of object;

_T14 = procedure (p0 : UINT;
p1 : Pointer) of object;

{_T15 = function (var p0 : IUnknown): HResult of object;}

{_T16 = function (p0 : IShellFolder;
p1 : PItemIDList;
p2 : Integer;
p3 : Pointer;
p4 : Integer): HResult of object;}

{_T17 = function (p0 : IShellFolder;
p1 : PItemIDList;
p2 : Integer;
p3 : Pointer;
p4 : Integer): HResult of object;}

{_T18 = function (p0 : IShellFolder;
p1 : PItemIDList;
p2 : Integer;
p3 : Pointer;
p4 : Integer): HResult of object;}

_T19 = procedure (const p0 : IDispatch;
p1 : DWORD) of object;

function ___browseinfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___browseinfo__Wrapper.setulFlags(const val : UINT);
begin
_browseinfo(GetRecordPtr^).ulFlags := val;
end;
function ___browseinfo__Wrapper.getulFlags : UINT;
begin
result := _browseinfo(GetRecordPtr^).ulFlags;
end;
procedure ___browseinfo__Wrapper.setLParam(const val : LParam);
begin
_browseinfo(GetRecordPtr^).LParam := val;
end;
function ___browseinfo__Wrapper.getLParam : LParam;
begin
result := _browseinfo(GetRecordPtr^).LParam;
end;
procedure ___browseinfo__Wrapper.setiImage(const val : Integer);
begin
_browseinfo(GetRecordPtr^).iImage := val;
end;
function ___browseinfo__Wrapper.getiImage : Integer;
begin
result := _browseinfo(GetRecordPtr^).iImage;
end;
function ___browseinfoA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___browseinfoA__Wrapper.setulFlags(const val : UINT);
begin
_browseinfoA(GetRecordPtr^).ulFlags := val;
end;
function ___browseinfoA__Wrapper.getulFlags : UINT;
begin
result := _browseinfoA(GetRecordPtr^).ulFlags;
end;
procedure ___browseinfoA__Wrapper.setLParam(const val : LParam);
begin
_browseinfoA(GetRecordPtr^).LParam := val;
end;
function ___browseinfoA__Wrapper.getLParam : LParam;
begin
result := _browseinfoA(GetRecordPtr^).LParam;
end;
procedure ___browseinfoA__Wrapper.setiImage(const val : Integer);
begin
_browseinfoA(GetRecordPtr^).iImage := val;
end;
function ___browseinfoA__Wrapper.getiImage : Integer;
begin
result := _browseinfoA(GetRecordPtr^).iImage;
end;
function ___browseinfoW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___browseinfoW__Wrapper.setulFlags(const val : UINT);
begin
_browseinfoW(GetRecordPtr^).ulFlags := val;
end;
function ___browseinfoW__Wrapper.getulFlags : UINT;
begin
result := _browseinfoW(GetRecordPtr^).ulFlags;
end;
procedure ___browseinfoW__Wrapper.setLParam(const val : LParam);
begin
_browseinfoW(GetRecordPtr^).LParam := val;
end;
function ___browseinfoW__Wrapper.getLParam : LParam;
begin
result := _browseinfoW(GetRecordPtr^).LParam;
end;
procedure ___browseinfoW__Wrapper.setiImage(const val : Integer);
begin
_browseinfoW(GetRecordPtr^).iImage := val;
end;
function ___browseinfoW__Wrapper.getiImage : Integer;
begin
result := _browseinfoW(GetRecordPtr^).iImage;
end;
function ___CMINVOKECOMMANDINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___CMINVOKECOMMANDINFO__Wrapper.setcbSize(const val : DWORD);
begin
_CMINVOKECOMMANDINFO(GetRecordPtr^).cbSize := val;
end;
function ___CMINVOKECOMMANDINFO__Wrapper.getcbSize : DWORD;
begin
result := _CMINVOKECOMMANDINFO(GetRecordPtr^).cbSize;
end;
procedure ___CMINVOKECOMMANDINFO__Wrapper.setfMask(const val : DWORD);
begin
_CMINVOKECOMMANDINFO(GetRecordPtr^).fMask := val;
end;
function ___CMINVOKECOMMANDINFO__Wrapper.getfMask : DWORD;
begin
result := _CMINVOKECOMMANDINFO(GetRecordPtr^).fMask;
end;
procedure ___CMINVOKECOMMANDINFO__Wrapper.setnShow(const val : Integer);
begin
_CMINVOKECOMMANDINFO(GetRecordPtr^).nShow := val;
end;
function ___CMINVOKECOMMANDINFO__Wrapper.getnShow : Integer;
begin
result := _CMINVOKECOMMANDINFO(GetRecordPtr^).nShow;
end;
procedure ___CMINVOKECOMMANDINFO__Wrapper.setdwHotKey(const val : DWORD);
begin
_CMINVOKECOMMANDINFO(GetRecordPtr^).dwHotKey := val;
end;
function ___CMINVOKECOMMANDINFO__Wrapper.getdwHotKey : DWORD;
begin
result := _CMINVOKECOMMANDINFO(GetRecordPtr^).dwHotKey;
end;
procedure ___CMINVOKECOMMANDINFO__Wrapper.sethIcon(const val : THandle);
begin
_CMINVOKECOMMANDINFO(GetRecordPtr^).hIcon := val;
end;
function ___CMINVOKECOMMANDINFO__Wrapper.gethIcon : THandle;
begin
result := _CMINVOKECOMMANDINFO(GetRecordPtr^).hIcon;
end;
function ___CMInvokeCommandInfoEx__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___CMInvokeCommandInfoEx__Wrapper.setcbSize(const val : DWORD);
begin
_CMInvokeCommandInfoEx(GetRecordPtr^).cbSize := val;
end;
function ___CMInvokeCommandInfoEx__Wrapper.getcbSize : DWORD;
begin
result := _CMInvokeCommandInfoEx(GetRecordPtr^).cbSize;
end;
procedure ___CMInvokeCommandInfoEx__Wrapper.setfMask(const val : DWORD);
begin
_CMInvokeCommandInfoEx(GetRecordPtr^).fMask := val;
end;
function ___CMInvokeCommandInfoEx__Wrapper.getfMask : DWORD;
begin
result := _CMInvokeCommandInfoEx(GetRecordPtr^).fMask;
end;
procedure ___CMInvokeCommandInfoEx__Wrapper.setnShow(const val : Integer);
begin
_CMInvokeCommandInfoEx(GetRecordPtr^).nShow := val;
end;
function ___CMInvokeCommandInfoEx__Wrapper.getnShow : Integer;
begin
result := _CMInvokeCommandInfoEx(GetRecordPtr^).nShow;
end;
procedure ___CMInvokeCommandInfoEx__Wrapper.setdwHotKey(const val : DWORD);
begin
_CMInvokeCommandInfoEx(GetRecordPtr^).dwHotKey := val;
end;
function ___CMInvokeCommandInfoEx__Wrapper.getdwHotKey : DWORD;
begin
result := _CMInvokeCommandInfoEx(GetRecordPtr^).dwHotKey;
end;
procedure ___CMInvokeCommandInfoEx__Wrapper.sethIcon(const val : THandle);
begin
_CMInvokeCommandInfoEx(GetRecordPtr^).hIcon := val;
end;
function ___CMInvokeCommandInfoEx__Wrapper.gethIcon : THandle;
begin
result := _CMInvokeCommandInfoEx(GetRecordPtr^).hIcon;
end;
function ___DROPFILES__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___DROPFILES__Wrapper.setpFiles(const val : DWORD);
begin
_DROPFILES(GetRecordPtr^).pFiles := val;
end;
function ___DROPFILES__Wrapper.getpFiles : DWORD;
begin
result := _DROPFILES(GetRecordPtr^).pFiles;
end;
procedure ___DROPFILES__Wrapper.setfNC(const val : BOOL);
begin
_DROPFILES(GetRecordPtr^).fNC := val;
end;
function ___DROPFILES__Wrapper.getfNC : BOOL;
begin
result := _DROPFILES(GetRecordPtr^).fNC;
end;
procedure ___DROPFILES__Wrapper.setfWide(const val : BOOL);
begin
_DROPFILES(GetRecordPtr^).fWide := val;
end;
function ___DROPFILES__Wrapper.getfWide : BOOL;
begin
result := _DROPFILES(GetRecordPtr^).fWide;
end;
function ___FILEDESCRIPTOR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___FILEDESCRIPTOR__Wrapper.setdwFlags(const val : DWORD);
begin
_FILEDESCRIPTOR(GetRecordPtr^).dwFlags := val;
end;
function ___FILEDESCRIPTOR__Wrapper.getdwFlags : DWORD;
begin
result := _FILEDESCRIPTOR(GetRecordPtr^).dwFlags;
end;
procedure ___FILEDESCRIPTOR__Wrapper.setdwFileAttributes(const val : DWORD);
begin
_FILEDESCRIPTOR(GetRecordPtr^).dwFileAttributes := val;
end;
function ___FILEDESCRIPTOR__Wrapper.getdwFileAttributes : DWORD;
begin
result := _FILEDESCRIPTOR(GetRecordPtr^).dwFileAttributes;
end;
procedure ___FILEDESCRIPTOR__Wrapper.setnFileSizeHigh(const val : DWORD);
begin
_FILEDESCRIPTOR(GetRecordPtr^).nFileSizeHigh := val;
end;
function ___FILEDESCRIPTOR__Wrapper.getnFileSizeHigh : DWORD;
begin
result := _FILEDESCRIPTOR(GetRecordPtr^).nFileSizeHigh;
end;
procedure ___FILEDESCRIPTOR__Wrapper.setnFileSizeLow(const val : DWORD);
begin
_FILEDESCRIPTOR(GetRecordPtr^).nFileSizeLow := val;
end;
function ___FILEDESCRIPTOR__Wrapper.getnFileSizeLow : DWORD;
begin
result := _FILEDESCRIPTOR(GetRecordPtr^).nFileSizeLow;
end;
function ___FILEDESCRIPTORA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___FILEDESCRIPTORA__Wrapper.setdwFlags(const val : DWORD);
begin
_FILEDESCRIPTORA(GetRecordPtr^).dwFlags := val;
end;
function ___FILEDESCRIPTORA__Wrapper.getdwFlags : DWORD;
begin
result := _FILEDESCRIPTORA(GetRecordPtr^).dwFlags;
end;
procedure ___FILEDESCRIPTORA__Wrapper.setdwFileAttributes(const val : DWORD);
begin
_FILEDESCRIPTORA(GetRecordPtr^).dwFileAttributes := val;
end;
function ___FILEDESCRIPTORA__Wrapper.getdwFileAttributes : DWORD;
begin
result := _FILEDESCRIPTORA(GetRecordPtr^).dwFileAttributes;
end;
procedure ___FILEDESCRIPTORA__Wrapper.setnFileSizeHigh(const val : DWORD);
begin
_FILEDESCRIPTORA(GetRecordPtr^).nFileSizeHigh := val;
end;
function ___FILEDESCRIPTORA__Wrapper.getnFileSizeHigh : DWORD;
begin
result := _FILEDESCRIPTORA(GetRecordPtr^).nFileSizeHigh;
end;
procedure ___FILEDESCRIPTORA__Wrapper.setnFileSizeLow(const val : DWORD);
begin
_FILEDESCRIPTORA(GetRecordPtr^).nFileSizeLow := val;
end;
function ___FILEDESCRIPTORA__Wrapper.getnFileSizeLow : DWORD;
begin
result := _FILEDESCRIPTORA(GetRecordPtr^).nFileSizeLow;
end;
function ___FILEDESCRIPTORW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___FILEDESCRIPTORW__Wrapper.setdwFlags(const val : DWORD);
begin
_FILEDESCRIPTORW(GetRecordPtr^).dwFlags := val;
end;
function ___FILEDESCRIPTORW__Wrapper.getdwFlags : DWORD;
begin
result := _FILEDESCRIPTORW(GetRecordPtr^).dwFlags;
end;
procedure ___FILEDESCRIPTORW__Wrapper.setdwFileAttributes(const val : DWORD);
begin
_FILEDESCRIPTORW(GetRecordPtr^).dwFileAttributes := val;
end;
function ___FILEDESCRIPTORW__Wrapper.getdwFileAttributes : DWORD;
begin
result := _FILEDESCRIPTORW(GetRecordPtr^).dwFileAttributes;
end;
procedure ___FILEDESCRIPTORW__Wrapper.setnFileSizeHigh(const val : DWORD);
begin
_FILEDESCRIPTORW(GetRecordPtr^).nFileSizeHigh := val;
end;
function ___FILEDESCRIPTORW__Wrapper.getnFileSizeHigh : DWORD;
begin
result := _FILEDESCRIPTORW(GetRecordPtr^).nFileSizeHigh;
end;
procedure ___FILEDESCRIPTORW__Wrapper.setnFileSizeLow(const val : DWORD);
begin
_FILEDESCRIPTORW(GetRecordPtr^).nFileSizeLow := val;
end;
function ___FILEDESCRIPTORW__Wrapper.getnFileSizeLow : DWORD;
begin
result := _FILEDESCRIPTORW(GetRecordPtr^).nFileSizeLow;
end;
function ___FILEGROUPDESCRIPTOR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___FILEGROUPDESCRIPTOR__Wrapper.setcItems(const val : UINT);
begin
_FILEGROUPDESCRIPTOR(GetRecordPtr^).cItems := val;
end;
function ___FILEGROUPDESCRIPTOR__Wrapper.getcItems : UINT;
begin
result := _FILEGROUPDESCRIPTOR(GetRecordPtr^).cItems;
end;
function ___FILEGROUPDESCRIPTORA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___FILEGROUPDESCRIPTORA__Wrapper.setcItems(const val : UINT);
begin
_FILEGROUPDESCRIPTORA(GetRecordPtr^).cItems := val;
end;
function ___FILEGROUPDESCRIPTORA__Wrapper.getcItems : UINT;
begin
result := _FILEGROUPDESCRIPTORA(GetRecordPtr^).cItems;
end;
function ___FILEGROUPDESCRIPTORW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___FILEGROUPDESCRIPTORW__Wrapper.setcItems(const val : UINT);
begin
_FILEGROUPDESCRIPTORW(GetRecordPtr^).cItems := val;
end;
function ___FILEGROUPDESCRIPTORW__Wrapper.getcItems : UINT;
begin
result := _FILEGROUPDESCRIPTORW(GetRecordPtr^).cItems;
end;
function ___IDA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___IDA__Wrapper.setcidl(const val : UINT);
begin
_IDA(GetRecordPtr^).cidl := val;
end;
function ___IDA__Wrapper.getcidl : UINT;
begin
result := _IDA(GetRecordPtr^).cidl;
end;
function ___ITEMIDLIST__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function ___NRESARRAY__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___NRESARRAY__Wrapper.setcItems(const val : UINT);
begin
_NRESARRAY(GetRecordPtr^).cItems := val;
end;
function ___NRESARRAY__Wrapper.getcItems : UINT;
begin
result := _NRESARRAY(GetRecordPtr^).cItems;
end;
function ___SHDESCRIPTIONID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHDESCRIPTIONID__Wrapper.setdwDescriptionId(const val : DWORD);
begin
_SHDESCRIPTIONID(GetRecordPtr^).dwDescriptionId := val;
end;
function ___SHDESCRIPTIONID__Wrapper.getdwDescriptionId : DWORD;
begin
result := _SHDESCRIPTIONID(GetRecordPtr^).dwDescriptionId;
end;
function ___SHELLDETAILS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHELLDETAILS__Wrapper.setfmt(const val : Integer);
begin
_SHELLDETAILS(GetRecordPtr^).fmt := val;
end;
function ___SHELLDETAILS__Wrapper.getfmt : Integer;
begin
result := _SHELLDETAILS(GetRecordPtr^).fmt;
end;
procedure ___SHELLDETAILS__Wrapper.setcxChar(const val : Integer);
begin
_SHELLDETAILS(GetRecordPtr^).cxChar := val;
end;
function ___SHELLDETAILS__Wrapper.getcxChar : Integer;
begin
result := _SHELLDETAILS(GetRecordPtr^).cxChar;
end;
function ___SHITEMID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SHITEMID__Wrapper.setcb(const val : Word);
begin
_SHITEMID(GetRecordPtr^).cb := val;
end;
function ___SHITEMID__Wrapper.getcb : Word;
begin
result := _SHITEMID(GetRecordPtr^).cb;
end;
function ___STRRET__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___STRRET__Wrapper.setuType(const val : UINT);
begin
_STRRET(GetRecordPtr^).uType := val;
end;
function ___STRRET__Wrapper.getuType : UINT;
begin
result := _STRRET(GetRecordPtr^).uType;
end;
procedure ___STRRET__Wrapper.setuOffset(const val : UINT);
begin
_STRRET(GetRecordPtr^).uOffset := val;
end;
function ___STRRET__Wrapper.getuOffset : UINT;
begin
result := _STRRET(GetRecordPtr^).uOffset;
end;
function ___SV2CVW2_PARAMS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___SV2CVW2_PARAMS__Wrapper.setcbSize(const val : DWORD);
begin
_SV2CVW2_PARAMS(GetRecordPtr^).cbSize := val;
end;
function ___SV2CVW2_PARAMS__Wrapper.getcbSize : DWORD;
begin
result := _SV2CVW2_PARAMS(GetRecordPtr^).cbSize;
end;
function ___tagCOMPONENT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagCOMPONENT__Wrapper.setdwSize(const val : DWORD);
begin
_tagCOMPONENT(GetRecordPtr^).dwSize := val;
end;
function ___tagCOMPONENT__Wrapper.getdwSize : DWORD;
begin
result := _tagCOMPONENT(GetRecordPtr^).dwSize;
end;
procedure ___tagCOMPONENT__Wrapper.setdwID(const val : DWORD);
begin
_tagCOMPONENT(GetRecordPtr^).dwID := val;
end;
function ___tagCOMPONENT__Wrapper.getdwID : DWORD;
begin
result := _tagCOMPONENT(GetRecordPtr^).dwID;
end;
procedure ___tagCOMPONENT__Wrapper.setiComponentType(const val : Integer);
begin
_tagCOMPONENT(GetRecordPtr^).iComponentType := val;
end;
function ___tagCOMPONENT__Wrapper.getiComponentType : Integer;
begin
result := _tagCOMPONENT(GetRecordPtr^).iComponentType;
end;
procedure ___tagCOMPONENT__Wrapper.setfChecked(const val : BOOL);
begin
_tagCOMPONENT(GetRecordPtr^).fChecked := val;
end;
function ___tagCOMPONENT__Wrapper.getfChecked : BOOL;
begin
result := _tagCOMPONENT(GetRecordPtr^).fChecked;
end;
procedure ___tagCOMPONENT__Wrapper.setfDirty(const val : BOOL);
begin
_tagCOMPONENT(GetRecordPtr^).fDirty := val;
end;
function ___tagCOMPONENT__Wrapper.getfDirty : BOOL;
begin
result := _tagCOMPONENT(GetRecordPtr^).fDirty;
end;
procedure ___tagCOMPONENT__Wrapper.setfNoScroll(const val : BOOL);
begin
_tagCOMPONENT(GetRecordPtr^).fNoScroll := val;
end;
function ___tagCOMPONENT__Wrapper.getfNoScroll : BOOL;
begin
result := _tagCOMPONENT(GetRecordPtr^).fNoScroll;
end;
function ___tagCOMPONENTSOPT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagCOMPONENTSOPT__Wrapper.setdwSize(const val : DWORD);
begin
_tagCOMPONENTSOPT(GetRecordPtr^).dwSize := val;
end;
function ___tagCOMPONENTSOPT__Wrapper.getdwSize : DWORD;
begin
result := _tagCOMPONENTSOPT(GetRecordPtr^).dwSize;
end;
procedure ___tagCOMPONENTSOPT__Wrapper.setfEnableComponents(const val : BOOL);
begin
_tagCOMPONENTSOPT(GetRecordPtr^).fEnableComponents := val;
end;
function ___tagCOMPONENTSOPT__Wrapper.getfEnableComponents : BOOL;
begin
result := _tagCOMPONENTSOPT(GetRecordPtr^).fEnableComponents;
end;
procedure ___tagCOMPONENTSOPT__Wrapper.setfActiveDesktop(const val : BOOL);
begin
_tagCOMPONENTSOPT(GetRecordPtr^).fActiveDesktop := val;
end;
function ___tagCOMPONENTSOPT__Wrapper.getfActiveDesktop : BOOL;
begin
result := _tagCOMPONENTSOPT(GetRecordPtr^).fActiveDesktop;
end;
function ___tagCOMPPOS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagCOMPPOS__Wrapper.setdwSize(const val : DWORD);
begin
_tagCOMPPOS(GetRecordPtr^).dwSize := val;
end;
function ___tagCOMPPOS__Wrapper.getdwSize : DWORD;
begin
result := _tagCOMPPOS(GetRecordPtr^).dwSize;
end;
procedure ___tagCOMPPOS__Wrapper.setiLeft(const val : Integer);
begin
_tagCOMPPOS(GetRecordPtr^).iLeft := val;
end;
function ___tagCOMPPOS__Wrapper.getiLeft : Integer;
begin
result := _tagCOMPPOS(GetRecordPtr^).iLeft;
end;
procedure ___tagCOMPPOS__Wrapper.setiTop(const val : Integer);
begin
_tagCOMPPOS(GetRecordPtr^).iTop := val;
end;
function ___tagCOMPPOS__Wrapper.getiTop : Integer;
begin
result := _tagCOMPPOS(GetRecordPtr^).iTop;
end;
procedure ___tagCOMPPOS__Wrapper.setdwWidth(const val : DWORD);
begin
_tagCOMPPOS(GetRecordPtr^).dwWidth := val;
end;
function ___tagCOMPPOS__Wrapper.getdwWidth : DWORD;
begin
result := _tagCOMPPOS(GetRecordPtr^).dwWidth;
end;
procedure ___tagCOMPPOS__Wrapper.setdwHeight(const val : DWORD);
begin
_tagCOMPPOS(GetRecordPtr^).dwHeight := val;
end;
function ___tagCOMPPOS__Wrapper.getdwHeight : DWORD;
begin
result := _tagCOMPPOS(GetRecordPtr^).dwHeight;
end;
procedure ___tagCOMPPOS__Wrapper.setizIndex(const val : Integer);
begin
_tagCOMPPOS(GetRecordPtr^).izIndex := val;
end;
function ___tagCOMPPOS__Wrapper.getizIndex : Integer;
begin
result := _tagCOMPPOS(GetRecordPtr^).izIndex;
end;
procedure ___tagCOMPPOS__Wrapper.setfCanResize(const val : BOOL);
begin
_tagCOMPPOS(GetRecordPtr^).fCanResize := val;
end;
function ___tagCOMPPOS__Wrapper.getfCanResize : BOOL;
begin
result := _tagCOMPPOS(GetRecordPtr^).fCanResize;
end;
procedure ___tagCOMPPOS__Wrapper.setfCanResizeX(const val : BOOL);
begin
_tagCOMPPOS(GetRecordPtr^).fCanResizeX := val;
end;
function ___tagCOMPPOS__Wrapper.getfCanResizeX : BOOL;
begin
result := _tagCOMPPOS(GetRecordPtr^).fCanResizeX;
end;
procedure ___tagCOMPPOS__Wrapper.setfCanResizeY(const val : BOOL);
begin
_tagCOMPPOS(GetRecordPtr^).fCanResizeY := val;
end;
function ___tagCOMPPOS__Wrapper.getfCanResizeY : BOOL;
begin
result := _tagCOMPPOS(GetRecordPtr^).fCanResizeY;
end;
procedure ___tagCOMPPOS__Wrapper.setiPreferredLeftPercent(const val : Integer);
begin
_tagCOMPPOS(GetRecordPtr^).iPreferredLeftPercent := val;
end;
function ___tagCOMPPOS__Wrapper.getiPreferredLeftPercent : Integer;
begin
result := _tagCOMPPOS(GetRecordPtr^).iPreferredLeftPercent;
end;
procedure ___tagCOMPPOS__Wrapper.setiPreferredTopPercent(const val : Integer);
begin
_tagCOMPPOS(GetRecordPtr^).iPreferredTopPercent := val;
end;
function ___tagCOMPPOS__Wrapper.getiPreferredTopPercent : Integer;
begin
result := _tagCOMPPOS(GetRecordPtr^).iPreferredTopPercent;
end;
function ___tagWALLPAPEROPT__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagWALLPAPEROPT__Wrapper.setdwSize(const val : DWORD);
begin
_tagWALLPAPEROPT(GetRecordPtr^).dwSize := val;
end;
function ___tagWALLPAPEROPT__Wrapper.getdwSize : DWORD;
begin
result := _tagWALLPAPEROPT(GetRecordPtr^).dwSize;
end;
procedure ___tagWALLPAPEROPT__Wrapper.setdwStyle(const val : DWORD);
begin
_tagWALLPAPEROPT(GetRecordPtr^).dwStyle := val;
end;
function ___tagWALLPAPEROPT__Wrapper.getdwStyle : DWORD;
begin
result := _tagWALLPAPEROPT(GetRecordPtr^).dwStyle;
end;
function __BROWSEINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __BROWSEINFO__Wrapper.setulFlags(const val : UINT);
begin
BROWSEINFO(GetRecordPtr^).ulFlags := val;
end;
function __BROWSEINFO__Wrapper.getulFlags : UINT;
begin
result := BROWSEINFO(GetRecordPtr^).ulFlags;
end;
procedure __BROWSEINFO__Wrapper.setLParam(const val : LParam);
begin
BROWSEINFO(GetRecordPtr^).LParam := val;
end;
function __BROWSEINFO__Wrapper.getLParam : LParam;
begin
result := BROWSEINFO(GetRecordPtr^).LParam;
end;
procedure __BROWSEINFO__Wrapper.setiImage(const val : Integer);
begin
BROWSEINFO(GetRecordPtr^).iImage := val;
end;
function __BROWSEINFO__Wrapper.getiImage : Integer;
begin
result := BROWSEINFO(GetRecordPtr^).iImage;
end;
function __BROWSEINFOA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __BROWSEINFOA__Wrapper.setulFlags(const val : UINT);
begin
BROWSEINFOA(GetRecordPtr^).ulFlags := val;
end;
function __BROWSEINFOA__Wrapper.getulFlags : UINT;
begin
result := BROWSEINFOA(GetRecordPtr^).ulFlags;
end;
procedure __BROWSEINFOA__Wrapper.setLParam(const val : LParam);
begin
BROWSEINFOA(GetRecordPtr^).LParam := val;
end;
function __BROWSEINFOA__Wrapper.getLParam : LParam;
begin
result := BROWSEINFOA(GetRecordPtr^).LParam;
end;
procedure __BROWSEINFOA__Wrapper.setiImage(const val : Integer);
begin
BROWSEINFOA(GetRecordPtr^).iImage := val;
end;
function __BROWSEINFOA__Wrapper.getiImage : Integer;
begin
result := BROWSEINFOA(GetRecordPtr^).iImage;
end;
function __BROWSEINFOW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __BROWSEINFOW__Wrapper.setulFlags(const val : UINT);
begin
BROWSEINFOW(GetRecordPtr^).ulFlags := val;
end;
function __BROWSEINFOW__Wrapper.getulFlags : UINT;
begin
result := BROWSEINFOW(GetRecordPtr^).ulFlags;
end;
procedure __BROWSEINFOW__Wrapper.setLParam(const val : LParam);
begin
BROWSEINFOW(GetRecordPtr^).LParam := val;
end;
function __BROWSEINFOW__Wrapper.getLParam : LParam;
begin
result := BROWSEINFOW(GetRecordPtr^).LParam;
end;
procedure __BROWSEINFOW__Wrapper.setiImage(const val : Integer);
begin
BROWSEINFOW(GetRecordPtr^).iImage := val;
end;
function __BROWSEINFOW__Wrapper.getiImage : Integer;
begin
result := BROWSEINFOW(GetRecordPtr^).iImage;
end;
function __CIDA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CIDA__Wrapper.setcidl(const val : UINT);
begin
CIDA(GetRecordPtr^).cidl := val;
end;
function __CIDA__Wrapper.getcidl : UINT;
begin
result := CIDA(GetRecordPtr^).cidl;
end;
function __CMINVOKECOMMANDINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CMINVOKECOMMANDINFO__Wrapper.setcbSize(const val : DWORD);
begin
CMINVOKECOMMANDINFO(GetRecordPtr^).cbSize := val;
end;
function __CMINVOKECOMMANDINFO__Wrapper.getcbSize : DWORD;
begin
result := CMINVOKECOMMANDINFO(GetRecordPtr^).cbSize;
end;
procedure __CMINVOKECOMMANDINFO__Wrapper.setfMask(const val : DWORD);
begin
CMINVOKECOMMANDINFO(GetRecordPtr^).fMask := val;
end;
function __CMINVOKECOMMANDINFO__Wrapper.getfMask : DWORD;
begin
result := CMINVOKECOMMANDINFO(GetRecordPtr^).fMask;
end;
procedure __CMINVOKECOMMANDINFO__Wrapper.setnShow(const val : Integer);
begin
CMINVOKECOMMANDINFO(GetRecordPtr^).nShow := val;
end;
function __CMINVOKECOMMANDINFO__Wrapper.getnShow : Integer;
begin
result := CMINVOKECOMMANDINFO(GetRecordPtr^).nShow;
end;
procedure __CMINVOKECOMMANDINFO__Wrapper.setdwHotKey(const val : DWORD);
begin
CMINVOKECOMMANDINFO(GetRecordPtr^).dwHotKey := val;
end;
function __CMINVOKECOMMANDINFO__Wrapper.getdwHotKey : DWORD;
begin
result := CMINVOKECOMMANDINFO(GetRecordPtr^).dwHotKey;
end;
procedure __CMINVOKECOMMANDINFO__Wrapper.sethIcon(const val : THandle);
begin
CMINVOKECOMMANDINFO(GetRecordPtr^).hIcon := val;
end;
function __CMINVOKECOMMANDINFO__Wrapper.gethIcon : THandle;
begin
result := CMINVOKECOMMANDINFO(GetRecordPtr^).hIcon;
end;
function __CMINVOKECOMMANDINFOEX__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CMINVOKECOMMANDINFOEX__Wrapper.setcbSize(const val : DWORD);
begin
CMINVOKECOMMANDINFOEX(GetRecordPtr^).cbSize := val;
end;
function __CMINVOKECOMMANDINFOEX__Wrapper.getcbSize : DWORD;
begin
result := CMINVOKECOMMANDINFOEX(GetRecordPtr^).cbSize;
end;
procedure __CMINVOKECOMMANDINFOEX__Wrapper.setfMask(const val : DWORD);
begin
CMINVOKECOMMANDINFOEX(GetRecordPtr^).fMask := val;
end;
function __CMINVOKECOMMANDINFOEX__Wrapper.getfMask : DWORD;
begin
result := CMINVOKECOMMANDINFOEX(GetRecordPtr^).fMask;
end;
procedure __CMINVOKECOMMANDINFOEX__Wrapper.setnShow(const val : Integer);
begin
CMINVOKECOMMANDINFOEX(GetRecordPtr^).nShow := val;
end;
function __CMINVOKECOMMANDINFOEX__Wrapper.getnShow : Integer;
begin
result := CMINVOKECOMMANDINFOEX(GetRecordPtr^).nShow;
end;
procedure __CMINVOKECOMMANDINFOEX__Wrapper.setdwHotKey(const val : DWORD);
begin
CMINVOKECOMMANDINFOEX(GetRecordPtr^).dwHotKey := val;
end;
function __CMINVOKECOMMANDINFOEX__Wrapper.getdwHotKey : DWORD;
begin
result := CMINVOKECOMMANDINFOEX(GetRecordPtr^).dwHotKey;
end;
procedure __CMINVOKECOMMANDINFOEX__Wrapper.sethIcon(const val : THandle);
begin
CMINVOKECOMMANDINFOEX(GetRecordPtr^).hIcon := val;
end;
function __CMINVOKECOMMANDINFOEX__Wrapper.gethIcon : THandle;
begin
result := CMINVOKECOMMANDINFOEX(GetRecordPtr^).hIcon;
end;
function __DESKBANDINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __DESKBANDINFO__Wrapper.setdwMask(const val : DWORD);
begin
DESKBANDINFO(GetRecordPtr^).dwMask := val;
end;
function __DESKBANDINFO__Wrapper.getdwMask : DWORD;
begin
result := DESKBANDINFO(GetRecordPtr^).dwMask;
end;
procedure __DESKBANDINFO__Wrapper.setdwModeFlags(const val : DWORD);
begin
DESKBANDINFO(GetRecordPtr^).dwModeFlags := val;
end;
function __DESKBANDINFO__Wrapper.getdwModeFlags : DWORD;
begin
result := DESKBANDINFO(GetRecordPtr^).dwModeFlags;
end;
procedure __DESKBANDINFO__Wrapper.setcrBkgnd(const val : COLORREF);
begin
DESKBANDINFO(GetRecordPtr^).crBkgnd := val;
end;
function __DESKBANDINFO__Wrapper.getcrBkgnd : COLORREF;
begin
result := DESKBANDINFO(GetRecordPtr^).crBkgnd;
end;
function __DROPFILES__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __DROPFILES__Wrapper.setpFiles(const val : DWORD);
begin
DROPFILES(GetRecordPtr^).pFiles := val;
end;
function __DROPFILES__Wrapper.getpFiles : DWORD;
begin
result := DROPFILES(GetRecordPtr^).pFiles;
end;
procedure __DROPFILES__Wrapper.setfNC(const val : BOOL);
begin
DROPFILES(GetRecordPtr^).fNC := val;
end;
function __DROPFILES__Wrapper.getfNC : BOOL;
begin
result := DROPFILES(GetRecordPtr^).fNC;
end;
procedure __DROPFILES__Wrapper.setfWide(const val : BOOL);
begin
DROPFILES(GetRecordPtr^).fWide := val;
end;
function __DROPFILES__Wrapper.getfWide : BOOL;
begin
result := DROPFILES(GetRecordPtr^).fWide;
end;
function __FILEDESCRIPTOR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FILEDESCRIPTOR__Wrapper.setdwFlags(const val : DWORD);
begin
FILEDESCRIPTOR(GetRecordPtr^).dwFlags := val;
end;
function __FILEDESCRIPTOR__Wrapper.getdwFlags : DWORD;
begin
result := FILEDESCRIPTOR(GetRecordPtr^).dwFlags;
end;
procedure __FILEDESCRIPTOR__Wrapper.setdwFileAttributes(const val : DWORD);
begin
FILEDESCRIPTOR(GetRecordPtr^).dwFileAttributes := val;
end;
function __FILEDESCRIPTOR__Wrapper.getdwFileAttributes : DWORD;
begin
result := FILEDESCRIPTOR(GetRecordPtr^).dwFileAttributes;
end;
procedure __FILEDESCRIPTOR__Wrapper.setnFileSizeHigh(const val : DWORD);
begin
FILEDESCRIPTOR(GetRecordPtr^).nFileSizeHigh := val;
end;
function __FILEDESCRIPTOR__Wrapper.getnFileSizeHigh : DWORD;
begin
result := FILEDESCRIPTOR(GetRecordPtr^).nFileSizeHigh;
end;
procedure __FILEDESCRIPTOR__Wrapper.setnFileSizeLow(const val : DWORD);
begin
FILEDESCRIPTOR(GetRecordPtr^).nFileSizeLow := val;
end;
function __FILEDESCRIPTOR__Wrapper.getnFileSizeLow : DWORD;
begin
result := FILEDESCRIPTOR(GetRecordPtr^).nFileSizeLow;
end;
function __FILEDESCRIPTORA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FILEDESCRIPTORA__Wrapper.setdwFlags(const val : DWORD);
begin
FILEDESCRIPTORA(GetRecordPtr^).dwFlags := val;
end;
function __FILEDESCRIPTORA__Wrapper.getdwFlags : DWORD;
begin
result := FILEDESCRIPTORA(GetRecordPtr^).dwFlags;
end;
procedure __FILEDESCRIPTORA__Wrapper.setdwFileAttributes(const val : DWORD);
begin
FILEDESCRIPTORA(GetRecordPtr^).dwFileAttributes := val;
end;
function __FILEDESCRIPTORA__Wrapper.getdwFileAttributes : DWORD;
begin
result := FILEDESCRIPTORA(GetRecordPtr^).dwFileAttributes;
end;
procedure __FILEDESCRIPTORA__Wrapper.setnFileSizeHigh(const val : DWORD);
begin
FILEDESCRIPTORA(GetRecordPtr^).nFileSizeHigh := val;
end;
function __FILEDESCRIPTORA__Wrapper.getnFileSizeHigh : DWORD;
begin
result := FILEDESCRIPTORA(GetRecordPtr^).nFileSizeHigh;
end;
procedure __FILEDESCRIPTORA__Wrapper.setnFileSizeLow(const val : DWORD);
begin
FILEDESCRIPTORA(GetRecordPtr^).nFileSizeLow := val;
end;
function __FILEDESCRIPTORA__Wrapper.getnFileSizeLow : DWORD;
begin
result := FILEDESCRIPTORA(GetRecordPtr^).nFileSizeLow;
end;
function __FILEDESCRIPTORW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FILEDESCRIPTORW__Wrapper.setdwFlags(const val : DWORD);
begin
FILEDESCRIPTORW(GetRecordPtr^).dwFlags := val;
end;
function __FILEDESCRIPTORW__Wrapper.getdwFlags : DWORD;
begin
result := FILEDESCRIPTORW(GetRecordPtr^).dwFlags;
end;
procedure __FILEDESCRIPTORW__Wrapper.setdwFileAttributes(const val : DWORD);
begin
FILEDESCRIPTORW(GetRecordPtr^).dwFileAttributes := val;
end;
function __FILEDESCRIPTORW__Wrapper.getdwFileAttributes : DWORD;
begin
result := FILEDESCRIPTORW(GetRecordPtr^).dwFileAttributes;
end;
procedure __FILEDESCRIPTORW__Wrapper.setnFileSizeHigh(const val : DWORD);
begin
FILEDESCRIPTORW(GetRecordPtr^).nFileSizeHigh := val;
end;
function __FILEDESCRIPTORW__Wrapper.getnFileSizeHigh : DWORD;
begin
result := FILEDESCRIPTORW(GetRecordPtr^).nFileSizeHigh;
end;
procedure __FILEDESCRIPTORW__Wrapper.setnFileSizeLow(const val : DWORD);
begin
FILEDESCRIPTORW(GetRecordPtr^).nFileSizeLow := val;
end;
function __FILEDESCRIPTORW__Wrapper.getnFileSizeLow : DWORD;
begin
result := FILEDESCRIPTORW(GetRecordPtr^).nFileSizeLow;
end;
function __FILEGROUPDESCRIPTOR__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FILEGROUPDESCRIPTOR__Wrapper.setcItems(const val : UINT);
begin
FILEGROUPDESCRIPTOR(GetRecordPtr^).cItems := val;
end;
function __FILEGROUPDESCRIPTOR__Wrapper.getcItems : UINT;
begin
result := FILEGROUPDESCRIPTOR(GetRecordPtr^).cItems;
end;
function __FILEGROUPDESCRIPTORA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FILEGROUPDESCRIPTORA__Wrapper.setcItems(const val : UINT);
begin
FILEGROUPDESCRIPTORA(GetRecordPtr^).cItems := val;
end;
function __FILEGROUPDESCRIPTORA__Wrapper.getcItems : UINT;
begin
result := FILEGROUPDESCRIPTORA(GetRecordPtr^).cItems;
end;
function __FILEGROUPDESCRIPTORW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FILEGROUPDESCRIPTORW__Wrapper.setcItems(const val : UINT);
begin
FILEGROUPDESCRIPTORW(GetRecordPtr^).cItems := val;
end;
function __FILEGROUPDESCRIPTORW__Wrapper.getcItems : UINT;
begin
result := FILEGROUPDESCRIPTORW(GetRecordPtr^).cItems;
end;
function __FOLDERSETTINGS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FOLDERSETTINGS__Wrapper.setViewMode(const val : UINT);
begin
FOLDERSETTINGS(GetRecordPtr^).ViewMode := val;
end;
function __FOLDERSETTINGS__Wrapper.getViewMode : UINT;
begin
result := FOLDERSETTINGS(GetRecordPtr^).ViewMode;
end;
procedure __FOLDERSETTINGS__Wrapper.setfFlags(const val : UINT);
begin
FOLDERSETTINGS(GetRecordPtr^).fFlags := val;
end;
function __FOLDERSETTINGS__Wrapper.getfFlags : UINT;
begin
result := FOLDERSETTINGS(GetRecordPtr^).fFlags;
end;
function __FVSHOWINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __FVSHOWINFO__Wrapper.setcbSize(const val : DWORD);
begin
FVSHOWINFO(GetRecordPtr^).cbSize := val;
end;
function __FVSHOWINFO__Wrapper.getcbSize : DWORD;
begin
result := FVSHOWINFO(GetRecordPtr^).cbSize;
end;
procedure __FVSHOWINFO__Wrapper.setiShow(const val : Integer);
begin
FVSHOWINFO(GetRecordPtr^).iShow := val;
end;
function __FVSHOWINFO__Wrapper.getiShow : Integer;
begin
result := FVSHOWINFO(GetRecordPtr^).iShow;
end;
procedure __FVSHOWINFO__Wrapper.setdwFlags(const val : DWORD);
begin
FVSHOWINFO(GetRecordPtr^).dwFlags := val;
end;
function __FVSHOWINFO__Wrapper.getdwFlags : DWORD;
begin
result := FVSHOWINFO(GetRecordPtr^).dwFlags;
end;
function __ITEMIDLIST__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __NRESARRAY__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __NRESARRAY__Wrapper.setcItems(const val : UINT);
begin
NRESARRAY(GetRecordPtr^).cItems := val;
end;
function __NRESARRAY__Wrapper.getcItems : UINT;
begin
result := NRESARRAY(GetRecordPtr^).cItems;
end;
function __SHCOLUMNID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHCOLUMNID__Wrapper.setpid(const val : DWORD);
begin
SHCOLUMNID(GetRecordPtr^).pid := val;
end;
function __SHCOLUMNID__Wrapper.getpid : DWORD;
begin
result := SHCOLUMNID(GetRecordPtr^).pid;
end;
function __SHDESCRIPTIONID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHDESCRIPTIONID__Wrapper.setdwDescriptionId(const val : DWORD);
begin
SHDESCRIPTIONID(GetRecordPtr^).dwDescriptionId := val;
end;
function __SHDESCRIPTIONID__Wrapper.getdwDescriptionId : DWORD;
begin
result := SHDESCRIPTIONID(GetRecordPtr^).dwDescriptionId;
end;
function __SHDRAGIMAGE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHDRAGIMAGE__Wrapper.setcrColorKey(const val : COLORREF);
begin
SHDRAGIMAGE(GetRecordPtr^).crColorKey := val;
end;
function __SHDRAGIMAGE__Wrapper.getcrColorKey : COLORREF;
begin
result := SHDRAGIMAGE(GetRecordPtr^).crColorKey;
end;
function __SHELLDETAILS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHELLDETAILS__Wrapper.setfmt(const val : Integer);
begin
SHELLDETAILS(GetRecordPtr^).fmt := val;
end;
function __SHELLDETAILS__Wrapper.getfmt : Integer;
begin
result := SHELLDETAILS(GetRecordPtr^).fmt;
end;
procedure __SHELLDETAILS__Wrapper.setcxChar(const val : Integer);
begin
SHELLDETAILS(GetRecordPtr^).cxChar := val;
end;
function __SHELLDETAILS__Wrapper.getcxChar : Integer;
begin
result := SHELLDETAILS(GetRecordPtr^).cxChar;
end;
function __SHELLFLAGSTATE__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHELLFLAGSTATE__Wrapper.setData(const val : Word);
begin
SHELLFLAGSTATE(GetRecordPtr^).Data := val;
end;
function __SHELLFLAGSTATE__Wrapper.getData : Word;
begin
result := SHELLFLAGSTATE(GetRecordPtr^).Data;
end;
function __SHELLVIEWID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHELLVIEWID__Wrapper.setD1(const val : LongWord);
begin
SHELLVIEWID(GetRecordPtr^).D1 := val;
end;
function __SHELLVIEWID__Wrapper.getD1 : LongWord;
begin
result := SHELLVIEWID(GetRecordPtr^).D1;
end;
procedure __SHELLVIEWID__Wrapper.setD2(const val : Word);
begin
SHELLVIEWID(GetRecordPtr^).D2 := val;
end;
function __SHELLVIEWID__Wrapper.getD2 : Word;
begin
result := SHELLVIEWID(GetRecordPtr^).D2;
end;
procedure __SHELLVIEWID__Wrapper.setD3(const val : Word);
begin
SHELLVIEWID(GetRecordPtr^).D3 := val;
end;
function __SHELLVIEWID__Wrapper.getD3 : Word;
begin
result := SHELLVIEWID(GetRecordPtr^).D3;
end;
function __SHITEMID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SHITEMID__Wrapper.setcb(const val : Word);
begin
SHITEMID(GetRecordPtr^).cb := val;
end;
function __SHITEMID__Wrapper.getcb : Word;
begin
result := SHITEMID(GetRecordPtr^).cb;
end;
function __STRRET__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __STRRET__Wrapper.setuType(const val : UINT);
begin
STRRET(GetRecordPtr^).uType := val;
end;
function __STRRET__Wrapper.getuType : UINT;
begin
result := STRRET(GetRecordPtr^).uType;
end;
procedure __STRRET__Wrapper.setuOffset(const val : UINT);
begin
STRRET(GetRecordPtr^).uOffset := val;
end;
function __STRRET__Wrapper.getuOffset : UINT;
begin
result := STRRET(GetRecordPtr^).uOffset;
end;
function __SV2CVW2_PARAMS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SV2CVW2_PARAMS__Wrapper.setcbSize(const val : DWORD);
begin
SV2CVW2_PARAMS(GetRecordPtr^).cbSize := val;
end;
function __SV2CVW2_PARAMS__Wrapper.getcbSize : DWORD;
begin
result := SV2CVW2_PARAMS(GetRecordPtr^).cbSize;
end;
function __tagExtraSearch__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TBrowseInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TBrowseInfo__Wrapper.setulFlags(const val : UINT);
begin
TBrowseInfo(GetRecordPtr^).ulFlags := val;
end;
function __TBrowseInfo__Wrapper.getulFlags : UINT;
begin
result := TBrowseInfo(GetRecordPtr^).ulFlags;
end;
procedure __TBrowseInfo__Wrapper.setLParam(const val : LParam);
begin
TBrowseInfo(GetRecordPtr^).LParam := val;
end;
function __TBrowseInfo__Wrapper.getLParam : LParam;
begin
result := TBrowseInfo(GetRecordPtr^).LParam;
end;
procedure __TBrowseInfo__Wrapper.setiImage(const val : Integer);
begin
TBrowseInfo(GetRecordPtr^).iImage := val;
end;
function __TBrowseInfo__Wrapper.getiImage : Integer;
begin
result := TBrowseInfo(GetRecordPtr^).iImage;
end;
function __TBrowseInfoA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TBrowseInfoA__Wrapper.setulFlags(const val : UINT);
begin
TBrowseInfoA(GetRecordPtr^).ulFlags := val;
end;
function __TBrowseInfoA__Wrapper.getulFlags : UINT;
begin
result := TBrowseInfoA(GetRecordPtr^).ulFlags;
end;
procedure __TBrowseInfoA__Wrapper.setLParam(const val : LParam);
begin
TBrowseInfoA(GetRecordPtr^).LParam := val;
end;
function __TBrowseInfoA__Wrapper.getLParam : LParam;
begin
result := TBrowseInfoA(GetRecordPtr^).LParam;
end;
procedure __TBrowseInfoA__Wrapper.setiImage(const val : Integer);
begin
TBrowseInfoA(GetRecordPtr^).iImage := val;
end;
function __TBrowseInfoA__Wrapper.getiImage : Integer;
begin
result := TBrowseInfoA(GetRecordPtr^).iImage;
end;
function __TBrowseInfoW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TBrowseInfoW__Wrapper.setulFlags(const val : UINT);
begin
TBrowseInfoW(GetRecordPtr^).ulFlags := val;
end;
function __TBrowseInfoW__Wrapper.getulFlags : UINT;
begin
result := TBrowseInfoW(GetRecordPtr^).ulFlags;
end;
procedure __TBrowseInfoW__Wrapper.setLParam(const val : LParam);
begin
TBrowseInfoW(GetRecordPtr^).LParam := val;
end;
function __TBrowseInfoW__Wrapper.getLParam : LParam;
begin
result := TBrowseInfoW(GetRecordPtr^).LParam;
end;
procedure __TBrowseInfoW__Wrapper.setiImage(const val : Integer);
begin
TBrowseInfoW(GetRecordPtr^).iImage := val;
end;
function __TBrowseInfoW__Wrapper.getiImage : Integer;
begin
result := TBrowseInfoW(GetRecordPtr^).iImage;
end;
function __TCMInvokeCommandInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCMInvokeCommandInfo__Wrapper.setcbSize(const val : DWORD);
begin
TCMInvokeCommandInfo(GetRecordPtr^).cbSize := val;
end;
function __TCMInvokeCommandInfo__Wrapper.getcbSize : DWORD;
begin
result := TCMInvokeCommandInfo(GetRecordPtr^).cbSize;
end;
procedure __TCMInvokeCommandInfo__Wrapper.setfMask(const val : DWORD);
begin
TCMInvokeCommandInfo(GetRecordPtr^).fMask := val;
end;
function __TCMInvokeCommandInfo__Wrapper.getfMask : DWORD;
begin
result := TCMInvokeCommandInfo(GetRecordPtr^).fMask;
end;
procedure __TCMInvokeCommandInfo__Wrapper.setnShow(const val : Integer);
begin
TCMInvokeCommandInfo(GetRecordPtr^).nShow := val;
end;
function __TCMInvokeCommandInfo__Wrapper.getnShow : Integer;
begin
result := TCMInvokeCommandInfo(GetRecordPtr^).nShow;
end;
procedure __TCMInvokeCommandInfo__Wrapper.setdwHotKey(const val : DWORD);
begin
TCMInvokeCommandInfo(GetRecordPtr^).dwHotKey := val;
end;
function __TCMInvokeCommandInfo__Wrapper.getdwHotKey : DWORD;
begin
result := TCMInvokeCommandInfo(GetRecordPtr^).dwHotKey;
end;
procedure __TCMInvokeCommandInfo__Wrapper.sethIcon(const val : THandle);
begin
TCMInvokeCommandInfo(GetRecordPtr^).hIcon := val;
end;
function __TCMInvokeCommandInfo__Wrapper.gethIcon : THandle;
begin
result := TCMInvokeCommandInfo(GetRecordPtr^).hIcon;
end;
function __TCMInvokeCommandInfoEx__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCMInvokeCommandInfoEx__Wrapper.setcbSize(const val : DWORD);
begin
TCMInvokeCommandInfoEx(GetRecordPtr^).cbSize := val;
end;
function __TCMInvokeCommandInfoEx__Wrapper.getcbSize : DWORD;
begin
result := TCMInvokeCommandInfoEx(GetRecordPtr^).cbSize;
end;
procedure __TCMInvokeCommandInfoEx__Wrapper.setfMask(const val : DWORD);
begin
TCMInvokeCommandInfoEx(GetRecordPtr^).fMask := val;
end;
function __TCMInvokeCommandInfoEx__Wrapper.getfMask : DWORD;
begin
result := TCMInvokeCommandInfoEx(GetRecordPtr^).fMask;
end;
procedure __TCMInvokeCommandInfoEx__Wrapper.setnShow(const val : Integer);
begin
TCMInvokeCommandInfoEx(GetRecordPtr^).nShow := val;
end;
function __TCMInvokeCommandInfoEx__Wrapper.getnShow : Integer;
begin
result := TCMInvokeCommandInfoEx(GetRecordPtr^).nShow;
end;
procedure __TCMInvokeCommandInfoEx__Wrapper.setdwHotKey(const val : DWORD);
begin
TCMInvokeCommandInfoEx(GetRecordPtr^).dwHotKey := val;
end;
function __TCMInvokeCommandInfoEx__Wrapper.getdwHotKey : DWORD;
begin
result := TCMInvokeCommandInfoEx(GetRecordPtr^).dwHotKey;
end;
procedure __TCMInvokeCommandInfoEx__Wrapper.sethIcon(const val : THandle);
begin
TCMInvokeCommandInfoEx(GetRecordPtr^).hIcon := val;
end;
function __TCMInvokeCommandInfoEx__Wrapper.gethIcon : THandle;
begin
result := TCMInvokeCommandInfoEx(GetRecordPtr^).hIcon;
end;
function __TComponentsOpt__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TComponentsOpt__Wrapper.setdwSize(const val : DWORD);
begin
TComponentsOpt(GetRecordPtr^).dwSize := val;
end;
function __TComponentsOpt__Wrapper.getdwSize : DWORD;
begin
result := TComponentsOpt(GetRecordPtr^).dwSize;
end;
procedure __TComponentsOpt__Wrapper.setfEnableComponents(const val : BOOL);
begin
TComponentsOpt(GetRecordPtr^).fEnableComponents := val;
end;
function __TComponentsOpt__Wrapper.getfEnableComponents : BOOL;
begin
result := TComponentsOpt(GetRecordPtr^).fEnableComponents;
end;
procedure __TComponentsOpt__Wrapper.setfActiveDesktop(const val : BOOL);
begin
TComponentsOpt(GetRecordPtr^).fActiveDesktop := val;
end;
function __TComponentsOpt__Wrapper.getfActiveDesktop : BOOL;
begin
result := TComponentsOpt(GetRecordPtr^).fActiveDesktop;
end;
function __TCompPos__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCompPos__Wrapper.setdwSize(const val : DWORD);
begin
TCompPos(GetRecordPtr^).dwSize := val;
end;
function __TCompPos__Wrapper.getdwSize : DWORD;
begin
result := TCompPos(GetRecordPtr^).dwSize;
end;
procedure __TCompPos__Wrapper.setiLeft(const val : Integer);
begin
TCompPos(GetRecordPtr^).iLeft := val;
end;
function __TCompPos__Wrapper.getiLeft : Integer;
begin
result := TCompPos(GetRecordPtr^).iLeft;
end;
procedure __TCompPos__Wrapper.setiTop(const val : Integer);
begin
TCompPos(GetRecordPtr^).iTop := val;
end;
function __TCompPos__Wrapper.getiTop : Integer;
begin
result := TCompPos(GetRecordPtr^).iTop;
end;
procedure __TCompPos__Wrapper.setdwWidth(const val : DWORD);
begin
TCompPos(GetRecordPtr^).dwWidth := val;
end;
function __TCompPos__Wrapper.getdwWidth : DWORD;
begin
result := TCompPos(GetRecordPtr^).dwWidth;
end;
procedure __TCompPos__Wrapper.setdwHeight(const val : DWORD);
begin
TCompPos(GetRecordPtr^).dwHeight := val;
end;
function __TCompPos__Wrapper.getdwHeight : DWORD;
begin
result := TCompPos(GetRecordPtr^).dwHeight;
end;
procedure __TCompPos__Wrapper.setizIndex(const val : Integer);
begin
TCompPos(GetRecordPtr^).izIndex := val;
end;
function __TCompPos__Wrapper.getizIndex : Integer;
begin
result := TCompPos(GetRecordPtr^).izIndex;
end;
procedure __TCompPos__Wrapper.setfCanResize(const val : BOOL);
begin
TCompPos(GetRecordPtr^).fCanResize := val;
end;
function __TCompPos__Wrapper.getfCanResize : BOOL;
begin
result := TCompPos(GetRecordPtr^).fCanResize;
end;
procedure __TCompPos__Wrapper.setfCanResizeX(const val : BOOL);
begin
TCompPos(GetRecordPtr^).fCanResizeX := val;
end;
function __TCompPos__Wrapper.getfCanResizeX : BOOL;
begin
result := TCompPos(GetRecordPtr^).fCanResizeX;
end;
procedure __TCompPos__Wrapper.setfCanResizeY(const val : BOOL);
begin
TCompPos(GetRecordPtr^).fCanResizeY := val;
end;
function __TCompPos__Wrapper.getfCanResizeY : BOOL;
begin
result := TCompPos(GetRecordPtr^).fCanResizeY;
end;
procedure __TCompPos__Wrapper.setiPreferredLeftPercent(const val : Integer);
begin
TCompPos(GetRecordPtr^).iPreferredLeftPercent := val;
end;
function __TCompPos__Wrapper.getiPreferredLeftPercent : Integer;
begin
result := TCompPos(GetRecordPtr^).iPreferredLeftPercent;
end;
procedure __TCompPos__Wrapper.setiPreferredTopPercent(const val : Integer);
begin
TCompPos(GetRecordPtr^).iPreferredTopPercent := val;
end;
function __TCompPos__Wrapper.getiPreferredTopPercent : Integer;
begin
result := TCompPos(GetRecordPtr^).iPreferredTopPercent;
end;
function __TDeskBandInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDeskBandInfo__Wrapper.setdwMask(const val : DWORD);
begin
TDeskBandInfo(GetRecordPtr^).dwMask := val;
end;
function __TDeskBandInfo__Wrapper.getdwMask : DWORD;
begin
result := TDeskBandInfo(GetRecordPtr^).dwMask;
end;
procedure __TDeskBandInfo__Wrapper.setdwModeFlags(const val : DWORD);
begin
TDeskBandInfo(GetRecordPtr^).dwModeFlags := val;
end;
function __TDeskBandInfo__Wrapper.getdwModeFlags : DWORD;
begin
result := TDeskBandInfo(GetRecordPtr^).dwModeFlags;
end;
procedure __TDeskBandInfo__Wrapper.setcrBkgnd(const val : COLORREF);
begin
TDeskBandInfo(GetRecordPtr^).crBkgnd := val;
end;
function __TDeskBandInfo__Wrapper.getcrBkgnd : COLORREF;
begin
result := TDeskBandInfo(GetRecordPtr^).crBkgnd;
end;
function __TDropFiles__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDropFiles__Wrapper.setpFiles(const val : DWORD);
begin
TDropFiles(GetRecordPtr^).pFiles := val;
end;
function __TDropFiles__Wrapper.getpFiles : DWORD;
begin
result := TDropFiles(GetRecordPtr^).pFiles;
end;
procedure __TDropFiles__Wrapper.setfNC(const val : BOOL);
begin
TDropFiles(GetRecordPtr^).fNC := val;
end;
function __TDropFiles__Wrapper.getfNC : BOOL;
begin
result := TDropFiles(GetRecordPtr^).fNC;
end;
procedure __TDropFiles__Wrapper.setfWide(const val : BOOL);
begin
TDropFiles(GetRecordPtr^).fWide := val;
end;
function __TDropFiles__Wrapper.getfWide : BOOL;
begin
result := TDropFiles(GetRecordPtr^).fWide;
end;
function __TExtraSearch__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TFileDescriptor__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFileDescriptor__Wrapper.setdwFlags(const val : DWORD);
begin
TFileDescriptor(GetRecordPtr^).dwFlags := val;
end;
function __TFileDescriptor__Wrapper.getdwFlags : DWORD;
begin
result := TFileDescriptor(GetRecordPtr^).dwFlags;
end;
procedure __TFileDescriptor__Wrapper.setdwFileAttributes(const val : DWORD);
begin
TFileDescriptor(GetRecordPtr^).dwFileAttributes := val;
end;
function __TFileDescriptor__Wrapper.getdwFileAttributes : DWORD;
begin
result := TFileDescriptor(GetRecordPtr^).dwFileAttributes;
end;
procedure __TFileDescriptor__Wrapper.setnFileSizeHigh(const val : DWORD);
begin
TFileDescriptor(GetRecordPtr^).nFileSizeHigh := val;
end;
function __TFileDescriptor__Wrapper.getnFileSizeHigh : DWORD;
begin
result := TFileDescriptor(GetRecordPtr^).nFileSizeHigh;
end;
procedure __TFileDescriptor__Wrapper.setnFileSizeLow(const val : DWORD);
begin
TFileDescriptor(GetRecordPtr^).nFileSizeLow := val;
end;
function __TFileDescriptor__Wrapper.getnFileSizeLow : DWORD;
begin
result := TFileDescriptor(GetRecordPtr^).nFileSizeLow;
end;
function __TFileDescriptorA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFileDescriptorA__Wrapper.setdwFlags(const val : DWORD);
begin
TFileDescriptorA(GetRecordPtr^).dwFlags := val;
end;
function __TFileDescriptorA__Wrapper.getdwFlags : DWORD;
begin
result := TFileDescriptorA(GetRecordPtr^).dwFlags;
end;
procedure __TFileDescriptorA__Wrapper.setdwFileAttributes(const val : DWORD);
begin
TFileDescriptorA(GetRecordPtr^).dwFileAttributes := val;
end;
function __TFileDescriptorA__Wrapper.getdwFileAttributes : DWORD;
begin
result := TFileDescriptorA(GetRecordPtr^).dwFileAttributes;
end;
procedure __TFileDescriptorA__Wrapper.setnFileSizeHigh(const val : DWORD);
begin
TFileDescriptorA(GetRecordPtr^).nFileSizeHigh := val;
end;
function __TFileDescriptorA__Wrapper.getnFileSizeHigh : DWORD;
begin
result := TFileDescriptorA(GetRecordPtr^).nFileSizeHigh;
end;
procedure __TFileDescriptorA__Wrapper.setnFileSizeLow(const val : DWORD);
begin
TFileDescriptorA(GetRecordPtr^).nFileSizeLow := val;
end;
function __TFileDescriptorA__Wrapper.getnFileSizeLow : DWORD;
begin
result := TFileDescriptorA(GetRecordPtr^).nFileSizeLow;
end;
function __TFileDescriptorW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFileDescriptorW__Wrapper.setdwFlags(const val : DWORD);
begin
TFileDescriptorW(GetRecordPtr^).dwFlags := val;
end;
function __TFileDescriptorW__Wrapper.getdwFlags : DWORD;
begin
result := TFileDescriptorW(GetRecordPtr^).dwFlags;
end;
procedure __TFileDescriptorW__Wrapper.setdwFileAttributes(const val : DWORD);
begin
TFileDescriptorW(GetRecordPtr^).dwFileAttributes := val;
end;
function __TFileDescriptorW__Wrapper.getdwFileAttributes : DWORD;
begin
result := TFileDescriptorW(GetRecordPtr^).dwFileAttributes;
end;
procedure __TFileDescriptorW__Wrapper.setnFileSizeHigh(const val : DWORD);
begin
TFileDescriptorW(GetRecordPtr^).nFileSizeHigh := val;
end;
function __TFileDescriptorW__Wrapper.getnFileSizeHigh : DWORD;
begin
result := TFileDescriptorW(GetRecordPtr^).nFileSizeHigh;
end;
procedure __TFileDescriptorW__Wrapper.setnFileSizeLow(const val : DWORD);
begin
TFileDescriptorW(GetRecordPtr^).nFileSizeLow := val;
end;
function __TFileDescriptorW__Wrapper.getnFileSizeLow : DWORD;
begin
result := TFileDescriptorW(GetRecordPtr^).nFileSizeLow;
end;
function __TFileGroupDescriptor__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFileGroupDescriptor__Wrapper.setcItems(const val : UINT);
begin
TFileGroupDescriptor(GetRecordPtr^).cItems := val;
end;
function __TFileGroupDescriptor__Wrapper.getcItems : UINT;
begin
result := TFileGroupDescriptor(GetRecordPtr^).cItems;
end;
function __TFileGroupDescriptorA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFileGroupDescriptorA__Wrapper.setcItems(const val : UINT);
begin
TFileGroupDescriptorA(GetRecordPtr^).cItems := val;
end;
function __TFileGroupDescriptorA__Wrapper.getcItems : UINT;
begin
result := TFileGroupDescriptorA(GetRecordPtr^).cItems;
end;
function __TFileGroupDescriptorW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFileGroupDescriptorW__Wrapper.setcItems(const val : UINT);
begin
TFileGroupDescriptorW(GetRecordPtr^).cItems := val;
end;
function __TFileGroupDescriptorW__Wrapper.getcItems : UINT;
begin
result := TFileGroupDescriptorW(GetRecordPtr^).cItems;
end;
function __TFolderSettings__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFolderSettings__Wrapper.setViewMode(const val : UINT);
begin
TFolderSettings(GetRecordPtr^).ViewMode := val;
end;
function __TFolderSettings__Wrapper.getViewMode : UINT;
begin
result := TFolderSettings(GetRecordPtr^).ViewMode;
end;
procedure __TFolderSettings__Wrapper.setfFlags(const val : UINT);
begin
TFolderSettings(GetRecordPtr^).fFlags := val;
end;
function __TFolderSettings__Wrapper.getfFlags : UINT;
begin
result := TFolderSettings(GetRecordPtr^).fFlags;
end;
function __TFVShowInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFVShowInfo__Wrapper.setcbSize(const val : DWORD);
begin
TFVShowInfo(GetRecordPtr^).cbSize := val;
end;
function __TFVShowInfo__Wrapper.getcbSize : DWORD;
begin
result := TFVShowInfo(GetRecordPtr^).cbSize;
end;
procedure __TFVShowInfo__Wrapper.setiShow(const val : Integer);
begin
TFVShowInfo(GetRecordPtr^).iShow := val;
end;
function __TFVShowInfo__Wrapper.getiShow : Integer;
begin
result := TFVShowInfo(GetRecordPtr^).iShow;
end;
procedure __TFVShowInfo__Wrapper.setdwFlags(const val : DWORD);
begin
TFVShowInfo(GetRecordPtr^).dwFlags := val;
end;
function __TFVShowInfo__Wrapper.getdwFlags : DWORD;
begin
result := TFVShowInfo(GetRecordPtr^).dwFlags;
end;
function __TIDA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TIDA__Wrapper.setcidl(const val : UINT);
begin
TIDA(GetRecordPtr^).cidl := val;
end;
function __TIDA__Wrapper.getcidl : UINT;
begin
result := TIDA(GetRecordPtr^).cidl;
end;
function __TItemIDList__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __TNResArray__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TNResArray__Wrapper.setcItems(const val : UINT);
begin
TNResArray(GetRecordPtr^).cItems := val;
end;
function __TNResArray__Wrapper.getcItems : UINT;
begin
result := TNResArray(GetRecordPtr^).cItems;
end;
function __TShColumnID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TShColumnID__Wrapper.setpid(const val : DWORD);
begin
TShColumnID(GetRecordPtr^).pid := val;
end;
function __TShColumnID__Wrapper.getpid : DWORD;
begin
result := TShColumnID(GetRecordPtr^).pid;
end;
function __TShComponent__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TShComponent__Wrapper.setdwSize(const val : DWORD);
begin
TShComponent(GetRecordPtr^).dwSize := val;
end;
function __TShComponent__Wrapper.getdwSize : DWORD;
begin
result := TShComponent(GetRecordPtr^).dwSize;
end;
procedure __TShComponent__Wrapper.setdwID(const val : DWORD);
begin
TShComponent(GetRecordPtr^).dwID := val;
end;
function __TShComponent__Wrapper.getdwID : DWORD;
begin
result := TShComponent(GetRecordPtr^).dwID;
end;
procedure __TShComponent__Wrapper.setiComponentType(const val : Integer);
begin
TShComponent(GetRecordPtr^).iComponentType := val;
end;
function __TShComponent__Wrapper.getiComponentType : Integer;
begin
result := TShComponent(GetRecordPtr^).iComponentType;
end;
procedure __TShComponent__Wrapper.setfChecked(const val : BOOL);
begin
TShComponent(GetRecordPtr^).fChecked := val;
end;
function __TShComponent__Wrapper.getfChecked : BOOL;
begin
result := TShComponent(GetRecordPtr^).fChecked;
end;
procedure __TShComponent__Wrapper.setfDirty(const val : BOOL);
begin
TShComponent(GetRecordPtr^).fDirty := val;
end;
function __TShComponent__Wrapper.getfDirty : BOOL;
begin
result := TShComponent(GetRecordPtr^).fDirty;
end;
procedure __TShComponent__Wrapper.setfNoScroll(const val : BOOL);
begin
TShComponent(GetRecordPtr^).fNoScroll := val;
end;
function __TShComponent__Wrapper.getfNoScroll : BOOL;
begin
result := TShComponent(GetRecordPtr^).fNoScroll;
end;
function __TSHDescriptionID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHDescriptionID__Wrapper.setdwDescriptionId(const val : DWORD);
begin
TSHDescriptionID(GetRecordPtr^).dwDescriptionId := val;
end;
function __TSHDescriptionID__Wrapper.getdwDescriptionId : DWORD;
begin
result := TSHDescriptionID(GetRecordPtr^).dwDescriptionId;
end;
function __TShDragImage__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TShDragImage__Wrapper.setcrColorKey(const val : COLORREF);
begin
TShDragImage(GetRecordPtr^).crColorKey := val;
end;
function __TShDragImage__Wrapper.getcrColorKey : COLORREF;
begin
result := TShDragImage(GetRecordPtr^).crColorKey;
end;
function __TShellDetails__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TShellDetails__Wrapper.setfmt(const val : Integer);
begin
TShellDetails(GetRecordPtr^).fmt := val;
end;
function __TShellDetails__Wrapper.getfmt : Integer;
begin
result := TShellDetails(GetRecordPtr^).fmt;
end;
procedure __TShellDetails__Wrapper.setcxChar(const val : Integer);
begin
TShellDetails(GetRecordPtr^).cxChar := val;
end;
function __TShellDetails__Wrapper.getcxChar : Integer;
begin
result := TShellDetails(GetRecordPtr^).cxChar;
end;
function __TShellFlagState__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TShellFlagState__Wrapper.setData(const val : Word);
begin
TShellFlagState(GetRecordPtr^).Data := val;
end;
function __TShellFlagState__Wrapper.getData : Word;
begin
result := TShellFlagState(GetRecordPtr^).Data;
end;
function __TShellViewID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TShellViewID__Wrapper.setD1(const val : LongWord);
begin
TShellViewID(GetRecordPtr^).D1 := val;
end;
function __TShellViewID__Wrapper.getD1 : LongWord;
begin
result := TShellViewID(GetRecordPtr^).D1;
end;
procedure __TShellViewID__Wrapper.setD2(const val : Word);
begin
TShellViewID(GetRecordPtr^).D2 := val;
end;
function __TShellViewID__Wrapper.getD2 : Word;
begin
result := TShellViewID(GetRecordPtr^).D2;
end;
procedure __TShellViewID__Wrapper.setD3(const val : Word);
begin
TShellViewID(GetRecordPtr^).D3 := val;
end;
function __TShellViewID__Wrapper.getD3 : Word;
begin
result := TShellViewID(GetRecordPtr^).D3;
end;
function __TSHItemID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSHItemID__Wrapper.setcb(const val : Word);
begin
TSHItemID(GetRecordPtr^).cb := val;
end;
function __TSHItemID__Wrapper.getcb : Word;
begin
result := TSHItemID(GetRecordPtr^).cb;
end;
function __TStrRet__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TStrRet__Wrapper.setuType(const val : UINT);
begin
TStrRet(GetRecordPtr^).uType := val;
end;
function __TStrRet__Wrapper.getuType : UINT;
begin
result := TStrRet(GetRecordPtr^).uType;
end;
procedure __TStrRet__Wrapper.setuOffset(const val : UINT);
begin
TStrRet(GetRecordPtr^).uOffset := val;
end;
function __TStrRet__Wrapper.getuOffset : UINT;
begin
result := TStrRet(GetRecordPtr^).uOffset;
end;
function __TSV2CreateParams__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSV2CreateParams__Wrapper.setcbSize(const val : DWORD);
begin
TSV2CreateParams(GetRecordPtr^).cbSize := val;
end;
function __TSV2CreateParams__Wrapper.getcbSize : DWORD;
begin
result := TSV2CreateParams(GetRecordPtr^).cbSize;
end;
function __TWallPaperOpt__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TWallPaperOpt__Wrapper.setdwSize(const val : DWORD);
begin
TWallPaperOpt(GetRecordPtr^).dwSize := val;
end;
function __TWallPaperOpt__Wrapper.getdwSize : DWORD;
begin
result := TWallPaperOpt(GetRecordPtr^).dwSize;
end;
procedure __TWallPaperOpt__Wrapper.setdwStyle(const val : DWORD);
begin
TWallPaperOpt(GetRecordPtr^).dwStyle := val;
end;
function __TWallPaperOpt__Wrapper.getdwStyle : DWORD;
begin
result := TWallPaperOpt(GetRecordPtr^).dwStyle;
end;
function __browseinfo_ : IDispatch;
begin
  result := ___browseinfo__Wrapper.Create;
end;
function __browseinfoA_ : IDispatch;
begin
  result := ___browseinfoA__Wrapper.Create;
end;
function __browseinfoW_ : IDispatch;
begin
  result := ___browseinfoW__Wrapper.Create;
end;
function __CMINVOKECOMMANDINFO_ : IDispatch;
begin
  result := ___CMINVOKECOMMANDINFO__Wrapper.Create;
end;
function __CMInvokeCommandInfoEx_ : IDispatch;
begin
  result := ___CMInvokeCommandInfoEx__Wrapper.Create;
end;
function __DROPFILES_ : IDispatch;
begin
  result := ___DROPFILES__Wrapper.Create;
end;
function __FILEDESCRIPTOR_ : IDispatch;
begin
  result := ___FILEDESCRIPTOR__Wrapper.Create;
end;
function __FILEDESCRIPTORA_ : IDispatch;
begin
  result := ___FILEDESCRIPTORA__Wrapper.Create;
end;
function __FILEDESCRIPTORW_ : IDispatch;
begin
  result := ___FILEDESCRIPTORW__Wrapper.Create;
end;
function __FILEGROUPDESCRIPTOR_ : IDispatch;
begin
  result := ___FILEGROUPDESCRIPTOR__Wrapper.Create;
end;
function __FILEGROUPDESCRIPTORA_ : IDispatch;
begin
  result := ___FILEGROUPDESCRIPTORA__Wrapper.Create;
end;
function __FILEGROUPDESCRIPTORW_ : IDispatch;
begin
  result := ___FILEGROUPDESCRIPTORW__Wrapper.Create;
end;
function __IDA_ : IDispatch;
begin
  result := ___IDA__Wrapper.Create;
end;
function __ITEMIDLIST_ : IDispatch;
begin
  result := ___ITEMIDLIST__Wrapper.Create;
end;
function __NRESARRAY_ : IDispatch;
begin
  result := ___NRESARRAY__Wrapper.Create;
end;
function __SHDESCRIPTIONID_ : IDispatch;
begin
  result := ___SHDESCRIPTIONID__Wrapper.Create;
end;
function __SHELLDETAILS_ : IDispatch;
begin
  result := ___SHELLDETAILS__Wrapper.Create;
end;
function __SHITEMID_ : IDispatch;
begin
  result := ___SHITEMID__Wrapper.Create;
end;
function __STRRET_ : IDispatch;
begin
  result := ___STRRET__Wrapper.Create;
end;
function __SV2CVW2_PARAMS_ : IDispatch;
begin
  result := ___SV2CVW2_PARAMS__Wrapper.Create;
end;
function __tagCOMPONENT_ : IDispatch;
begin
  result := ___tagCOMPONENT__Wrapper.Create;
end;
function __tagCOMPONENTSOPT_ : IDispatch;
begin
  result := ___tagCOMPONENTSOPT__Wrapper.Create;
end;
function __tagCOMPPOS_ : IDispatch;
begin
  result := ___tagCOMPPOS__Wrapper.Create;
end;
function __tagWALLPAPEROPT_ : IDispatch;
begin
  result := ___tagWALLPAPEROPT__Wrapper.Create;
end;
function _BROWSEINFO_ : IDispatch;
begin
  result := __BROWSEINFO__Wrapper.Create;
end;
function _BROWSEINFOA_ : IDispatch;
begin
  result := __BROWSEINFOA__Wrapper.Create;
end;
function _BROWSEINFOW_ : IDispatch;
begin
  result := __BROWSEINFOW__Wrapper.Create;
end;
function _CIDA_ : IDispatch;
begin
  result := __CIDA__Wrapper.Create;
end;
function _CMINVOKECOMMANDINFO_ : IDispatch;
begin
  result := __CMINVOKECOMMANDINFO__Wrapper.Create;
end;
function _CMINVOKECOMMANDINFOEX_ : IDispatch;
begin
  result := __CMINVOKECOMMANDINFOEX__Wrapper.Create;
end;
function _DESKBANDINFO_ : IDispatch;
begin
  result := __DESKBANDINFO__Wrapper.Create;
end;
function _DROPFILES_ : IDispatch;
begin
  result := __DROPFILES__Wrapper.Create;
end;
function _FILEDESCRIPTOR_ : IDispatch;
begin
  result := __FILEDESCRIPTOR__Wrapper.Create;
end;
function _FILEDESCRIPTORA_ : IDispatch;
begin
  result := __FILEDESCRIPTORA__Wrapper.Create;
end;
function _FILEDESCRIPTORW_ : IDispatch;
begin
  result := __FILEDESCRIPTORW__Wrapper.Create;
end;
function _FILEGROUPDESCRIPTOR_ : IDispatch;
begin
  result := __FILEGROUPDESCRIPTOR__Wrapper.Create;
end;
function _FILEGROUPDESCRIPTORA_ : IDispatch;
begin
  result := __FILEGROUPDESCRIPTORA__Wrapper.Create;
end;
function _FILEGROUPDESCRIPTORW_ : IDispatch;
begin
  result := __FILEGROUPDESCRIPTORW__Wrapper.Create;
end;
function _FOLDERSETTINGS_ : IDispatch;
begin
  result := __FOLDERSETTINGS__Wrapper.Create;
end;
function _FVSHOWINFO_ : IDispatch;
begin
  result := __FVSHOWINFO__Wrapper.Create;
end;
function _ITEMIDLIST_ : IDispatch;
begin
  result := __ITEMIDLIST__Wrapper.Create;
end;
function _NRESARRAY_ : IDispatch;
begin
  result := __NRESARRAY__Wrapper.Create;
end;
function _SHCOLUMNID_ : IDispatch;
begin
  result := __SHCOLUMNID__Wrapper.Create;
end;
function _SHDESCRIPTIONID_ : IDispatch;
begin
  result := __SHDESCRIPTIONID__Wrapper.Create;
end;
function _SHDRAGIMAGE_ : IDispatch;
begin
  result := __SHDRAGIMAGE__Wrapper.Create;
end;
function _SHELLDETAILS_ : IDispatch;
begin
  result := __SHELLDETAILS__Wrapper.Create;
end;
function _SHELLFLAGSTATE_ : IDispatch;
begin
  result := __SHELLFLAGSTATE__Wrapper.Create;
end;
function _SHELLVIEWID_ : IDispatch;
begin
  result := __SHELLVIEWID__Wrapper.Create;
end;
function _SHITEMID_ : IDispatch;
begin
  result := __SHITEMID__Wrapper.Create;
end;
function _STRRET_ : IDispatch;
begin
  result := __STRRET__Wrapper.Create;
end;
function _SV2CVW2_PARAMS_ : IDispatch;
begin
  result := __SV2CVW2_PARAMS__Wrapper.Create;
end;
function _tagExtraSearch_ : IDispatch;
begin
  result := __tagExtraSearch__Wrapper.Create;
end;
function _TBrowseInfo_ : IDispatch;
begin
  result := __TBrowseInfo__Wrapper.Create;
end;
function _TBrowseInfoA_ : IDispatch;
begin
  result := __TBrowseInfoA__Wrapper.Create;
end;
function _TBrowseInfoW_ : IDispatch;
begin
  result := __TBrowseInfoW__Wrapper.Create;
end;
function _TCMInvokeCommandInfo_ : IDispatch;
begin
  result := __TCMInvokeCommandInfo__Wrapper.Create;
end;
function _TCMInvokeCommandInfoEx_ : IDispatch;
begin
  result := __TCMInvokeCommandInfoEx__Wrapper.Create;
end;
function _TComponentsOpt_ : IDispatch;
begin
  result := __TComponentsOpt__Wrapper.Create;
end;
function _TCompPos_ : IDispatch;
begin
  result := __TCompPos__Wrapper.Create;
end;
function _TDeskBandInfo_ : IDispatch;
begin
  result := __TDeskBandInfo__Wrapper.Create;
end;
function _TDropFiles_ : IDispatch;
begin
  result := __TDropFiles__Wrapper.Create;
end;
function _TExtraSearch_ : IDispatch;
begin
  result := __TExtraSearch__Wrapper.Create;
end;
function _TFileDescriptor_ : IDispatch;
begin
  result := __TFileDescriptor__Wrapper.Create;
end;
function _TFileDescriptorA_ : IDispatch;
begin
  result := __TFileDescriptorA__Wrapper.Create;
end;
function _TFileDescriptorW_ : IDispatch;
begin
  result := __TFileDescriptorW__Wrapper.Create;
end;
function _TFileGroupDescriptor_ : IDispatch;
begin
  result := __TFileGroupDescriptor__Wrapper.Create;
end;
function _TFileGroupDescriptorA_ : IDispatch;
begin
  result := __TFileGroupDescriptorA__Wrapper.Create;
end;
function _TFileGroupDescriptorW_ : IDispatch;
begin
  result := __TFileGroupDescriptorW__Wrapper.Create;
end;
function _TFolderSettings_ : IDispatch;
begin
  result := __TFolderSettings__Wrapper.Create;
end;
function _TFVShowInfo_ : IDispatch;
begin
  result := __TFVShowInfo__Wrapper.Create;
end;
function _TIDA_ : IDispatch;
begin
  result := __TIDA__Wrapper.Create;
end;
function _TItemIDList_ : IDispatch;
begin
  result := __TItemIDList__Wrapper.Create;
end;
function _TNResArray_ : IDispatch;
begin
  result := __TNResArray__Wrapper.Create;
end;
function _TShColumnID_ : IDispatch;
begin
  result := __TShColumnID__Wrapper.Create;
end;
function _TShComponent_ : IDispatch;
begin
  result := __TShComponent__Wrapper.Create;
end;
function _TSHDescriptionID_ : IDispatch;
begin
  result := __TSHDescriptionID__Wrapper.Create;
end;
function _TShDragImage_ : IDispatch;
begin
  result := __TShDragImage__Wrapper.Create;
end;
function _TShellDetails_ : IDispatch;
begin
  result := __TShellDetails__Wrapper.Create;
end;
function _TShellFlagState_ : IDispatch;
begin
  result := __TShellFlagState__Wrapper.Create;
end;
function _TShellViewID_ : IDispatch;
begin
  result := __TShellViewID__Wrapper.Create;
end;
function _TSHItemID_ : IDispatch;
begin
  result := __TSHItemID__Wrapper.Create;
end;
function _TStrRet_ : IDispatch;
begin
  result := __TStrRet__Wrapper.Create;
end;
function _TSV2CreateParams_ : IDispatch;
begin
  result := __TSV2CreateParams__Wrapper.Create;
end;
function _TWallPaperOpt_ : IDispatch;
begin
  result := __TWallPaperOpt__Wrapper.Create;
end;
procedure ____SHGetSettings__Wrapper(const p0 : IDispatch;
p1 : DWORD);
var
__p0 : ^TShellFlagState;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
SHGetSettings(__p0^,p1);
end;


type ___browseinfo__Wrapper__ = class(___browseinfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___browseinfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_browseinfoToVariant(var R : _browseinfo) : OleVariant;
var
__rw : ___browseinfo__Wrapper__;
begin
__rw := ___browseinfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_browseinfo(const V : OleVariant) : _browseinfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _browseinfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___browseinfoA__Wrapper__ = class(___browseinfoA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___browseinfoA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_browseinfoAToVariant(var R : _browseinfoA) : OleVariant;
var
__rw : ___browseinfoA__Wrapper__;
begin
__rw := ___browseinfoA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_browseinfoA(const V : OleVariant) : _browseinfoA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _browseinfoA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___browseinfoW__Wrapper__ = class(___browseinfoW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___browseinfoW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_browseinfoWToVariant(var R : _browseinfoW) : OleVariant;
var
__rw : ___browseinfoW__Wrapper__;
begin
__rw := ___browseinfoW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_browseinfoW(const V : OleVariant) : _browseinfoW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _browseinfoW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___CMINVOKECOMMANDINFO__Wrapper__ = class(___CMINVOKECOMMANDINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___CMINVOKECOMMANDINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_CMINVOKECOMMANDINFOToVariant(var R : _CMINVOKECOMMANDINFO) : OleVariant;
var
__rw : ___CMINVOKECOMMANDINFO__Wrapper__;
begin
__rw := ___CMINVOKECOMMANDINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_CMINVOKECOMMANDINFO(const V : OleVariant) : _CMINVOKECOMMANDINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _CMINVOKECOMMANDINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___CMInvokeCommandInfoEx__Wrapper__ = class(___CMInvokeCommandInfoEx__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___CMInvokeCommandInfoEx__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_CMInvokeCommandInfoExToVariant(var R : _CMInvokeCommandInfoEx) : OleVariant;
var
__rw : ___CMInvokeCommandInfoEx__Wrapper__;
begin
__rw := ___CMInvokeCommandInfoEx__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_CMInvokeCommandInfoEx(const V : OleVariant) : _CMInvokeCommandInfoEx;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _CMInvokeCommandInfoEx((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___DROPFILES__Wrapper__ = class(___DROPFILES__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___DROPFILES__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_DROPFILESToVariant(var R : _DROPFILES) : OleVariant;
var
__rw : ___DROPFILES__Wrapper__;
begin
__rw := ___DROPFILES__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_DROPFILES(const V : OleVariant) : _DROPFILES;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _DROPFILES((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___FILEDESCRIPTOR__Wrapper__ = class(___FILEDESCRIPTOR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___FILEDESCRIPTOR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_FILEDESCRIPTORToVariant(var R : _FILEDESCRIPTOR) : OleVariant;
var
__rw : ___FILEDESCRIPTOR__Wrapper__;
begin
__rw := ___FILEDESCRIPTOR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_FILEDESCRIPTOR(const V : OleVariant) : _FILEDESCRIPTOR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _FILEDESCRIPTOR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___FILEDESCRIPTORA__Wrapper__ = class(___FILEDESCRIPTORA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___FILEDESCRIPTORA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_FILEDESCRIPTORAToVariant(var R : _FILEDESCRIPTORA) : OleVariant;
var
__rw : ___FILEDESCRIPTORA__Wrapper__;
begin
__rw := ___FILEDESCRIPTORA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_FILEDESCRIPTORA(const V : OleVariant) : _FILEDESCRIPTORA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _FILEDESCRIPTORA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___FILEDESCRIPTORW__Wrapper__ = class(___FILEDESCRIPTORW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___FILEDESCRIPTORW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_FILEDESCRIPTORWToVariant(var R : _FILEDESCRIPTORW) : OleVariant;
var
__rw : ___FILEDESCRIPTORW__Wrapper__;
begin
__rw := ___FILEDESCRIPTORW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_FILEDESCRIPTORW(const V : OleVariant) : _FILEDESCRIPTORW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _FILEDESCRIPTORW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___FILEGROUPDESCRIPTOR__Wrapper__ = class(___FILEGROUPDESCRIPTOR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___FILEGROUPDESCRIPTOR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_FILEGROUPDESCRIPTORToVariant(var R : _FILEGROUPDESCRIPTOR) : OleVariant;
var
__rw : ___FILEGROUPDESCRIPTOR__Wrapper__;
begin
__rw := ___FILEGROUPDESCRIPTOR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_FILEGROUPDESCRIPTOR(const V : OleVariant) : _FILEGROUPDESCRIPTOR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _FILEGROUPDESCRIPTOR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___FILEGROUPDESCRIPTORA__Wrapper__ = class(___FILEGROUPDESCRIPTORA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___FILEGROUPDESCRIPTORA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_FILEGROUPDESCRIPTORAToVariant(var R : _FILEGROUPDESCRIPTORA) : OleVariant;
var
__rw : ___FILEGROUPDESCRIPTORA__Wrapper__;
begin
__rw := ___FILEGROUPDESCRIPTORA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_FILEGROUPDESCRIPTORA(const V : OleVariant) : _FILEGROUPDESCRIPTORA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _FILEGROUPDESCRIPTORA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___FILEGROUPDESCRIPTORW__Wrapper__ = class(___FILEGROUPDESCRIPTORW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___FILEGROUPDESCRIPTORW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_FILEGROUPDESCRIPTORWToVariant(var R : _FILEGROUPDESCRIPTORW) : OleVariant;
var
__rw : ___FILEGROUPDESCRIPTORW__Wrapper__;
begin
__rw := ___FILEGROUPDESCRIPTORW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_FILEGROUPDESCRIPTORW(const V : OleVariant) : _FILEGROUPDESCRIPTORW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _FILEGROUPDESCRIPTORW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___IDA__Wrapper__ = class(___IDA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___IDA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_IDAToVariant(var R : _IDA) : OleVariant;
var
__rw : ___IDA__Wrapper__;
begin
__rw := ___IDA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_IDA(const V : OleVariant) : _IDA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _IDA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___ITEMIDLIST__Wrapper__ = class(___ITEMIDLIST__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___ITEMIDLIST__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_ITEMIDLISTToVariant(var R : _ITEMIDLIST) : OleVariant;
var
__rw : ___ITEMIDLIST__Wrapper__;
begin
__rw := ___ITEMIDLIST__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_ITEMIDLIST(const V : OleVariant) : _ITEMIDLIST;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _ITEMIDLIST((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___NRESARRAY__Wrapper__ = class(___NRESARRAY__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___NRESARRAY__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_NRESARRAYToVariant(var R : _NRESARRAY) : OleVariant;
var
__rw : ___NRESARRAY__Wrapper__;
begin
__rw := ___NRESARRAY__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_NRESARRAY(const V : OleVariant) : _NRESARRAY;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _NRESARRAY((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHDESCRIPTIONID__Wrapper__ = class(___SHDESCRIPTIONID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHDESCRIPTIONID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHDESCRIPTIONIDToVariant(var R : _SHDESCRIPTIONID) : OleVariant;
var
__rw : ___SHDESCRIPTIONID__Wrapper__;
begin
__rw := ___SHDESCRIPTIONID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHDESCRIPTIONID(const V : OleVariant) : _SHDESCRIPTIONID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHDESCRIPTIONID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHELLDETAILS__Wrapper__ = class(___SHELLDETAILS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHELLDETAILS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHELLDETAILSToVariant(var R : _SHELLDETAILS) : OleVariant;
var
__rw : ___SHELLDETAILS__Wrapper__;
begin
__rw := ___SHELLDETAILS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHELLDETAILS(const V : OleVariant) : _SHELLDETAILS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHELLDETAILS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SHITEMID__Wrapper__ = class(___SHITEMID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SHITEMID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SHITEMIDToVariant(var R : _SHITEMID) : OleVariant;
var
__rw : ___SHITEMID__Wrapper__;
begin
__rw := ___SHITEMID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SHITEMID(const V : OleVariant) : _SHITEMID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SHITEMID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___STRRET__Wrapper__ = class(___STRRET__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___STRRET__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_STRRETToVariant(var R : _STRRET) : OleVariant;
var
__rw : ___STRRET__Wrapper__;
begin
__rw := ___STRRET__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_STRRET(const V : OleVariant) : _STRRET;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _STRRET((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___SV2CVW2_PARAMS__Wrapper__ = class(___SV2CVW2_PARAMS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___SV2CVW2_PARAMS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_SV2CVW2_PARAMSToVariant(var R : _SV2CVW2_PARAMS) : OleVariant;
var
__rw : ___SV2CVW2_PARAMS__Wrapper__;
begin
__rw := ___SV2CVW2_PARAMS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_SV2CVW2_PARAMS(const V : OleVariant) : _SV2CVW2_PARAMS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _SV2CVW2_PARAMS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagCOMPONENT__Wrapper__ = class(___tagCOMPONENT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagCOMPONENT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagCOMPONENTToVariant(var R : _tagCOMPONENT) : OleVariant;
var
__rw : ___tagCOMPONENT__Wrapper__;
begin
__rw := ___tagCOMPONENT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagCOMPONENT(const V : OleVariant) : _tagCOMPONENT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagCOMPONENT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagCOMPONENTSOPT__Wrapper__ = class(___tagCOMPONENTSOPT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagCOMPONENTSOPT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagCOMPONENTSOPTToVariant(var R : _tagCOMPONENTSOPT) : OleVariant;
var
__rw : ___tagCOMPONENTSOPT__Wrapper__;
begin
__rw := ___tagCOMPONENTSOPT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagCOMPONENTSOPT(const V : OleVariant) : _tagCOMPONENTSOPT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagCOMPONENTSOPT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagCOMPPOS__Wrapper__ = class(___tagCOMPPOS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagCOMPPOS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagCOMPPOSToVariant(var R : _tagCOMPPOS) : OleVariant;
var
__rw : ___tagCOMPPOS__Wrapper__;
begin
__rw := ___tagCOMPPOS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagCOMPPOS(const V : OleVariant) : _tagCOMPPOS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagCOMPPOS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagWALLPAPEROPT__Wrapper__ = class(___tagWALLPAPEROPT__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagWALLPAPEROPT__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagWALLPAPEROPTToVariant(var R : _tagWALLPAPEROPT) : OleVariant;
var
__rw : ___tagWALLPAPEROPT__Wrapper__;
begin
__rw := ___tagWALLPAPEROPT__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagWALLPAPEROPT(const V : OleVariant) : _tagWALLPAPEROPT;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagWALLPAPEROPT((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __BROWSEINFO__Wrapper__ = class(__BROWSEINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __BROWSEINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertBROWSEINFOToVariant(var R : BROWSEINFO) : OleVariant;
var
__rw : __BROWSEINFO__Wrapper__;
begin
__rw := __BROWSEINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToBROWSEINFO(const V : OleVariant) : BROWSEINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := BROWSEINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __BROWSEINFOA__Wrapper__ = class(__BROWSEINFOA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __BROWSEINFOA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertBROWSEINFOAToVariant(var R : BROWSEINFOA) : OleVariant;
var
__rw : __BROWSEINFOA__Wrapper__;
begin
__rw := __BROWSEINFOA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToBROWSEINFOA(const V : OleVariant) : BROWSEINFOA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := BROWSEINFOA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __BROWSEINFOW__Wrapper__ = class(__BROWSEINFOW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __BROWSEINFOW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertBROWSEINFOWToVariant(var R : BROWSEINFOW) : OleVariant;
var
__rw : __BROWSEINFOW__Wrapper__;
begin
__rw := __BROWSEINFOW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToBROWSEINFOW(const V : OleVariant) : BROWSEINFOW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := BROWSEINFOW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CIDA__Wrapper__ = class(__CIDA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CIDA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCIDAToVariant(var R : CIDA) : OleVariant;
var
__rw : __CIDA__Wrapper__;
begin
__rw := __CIDA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCIDA(const V : OleVariant) : CIDA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CIDA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CMINVOKECOMMANDINFO__Wrapper__ = class(__CMINVOKECOMMANDINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CMINVOKECOMMANDINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCMINVOKECOMMANDINFOToVariant(var R : CMINVOKECOMMANDINFO) : OleVariant;
var
__rw : __CMINVOKECOMMANDINFO__Wrapper__;
begin
__rw := __CMINVOKECOMMANDINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCMINVOKECOMMANDINFO(const V : OleVariant) : CMINVOKECOMMANDINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CMINVOKECOMMANDINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CMINVOKECOMMANDINFOEX__Wrapper__ = class(__CMINVOKECOMMANDINFOEX__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CMINVOKECOMMANDINFOEX__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCMINVOKECOMMANDINFOEXToVariant(var R : CMINVOKECOMMANDINFOEX) : OleVariant;
var
__rw : __CMINVOKECOMMANDINFOEX__Wrapper__;
begin
__rw := __CMINVOKECOMMANDINFOEX__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCMINVOKECOMMANDINFOEX(const V : OleVariant) : CMINVOKECOMMANDINFOEX;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CMINVOKECOMMANDINFOEX((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __DESKBANDINFO__Wrapper__ = class(__DESKBANDINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __DESKBANDINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertDESKBANDINFOToVariant(var R : DESKBANDINFO) : OleVariant;
var
__rw : __DESKBANDINFO__Wrapper__;
begin
__rw := __DESKBANDINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToDESKBANDINFO(const V : OleVariant) : DESKBANDINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := DESKBANDINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __DROPFILES__Wrapper__ = class(__DROPFILES__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __DROPFILES__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertDROPFILESToVariant(var R : DROPFILES) : OleVariant;
var
__rw : __DROPFILES__Wrapper__;
begin
__rw := __DROPFILES__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToDROPFILES(const V : OleVariant) : DROPFILES;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := DROPFILES((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FILEDESCRIPTOR__Wrapper__ = class(__FILEDESCRIPTOR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FILEDESCRIPTOR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFILEDESCRIPTORToVariant(var R : FILEDESCRIPTOR) : OleVariant;
var
__rw : __FILEDESCRIPTOR__Wrapper__;
begin
__rw := __FILEDESCRIPTOR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFILEDESCRIPTOR(const V : OleVariant) : FILEDESCRIPTOR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FILEDESCRIPTOR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FILEDESCRIPTORA__Wrapper__ = class(__FILEDESCRIPTORA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FILEDESCRIPTORA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFILEDESCRIPTORAToVariant(var R : FILEDESCRIPTORA) : OleVariant;
var
__rw : __FILEDESCRIPTORA__Wrapper__;
begin
__rw := __FILEDESCRIPTORA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFILEDESCRIPTORA(const V : OleVariant) : FILEDESCRIPTORA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FILEDESCRIPTORA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FILEDESCRIPTORW__Wrapper__ = class(__FILEDESCRIPTORW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FILEDESCRIPTORW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFILEDESCRIPTORWToVariant(var R : FILEDESCRIPTORW) : OleVariant;
var
__rw : __FILEDESCRIPTORW__Wrapper__;
begin
__rw := __FILEDESCRIPTORW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFILEDESCRIPTORW(const V : OleVariant) : FILEDESCRIPTORW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FILEDESCRIPTORW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FILEGROUPDESCRIPTOR__Wrapper__ = class(__FILEGROUPDESCRIPTOR__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FILEGROUPDESCRIPTOR__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFILEGROUPDESCRIPTORToVariant(var R : FILEGROUPDESCRIPTOR) : OleVariant;
var
__rw : __FILEGROUPDESCRIPTOR__Wrapper__;
begin
__rw := __FILEGROUPDESCRIPTOR__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFILEGROUPDESCRIPTOR(const V : OleVariant) : FILEGROUPDESCRIPTOR;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FILEGROUPDESCRIPTOR((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FILEGROUPDESCRIPTORA__Wrapper__ = class(__FILEGROUPDESCRIPTORA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FILEGROUPDESCRIPTORA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFILEGROUPDESCRIPTORAToVariant(var R : FILEGROUPDESCRIPTORA) : OleVariant;
var
__rw : __FILEGROUPDESCRIPTORA__Wrapper__;
begin
__rw := __FILEGROUPDESCRIPTORA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFILEGROUPDESCRIPTORA(const V : OleVariant) : FILEGROUPDESCRIPTORA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FILEGROUPDESCRIPTORA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FILEGROUPDESCRIPTORW__Wrapper__ = class(__FILEGROUPDESCRIPTORW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FILEGROUPDESCRIPTORW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFILEGROUPDESCRIPTORWToVariant(var R : FILEGROUPDESCRIPTORW) : OleVariant;
var
__rw : __FILEGROUPDESCRIPTORW__Wrapper__;
begin
__rw := __FILEGROUPDESCRIPTORW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFILEGROUPDESCRIPTORW(const V : OleVariant) : FILEGROUPDESCRIPTORW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FILEGROUPDESCRIPTORW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FOLDERSETTINGS__Wrapper__ = class(__FOLDERSETTINGS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FOLDERSETTINGS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFOLDERSETTINGSToVariant(var R : FOLDERSETTINGS) : OleVariant;
var
__rw : __FOLDERSETTINGS__Wrapper__;
begin
__rw := __FOLDERSETTINGS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFOLDERSETTINGS(const V : OleVariant) : FOLDERSETTINGS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FOLDERSETTINGS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __FVSHOWINFO__Wrapper__ = class(__FVSHOWINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __FVSHOWINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertFVSHOWINFOToVariant(var R : FVSHOWINFO) : OleVariant;
var
__rw : __FVSHOWINFO__Wrapper__;
begin
__rw := __FVSHOWINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToFVSHOWINFO(const V : OleVariant) : FVSHOWINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := FVSHOWINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ITEMIDLIST__Wrapper__ = class(__ITEMIDLIST__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ITEMIDLIST__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertITEMIDLISTToVariant(var R : ITEMIDLIST) : OleVariant;
var
__rw : __ITEMIDLIST__Wrapper__;
begin
__rw := __ITEMIDLIST__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToITEMIDLIST(const V : OleVariant) : ITEMIDLIST;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ITEMIDLIST((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __NRESARRAY__Wrapper__ = class(__NRESARRAY__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __NRESARRAY__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertNRESARRAYToVariant(var R : NRESARRAY) : OleVariant;
var
__rw : __NRESARRAY__Wrapper__;
begin
__rw := __NRESARRAY__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToNRESARRAY(const V : OleVariant) : NRESARRAY;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := NRESARRAY((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHCOLUMNID__Wrapper__ = class(__SHCOLUMNID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHCOLUMNID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHCOLUMNIDToVariant(var R : SHCOLUMNID) : OleVariant;
var
__rw : __SHCOLUMNID__Wrapper__;
begin
__rw := __SHCOLUMNID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHCOLUMNID(const V : OleVariant) : SHCOLUMNID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHCOLUMNID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHDESCRIPTIONID__Wrapper__ = class(__SHDESCRIPTIONID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHDESCRIPTIONID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHDESCRIPTIONIDToVariant(var R : SHDESCRIPTIONID) : OleVariant;
var
__rw : __SHDESCRIPTIONID__Wrapper__;
begin
__rw := __SHDESCRIPTIONID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHDESCRIPTIONID(const V : OleVariant) : SHDESCRIPTIONID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHDESCRIPTIONID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHDRAGIMAGE__Wrapper__ = class(__SHDRAGIMAGE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHDRAGIMAGE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHDRAGIMAGEToVariant(var R : SHDRAGIMAGE) : OleVariant;
var
__rw : __SHDRAGIMAGE__Wrapper__;
begin
__rw := __SHDRAGIMAGE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHDRAGIMAGE(const V : OleVariant) : SHDRAGIMAGE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHDRAGIMAGE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHELLDETAILS__Wrapper__ = class(__SHELLDETAILS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHELLDETAILS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHELLDETAILSToVariant(var R : SHELLDETAILS) : OleVariant;
var
__rw : __SHELLDETAILS__Wrapper__;
begin
__rw := __SHELLDETAILS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHELLDETAILS(const V : OleVariant) : SHELLDETAILS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHELLDETAILS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHELLFLAGSTATE__Wrapper__ = class(__SHELLFLAGSTATE__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHELLFLAGSTATE__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHELLFLAGSTATEToVariant(var R : SHELLFLAGSTATE) : OleVariant;
var
__rw : __SHELLFLAGSTATE__Wrapper__;
begin
__rw := __SHELLFLAGSTATE__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHELLFLAGSTATE(const V : OleVariant) : SHELLFLAGSTATE;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHELLFLAGSTATE((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHELLVIEWID__Wrapper__ = class(__SHELLVIEWID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHELLVIEWID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHELLVIEWIDToVariant(var R : SHELLVIEWID) : OleVariant;
var
__rw : __SHELLVIEWID__Wrapper__;
begin
__rw := __SHELLVIEWID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHELLVIEWID(const V : OleVariant) : SHELLVIEWID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHELLVIEWID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SHITEMID__Wrapper__ = class(__SHITEMID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SHITEMID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSHITEMIDToVariant(var R : SHITEMID) : OleVariant;
var
__rw : __SHITEMID__Wrapper__;
begin
__rw := __SHITEMID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSHITEMID(const V : OleVariant) : SHITEMID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SHITEMID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __STRRET__Wrapper__ = class(__STRRET__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __STRRET__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSTRRETToVariant(var R : STRRET) : OleVariant;
var
__rw : __STRRET__Wrapper__;
begin
__rw := __STRRET__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSTRRET(const V : OleVariant) : STRRET;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := STRRET((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SV2CVW2_PARAMS__Wrapper__ = class(__SV2CVW2_PARAMS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SV2CVW2_PARAMS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSV2CVW2_PARAMSToVariant(var R : SV2CVW2_PARAMS) : OleVariant;
var
__rw : __SV2CVW2_PARAMS__Wrapper__;
begin
__rw := __SV2CVW2_PARAMS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSV2CVW2_PARAMS(const V : OleVariant) : SV2CVW2_PARAMS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SV2CVW2_PARAMS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagExtraSearch__Wrapper__ = class(__tagExtraSearch__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagExtraSearch__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagExtraSearchToVariant(var R : tagExtraSearch) : OleVariant;
var
__rw : __tagExtraSearch__Wrapper__;
begin
__rw := __tagExtraSearch__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagExtraSearch(const V : OleVariant) : tagExtraSearch;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagExtraSearch((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TBrowseInfo__Wrapper__ = class(__TBrowseInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TBrowseInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTBrowseInfoToVariant(var R : TBrowseInfo) : OleVariant;
var
__rw : __TBrowseInfo__Wrapper__;
begin
__rw := __TBrowseInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTBrowseInfo(const V : OleVariant) : TBrowseInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TBrowseInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TBrowseInfoA__Wrapper__ = class(__TBrowseInfoA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TBrowseInfoA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTBrowseInfoAToVariant(var R : TBrowseInfoA) : OleVariant;
var
__rw : __TBrowseInfoA__Wrapper__;
begin
__rw := __TBrowseInfoA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTBrowseInfoA(const V : OleVariant) : TBrowseInfoA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TBrowseInfoA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TBrowseInfoW__Wrapper__ = class(__TBrowseInfoW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TBrowseInfoW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTBrowseInfoWToVariant(var R : TBrowseInfoW) : OleVariant;
var
__rw : __TBrowseInfoW__Wrapper__;
begin
__rw := __TBrowseInfoW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTBrowseInfoW(const V : OleVariant) : TBrowseInfoW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TBrowseInfoW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCMInvokeCommandInfo__Wrapper__ = class(__TCMInvokeCommandInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCMInvokeCommandInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCMInvokeCommandInfoToVariant(var R : TCMInvokeCommandInfo) : OleVariant;
var
__rw : __TCMInvokeCommandInfo__Wrapper__;
begin
__rw := __TCMInvokeCommandInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCMInvokeCommandInfo(const V : OleVariant) : TCMInvokeCommandInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCMInvokeCommandInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCMInvokeCommandInfoEx__Wrapper__ = class(__TCMInvokeCommandInfoEx__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCMInvokeCommandInfoEx__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCMInvokeCommandInfoExToVariant(var R : TCMInvokeCommandInfoEx) : OleVariant;
var
__rw : __TCMInvokeCommandInfoEx__Wrapper__;
begin
__rw := __TCMInvokeCommandInfoEx__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCMInvokeCommandInfoEx(const V : OleVariant) : TCMInvokeCommandInfoEx;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCMInvokeCommandInfoEx((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TComponentsOpt__Wrapper__ = class(__TComponentsOpt__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TComponentsOpt__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTComponentsOptToVariant(var R : TComponentsOpt) : OleVariant;
var
__rw : __TComponentsOpt__Wrapper__;
begin
__rw := __TComponentsOpt__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTComponentsOpt(const V : OleVariant) : TComponentsOpt;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TComponentsOpt((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCompPos__Wrapper__ = class(__TCompPos__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCompPos__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCompPosToVariant(var R : TCompPos) : OleVariant;
var
__rw : __TCompPos__Wrapper__;
begin
__rw := __TCompPos__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCompPos(const V : OleVariant) : TCompPos;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCompPos((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDeskBandInfo__Wrapper__ = class(__TDeskBandInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDeskBandInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDeskBandInfoToVariant(var R : TDeskBandInfo) : OleVariant;
var
__rw : __TDeskBandInfo__Wrapper__;
begin
__rw := __TDeskBandInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDeskBandInfo(const V : OleVariant) : TDeskBandInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDeskBandInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDropFiles__Wrapper__ = class(__TDropFiles__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDropFiles__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDropFilesToVariant(var R : TDropFiles) : OleVariant;
var
__rw : __TDropFiles__Wrapper__;
begin
__rw := __TDropFiles__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDropFiles(const V : OleVariant) : TDropFiles;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDropFiles((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TExtraSearch__Wrapper__ = class(__TExtraSearch__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TExtraSearch__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTExtraSearchToVariant(var R : TExtraSearch) : OleVariant;
var
__rw : __TExtraSearch__Wrapper__;
begin
__rw := __TExtraSearch__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTExtraSearch(const V : OleVariant) : TExtraSearch;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TExtraSearch((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFileDescriptor__Wrapper__ = class(__TFileDescriptor__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFileDescriptor__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFileDescriptorToVariant(var R : TFileDescriptor) : OleVariant;
var
__rw : __TFileDescriptor__Wrapper__;
begin
__rw := __TFileDescriptor__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFileDescriptor(const V : OleVariant) : TFileDescriptor;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFileDescriptor((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFileDescriptorA__Wrapper__ = class(__TFileDescriptorA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFileDescriptorA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFileDescriptorAToVariant(var R : TFileDescriptorA) : OleVariant;
var
__rw : __TFileDescriptorA__Wrapper__;
begin
__rw := __TFileDescriptorA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFileDescriptorA(const V : OleVariant) : TFileDescriptorA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFileDescriptorA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFileDescriptorW__Wrapper__ = class(__TFileDescriptorW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFileDescriptorW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFileDescriptorWToVariant(var R : TFileDescriptorW) : OleVariant;
var
__rw : __TFileDescriptorW__Wrapper__;
begin
__rw := __TFileDescriptorW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFileDescriptorW(const V : OleVariant) : TFileDescriptorW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFileDescriptorW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFileGroupDescriptor__Wrapper__ = class(__TFileGroupDescriptor__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFileGroupDescriptor__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFileGroupDescriptorToVariant(var R : TFileGroupDescriptor) : OleVariant;
var
__rw : __TFileGroupDescriptor__Wrapper__;
begin
__rw := __TFileGroupDescriptor__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFileGroupDescriptor(const V : OleVariant) : TFileGroupDescriptor;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFileGroupDescriptor((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFileGroupDescriptorA__Wrapper__ = class(__TFileGroupDescriptorA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFileGroupDescriptorA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFileGroupDescriptorAToVariant(var R : TFileGroupDescriptorA) : OleVariant;
var
__rw : __TFileGroupDescriptorA__Wrapper__;
begin
__rw := __TFileGroupDescriptorA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFileGroupDescriptorA(const V : OleVariant) : TFileGroupDescriptorA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFileGroupDescriptorA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFileGroupDescriptorW__Wrapper__ = class(__TFileGroupDescriptorW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFileGroupDescriptorW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFileGroupDescriptorWToVariant(var R : TFileGroupDescriptorW) : OleVariant;
var
__rw : __TFileGroupDescriptorW__Wrapper__;
begin
__rw := __TFileGroupDescriptorW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFileGroupDescriptorW(const V : OleVariant) : TFileGroupDescriptorW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFileGroupDescriptorW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFolderSettings__Wrapper__ = class(__TFolderSettings__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFolderSettings__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFolderSettingsToVariant(var R : TFolderSettings) : OleVariant;
var
__rw : __TFolderSettings__Wrapper__;
begin
__rw := __TFolderSettings__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFolderSettings(const V : OleVariant) : TFolderSettings;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFolderSettings((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFVShowInfo__Wrapper__ = class(__TFVShowInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFVShowInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFVShowInfoToVariant(var R : TFVShowInfo) : OleVariant;
var
__rw : __TFVShowInfo__Wrapper__;
begin
__rw := __TFVShowInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFVShowInfo(const V : OleVariant) : TFVShowInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFVShowInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TIDA__Wrapper__ = class(__TIDA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TIDA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTIDAToVariant(var R : TIDA) : OleVariant;
var
__rw : __TIDA__Wrapper__;
begin
__rw := __TIDA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTIDA(const V : OleVariant) : TIDA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TIDA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TItemIDList__Wrapper__ = class(__TItemIDList__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TItemIDList__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTItemIDListToVariant(var R : TItemIDList) : OleVariant;
var
__rw : __TItemIDList__Wrapper__;
begin
__rw := __TItemIDList__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTItemIDList(const V : OleVariant) : TItemIDList;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TItemIDList((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TNResArray__Wrapper__ = class(__TNResArray__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TNResArray__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTNResArrayToVariant(var R : TNResArray) : OleVariant;
var
__rw : __TNResArray__Wrapper__;
begin
__rw := __TNResArray__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTNResArray(const V : OleVariant) : TNResArray;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TNResArray((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TShColumnID__Wrapper__ = class(__TShColumnID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TShColumnID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTShColumnIDToVariant(var R : TShColumnID) : OleVariant;
var
__rw : __TShColumnID__Wrapper__;
begin
__rw := __TShColumnID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTShColumnID(const V : OleVariant) : TShColumnID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TShColumnID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TShComponent__Wrapper__ = class(__TShComponent__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TShComponent__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTShComponentToVariant(var R : TShComponent) : OleVariant;
var
__rw : __TShComponent__Wrapper__;
begin
__rw := __TShComponent__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTShComponent(const V : OleVariant) : TShComponent;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TShComponent((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHDescriptionID__Wrapper__ = class(__TSHDescriptionID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHDescriptionID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHDescriptionIDToVariant(var R : TSHDescriptionID) : OleVariant;
var
__rw : __TSHDescriptionID__Wrapper__;
begin
__rw := __TSHDescriptionID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHDescriptionID(const V : OleVariant) : TSHDescriptionID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHDescriptionID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TShDragImage__Wrapper__ = class(__TShDragImage__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TShDragImage__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTShDragImageToVariant(var R : TShDragImage) : OleVariant;
var
__rw : __TShDragImage__Wrapper__;
begin
__rw := __TShDragImage__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTShDragImage(const V : OleVariant) : TShDragImage;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TShDragImage((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TShellDetails__Wrapper__ = class(__TShellDetails__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TShellDetails__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTShellDetailsToVariant(var R : TShellDetails) : OleVariant;
var
__rw : __TShellDetails__Wrapper__;
begin
__rw := __TShellDetails__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTShellDetails(const V : OleVariant) : TShellDetails;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TShellDetails((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TShellFlagState__Wrapper__ = class(__TShellFlagState__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TShellFlagState__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTShellFlagStateToVariant(var R : TShellFlagState) : OleVariant;
var
__rw : __TShellFlagState__Wrapper__;
begin
__rw := __TShellFlagState__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTShellFlagState(const V : OleVariant) : TShellFlagState;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TShellFlagState((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TShellViewID__Wrapper__ = class(__TShellViewID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TShellViewID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTShellViewIDToVariant(var R : TShellViewID) : OleVariant;
var
__rw : __TShellViewID__Wrapper__;
begin
__rw := __TShellViewID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTShellViewID(const V : OleVariant) : TShellViewID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TShellViewID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSHItemID__Wrapper__ = class(__TSHItemID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSHItemID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSHItemIDToVariant(var R : TSHItemID) : OleVariant;
var
__rw : __TSHItemID__Wrapper__;
begin
__rw := __TSHItemID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSHItemID(const V : OleVariant) : TSHItemID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSHItemID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TStrRet__Wrapper__ = class(__TStrRet__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TStrRet__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTStrRetToVariant(var R : TStrRet) : OleVariant;
var
__rw : __TStrRet__Wrapper__;
begin
__rw := __TStrRet__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTStrRet(const V : OleVariant) : TStrRet;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TStrRet((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSV2CreateParams__Wrapper__ = class(__TSV2CreateParams__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSV2CreateParams__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSV2CreateParamsToVariant(var R : TSV2CreateParams) : OleVariant;
var
__rw : __TSV2CreateParams__Wrapper__;
begin
__rw := __TSV2CreateParams__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSV2CreateParams(const V : OleVariant) : TSV2CreateParams;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSV2CreateParams((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TWallPaperOpt__Wrapper__ = class(__TWallPaperOpt__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TWallPaperOpt__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTWallPaperOptToVariant(var R : TWallPaperOpt) : OleVariant;
var
__rw : __TWallPaperOpt__Wrapper__;
begin
__rw := __TWallPaperOpt__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTWallPaperOpt(const V : OleVariant) : TWallPaperOpt;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TWallPaperOpt((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..470] of string = (
'SID_INewShortcutHookA'
,'SID_IShellBrowser'
,'SID_IShellView'
,'SID_IContextMenu'
,'SID_IShellIcon'
,'SID_IShellFolder'
,'SID_IShellExtInit'
,'SID_IShellPropSheetExt'
,'SID_IPersistFolder'
,'SID_IExtractIconA'
,'SID_IShellLinkA'
,'SID_IShellCopyHookA'
,'SID_IFileViewerA'
,'SID_ICommDlgBrowser'
,'SID_IEnumIDList'
,'SID_IFileViewerSite'
,'SID_IContextMenu2'
,'SID_IShellExecuteHookA'
,'SID_IPropSheetPage'
,'SID_INewShortcutHookW'
,'SID_IFileViewerW'
,'SID_IShellLinkW'
,'SID_IExtractIconW'
,'SID_IShellExecuteHookW'
,'SID_IShellCopyHookW'
,'SID_IShellView2'
,'SID_IContextMenu3'
,'SID_IPersistFolder2'
,'SID_IShellIconOverlayIdentifier'
,'SID_IShellIconOverlay'
,'SID_IURLSearchHook'
,'SID_IInputObjectSite'
,'SID_IInputObject'
,'SID_IDockingWindowSite'
,'SID_IDockingWindowFrame'
,'SID_IDockingWindow'
,'SID_IDeskBand'
,'SID_IActiveDesktop'
,'SID_IShellChangeNotify'
,'SID_IQueryInfo'
,'SID_IShellDetails'
,'SID_IShellFolder2'
,'SID_IEnumExtraSearch'
,'SID_IDropTargetHelper'
,'SID_IDragSourceHelper'
,'CMF_NORMAL'
,'CMF_DEFAULTONLY'
,'CMF_VERBSONLY'
,'CMF_EXPLORE'
,'CMF_NOVERBS'
,'CMF_CANRENAME'
,'CMF_NODEFAULT'
,'CMF_INCLUDESTATIC'
,'CMF_RESERVED'
,'GCS_VERBA'
,'GCS_HELPTEXTA'
,'GCS_VALIDATEA'
,'GCS_VERBW'
,'GCS_HELPTEXTW'
,'GCS_VALIDATEW'
,'GCS_UNICODE'
,'GCS_VERB'
,'GCS_HELPTEXT'
,'GCS_VALIDATE'
,'CMDSTR_NEWFOLDERA'
,'CMDSTR_VIEWLISTA'
,'CMDSTR_VIEWDETAILSA'
,'CMDSTR_NEWFOLDERW'
,'CMDSTR_VIEWLISTW'
,'CMDSTR_VIEWDETAILSW'
,'CMDSTR_NEWFOLDER'
,'CMDSTR_VIEWLIST'
,'CMDSTR_VIEWDETAILS'
,'CMIC_MASK_HOTKEY'
,'CMIC_MASK_ICON'
,'CMIC_MASK_FLAG_NO_UI'
,'CMIC_MASK_UNICODE'
,'CMIC_MASK_NO_CONSOLE'
,'CMIC_MASK_ASYNCOK'
,'CMIC_MASK_PTINVOKE'
,'GIL_OPENICON'
,'GIL_FORSHELL'
,'GIL_ASYNC'
,'GIL_SIMULATEDOC'
,'GIL_PERINSTANCE'
,'GIL_PERCLASS'
,'GIL_NOTFILENAME'
,'GIL_DONTCACHE'
,'ISIOI_ICONFILE'
,'ISIOI_ICONINDEX'
,'ISIOI_SYSIMAGELISTINDEX'
,'SLR_NO_UI'
,'SLR_ANY_MATCH'
,'SLR_UPDATE'
,'SLR_NOUPDATE'
,'SLGP_SHORTPATH'
,'SLGP_UNCPRIORITY'
,'SLGP_RAWPATH'
,'FVSIF_RECT'
,'FVSIF_PINNED'
,'FVSIF_NEWFAILED'
,'FVSIF_NEWFILE'
,'FVSIF_CANVIEWIT'
,'SHDVID_SETPROGRESSPOS'
,'SHDVID_SETPROGRESSRANGE'
,'SHDVID_SETSTATUSTEXT'
,'SHDVID_REFRESH'
,'SHDVID_STOP'
,'SHDVID_UPDATECOMMANDS'
,'SHDVID_SETTITLE'
,'SHDVID_FINALTITLEAVAIL'
,'SHDVID_STARTLOAD'
,'SHDVID_STOPLOAD'
,'SHDVID_CCALLBACK'
,'SHDVID_MENUEXEC'
,'SHDVID_MENUQS'
,'FCIDM_SHVIEWFIRST'
,'FCIDM_SHVIEWLAST'
,'FCIDM_BROWSERFIRST'
,'FCIDM_BROWSERLAST'
,'FCIDM_GLOBALFIRST'
,'FCIDM_GLOBALLAST'
,'FCIDM_MENU_FILE'
,'FCIDM_MENU_EDIT'
,'FCIDM_MENU_VIEW'
,'FCIDM_MENU_VIEW_SEP_OPTIONS'
,'FCIDM_MENU_TOOLS'
,'FCIDM_MENU_TOOLS_SEP_GOTO'
,'FCIDM_MENU_HELP'
,'FCIDM_MENU_FIND'
,'FCIDM_MENU_EXPLORE'
,'FCIDM_MENU_FAVORITES'
,'FCIDM_TOOLBAR'
,'FCIDM_STATUS'
,'IDC_OFFLINE_HAND'
,'FWF_AUTOARRANGE'
,'FWF_ABBREVIATEDNAMES'
,'FWF_SNAPTOGRID'
,'FWF_OWNERDATA'
,'FWF_BESTFITWINDOW'
,'FWF_DESKTOP'
,'FWF_SINGLESEL'
,'FWF_NOSUBFOLDERS'
,'FWF_TRANSPARENT'
,'FWF_NOCLIENTEDGE'
,'FWF_NOSCROLL'
,'FWF_ALIGNLEFT'
,'FWF_NOICONS'
,'FWF_SINGLECLICKACTIVATE'
,'FVM_ICON'
,'FVM_SMALLICON'
,'FVM_LIST'
,'FVM_DETAILS'
,'SBSP_DEFBROWSER'
,'SBSP_SAMEBROWSER'
,'SBSP_NEWBROWSER'
,'SBSP_DEFMODE'
,'SBSP_OPENMODE'
,'SBSP_EXPLOREMODE'
,'SBSP_ABSOLUTE'
,'SBSP_RELATIVE'
,'SBSP_PARENT'
,'SBSP_NAVIGATEBACK'
,'SBSP_NAVIGATEFORWARD'
,'SBSP_ALLOW_AUTONAVIGATE'
,'SBSP_INITIATEDBYHLINKFRAME'
,'SBSP_REDIRECT'
,'SBSP_WRITENOHISTORY'
,'SBSP_NOAUTOSELECT'
,'FCW_STATUS'
,'FCW_TOOLBAR'
,'FCW_TREE'
,'FCW_INTERNETBAR'
,'FCW_PROGRESS'
,'FCT_MERGE'
,'FCT_CONFIGABLE'
,'FCT_ADDTOEND'
,'CDBOSC_SETFOCUS'
,'CDBOSC_KILLFOCUS'
,'CDBOSC_SELCHANGE'
,'CDBOSC_RENAME'
,'SVSI_DESELECT'
,'SVSI_SELECT'
,'SVSI_EDIT'
,'SVSI_DESELECTOTHERS'
,'SVSI_ENSUREVISIBLE'
,'SVSI_FOCUSED'
,'SVSI_TRANSLATEPT'
,'SVGIO_BACKGROUND'
,'SVGIO_SELECTION'
,'SVGIO_ALLVIEW'
,'SBSC_HIDE'
,'SBSC_SHOW'
,'SBSC_TOGGLE'
,'SBSC_QUERY'
,'SBO_DEFAULT'
,'SBO_NOBROWSERPAGES'
,'SBCMDID_ENABLESHOWTREE'
,'SBCMDID_SHOWCONTROL'
,'SBCMDID_CANCELNAVIGATION'
,'SBCMDID_MAYSAVECHANGES'
,'SBCMDID_SETHLINKFRAME'
,'SBCMDID_ENABLESTOP'
,'SBCMDID_OPTIONS'
,'SVUIA_DEACTIVATE'
,'SVUIA_ACTIVATE_NOFOCUS'
,'SVUIA_ACTIVATE_FOCUS'
,'SVUIA_INPLACEACTIVATE'
,'SV2GV_CURRENTVIEW'
,'SV2GV_DEFAULTVIEW'
,'STRRET_WSTR'
,'STRRET_OFFSET'
,'STRRET_CSTR'
,'REGSTR_PATH_SPECIAL_FOLDERS'
,'CSIDL_DESKTOP'
,'CSIDL_INTERNET'
,'CSIDL_PROGRAMS'
,'CSIDL_CONTROLS'
,'CSIDL_PRINTERS'
,'CSIDL_PERSONAL'
,'CSIDL_FAVORITES'
,'CSIDL_STARTUP'
,'CSIDL_RECENT'
,'CSIDL_SENDTO'
,'CSIDL_BITBUCKET'
,'CSIDL_STARTMENU'
,'CSIDL_DESKTOPDIRECTORY'
,'CSIDL_DRIVES'
,'CSIDL_NETWORK'
,'CSIDL_NETHOOD'
,'CSIDL_FONTS'
,'CSIDL_TEMPLATES'
,'CSIDL_COMMON_STARTMENU'
,'CSIDL_COMMON_PROGRAMS'
,'CSIDL_COMMON_STARTUP'
,'CSIDL_COMMON_DESKTOPDIRECTORY'
,'CSIDL_APPDATA'
,'CSIDL_PRINTHOOD'
,'CSIDL_LOCAL_APPDATA'
,'CSIDL_ALTSTARTUP'
,'CSIDL_COMMON_ALTSTARTUP'
,'CSIDL_COMMON_FAVORITES'
,'CSIDL_INTERNET_CACHE'
,'CSIDL_COOKIES'
,'CSIDL_HISTORY'
,'CSIDL_PROFILE'
,'CSIDL_CONNECTIONS'
,'CSIDL_COMMON_MUSIC'
,'CSIDL_COMMON_PICTURES'
,'CSIDL_COMMON_VIDEO'
,'CSIDL_CDBURN_AREA'
,'CSIDL_COMPUTERSNEARME'
,'CSIDL_PROFILES'
,'BIF_RETURNONLYFSDIRS'
,'BIF_DONTGOBELOWDOMAIN'
,'BIF_STATUSTEXT'
,'BIF_RETURNFSANCESTORS'
,'BIF_EDITBOX'
,'BIF_VALIDATE'
,'BIF_NEWDIALOGSTYLE'
,'BIF_USENEWUI'
,'BIF_BROWSEINCLUDEURLS'
,'BIF_UAHINT'
,'BIF_NONEWFOLDERBUTTON'
,'BIF_NOTRANSLATETARGETS'
,'BIF_BROWSEFORCOMPUTER'
,'BIF_BROWSEFORPRINTER'
,'BIF_BROWSEINCLUDEFILES'
,'BIF_SHAREABLE'
,'BFFM_INITIALIZED'
,'BFFM_SELCHANGED'
,'BFFM_VALIDATEFAILEDA'
,'BFFM_VALIDATEFAILEDW'
,'BFFM_SETSTATUSTEXTA'
,'BFFM_ENABLEOK'
,'BFFM_SETSELECTIONA'
,'BFFM_SETSELECTIONW'
,'BFFM_SETSTATUSTEXTW'
,'BFFM_VALIDATEFAILED'
,'BFFM_SETSTATUSTEXT'
,'BFFM_SETSELECTION'
,'SHGDN_NORMAL'
,'SHGDN_INFOLDER'
,'SHGDN_FOREDITING'
,'SHGDN_INCLUDE_NONFILESYS'
,'SHGDN_FORADDRESSBAR'
,'SHGDN_FORPARSING'
,'SHCONTF_FOLDERS'
,'SHCONTF_NONFOLDERS'
,'SHCONTF_INCLUDEHIDDEN'
,'SFGAO_CANCOPY'
,'SFGAO_CANMOVE'
,'SFGAO_CANLINK'
,'SFGAO_CANRENAME'
,'SFGAO_CANDELETE'
,'SFGAO_HASPROPSHEET'
,'SFGAO_DROPTARGET'
,'SFGAO_CAPABILITYMASK'
,'SFGAO_LINK'
,'SFGAO_SHARE'
,'SFGAO_READONLY'
,'SFGAO_GHOSTED'
,'SFGAO_HIDDEN'
,'SFGAO_DISPLAYATTRMASK'
,'SFGAO_FILESYSANCESTOR'
,'SFGAO_FOLDER'
,'SFGAO_FILESYSTEM'
,'SFGAO_HASSUBFOLDER'
,'SFGAO_CONTENTSMASK'
,'SFGAO_VALIDATE'
,'SFGAO_REMOVABLE'
,'SFGAO_COMPRESSED'
,'SFGAO_BROWSABLE'
,'SFGAO_NONENUMERATED'
,'SFGAO_NEWCONTENT'
,'SHCOLSTATE_TYPE_STR'
,'SHCOLSTATE_TYPE_INT'
,'SHCOLSTATE_TYPE_DATE'
,'SHCOLSTATE_TYPEMASK'
,'SHCOLSTATE_ONBYDEFAULT'
,'SHCOLSTATE_SLOW'
,'SHCOLSTATE_EXTENDED'
,'SHCOLSTATE_SECONDARYUI'
,'SHCOLSTATE_HIDDEN'
,'DWFRF_NORMAL'
,'DWFRF_DELETECONFIGDATA'
,'DWFAF_HIDDEN'
,'DBIM_MINSIZE'
,'DBIM_MAXSIZE'
,'DBIM_INTEGRAL'
,'DBIM_ACTUAL'
,'DBIM_TITLE'
,'DBIM_MODEFLAGS'
,'DBIM_BKCOLOR'
,'DBIMF_NORMAL'
,'DBIMF_VARIABLEHEIGHT'
,'DBIMF_DEBOSSED'
,'DBIMF_BKCOLOR'
,'DBIF_VIEWMODE_NORMAL'
,'DBIF_VIEWMODE_VERTICAL'
,'DBIF_VIEWMODE_FLOATING'
,'DBIF_VIEWMODE_TRANSPARENT'
,'DBID_BANDINFOCHANGED'
,'DBID_SHOWONLY'
,'DBID_MAXIMIZEBAND'
,'COMPONENT_TOP'
,'COMP_TYPE_HTMLDOC'
,'COMP_TYPE_PICTURE'
,'COMP_TYPE_WEBSITE'
,'COMP_TYPE_CONTROL'
,'COMP_TYPE_CFHTML'
,'COMP_TYPE_MAX'
,'AD_APPLY_SAVE'
,'AD_APPLY_HTMLGEN'
,'AD_APPLY_REFRESH'
,'AD_APPLY_ALL'
,'AD_APPLY_FORCE'
,'AD_APPLY_BUFFERED_REFRESH'
,'WPSTYLE_CENTER'
,'WPSTYLE_TILE'
,'WPSTYLE_STRETCH'
,'WPSTYLE_MAX'
,'COMP_ELEM_TYPE'
,'COMP_ELEM_CHECKED'
,'COMP_ELEM_DIRTY'
,'COMP_ELEM_NOSCROLL'
,'COMP_ELEM_POS_LEFT'
,'COMP_ELEM_POS_TOP'
,'COMP_ELEM_SIZE_WIDTH'
,'COMP_ELEM_SIZE_HEIGHT'
,'COMP_ELEM_POS_ZINDEX'
,'COMP_ELEM_SOURCE'
,'COMP_ELEM_FRIENDLYNAME'
,'COMP_ELEM_SUBSCRIBEDURL'
,'COMP_ELEM_ALL'
,'ADDURL_SILENT'
,'DTI_ADDUI_DEFAULT'
,'DTI_ADDUI_DISPSUBWIZARD'
,'CFSTR_SHELLIDLIST'
,'CFSTR_SHELLIDLISTOFFSET'
,'CFSTR_NETRESOURCES'
,'CFSTR_FILEDESCRIPTORA'
,'CFSTR_FILEDESCRIPTORW'
,'CFSTR_FILECONTENTS'
,'CFSTR_FILENAMEA'
,'CFSTR_FILENAMEW'
,'CFSTR_PRINTERGROUP'
,'CFSTR_FILENAMEMAPA'
,'CFSTR_FILENAMEMAPW'
,'CFSTR_SHELLURL'
,'CFSTR_PREFERREDDROPEFFECT'
,'CFSTR_PERFORMEDDROPEFFECT'
,'CFSTR_PASTESUCCEEDED'
,'CFSTR_FILEDESCRIPTOR'
,'CFSTR_FILENAME'
,'CFSTR_FILENAMEMAP'
,'DVASPECT_SHORTNAME'
,'FD_CLSID'
,'FD_SIZEPOINT'
,'FD_ATTRIBUTES'
,'FD_CREATETIME'
,'FD_ACCESSTIME'
,'FD_WRITESTIME'
,'FD_FILESIZE'
,'FD_LINKUI'
,'SHCNE_RENAMEITEM'
,'SHCNE_CREATE'
,'SHCNE_DELETE'
,'SHCNE_MKDIR'
,'SHCNE_RMDIR'
,'SHCNE_MEDIAINSERTED'
,'SHCNE_MEDIAREMOVED'
,'SHCNE_DRIVEREMOVED'
,'SHCNE_DRIVEADD'
,'SHCNE_NETSHARE'
,'SHCNE_NETUNSHARE'
,'SHCNE_ATTRIBUTES'
,'SHCNE_UPDATEDIR'
,'SHCNE_UPDATEITEM'
,'SHCNE_SERVERDISCONNECT'
,'SHCNE_UPDATEIMAGE'
,'SHCNE_DRIVEADDGUI'
,'SHCNE_RENAMEFOLDER'
,'SHCNE_FREESPACE'
,'SHCNE_EXTENDED_EVENT'
,'SHCNE_EXTENDED_EVENT_PRE_IE4'
,'SHCNE_ASSOCCHANGED'
,'SHCNE_DISKEVENTS'
,'SHCNE_GLOBALEVENTS'
,'SHCNE_ALLEVENTS'
,'SHCNE_INTERRUPT'
,'SHCNEE_THEMECHANGED'
,'SHCNEE_ORDERCHANGED'
,'SHCNF_IDLIST'
,'SHCNF_PATHA'
,'SHCNF_PRINTERA'
,'SHCNF_DWORD'
,'SHCNF_PATHW'
,'SHCNF_PRINTERW'
,'SHCNF_TYPE'
,'SHCNF_FLUSH'
,'SHCNF_FLUSHNOWAIT'
,'SHCNF_PATH'
,'SHCNF_PRINTER'
,'QIF_CACHED'
,'QIF_DONTEXPANDFOLDER'
,'DI_GETDRAGIMAGE'
,'SHARD_PIDL'
,'SHARD_PATHA'
,'SHARD_PATHW'
,'SHARD_PATH'
,'SHGDFIL_FINDDATA'
,'SHGDFIL_NETRESOURCE'
,'SHGDFIL_DESCRIPTIONID'
,'SHDID_ROOT_REGITEM'
,'SHDID_FS_FILE'
,'SHDID_FS_DIRECTORY'
,'SHDID_FS_OTHER'
,'SHDID_COMPUTER_DRIVE35'
,'SHDID_COMPUTER_DRIVE525'
,'SHDID_COMPUTER_REMOVABLE'
,'SHDID_COMPUTER_FIXED'
,'SHDID_COMPUTER_NETDRIVE'
,'SHDID_COMPUTER_CDROM'
,'SHDID_COMPUTER_RAMDISK'
,'SHDID_COMPUTER_OTHER'
,'SHDID_NET_DOMAIN'
,'SHDID_NET_SERVER'
,'SHDID_NET_SHARE'
,'SHDID_NET_RESTOFNET'
,'SHDID_NET_OTHER'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,SID_INewShortcutHookA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,SID_IShellBrowser));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,SID_IShellView));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,SID_IContextMenu));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,SID_IShellIcon));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,SID_IShellFolder));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,SID_IShellExtInit));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,SID_IShellPropSheetExt));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,SID_IPersistFolder));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,SID_IExtractIconA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,SID_IShellLinkA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,SID_IShellCopyHookA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,SID_IFileViewerA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,SID_ICommDlgBrowser));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,SID_IEnumIDList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,SID_IFileViewerSite));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,SID_IContextMenu2));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,SID_IShellExecuteHookA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,SID_IPropSheetPage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,SID_INewShortcutHookW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,SID_IFileViewerW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,SID_IShellLinkW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,SID_IExtractIconW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,SID_IShellExecuteHookW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,SID_IShellCopyHookW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,SID_IShellView2));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,SID_IContextMenu3));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,SID_IPersistFolder2));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,SID_IShellIconOverlayIdentifier));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,SID_IShellIconOverlay));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,SID_IURLSearchHook));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,SID_IInputObjectSite));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,SID_IInputObject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,SID_IDockingWindowSite));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,SID_IDockingWindowFrame));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,SID_IDockingWindow));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,SID_IDeskBand));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,SID_IActiveDesktop));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,SID_IShellChangeNotify));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,SID_IQueryInfo));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,SID_IShellDetails));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,SID_IShellFolder2));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,SID_IEnumExtraSearch));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,SID_IDropTargetHelper));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,SID_IDragSourceHelper));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,CMF_NORMAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,CMF_DEFAULTONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,CMF_VERBSONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,CMF_EXPLORE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,CMF_NOVERBS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,CMF_CANRENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,CMF_NODEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,CMF_INCLUDESTATIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,CMF_RESERVED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,GCS_VERBA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,GCS_HELPTEXTA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,GCS_VALIDATEA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,GCS_VERBW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,GCS_HELPTEXTW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,GCS_VALIDATEW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,GCS_UNICODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,GCS_VERB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,GCS_HELPTEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,GCS_VALIDATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,CMDSTR_NEWFOLDERA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,CMDSTR_VIEWLISTA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,CMDSTR_VIEWDETAILSA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,CMDSTR_NEWFOLDERW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,CMDSTR_VIEWLISTW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,CMDSTR_VIEWDETAILSW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,CMDSTR_NEWFOLDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,CMDSTR_VIEWLIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,CMDSTR_VIEWDETAILS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,CMIC_MASK_HOTKEY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,CMIC_MASK_ICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,CMIC_MASK_FLAG_NO_UI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,CMIC_MASK_UNICODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,CMIC_MASK_NO_CONSOLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,CMIC_MASK_ASYNCOK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,CMIC_MASK_PTINVOKE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,GIL_OPENICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,GIL_FORSHELL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,GIL_ASYNC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,GIL_SIMULATEDOC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,GIL_PERINSTANCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,GIL_PERCLASS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,GIL_NOTFILENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,GIL_DONTCACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,ISIOI_ICONFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,ISIOI_ICONINDEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,ISIOI_SYSIMAGELISTINDEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,SLR_NO_UI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,SLR_ANY_MATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,SLR_UPDATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,SLR_NOUPDATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,SLGP_SHORTPATH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,SLGP_UNCPRIORITY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,SLGP_RAWPATH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,FVSIF_RECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,FVSIF_PINNED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,FVSIF_NEWFAILED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,FVSIF_NEWFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,FVSIF_CANVIEWIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,SHDVID_SETPROGRESSPOS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,SHDVID_SETPROGRESSRANGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[105] ,SHDVID_SETSTATUSTEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[106] ,SHDVID_REFRESH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[107] ,SHDVID_STOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[108] ,SHDVID_UPDATECOMMANDS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[109] ,SHDVID_SETTITLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[110] ,SHDVID_FINALTITLEAVAIL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[111] ,SHDVID_STARTLOAD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[112] ,SHDVID_STOPLOAD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[113] ,SHDVID_CCALLBACK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[114] ,SHDVID_MENUEXEC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[115] ,SHDVID_MENUQS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[116] ,FCIDM_SHVIEWFIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[117] ,FCIDM_SHVIEWLAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[118] ,FCIDM_BROWSERFIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[119] ,FCIDM_BROWSERLAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[120] ,FCIDM_GLOBALFIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[121] ,FCIDM_GLOBALLAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[122] ,FCIDM_MENU_FILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[123] ,FCIDM_MENU_EDIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[124] ,FCIDM_MENU_VIEW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[125] ,FCIDM_MENU_VIEW_SEP_OPTIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[126] ,FCIDM_MENU_TOOLS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[127] ,FCIDM_MENU_TOOLS_SEP_GOTO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[128] ,FCIDM_MENU_HELP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[129] ,FCIDM_MENU_FIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[130] ,FCIDM_MENU_EXPLORE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[131] ,FCIDM_MENU_FAVORITES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[132] ,FCIDM_TOOLBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[133] ,FCIDM_STATUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[134] ,IDC_OFFLINE_HAND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[135] ,FWF_AUTOARRANGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[136] ,FWF_ABBREVIATEDNAMES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[137] ,FWF_SNAPTOGRID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[138] ,FWF_OWNERDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[139] ,FWF_BESTFITWINDOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[140] ,FWF_DESKTOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[141] ,FWF_SINGLESEL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[142] ,FWF_NOSUBFOLDERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[143] ,FWF_TRANSPARENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[144] ,FWF_NOCLIENTEDGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[145] ,FWF_NOSCROLL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[146] ,FWF_ALIGNLEFT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[147] ,FWF_NOICONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[148] ,FWF_SINGLECLICKACTIVATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[149] ,FVM_ICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[150] ,FVM_SMALLICON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[151] ,FVM_LIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[152] ,FVM_DETAILS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[153] ,SBSP_DEFBROWSER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[154] ,SBSP_SAMEBROWSER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[155] ,SBSP_NEWBROWSER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[156] ,SBSP_DEFMODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[157] ,SBSP_OPENMODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[158] ,SBSP_EXPLOREMODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[159] ,SBSP_ABSOLUTE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[160] ,SBSP_RELATIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[161] ,SBSP_PARENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[162] ,SBSP_NAVIGATEBACK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[163] ,SBSP_NAVIGATEFORWARD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[164] ,SBSP_ALLOW_AUTONAVIGATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[165] ,SBSP_INITIATEDBYHLINKFRAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[166] ,SBSP_REDIRECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[167] ,SBSP_WRITENOHISTORY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[168] ,SBSP_NOAUTOSELECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[169] ,FCW_STATUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[170] ,FCW_TOOLBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[171] ,FCW_TREE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[172] ,FCW_INTERNETBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[173] ,FCW_PROGRESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[174] ,FCT_MERGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[175] ,FCT_CONFIGABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[176] ,FCT_ADDTOEND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[177] ,CDBOSC_SETFOCUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[178] ,CDBOSC_KILLFOCUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[179] ,CDBOSC_SELCHANGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[180] ,CDBOSC_RENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[181] ,SVSI_DESELECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[182] ,SVSI_SELECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[183] ,SVSI_EDIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[184] ,SVSI_DESELECTOTHERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[185] ,SVSI_ENSUREVISIBLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[186] ,SVSI_FOCUSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[187] ,SVSI_TRANSLATEPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[188] ,SVGIO_BACKGROUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[189] ,SVGIO_SELECTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[190] ,SVGIO_ALLVIEW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[191] ,SBSC_HIDE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[192] ,SBSC_SHOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[193] ,SBSC_TOGGLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[194] ,SBSC_QUERY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[195] ,SBO_DEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[196] ,SBO_NOBROWSERPAGES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[197] ,SBCMDID_ENABLESHOWTREE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[198] ,SBCMDID_SHOWCONTROL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[199] ,SBCMDID_CANCELNAVIGATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[200] ,SBCMDID_MAYSAVECHANGES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[201] ,SBCMDID_SETHLINKFRAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[202] ,SBCMDID_ENABLESTOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[203] ,SBCMDID_OPTIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[204] ,SVUIA_DEACTIVATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[205] ,SVUIA_ACTIVATE_NOFOCUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[206] ,SVUIA_ACTIVATE_FOCUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[207] ,SVUIA_INPLACEACTIVATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[208] ,SV2GV_CURRENTVIEW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[209] ,SV2GV_DEFAULTVIEW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[210] ,STRRET_WSTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[211] ,STRRET_OFFSET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[212] ,STRRET_CSTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[213] ,REGSTR_PATH_SPECIAL_FOLDERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[214] ,CSIDL_DESKTOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[215] ,CSIDL_INTERNET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[216] ,CSIDL_PROGRAMS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[217] ,CSIDL_CONTROLS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[218] ,CSIDL_PRINTERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[219] ,CSIDL_PERSONAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[220] ,CSIDL_FAVORITES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[221] ,CSIDL_STARTUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[222] ,CSIDL_RECENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[223] ,CSIDL_SENDTO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[224] ,CSIDL_BITBUCKET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[225] ,CSIDL_STARTMENU));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[226] ,CSIDL_DESKTOPDIRECTORY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[227] ,CSIDL_DRIVES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[228] ,CSIDL_NETWORK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[229] ,CSIDL_NETHOOD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[230] ,CSIDL_FONTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[231] ,CSIDL_TEMPLATES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[232] ,CSIDL_COMMON_STARTMENU));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[233] ,CSIDL_COMMON_PROGRAMS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[234] ,CSIDL_COMMON_STARTUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[235] ,CSIDL_COMMON_DESKTOPDIRECTORY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[236] ,CSIDL_APPDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[237] ,CSIDL_PRINTHOOD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[238] ,CSIDL_LOCAL_APPDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[239] ,CSIDL_ALTSTARTUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[240] ,CSIDL_COMMON_ALTSTARTUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[241] ,CSIDL_COMMON_FAVORITES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[242] ,CSIDL_INTERNET_CACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[243] ,CSIDL_COOKIES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[244] ,CSIDL_HISTORY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[245] ,CSIDL_PROFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[246] ,CSIDL_CONNECTIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[247] ,CSIDL_COMMON_MUSIC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[248] ,CSIDL_COMMON_PICTURES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[249] ,CSIDL_COMMON_VIDEO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[250] ,CSIDL_CDBURN_AREA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[251] ,CSIDL_COMPUTERSNEARME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[252] ,CSIDL_PROFILES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[253] ,BIF_RETURNONLYFSDIRS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[254] ,BIF_DONTGOBELOWDOMAIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[255] ,BIF_STATUSTEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[256] ,BIF_RETURNFSANCESTORS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[257] ,BIF_EDITBOX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[258] ,BIF_VALIDATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[259] ,BIF_NEWDIALOGSTYLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[260] ,BIF_USENEWUI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[261] ,BIF_BROWSEINCLUDEURLS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[262] ,BIF_UAHINT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[263] ,BIF_NONEWFOLDERBUTTON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[264] ,BIF_NOTRANSLATETARGETS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[265] ,BIF_BROWSEFORCOMPUTER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[266] ,BIF_BROWSEFORPRINTER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[267] ,BIF_BROWSEINCLUDEFILES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[268] ,BIF_SHAREABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[269] ,BFFM_INITIALIZED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[270] ,BFFM_SELCHANGED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[271] ,BFFM_VALIDATEFAILEDA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[272] ,BFFM_VALIDATEFAILEDW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[273] ,BFFM_SETSTATUSTEXTA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[274] ,BFFM_ENABLEOK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[275] ,BFFM_SETSELECTIONA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[276] ,BFFM_SETSELECTIONW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[277] ,BFFM_SETSTATUSTEXTW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[278] ,BFFM_VALIDATEFAILED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[279] ,BFFM_SETSTATUSTEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[280] ,BFFM_SETSELECTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[281] ,SHGDN_NORMAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[282] ,SHGDN_INFOLDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[283] ,SHGDN_FOREDITING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[284] ,SHGDN_INCLUDE_NONFILESYS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[285] ,SHGDN_FORADDRESSBAR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[286] ,SHGDN_FORPARSING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[287] ,SHCONTF_FOLDERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[288] ,SHCONTF_NONFOLDERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[289] ,SHCONTF_INCLUDEHIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[290] ,SFGAO_CANCOPY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[291] ,SFGAO_CANMOVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[292] ,SFGAO_CANLINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[293] ,SFGAO_CANRENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[294] ,SFGAO_CANDELETE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[295] ,SFGAO_HASPROPSHEET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[296] ,SFGAO_DROPTARGET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[297] ,SFGAO_CAPABILITYMASK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[298] ,SFGAO_LINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[299] ,SFGAO_SHARE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[300] ,SFGAO_READONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[301] ,SFGAO_GHOSTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[302] ,SFGAO_HIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[303] ,SFGAO_DISPLAYATTRMASK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[304] ,SFGAO_FILESYSANCESTOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[305] ,SFGAO_FOLDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[306] ,SFGAO_FILESYSTEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[307] ,SFGAO_HASSUBFOLDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[308] ,SFGAO_CONTENTSMASK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[309] ,SFGAO_VALIDATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[310] ,SFGAO_REMOVABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[311] ,SFGAO_COMPRESSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[312] ,SFGAO_BROWSABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[313] ,SFGAO_NONENUMERATED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[314] ,SFGAO_NEWCONTENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[315] ,SHCOLSTATE_TYPE_STR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[316] ,SHCOLSTATE_TYPE_INT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[317] ,SHCOLSTATE_TYPE_DATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[318] ,SHCOLSTATE_TYPEMASK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[319] ,SHCOLSTATE_ONBYDEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[320] ,SHCOLSTATE_SLOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[321] ,SHCOLSTATE_EXTENDED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[322] ,SHCOLSTATE_SECONDARYUI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[323] ,SHCOLSTATE_HIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[324] ,DWFRF_NORMAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[325] ,DWFRF_DELETECONFIGDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[326] ,DWFAF_HIDDEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[327] ,DBIM_MINSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[328] ,DBIM_MAXSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[329] ,DBIM_INTEGRAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[330] ,DBIM_ACTUAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[331] ,DBIM_TITLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[332] ,DBIM_MODEFLAGS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[333] ,DBIM_BKCOLOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[334] ,DBIMF_NORMAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[335] ,DBIMF_VARIABLEHEIGHT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[336] ,DBIMF_DEBOSSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[337] ,DBIMF_BKCOLOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[338] ,DBIF_VIEWMODE_NORMAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[339] ,DBIF_VIEWMODE_VERTICAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[340] ,DBIF_VIEWMODE_FLOATING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[341] ,DBIF_VIEWMODE_TRANSPARENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[342] ,DBID_BANDINFOCHANGED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[343] ,DBID_SHOWONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[344] ,DBID_MAXIMIZEBAND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[345] ,COMPONENT_TOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[346] ,COMP_TYPE_HTMLDOC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[347] ,COMP_TYPE_PICTURE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[348] ,COMP_TYPE_WEBSITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[349] ,COMP_TYPE_CONTROL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[350] ,COMP_TYPE_CFHTML));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[351] ,COMP_TYPE_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[352] ,AD_APPLY_SAVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[353] ,AD_APPLY_HTMLGEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[354] ,AD_APPLY_REFRESH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[355] ,AD_APPLY_ALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[356] ,AD_APPLY_FORCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[357] ,AD_APPLY_BUFFERED_REFRESH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[358] ,WPSTYLE_CENTER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[359] ,WPSTYLE_TILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[360] ,WPSTYLE_STRETCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[361] ,WPSTYLE_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[362] ,COMP_ELEM_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[363] ,COMP_ELEM_CHECKED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[364] ,COMP_ELEM_DIRTY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[365] ,COMP_ELEM_NOSCROLL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[366] ,COMP_ELEM_POS_LEFT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[367] ,COMP_ELEM_POS_TOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[368] ,COMP_ELEM_SIZE_WIDTH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[369] ,COMP_ELEM_SIZE_HEIGHT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[370] ,COMP_ELEM_POS_ZINDEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[371] ,COMP_ELEM_SOURCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[372] ,COMP_ELEM_FRIENDLYNAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[373] ,COMP_ELEM_SUBSCRIBEDURL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[374] ,COMP_ELEM_ALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[375] ,ADDURL_SILENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[376] ,DTI_ADDUI_DEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[377] ,DTI_ADDUI_DISPSUBWIZARD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[378] ,CFSTR_SHELLIDLIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[379] ,CFSTR_SHELLIDLISTOFFSET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[380] ,CFSTR_NETRESOURCES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[381] ,CFSTR_FILEDESCRIPTORA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[382] ,CFSTR_FILEDESCRIPTORW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[383] ,CFSTR_FILECONTENTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[384] ,CFSTR_FILENAMEA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[385] ,CFSTR_FILENAMEW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[386] ,CFSTR_PRINTERGROUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[387] ,CFSTR_FILENAMEMAPA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[388] ,CFSTR_FILENAMEMAPW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[389] ,CFSTR_SHELLURL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[390] ,CFSTR_PREFERREDDROPEFFECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[391] ,CFSTR_PERFORMEDDROPEFFECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[392] ,CFSTR_PASTESUCCEEDED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[393] ,CFSTR_FILEDESCRIPTOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[394] ,CFSTR_FILENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[395] ,CFSTR_FILENAMEMAP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[396] ,DVASPECT_SHORTNAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[397] ,FD_CLSID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[398] ,FD_SIZEPOINT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[399] ,FD_ATTRIBUTES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[400] ,FD_CREATETIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[401] ,FD_ACCESSTIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[402] ,FD_WRITESTIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[403] ,FD_FILESIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[404] ,FD_LINKUI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[405] ,SHCNE_RENAMEITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[406] ,SHCNE_CREATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[407] ,SHCNE_DELETE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[408] ,SHCNE_MKDIR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[409] ,SHCNE_RMDIR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[410] ,SHCNE_MEDIAINSERTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[411] ,SHCNE_MEDIAREMOVED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[412] ,SHCNE_DRIVEREMOVED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[413] ,SHCNE_DRIVEADD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[414] ,SHCNE_NETSHARE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[415] ,SHCNE_NETUNSHARE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[416] ,SHCNE_ATTRIBUTES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[417] ,SHCNE_UPDATEDIR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[418] ,SHCNE_UPDATEITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[419] ,SHCNE_SERVERDISCONNECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[420] ,SHCNE_UPDATEIMAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[421] ,SHCNE_DRIVEADDGUI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[422] ,SHCNE_RENAMEFOLDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[423] ,SHCNE_FREESPACE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[424] ,SHCNE_EXTENDED_EVENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[425] ,SHCNE_EXTENDED_EVENT_PRE_IE4));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[426] ,SHCNE_ASSOCCHANGED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[427] ,SHCNE_DISKEVENTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[428] ,SHCNE_GLOBALEVENTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[429] ,SHCNE_ALLEVENTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[430] ,SHCNE_INTERRUPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[431] ,SHCNEE_THEMECHANGED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[432] ,SHCNEE_ORDERCHANGED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[433] ,SHCNF_IDLIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[434] ,SHCNF_PATHA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[435] ,SHCNF_PRINTERA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[436] ,SHCNF_DWORD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[437] ,SHCNF_PATHW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[438] ,SHCNF_PRINTERW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[439] ,SHCNF_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[440] ,SHCNF_FLUSH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[441] ,SHCNF_FLUSHNOWAIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[442] ,SHCNF_PATH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[443] ,SHCNF_PRINTER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[444] ,QIF_CACHED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[445] ,QIF_DONTEXPANDFOLDER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[446] ,DI_GETDRAGIMAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[447] ,SHARD_PIDL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[448] ,SHARD_PATHA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[449] ,SHARD_PATHW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[450] ,SHARD_PATH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[451] ,SHGDFIL_FINDDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[452] ,SHGDFIL_NETRESOURCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[453] ,SHGDFIL_DESCRIPTIONID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[454] ,SHDID_ROOT_REGITEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[455] ,SHDID_FS_FILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[456] ,SHDID_FS_DIRECTORY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[457] ,SHDID_FS_OTHER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[458] ,SHDID_COMPUTER_DRIVE35));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[459] ,SHDID_COMPUTER_DRIVE525));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[460] ,SHDID_COMPUTER_REMOVABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[461] ,SHDID_COMPUTER_FIXED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[462] ,SHDID_COMPUTER_NETDRIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[463] ,SHDID_COMPUTER_CDROM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[464] ,SHDID_COMPUTER_RAMDISK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[465] ,SHDID_COMPUTER_OTHER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[466] ,SHDID_NET_DOMAIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[467] ,SHDID_NET_SERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[468] ,SHDID_NET_SHARE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[469] ,SHDID_NET_RESTOFNET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[470] ,SHDID_NET_OTHER));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const __ConstNames1 : array[0..55] of string = (
'PID_IS_URL'
,'PID_IS_NAME'
,'PID_IS_WORKINGDIR'
,'PID_IS_HOTKEY'
,'PID_IS_SHOWCMD'
,'PID_IS_ICONINDEX'
,'PID_IS_ICONFILE'
,'PID_IS_WHATSNEW'
,'PID_IS_AUTHOR'
,'PID_IS_DESCRIPTION'
,'PID_IS_COMMENT'
,'PID_INTSITE_WHATSNEW'
,'PID_INTSITE_AUTHOR'
,'PID_INTSITE_LASTVISIT'
,'PID_INTSITE_LASTMOD'
,'PID_INTSITE_VISITCOUNT'
,'PID_INTSITE_DESCRIPTION'
,'PID_INTSITE_COMMENT'
,'PID_INTSITE_FLAGS'
,'PID_INTSITE_CONTENTLEN'
,'PID_INTSITE_CONTENTCODE'
,'PID_INTSITE_RECURSE'
,'PID_INTSITE_WATCH'
,'PID_INTSITE_SUBSCRIPTION'
,'PID_INTSITE_URL'
,'PID_INTSITE_TITLE'
,'PID_INTSITE_CODEPAGE'
,'PID_INTSITE_TRACKING'
,'PIDISF_RECENTLYCHANGED'
,'PIDISF_CACHEDSTICKY'
,'PIDISF_CACHEIMAGES'
,'PIDISF_FOLLOWALLLINKS'
,'PIDISM_GLOBAL'
,'PIDISM_WATCH'
,'PIDISM_DONTWATCH'
,'SSF_SHOWALLOBJECTS'
,'SSF_SHOWEXTENSIONS'
,'SSF_SHOWCOMPCOLOR'
,'SSF_SHOWSYSFILES'
,'SSF_DOUBLECLICKINWEBVIEW'
,'SSF_SHOWATTRIBCOL'
,'SSF_DESKTOPHTML'
,'SSF_WIN95CLASSIC'
,'SSF_DONTPRETTYPATH'
,'SSF_SHOWINFOTIP'
,'SSF_MAPNETDRVBUTTON'
,'SSF_NOCONFIRMRECYCLE'
,'SSF_HIDEICONS'
,'ACO_NONE'
,'ACO_AUTOSUGGEST'
,'ACO_AUTOAPPEND'
,'ACO_SEARCH'
,'ACO_FILTERPREFIXES'
,'ACO_USETAB'
,'ACO_UPDOWNKEYDROPSLIST'
,'ACO_RTLREADING'
);
var __RegisteredConstsList1 : TList;
procedure __RegisterConsts1;
begin
__RegisteredConstsList1 := TList.Create;
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[0] ,PID_IS_URL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[1] ,PID_IS_NAME));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[2] ,PID_IS_WORKINGDIR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[3] ,PID_IS_HOTKEY));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[4] ,PID_IS_SHOWCMD));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[5] ,PID_IS_ICONINDEX));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[6] ,PID_IS_ICONFILE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[7] ,PID_IS_WHATSNEW));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[8] ,PID_IS_AUTHOR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[9] ,PID_IS_DESCRIPTION));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[10] ,PID_IS_COMMENT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[11] ,PID_INTSITE_WHATSNEW));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[12] ,PID_INTSITE_AUTHOR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[13] ,PID_INTSITE_LASTVISIT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[14] ,PID_INTSITE_LASTMOD));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[15] ,PID_INTSITE_VISITCOUNT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[16] ,PID_INTSITE_DESCRIPTION));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[17] ,PID_INTSITE_COMMENT));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[18] ,PID_INTSITE_FLAGS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[19] ,PID_INTSITE_CONTENTLEN));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[20] ,PID_INTSITE_CONTENTCODE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[21] ,PID_INTSITE_RECURSE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[22] ,PID_INTSITE_WATCH));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[23] ,PID_INTSITE_SUBSCRIPTION));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[24] ,PID_INTSITE_URL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[25] ,PID_INTSITE_TITLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[26] ,PID_INTSITE_CODEPAGE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[27] ,PID_INTSITE_TRACKING));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[28] ,PIDISF_RECENTLYCHANGED));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[29] ,PIDISF_CACHEDSTICKY));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[30] ,PIDISF_CACHEIMAGES));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[31] ,PIDISF_FOLLOWALLLINKS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[32] ,PIDISM_GLOBAL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[33] ,PIDISM_WATCH));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[34] ,PIDISM_DONTWATCH));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[35] ,SSF_SHOWALLOBJECTS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[36] ,SSF_SHOWEXTENSIONS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[37] ,SSF_SHOWCOMPCOLOR));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[38] ,SSF_SHOWSYSFILES));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[39] ,SSF_DOUBLECLICKINWEBVIEW));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[40] ,SSF_SHOWATTRIBCOL));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[41] ,SSF_DESKTOPHTML));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[42] ,SSF_WIN95CLASSIC));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[43] ,SSF_DONTPRETTYPATH));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[44] ,SSF_SHOWINFOTIP));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[45] ,SSF_MAPNETDRVBUTTON));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[46] ,SSF_NOCONFIRMRECYCLE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[47] ,SSF_HIDEICONS));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[48] ,ACO_NONE));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[49] ,ACO_AUTOSUGGEST));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[50] ,ACO_AUTOAPPEND));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[51] ,ACO_SEARCH));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[52] ,ACO_FILTERPREFIXES));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[53] ,ACO_USETAB));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[54] ,ACO_UPDOWNKEYDROPSLIST));
__RegisteredConstsList1.Add(RegisterConst(__ConstNames1[55] ,ACO_RTLREADING));
end;

procedure __UnregisterConsts1;
var i : integer;
begin
__RegisteredConstsList1.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..86] of string = (
'_browseinfo'
,'_browseinfoA'
,'_browseinfoW'
,'_CMINVOKECOMMANDINFO'
,'_CMInvokeCommandInfoEx'
,'_DROPFILES'
,'_FILEDESCRIPTOR'
,'_FILEDESCRIPTORA'
,'_FILEDESCRIPTORW'
,'_FILEGROUPDESCRIPTOR'
,'_FILEGROUPDESCRIPTORA'
,'_FILEGROUPDESCRIPTORW'
,'_IDA'
,'_ITEMIDLIST'
,'_NRESARRAY'
,'_SHDESCRIPTIONID'
,'_SHELLDETAILS'
,'_SHITEMID'
,'_STRRET'
,'_SV2CVW2_PARAMS'
,'_tagCOMPONENT'
,'_tagCOMPONENTSOPT'
,'_tagCOMPPOS'
,'_tagWALLPAPEROPT'
,'BROWSEINFO'
,'BROWSEINFOA'
,'BROWSEINFOW'
,'CIDA'
,'CMINVOKECOMMANDINFO'
,'CMINVOKECOMMANDINFOEX'
,'DESKBANDINFO'
,'DROPFILES'
,'FILEDESCRIPTOR'
,'FILEDESCRIPTORA'
,'FILEDESCRIPTORW'
,'FILEGROUPDESCRIPTOR'
,'FILEGROUPDESCRIPTORA'
,'FILEGROUPDESCRIPTORW'
,'FOLDERSETTINGS'
,'FVSHOWINFO'
,'ITEMIDLIST'
,'NRESARRAY'
,'SHCOLUMNID'
,'SHDESCRIPTIONID'
,'SHDRAGIMAGE'
,'SHELLDETAILS'
,'SHELLFLAGSTATE'
,'SHELLVIEWID'
,'SHITEMID'
,'STRRET'
,'SV2CVW2_PARAMS'
,'tagExtraSearch'
,'TBrowseInfo'
,'TBrowseInfoA'
,'TBrowseInfoW'
,'TCMInvokeCommandInfo'
,'TCMInvokeCommandInfoEx'
,'TComponentsOpt'
,'TCompPos'
,'TDeskBandInfo'
,'TDropFiles'
,'TExtraSearch'
,'TFileDescriptor'
,'TFileDescriptorA'
,'TFileDescriptorW'
,'TFileGroupDescriptor'
,'TFileGroupDescriptorA'
,'TFileGroupDescriptorW'
,'TFolderSettings'
,'TFVShowInfo'
,'TIDA'
,'TItemIDList'
,'TNResArray'
,'TShColumnID'
,'TShComponent'
,'TSHDescriptionID'
,'TShDragImage'
,'TShellDetails'
,'TShellFlagState'
,'TShellViewID'
,'TSHItemID'
,'TStrRet'
,'TSV2CreateParams'
,'TWallPaperOpt'
,'SHChangeNotify'
,'SHAddToRecentDocs'
,'SHGetSettings'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(__browseinfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(__browseinfoA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(__browseinfoW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[3],Addr(__CMINVOKECOMMANDINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[4],Addr(__CMInvokeCommandInfoEx_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[5],Addr(__DROPFILES_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[6],Addr(__FILEDESCRIPTOR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[7],Addr(__FILEDESCRIPTORA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[8],Addr(__FILEDESCRIPTORW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[9],Addr(__FILEGROUPDESCRIPTOR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[10],Addr(__FILEGROUPDESCRIPTORA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[11],Addr(__FILEGROUPDESCRIPTORW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[12],Addr(__IDA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[13],Addr(__ITEMIDLIST_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[14],Addr(__NRESARRAY_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[15],Addr(__SHDESCRIPTIONID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[16],Addr(__SHELLDETAILS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[17],Addr(__SHITEMID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[18],Addr(__STRRET_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[19],Addr(__SV2CVW2_PARAMS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[20],Addr(__tagCOMPONENT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[21],Addr(__tagCOMPONENTSOPT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[22],Addr(__tagCOMPPOS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[23],Addr(__tagWALLPAPEROPT_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[24],Addr(_BROWSEINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[25],Addr(_BROWSEINFOA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[26],Addr(_BROWSEINFOW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[27],Addr(_CIDA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[28],Addr(_CMINVOKECOMMANDINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[29],Addr(_CMINVOKECOMMANDINFOEX_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[30],Addr(_DESKBANDINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[31],Addr(_DROPFILES_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[32],Addr(_FILEDESCRIPTOR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[33],Addr(_FILEDESCRIPTORA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[34],Addr(_FILEDESCRIPTORW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[35],Addr(_FILEGROUPDESCRIPTOR_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[36],Addr(_FILEGROUPDESCRIPTORA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[37],Addr(_FILEGROUPDESCRIPTORW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[38],Addr(_FOLDERSETTINGS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[39],Addr(_FVSHOWINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[40],Addr(_ITEMIDLIST_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[41],Addr(_NRESARRAY_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[42],Addr(_SHCOLUMNID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[43],Addr(_SHDESCRIPTIONID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[44],Addr(_SHDRAGIMAGE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[45],Addr(_SHELLDETAILS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[46],Addr(_SHELLFLAGSTATE_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[47],Addr(_SHELLVIEWID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[48],Addr(_SHITEMID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[49],Addr(_STRRET_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[50],Addr(_SV2CVW2_PARAMS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[51],Addr(_tagExtraSearch_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[52],Addr(_TBrowseInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[53],Addr(_TBrowseInfoA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[54],Addr(_TBrowseInfoW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[55],Addr(_TCMInvokeCommandInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[56],Addr(_TCMInvokeCommandInfoEx_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[57],Addr(_TComponentsOpt_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[58],Addr(_TCompPos_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[59],Addr(_TDeskBandInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[60],Addr(_TDropFiles_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[61],Addr(_TExtraSearch_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[62],Addr(_TFileDescriptor_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[63],Addr(_TFileDescriptorA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[64],Addr(_TFileDescriptorW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[65],Addr(_TFileGroupDescriptor_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[66],Addr(_TFileGroupDescriptorA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[67],Addr(_TFileGroupDescriptorW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[68],Addr(_TFolderSettings_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[69],Addr(_TFVShowInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[70],Addr(_TIDA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[71],Addr(_TItemIDList_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[72],Addr(_TNResArray_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[73],Addr(_TShColumnID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[74],Addr(_TShComponent_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[75],Addr(_TSHDescriptionID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[76],Addr(_TShDragImage_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[77],Addr(_TShellDetails_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[78],Addr(_TShellFlagState_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[79],Addr(_TShellViewID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[80],Addr(_TSHItemID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[81],Addr(_TStrRet_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[82],Addr(_TSV2CreateParams_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[83],Addr(_TWallPaperOpt_)));
RegisterProc(nil,MethodNames[84],mtProc,TypeInfo(_T13),[
TypeInfo(Longint),
TypeInfo(UINT),
TypeInfoPointer,
TypeInfoPointer],Addr(SHChangeNotify),cStdCall);

RegisterProc(nil,MethodNames[85],mtProc,TypeInfo(_T14),[
TypeInfo(UINT),
TypeInfoPointer],Addr(SHAddToRecentDocs),cStdCall);

RegisterProc(nil,MethodNames[86],mtProc,TypeInfo(_T19),[
TypeInfo(IDispatch),
TypeInfo(DWORD)],Addr(____SHGetSettings__Wrapper),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'SHGetMalloc',mtProc,TypeInfo(_T0),[
TypeInfo(IMalloc),TypeInfo(HResult)],Addr(SHGetMalloc),cStdCall)}

{RegisterProc(nil,'SHGetPathFromIDList',mtProc,TypeInfo(_T1),[
TypeInfoPointer,
TypeInfoPChar,TypeInfo(BOOL)],Addr(SHGetPathFromIDList),cStdCall)}

{RegisterProc(nil,'SHGetPathFromIDListA',mtProc,TypeInfo(_T2),[
TypeInfoPointer,
TypeInfoPChar,TypeInfo(BOOL)],Addr(SHGetPathFromIDListA),cStdCall)}

{RegisterProc(nil,'SHGetPathFromIDListW',mtProc,TypeInfo(_T3),[
TypeInfoPointer,
TypeInfoPWideChar,TypeInfo(BOOL)],Addr(SHGetPathFromIDListW),cStdCall)}

{RegisterProc(nil,'SHGetSpecialFolderLocation',mtProc,TypeInfo(_T4),[
TypeInfo(hwnd),
TypeInfo(Integer),
TypeInfoPointer,TypeInfo(HResult)],Addr(SHGetSpecialFolderLocation),cStdCall)}

{RegisterProc(nil,'SHGetSpecialFolderPath',mtProc,TypeInfo(_T5),[
TypeInfo(hwnd),
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(BOOL),TypeInfo(BOOL)],Addr(SHGetSpecialFolderPath),cStdCall)}

{RegisterProc(nil,'SHGetSpecialFolderPathA',mtProc,TypeInfo(_T6),[
TypeInfo(hwnd),
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(BOOL),TypeInfo(BOOL)],Addr(SHGetSpecialFolderPathA),cStdCall)}

{RegisterProc(nil,'SHGetSpecialFolderPathW',mtProc,TypeInfo(_T7),[
TypeInfo(hwnd),
TypeInfoPWideChar,
TypeInfo(Integer),
TypeInfo(BOOL),TypeInfo(BOOL)],Addr(SHGetSpecialFolderPathW),cStdCall)}

{RegisterProc(nil,'SHGetDesktopFolder',mtProc,TypeInfo(_T12),[
TypeInfo(IShellFolder),TypeInfo(HResult)],Addr(SHGetDesktopFolder),cStdCall)}

{RegisterProc(nil,'SHGetInstanceExplorer',mtProc,TypeInfo(_T15),[
TypeInfo(IUnknown),TypeInfo(HResult)],Addr(SHGetInstanceExplorer),cStdCall)}

{RegisterProc(nil,'SHGetDataFromIDList',mtProc,TypeInfo(_T16),[
TypeInfo(IShellFolder),
TypeInfoPointer,
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(HResult)],Addr(SHGetDataFromIDList),cStdCall)}

{RegisterProc(nil,'SHGetDataFromIDListA',mtProc,TypeInfo(_T17),[
TypeInfo(IShellFolder),
TypeInfoPointer,
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(HResult)],Addr(SHGetDataFromIDListA),cStdCall)}

{RegisterProc(nil,'SHGetDataFromIDListW',mtProc,TypeInfo(_T18),[
TypeInfo(IShellFolder),
TypeInfoPointer,
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(Integer),TypeInfo(HResult)],Addr(SHGetDataFromIDListW),cStdCall)}

__RegisterClasses;
__RegisterConsts0;
__RegisterConsts1;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterConsts1;
__UnregisterProcs;
end.
