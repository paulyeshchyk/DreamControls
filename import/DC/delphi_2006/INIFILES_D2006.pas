{*******************************************************
{
{ Import unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

Unit IniFiles_d2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  SysUtils,
  Classes,
  IniFiles;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (const Section : string;
Strings : TStrings;
SubSectionNamesOnly : Boolean;
Recurse : Boolean) of object;

_T1 = procedure (const FileName : string) of object;

_T2 = function (const Section : string): Boolean of object;

_T3 = function (const Section : string;
const Ident : string;
const Default : string): string of object;

_T4 = procedure (const Section : string;
const Ident : string;
const Value : string) of object;

_T5 = function (const Section : string;
const Ident : string;
Default : Integer): Integer of object;

_T6 = procedure (const Section : string;
const Ident : string;
Value : Integer) of object;

_T7 = function (const Section : string;
const Ident : string;
Default : Boolean): Boolean of object;

_T8 = procedure (const Section : string;
const Ident : string;
Value : Boolean) of object;

_T9 = function (const Section : string;
const Name : string;
Value : TStream): Integer of object;

_T10 = function (const Section : string;
const Name : string;
Default : TDateTime): TDateTime of object;

_T11 = function (const Section : string;
const Name : string;
Default : TDateTime): TDateTime of object;

_T12 = function (const Section : string;
const Name : string;
Default : Double): Double of object;

_T13 = function (const Section : string;
const Name : string;
Default : TDateTime): TDateTime of object;

_T14 = procedure (const Section : string;
const Name : string;
Value : TStream) of object;

_T15 = procedure (const Section : string;
const Name : string;
Value : TDateTime) of object;

_T16 = procedure (const Section : string;
const Name : string;
Value : TDateTime) of object;

_T17 = procedure (const Section : string;
const Name : string;
Value : Double) of object;

_T18 = procedure (const Section : string;
const Name : string;
Value : TDateTime) of object;

_T19 = procedure (const Section : string;
Strings : TStrings) of object;

_T20 = procedure (Strings : TStrings) of object;

_T22 = procedure (const Section : string;
Strings : TStrings) of object;

_T23 = procedure (const Section : string) of object;

_T24 = procedure (const Section : string;
const Ident : string) of object;

_T25 = procedure  of object;

_T26 = function (const Section : string;
const Ident : string): Boolean of object;

_T27 = procedure (const FileName : string) of object;

_T28 = _T25;

_T29 = procedure (const List : TStrings) of object;

_T30 = procedure (const FileName : string;
Reload : Boolean) of object;

_T31 = _T29;

_T32 = function (const Key : string): Cardinal of object;

_T33 = procedure (Size : Cardinal) of object;

_T34 = procedure (const Key : string;
Value : Integer) of object;

_T35 = _T25;

_T36 = procedure (const Key : string) of object;

_T37 = function (const Key : string;
Value : Integer): Boolean of object;

_T38 = function (const Key : string): Integer of object;

function __DC__GetTMemIniFile__CaseSensitive(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TMemIniFile(Instance).CaseSensitive;
end;

procedure __DC__SetTMemIniFile__CaseSensitive(Instance : TObject; Params : PVariantArgList);
begin
TMemIniFile(Instance).CaseSensitive:=OleVariant(Params^[0]);
end;

function __DC__GetTMemIniFile__Encoding(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TMemIniFile(Instance).Encoding);
end;

procedure __DC__SetTMemIniFile__Encoding(Instance : TObject; Params : PVariantArgList);
begin
TMemIniFile(Instance).Encoding:=TEncoding(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTMemIniFile__Modified(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TMemIniFile(Instance).Modified;
end;

procedure __DC__SetTMemIniFile__Modified(Instance : TObject; Params : PVariantArgList);
begin
TMemIniFile(Instance).Modified:=OleVariant(Params^[0]);
end;

function __DC__GetTMemIniFile__AutoSave(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TMemIniFile(Instance).AutoSave;
end;

procedure __DC__SetTMemIniFile__AutoSave(Instance : TObject; Params : PVariantArgList);
begin
TMemIniFile(Instance).AutoSave:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TMemIniFile,'CaseSensitive',__DC__GetTMemIniFile__CaseSensitive,__DC__SetTMemIniFile__CaseSensitive);
RegisterProperty(TMemIniFile,'Encoding',__DC__GetTMemIniFile__Encoding,__DC__SetTMemIniFile__Encoding);
RegisterProperty(TMemIniFile,'Modified',__DC__GetTMemIniFile__Modified,__DC__SetTMemIniFile__Modified);
RegisterProperty(TMemIniFile,'AutoSave',__DC__GetTMemIniFile__AutoSave,__DC__SetTMemIniFile__AutoSave);
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..5] of TClass = (
EIniFileException,
TCustomIniFile,
THashedStringList,
TIniFile,
TMemIniFile,
TStringHash
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
//RegRegisterMethod(TCustomIniFile,'ReadSections',TypeInfo(_T20),[TypeInfo(TStrings)], pointer(72));
RegRegisterMethod(TCustomIniFile,'ReadSections',TypeInfo(_T20),[TypeInfo(TStrings)],  getVMTProcAddr('TCustomIniFile','ReadSections',72));


//RegRegisterMethod(TCustomIniFile,'UpdateFile',TypeInfo(_T25),NoParams, pointer(96));
RegRegisterMethod(TCustomIniFile,'UpdateFile',TypeInfo(_T25),NoParams,  getVMTProcAddr('TCustomIniFile','UpdateFile',96));


RegRegisterMethod(TMemIniFile,'Clear',TypeInfo(_T28),NoParams,Addr(TMemIniFile.Clear));

RegRegisterMethod(TMemIniFile,'GetStrings',TypeInfo(_T29),[
TypeInfo(TStrings)],Addr(TMemIniFile.GetStrings));

RegRegisterMethod(TMemIniFile,'SetStrings',TypeInfo(_T31),[
TypeInfo(TStrings)],Addr(TMemIniFile.SetStrings));

RegisterProc(TStringHash,'Create',mtConstructor,TypeInfo(_T33),[
TypeInfo(Cardinal)],Addr(TStringHash.Create),cRegister);

RegRegisterMethod(TStringHash,'Clear',TypeInfo(_T35),NoParams,Addr(TStringHash.Clear));

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
_mreg_0;
//RegRegisterMethod(TCustomIniFile,'InternalReadSections',TypeInfo(_T0),[TypeInfo(string),TypeInfo(TStrings),TypeInfo(Boolean),TypeInfo(Boolean)], pointer(0));
RegRegisterMethod(TCustomIniFile,'InternalReadSections',TypeInfo(_T0),[TypeInfo(string),TypeInfo(TStrings),TypeInfo(Boolean),TypeInfo(Boolean)],  getVMTProcAddr('TCustomIniFile','InternalReadSections',0));


RegisterProc(TCustomIniFile,'Create',mtConstructor,TypeInfo(_T1),[
TypeInfo(string)],Addr(TCustomIniFile.Create),cRegister);


RegRegisterMethod(TCustomIniFile,'SectionExists',TypeInfo(_T2),[
TypeInfo(string),TypeInfo(Boolean)],Addr(TCustomIniFile.SectionExists));

//RegRegisterMethod(TCustomIniFile,'ReadString',TypeInfo(_T3),[TypeInfo(string),TypeInfo(string),TypeInfo(string),TypeInfo(string)], pointer(4));
RegRegisterMethod(TCustomIniFile,'ReadString',TypeInfo(_T3),[TypeInfo(string),TypeInfo(string),TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TCustomIniFile','ReadString',4));


//RegRegisterMethod(TCustomIniFile,'WriteString',TypeInfo(_T4),[TypeInfo(string),TypeInfo(string),TypeInfo(string)], pointer(8));
RegRegisterMethod(TCustomIniFile,'WriteString',TypeInfo(_T4),[TypeInfo(string),TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TCustomIniFile','WriteString',8));


//RegRegisterMethod(TCustomIniFile,'ReadInteger',TypeInfo(_T5),[TypeInfo(string),TypeInfo(string),TypeInfo(Integer),TypeInfo(Integer)], pointer(12));
RegRegisterMethod(TCustomIniFile,'ReadInteger',TypeInfo(_T5),[TypeInfo(string),TypeInfo(string),TypeInfo(Integer),TypeInfo(Integer)],  getVMTProcAddr('TCustomIniFile','ReadInteger',12));


//RegRegisterMethod(TCustomIniFile,'WriteInteger',TypeInfo(_T6),[TypeInfo(string),TypeInfo(string),TypeInfo(Integer)], pointer(16));
RegRegisterMethod(TCustomIniFile,'WriteInteger',TypeInfo(_T6),[TypeInfo(string),TypeInfo(string),TypeInfo(Integer)],  getVMTProcAddr('TCustomIniFile','WriteInteger',16));


//RegRegisterMethod(TCustomIniFile,'ReadBool',TypeInfo(_T7),[TypeInfo(string),TypeInfo(string),TypeInfo(Boolean),TypeInfo(Boolean)], pointer(20));
RegRegisterMethod(TCustomIniFile,'ReadBool',TypeInfo(_T7),[TypeInfo(string),TypeInfo(string),TypeInfo(Boolean),TypeInfo(Boolean)],  getVMTProcAddr('TCustomIniFile','ReadBool',20));


//RegRegisterMethod(TCustomIniFile,'WriteBool',TypeInfo(_T8),[TypeInfo(string),TypeInfo(string),TypeInfo(Boolean)], pointer(24));
RegRegisterMethod(TCustomIniFile,'WriteBool',TypeInfo(_T8),[TypeInfo(string),
TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TCustomIniFile','WriteBool',24));



//RegRegisterMethod(TCustomIniFile,'ReadBinaryStream',TypeInfo(_T9),[TypeInfo(string),TypeInfo(string),TypeInfo(TStream),TypeInfo(Integer)], pointer(28));
RegRegisterMethod(TCustomIniFile,'ReadBinaryStream',TypeInfo(_T9),[TypeInfo(string),TypeInfo(string),TypeInfo(TStream),TypeInfo(Integer)],  getVMTProcAddr('TCustomIniFile','ReadBinaryStream',28));


//RegRegisterMethod(TCustomIniFile,'ReadDate',TypeInfo(_T10),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime),TypeInfo(TDateTime)], pointer(32));
RegRegisterMethod(TCustomIniFile,'ReadDate',TypeInfo(_T10),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime),TypeInfo(TDateTime)],  getVMTProcAddr('TCustomIniFile','ReadDate',32));


//RegRegisterMethod(TCustomIniFile,'ReadDateTime',TypeInfo(_T11),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime),TypeInfo(TDateTime)], pointer(36));
RegRegisterMethod(TCustomIniFile,'ReadDateTime',TypeInfo(_T11),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime),TypeInfo(TDateTime)],  getVMTProcAddr('TCustomIniFile','ReadDateTime',36));


//RegRegisterMethod(TCustomIniFile,'ReadFloat',TypeInfo(_T12),[TypeInfo(string),TypeInfo(string),TypeInfo(Double),TypeInfo(Double)], pointer(40));
RegRegisterMethod(TCustomIniFile,'ReadFloat',TypeInfo(_T12),[TypeInfo(string),TypeInfo(string),TypeInfo(Double),TypeInfo(Double)],  getVMTProcAddr('TCustomIniFile','ReadFloat',40));


//RegRegisterMethod(TCustomIniFile,'ReadTime',TypeInfo(_T13),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime),TypeInfo(TDateTime)], pointer(44));
RegRegisterMethod(TCustomIniFile,'ReadTime',TypeInfo(_T13),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime),TypeInfo(TDateTime)],  getVMTProcAddr('TCustomIniFile','ReadTime',44));


//RegRegisterMethod(TCustomIniFile,'WriteBinaryStream',TypeInfo(_T14),[TypeInfo(string),TypeInfo(string),TypeInfo(TStream)], pointer(48));
RegRegisterMethod(TCustomIniFile,'WriteBinaryStream',TypeInfo(_T14),[TypeInfo(string),TypeInfo(string),TypeInfo(TStream)],  getVMTProcAddr('TCustomIniFile','WriteBinaryStream',48));


//RegRegisterMethod(TCustomIniFile,'WriteDate',TypeInfo(_T15),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime)], pointer(52))  ;
RegRegisterMethod(TCustomIniFile,'WriteDate',TypeInfo(_T15),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime)],  getVMTProcAddr('TCustomIniFile','WriteDate',52))  ;


//RegRegisterMethod(TCustomIniFile,'WriteDateTime',TypeInfo(_T16),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime)], pointer(56)) ;
RegRegisterMethod(TCustomIniFile,'WriteDateTime',TypeInfo(_T16),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime)],  getVMTProcAddr('TCustomIniFile','WriteDateTime',56)) ;


//RegRegisterMethod(TCustomIniFile,'WriteFloat',TypeInfo(_T17),[TypeInfo(string),TypeInfo(string),TypeInfo(Double)], pointer(60))  ;
RegRegisterMethod(TCustomIniFile,'WriteFloat',TypeInfo(_T17),[TypeInfo(string),TypeInfo(string),TypeInfo(Double)],  getVMTProcAddr('TCustomIniFile','WriteFloat',60))  ;


//RegRegisterMethod(TCustomIniFile,'WriteTime',TypeInfo(_T18),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime)], pointer(64)) ;
RegRegisterMethod(TCustomIniFile,'WriteTime',TypeInfo(_T18),[TypeInfo(string),TypeInfo(string),TypeInfo(TDateTime)],  getVMTProcAddr('TCustomIniFile','WriteTime',64)) ;


//RegRegisterMethod(TCustomIniFile,'ReadSection',TypeInfo(_T19),[TypeInfo(string),TypeInfo(TStrings)], pointer(68)) ;
RegRegisterMethod(TCustomIniFile,'ReadSection',TypeInfo(_T19),[TypeInfo(string),TypeInfo(TStrings)],  getVMTProcAddr('TCustomIniFile','ReadSection',68)) ;


//RegRegisterMethod(TCustomIniFile,'ReadSectionValues',TypeInfo(_T22),[TypeInfo(string),TypeInfo(TStrings)], pointer(84))  ;
RegRegisterMethod(TCustomIniFile,'ReadSectionValues',TypeInfo(_T22),[TypeInfo(string),TypeInfo(TStrings)],  getVMTProcAddr('TCustomIniFile','ReadSectionValues',84))  ;


//RegRegisterMethod(TCustomIniFile,'EraseSection',TypeInfo(_T23),[TypeInfo(string)], pointer(88))  ;
RegRegisterMethod(TCustomIniFile,'EraseSection',TypeInfo(_T23),[TypeInfo(string)],  getVMTProcAddr('TCustomIniFile','EraseSection',88))  ;


//RegRegisterMethod(TCustomIniFile,'DeleteKey',TypeInfo(_T24),[TypeInfo(string),TypeInfo(string)], pointer(92))  ;
RegRegisterMethod(TCustomIniFile,'DeleteKey',TypeInfo(_T24),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TCustomIniFile','DeleteKey',92))  ;


//RegRegisterMethod(TCustomIniFile,'ValueExists',TypeInfo(_T26),[TypeInfo(string),TypeInfo(string),TypeInfo(Boolean)], pointer(100)) ;
RegRegisterMethod(TCustomIniFile,'ValueExists',TypeInfo(_T26),[TypeInfo(string),TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TCustomIniFile','ValueExists',100)) ;


RegisterProc(TMemIniFile,'Create',mtConstructor,TypeInfo(_T27),[
TypeInfo(string)],Addr(TMemIniFile.Create),cRegister)  ;

RegRegisterMethod(TMemIniFile,'Rename',TypeInfo(_T30),[
TypeInfo(string),
TypeInfo(Boolean)],Addr(TMemIniFile.Rename)) ;

//RegRegisterMethod(TStringHash,'HashOf',TypeInfo(_T32),[TypeInfo(string),TypeInfo(Cardinal)], pointer(0)) ;
RegRegisterMethod(TStringHash,'HashOf',TypeInfo(_T32),[TypeInfo(string),TypeInfo(Cardinal)],  getVMTProcAddr('TStringHash','HashOf',0)) ;


RegRegisterMethod(TStringHash,'Add',TypeInfo(_T34),[
TypeInfo(string),
TypeInfo(Integer)],Addr(TStringHash.Add)) ;

RegRegisterMethod(TStringHash,'Remove',TypeInfo(_T36),[
TypeInfo(string)],Addr(TStringHash.Remove));

RegRegisterMethod(TStringHash,'Modify',TypeInfo(_T37),[
TypeInfo(string),
TypeInfo(Integer),TypeInfo(Boolean)],Addr(TStringHash.Modify));

RegRegisterMethod(TStringHash,'ValueOf',TypeInfo(_T38),[
TypeInfo(string),TypeInfo(Integer)],Addr(TStringHash.ValueOf));

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
