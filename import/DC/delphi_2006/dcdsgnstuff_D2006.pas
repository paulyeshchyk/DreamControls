{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit dcdsgnstuff_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  dcscript,
  dcdreamlib,
  inifiles,
  menus,
  controls,
  forms,
  windows,
  typinfo,
  classes,
  sysutils,
  dcsystem,
  dcdsgnutil,
  activex,
  dcdsgnabstract,
  dcdsgnstuff;
function ConvertTCharPosToVariant(var R : TCharPos) : OleVariant;
function ConvertVariantToTCharPos(const V : OleVariant) : TCharPos;
function ConvertTEditPosToVariant(var R : TEditPos) : OleVariant;
function ConvertVariantToTEditPos(const V : OleVariant) : TEditPos;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TCharPos__Wrapper = class(TDCRecordWrapper)
private
fR : TCharPos;
public
function GetRecordPtr : pointer; override;
published
procedure setCharIndex(const val : SmallInt);
function getCharIndex : SmallInt;
property CharIndex : SmallInt read getCharIndex write setCharIndex;
procedure setLine(const val : Longint);
function getLine : Longint;
property Line : Longint read getLine write setLine;
end;
type __TEditPos__Wrapper = class(TDCRecordWrapper)
private
fR : TEditPos;
public
function GetRecordPtr : pointer; override;
published
procedure setCol(const val : SmallInt);
function getCol : SmallInt;
property Col : SmallInt read getCol write setCol;
procedure setLine(const val : Longint);
function getLine : Longint;
property Line : Longint read getLine write setLine;
end;
type
{_T0 = function : IDesignerSelections of object;}

_T1 = procedure (p0 : TIExpert) of object;

function __TCharPos__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCharPos__Wrapper.setCharIndex(const val : SmallInt);
begin
TCharPos(GetRecordPtr^).CharIndex := val;
end;
function __TCharPos__Wrapper.getCharIndex : SmallInt;
begin
result := TCharPos(GetRecordPtr^).CharIndex;
end;
procedure __TCharPos__Wrapper.setLine(const val : Longint);
begin
TCharPos(GetRecordPtr^).Line := val;
end;
function __TCharPos__Wrapper.getLine : Longint;
begin
result := TCharPos(GetRecordPtr^).Line;
end;
function __TEditPos__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TEditPos__Wrapper.setCol(const val : SmallInt);
begin
TEditPos(GetRecordPtr^).Col := val;
end;
function __TEditPos__Wrapper.getCol : SmallInt;
begin
result := TEditPos(GetRecordPtr^).Col;
end;
procedure __TEditPos__Wrapper.setLine(const val : Longint);
begin
TEditPos(GetRecordPtr^).Line := val;
end;
function __TEditPos__Wrapper.getLine : Longint;
begin
result := TEditPos(GetRecordPtr^).Line;
end;
function _TCharPos_ : IDispatch;
begin
  result := __TCharPos__Wrapper.Create;
end;
function _TEditPos_ : IDispatch;
begin
  result := __TEditPos__Wrapper.Create;
end;

type __TCharPos__Wrapper__ = class(__TCharPos__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCharPos__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCharPosToVariant(var R : TCharPos) : OleVariant;
var
__rw : __TCharPos__Wrapper__;
begin
__rw := __TCharPos__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCharPos(const V : OleVariant) : TCharPos;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCharPos((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TEditPos__Wrapper__ = class(__TEditPos__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TEditPos__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTEditPosToVariant(var R : TEditPos) : OleVariant;
var
__rw : __TEditPos__Wrapper__;
begin
__rw := __TEditPos__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTEditPos(const V : OleVariant) : TEditPos;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TEditPos((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

function __DC__Getdcdsgnstuff__ToolServices(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(dcdsgnstuff.ToolServices);
end;

procedure __DC__Setdcdsgnstuff__ToolServices(Instance : TObject; Params : PVariantArgList);
begin
TObject(dcdsgnstuff.ToolServices):=(VarToObject(OleVariant(Params^[0])));
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('ToolServices',__DC__Getdcdsgnstuff__ToolServices,__DC__Setdcdsgnstuff__ToolServices));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

const __ConstNames0 : array[0..99] of string = (
'paValueList'
,'paSubProperties'
,'paDialog'
,'paMultiSelect'
,'paAutoUpdate'
,'paSortList'
,'paReadOnly'
,'paRevertable'
,'paFullWidthName'
,'paVolatileSubProperties'
,'paVCL'
,'paNotNestable'
,'shNone'
,'shPascal'
,'shC'
,'shSQL'
,'shQuery'
,'btInclusive'
,'btLine'
,'btColumn'
,'btNonInclusive'
,'btUnknown'
,'cmAddToProject'
,'cmShowSource'
,'cmShowForm'
,'cmUnNamed'
,'cmNewUnit'
,'cmNewForm'
,'cmMainForm'
,'cmMarkModified'
,'cmNewFile'
,'cmExisting'
,'lmModule'
,'lmComponent'
,'lmDesigner'
,'esStandard'
,'esForm'
,'esProject'
,'esAddIn'
,'mfInvalid'
,'mfEnabled'
,'mfVisible'
,'mfChecked'
,'mfBreak'
,'mfBarBreak'
,'mfRadioItem'
,'esEnabled'
,'esChecked'
,'ptUnknown'
,'ptInteger'
,'ptChar'
,'ptEnumeration'
,'ptFloat'
,'ptString'
,'ptSet'
,'ptClass'
,'ptMethod'
,'ptWChar'
,'ptLString'
,'ptLWString'
,'ptVariant'
,'ncModuleDeleted'
,'ncModuleRenamed'
,'ncEditorModified'
,'ncFormModified'
,'ncEditorSelected'
,'ncFormSelected'
,'ncBeforeSave'
,'ncAfterSave'
,'ncFormSaving'
,'ncProjResModified'
,'fnFileOpening'
,'fnFileOpened'
,'fnFileClosing'
,'fnProjectOpening'
,'fnProjectOpened'
,'fnProjectClosing'
,'fnAddedToProject'
,'fnRemovedFromProject'
,'fnDefaultDesktopLoad'
,'fnDefaultDesktopSave'
,'fnProjectDesktopLoad'
,'fnprojectDesktopSave'
,'fnPackageInstalled'
,'fnPackageUninstalled'
,'enBeforeCompile'
,'enAfterCompile'
,'cpCustom'
,'cpApplication'
,'cpLibrary'
,'cpCanShowSource'
,'cpExisting'
,'cpConsole'
,'btForm'
,'btCustomModule'
,'hvFlags'
,'hvLanguage'
,'hvDataVersion'
,'hvVersion'
,'hvCharacteristics'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,paValueList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,paSubProperties));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,paDialog));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,paMultiSelect));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,paAutoUpdate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,paSortList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,paReadOnly));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,paRevertable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,paFullWidthName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,paVolatileSubProperties));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,paVCL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,paNotNestable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,shNone));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,shPascal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,shC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,shSQL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,shQuery));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,btInclusive));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,btLine));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,btColumn));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,btNonInclusive));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,btUnknown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,cmAddToProject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,cmShowSource));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,cmShowForm));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,cmUnNamed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,cmNewUnit));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,cmNewForm));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,cmMainForm));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,cmMarkModified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,cmNewFile));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,cmExisting));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,lmModule));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,lmComponent));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,lmDesigner));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,esStandard));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,esForm));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,esProject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,esAddIn));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,mfInvalid));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,mfEnabled));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,mfVisible));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,mfChecked));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,mfBreak));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,mfBarBreak));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,mfRadioItem));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,esEnabled));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,esChecked));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,ptUnknown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,ptInteger));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,ptChar));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,ptEnumeration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,ptFloat));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,ptString));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,ptSet));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,ptClass));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,ptMethod));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,ptWChar));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,ptLString));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,ptLWString));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,ptVariant));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,ncModuleDeleted));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,ncModuleRenamed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,ncEditorModified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,ncFormModified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,ncEditorSelected));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,ncFormSelected));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,ncBeforeSave));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,ncAfterSave));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,ncFormSaving));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,ncProjResModified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,fnFileOpening));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,fnFileOpened));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,fnFileClosing));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,fnProjectOpening));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,fnProjectOpened));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,fnProjectClosing));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,fnAddedToProject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,fnRemovedFromProject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,fnDefaultDesktopLoad));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,fnDefaultDesktopSave));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,fnProjectDesktopLoad));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,fnprojectDesktopSave));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,fnPackageInstalled));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,fnPackageUninstalled));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,enBeforeCompile));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,enAfterCompile));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,cpCustom));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,cpApplication));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,cpLibrary));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,cpCanShowSource));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,cpExisting));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,cpConsole));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,btForm));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,btCustomModule));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,hvFlags));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,hvLanguage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,hvDataVersion));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,hvVersion));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,hvCharacteristics));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..50] of TClass = (
TCaptionProperty,
TCharProperty,
TClassProperty,
TColorProperty,
TComponentEditor,
TComponentNameProperty,
TComponentProperty,
TCursorProperty,
TDateProperty,
TDateTimeProperty,
TDefaultEditor,
TDesignerSelectionList,
TDesignerSelections,
TEnumProperty,
TFloatProperty,
TFontCharsetProperty,
TFontNameProperty,
TFontProperty,
TIAddInNotifier,
TIComponentInterface,
TIEditorInterface,
TIEditReader,
TIEditView,
TIEditWriter,
TIExpert,
TIFormInterface,
TIMainMenuIntf,
TImeNameProperty,
TIMenuItemIntf,
TIModuleCreator,
TIModuleCreatorEx,
TIModuleInterface,
TIModuleNotifier,
TIntegerProperty,
TIProjectCreator,
TIProjectCreatorEx,
TIResourceEntry,
TIResourceFile,
TIToolServices,
TIVirtualFileSystem,
TModalResultProperty,
TMPFilenameProperty,
TNestedProperty,
TOrdinalProperty,
TPropertyEditor,
TSetElementProperty,
TSetProperty,
TShortCutProperty,
TStringProperty,
TTabOrderProperty,
TTimeProperty
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..2] of string = (
'TCharPos'
,'TEditPos'
,'RegisterLibraryExpert'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_TCharPos_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_TEditPos_)));
RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T1),[
TypeInfo(TIExpert)],Addr(RegisterLibraryExpert),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'CreateSelectionList',mtProc,TypeInfo(_T0),[TypeInfo(IDesignerSelections)],Addr(CreateSelectionList),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
