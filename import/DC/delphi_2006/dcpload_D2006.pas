{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit dcpload_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  Windows,
  Classes,
  SysUtils,
  Messages,
  Controls,
  Dialogs,
  Forms,
  dcdsgnstuff,
  dcconsts,
  dcdreamlib,
  DCCommon,
  DCEnvOpt,
  DCGen,
  DCActiveXForm,
  dcpload;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function : TDCPackageLoader of object;

_T1 = procedure (const p0 : string) of object;

_T2 = function (p0 : TComponent): TDCPackageLoader of object;

_T3 = procedure  of object;

_T4 = procedure (var p0 : TVerbStates) of object;

_T5 = _T3;

_T6 = function : Integer of object;

_T7 = procedure (p0 : TList) of object;

_T8 = _T3;

_T9 = _T3;

_T10 = _T3;

_T11 = _T3;

_T12 = function (const p0 : string;
var p1 : string): Boolean of object;

_T13 = function (const p0 : string;
p1 : Boolean): THandle of object;

_T14 = procedure (p0 : Integer) of object;

_T15 = procedure (const p0 : string;
const p1 : string) of object;

_T16 = _T15;

_T17 = _T1;

_T18 = _T1;

_T19 = _T3;

_T20 = _T3;

function __DC__GetTDCPackageLoader__PackageHandle(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCPackageLoader(Instance).PackageHandle[OleVariant(Params^[0])];
end;

function __DC__GetTDCPackageLoader__ConfigStr(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCPackageLoader(Instance).ConfigStr;
end;

procedure __DC__SetTDCPackageLoader__ConfigStr(Instance : TObject; Params : PVariantArgList);
begin
TDCPackageLoader(Instance).ConfigStr:=OleVariant(Params^[0]);
end;

function __DC__GetTDCPackageLoader__PackagePath(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCPackageLoader(Instance).PackagePath[OleVariant(Params^[0])];
end;

function __DC__GetTDCPackageLoader__PackageCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCPackageLoader(Instance).PackageCount;
end;

function __DC__GetTDCPackageLoader__PackageDesc(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCPackageLoader(Instance).PackageDesc[OleVariant(Params^[0])];
end;

procedure __DC__SetTDCPackageLoader__PackageDesc(Instance : TObject; Params : PVariantArgList);
begin
TDCPackageLoader(Instance).PackageDesc[OleVariant(Params^[1])]:=OleVariant(Params^[0]);
end;

function __DC__GetTDCPackageLoader__PackageLoaded(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDCPackageLoader(Instance).PackageLoaded[OleVariant(Params^[0])];
end;

procedure __DC__SetTDCPackageLoader__PackageLoaded(Instance : TObject; Params : PVariantArgList);
begin
TDCPackageLoader(Instance).PackageLoaded[OleVariant(Params^[1])]:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterIndexedProperty(TDCPackageLoader,'PackageHandle',1,False,__DC__GetTDCPackageLoader__PackageHandle,nil);
RegisterProperty(TDCPackageLoader,'ConfigStr',__DC__GetTDCPackageLoader__ConfigStr,__DC__SetTDCPackageLoader__ConfigStr);
RegisterIndexedProperty(TDCPackageLoader,'PackagePath',1,False,__DC__GetTDCPackageLoader__PackagePath,nil);
RegisterProperty(TDCPackageLoader,'PackageCount',__DC__GetTDCPackageLoader__PackageCount,nil);
RegisterIndexedProperty(TDCPackageLoader,'PackageDesc',1,False,__DC__GetTDCPackageLoader__PackageDesc,__DC__SetTDCPackageLoader__PackageDesc);
RegisterIndexedProperty(TDCPackageLoader,'PackageLoaded',1,False,__DC__GetTDCPackageLoader__PackageLoaded,__DC__SetTDCPackageLoader__PackageLoaded);
end;

const __ConstNames0 : array[0..3] of string = (
'plAutoSave'
,'plUpdateOnLoad'
,'plAutoLoad'
,'plAutoUpdate'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,plAutoSave));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,plUpdateOnLoad));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,plAutoLoad));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,plAutoUpdate));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..0] of TClass = (
TDCPackageLoader
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..5] of string = (
'GetPackageLoader'
,'RegisterPackage'
,'CreateDefaultPackageLoader'
,'DCShowPackagesConfig'
,'DCCanShowPackagesConfig'
,'DCShowOnlyPackagesConfig'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[TypeInfo(TDCPackageLoader)],Addr(GetPackageLoader),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(string)],Addr(RegisterPackage),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(TComponent),TypeInfo(TDCPackageLoader)],Addr(CreateDefaultPackageLoader),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),NoParams,Addr(DCShowPackagesConfig),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T4),[
TypeInfo(TVerbStates)],Addr(DCCanShowPackagesConfig),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T5),NoParams,Addr(DCShowOnlyPackagesConfig),cRegister);

RegRegisterMethod(TDCPackageLoader,'RegisteredPackageCount',TypeInfo(_T6),[TypeInfo(Integer)],Addr(TDCPackageLoader.RegisteredPackageCount));

RegRegisterMethod(TDCPackageLoader,'ListPackageHandles',TypeInfo(_T7),[
TypeInfo(TList)],Addr(TDCPackageLoader.ListPackageHandles));

RegRegisterMethod(TDCPackageLoader,'ShowPackagesConfig',TypeInfo(_T8),NoParams,Addr(TDCPackageLoader.ShowPackagesConfig));

RegRegisterMethod(TDCPackageLoader,'DefaultSaveConfig',TypeInfo(_T9),NoParams,Addr(TDCPackageLoader.DefaultSaveConfig));

RegRegisterMethod(TDCPackageLoader,'DefaultLoadConfig',TypeInfo(_T10),NoParams,Addr(TDCPackageLoader.DefaultLoadConfig));

RegRegisterMethod(TDCPackageLoader,'UnRegisterPackages',TypeInfo(_T11),NoParams,Addr(TDCPackageLoader.UnRegisterPackages));

RegRegisterMethod(TDCPackageLoader,'IsPackageRegistered',TypeInfo(_T12),[
TypeInfo(string),
TypeInfo(string),TypeInfo(Boolean)],Addr(TDCPackageLoader.IsPackageRegistered));

RegRegisterMethod(TDCPackageLoader,'RegisterPackage',TypeInfo(_T13),[
TypeInfo(string),
TypeInfo(Boolean),TypeInfo(THandle)],Addr(TDCPackageLoader.RegisterPackage));

RegRegisterMethod(TDCPackageLoader,'UnRegisterPackage',TypeInfo(_T14),[
TypeInfo(Integer)],Addr(TDCPackageLoader.UnRegisterPackage));

RegRegisterMethod(TDCPackageLoader,'LoadConfigFromIni',TypeInfo(_T15),[
TypeInfo(string),
TypeInfo(string)],Addr(TDCPackageLoader.LoadConfigFromIni));

RegRegisterMethod(TDCPackageLoader,'SaveConfigToIni',TypeInfo(_T16),[
TypeInfo(string),
TypeInfo(string)],Addr(TDCPackageLoader.SaveConfigToIni));

RegRegisterMethod(TDCPackageLoader,'LoadConfigFromRegistry',TypeInfo(_T17),[
TypeInfo(string)],Addr(TDCPackageLoader.LoadConfigFromRegistry));

RegRegisterMethod(TDCPackageLoader,'SaveConfigToRegistry',TypeInfo(_T18),[
TypeInfo(string)],Addr(TDCPackageLoader.SaveConfigToRegistry));

RegRegisterMethod(TDCPackageLoader,'BeginUpdates',TypeInfo(_T19),NoParams,Addr(TDCPackageLoader.BeginUpdates));

RegRegisterMethod(TDCPackageLoader,'CancelUpdates',TypeInfo(_T20),NoParams,Addr(TDCPackageLoader.CancelUpdates));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
RegisterEvent(TypeInfo(TOnBeforeUnloadEvent),[
TypeInfo(TDCPackageLoader),
TypeInfo(THandle),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TOnGetPackageFileNameEvent),[
TypeInfo(TObject),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TPackageUnloadedEvent),[
TypeInfo(TDCPackageLoader),
TypeInfo(THandle)]);

{RegisterEvent(TypeInfo(TRegisterComponentsEvent),[
TypeInfo(TDCPackageLoader),
TypeInfo(THandle),
TypeInfo(string),
ArrayInfo(TypeInfo(TComponentClass))]);}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
