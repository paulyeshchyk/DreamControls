{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit MIDITEMS_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  HTTPApp,
  HTTPProd,
  DB,
  DBClient,
  Midas,
  XMLBrokr,
  WebComp,
  PagItems,
  MidProd,
  MidComp,
  MidItems;
function ConvertTGUIDToVariant(var R : TGUID) : OleVariant;
function ConvertVariantToTGUID(const V : OleVariant) : TGUID;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TGUID__Wrapper = class(TDCRecordWrapper)
private
fR : TGUID;
public
function GetRecordPtr : pointer; override;
published
procedure setD1(const val : LongWord);
function getD1 : LongWord;
property D1 : LongWord read getD1 write setD1;
procedure setD2(const val : Word);
function getD2 : Word;
property D2 : Word read getD2 write setD2;
procedure setD3(const val : Word);
function getD3 : Word;
property D3 : Word read getD3 write setD3;
end;
type __TXMLDataSet__ = class(TXMLDataSet);
type
_T0 = function (p0 : TDataSet;
const p1 : string;
const p2 : string;
var p3 : TStrings;
var p4 : TStrings): Boolean of object;

_T1 = procedure (var p0 : string;
const p1 : string;
p2 : Integer) of object;

_T2 = procedure (var p0 : string;
const p1 : string;
const p2 : string) of object;

_T3 = procedure (var p0 : string;
p1 : string) of object;

_T4 = procedure (var p0 : string;
const p1 : string;
p2 : Boolean) of object;

_T5 = _T2;

_T6 = function (p0 : TWebDataDisplay): string of object;

_T7 = function (p0 : TWebDataDisplay;
p1 : string): string of object;

{_T8 = procedure (const p0 : Array of TWebButtonClass;
p1 : TWebComponentList) of object;}

{_T9 = function (p0 : TComponent;
p1 : TComponent;
p2 : TClass): Boolean of object;}

{_T10 = procedure (p0 : TComponent;
p1 : TXMLBroker;
p2 : IAddScriptElements) of object;}

{_T11 = function (p0 : TComponent): IWebDispatcherAccess of object;}

_T12 = function (p0 : TComponent): TCustomContentProducer of object;

{_T13 = procedure (p0 : IAddScriptElements) of object;}

_T14 = procedure (p0 : TComponent) of object;

_T15 = function (p0 : TWebContentOptions): string of object;

_T16 = procedure  of object;

_T17 = _T16;

_T18 = _T15;

_T19 = procedure (p0 : TStrings) of object;

{_T20 = procedure (p0 : IAddScriptElements) of object;}

_T21 = function : string of object;

_T22 = procedure (p0 : TLayout) of object;

_T23 = _T21;

_T24 = _T14;

_T25 = _T14;

_T26 = _T21;

_T27 = _T21;

_T28 = _T15;

_T29 = function (p0 : TWebContentOptions;
p1 : TLayout): string of object;

_T30 = _T21;

_T31 = procedure (const p0 : string) of object;

_T32 = function : TLayoutAttributes of object;

_T33 = function : TObject of object;

{_T34 = procedure (p0 : IAddScriptElements) of object;}

_T35 = _T29;

{_T36 = function (p0 : TComponent;
p1 : TClass): Boolean of object;}

_T37 = _T32;

_T38 = _T29;

_T39 = _T21;

_T40 = _T15;

_T41 = _T21;

_T42 = _T21;

_T43 = procedure (p0 : string) of object;

_T44 = _T15;

_T45 = _T21;

_T46 = _T32;

_T47 = function : Boolean of object;

_T48 = _T47;

_T49 = _T16;

_T50 = _T21;

_T51 = function (const p0 : string): string of object;

_T52 = procedure (p0 : TField) of object;

{_T53 = function (p0 : IInetXWebDataSet): TField of object;}

_T54 = _T21;

_T55 = function : TComponent of object;

_T56 = _T16;

_T57 = procedure (p0 : TComponent;
p1 : TOperation) of object;

_T58 = _T14;

_T59 = procedure (const p0 : TComponent) of object;

{_T60 = function (p0 : TComponent;
p1 : TClass): Boolean of object;}

_T61 = _T29;

{_T62 = procedure (p0 : IAddScriptElements) of object;}

_T63 = _T32;

{_T64 = procedure (p0 : IAddScriptElements) of object;}

_T65 = function (p0 : TStrings;
p1 : TStrings;
p2 : TWebContentOptions): string of object;

_T66 = procedure (var p0 : string) of object;

_T67 = function (p0 : TStrings;
p1 : TStrings): Integer of object;

_T68 = _T66;

_T69 = _T67;

_T70 = _T21;

_T71 = _T66;

_T72 = _T66;

_T73 = _T16;

_T74 = procedure (const p0 : TXMLBroker) of object;

_T75 = function : TXMLBroker of object;

_T76 = _T57;

_T77 = _T14;

_T78 = _T16;

_T79 = function (const p0 : IDispatch;
out p1): HResult of object;

_T80 = _T16;

_T81 = _T21;

_T82 = _T14;

_T83 = _T16;

_T84 = procedure (p0 : TObject) of object;

_T85 = _T47;

_T86 = _T19;

_T87 = _T16;

_T88 = _T16;

_T89 = _T14;

function __TGUID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TGUID__Wrapper.setD1(const val : LongWord);
begin
TGUID(GetRecordPtr^).D1 := val;
end;
function __TGUID__Wrapper.getD1 : LongWord;
begin
result := TGUID(GetRecordPtr^).D1;
end;
procedure __TGUID__Wrapper.setD2(const val : Word);
begin
TGUID(GetRecordPtr^).D2 := val;
end;
function __TGUID__Wrapper.getD2 : Word;
begin
result := TGUID(GetRecordPtr^).D2;
end;
procedure __TGUID__Wrapper.setD3(const val : Word);
begin
TGUID(GetRecordPtr^).D3 := val;
end;
function __TGUID__Wrapper.getD3 : Word;
begin
result := TGUID(GetRecordPtr^).D3;
end;
function __TXMLDataSet__QueryInterface__Wrapper(__Instance : TXMLDataSet;
const p0 : IDispatch;
out p1): HResult;
var
__p0 : ^TGUID;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := __TXMLDataSet__(__Instance).QueryInterface(__p0^,p1);
end;


type __TGUID__Wrapper__ = class(__TGUID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TGUID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTGUIDToVariant(var R : TGUID) : OleVariant;
var
__rw : __TGUID__Wrapper__;
begin
__rw := __TGUID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTGUID(const V : OleVariant) : TGUID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TGUID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
function __DC__GetTCaptionAttributes__Parent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCaptionAttributes(Instance).Parent);
end;

function __DC__GetTCustomDataGrid__DisplayRows(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomDataGrid(Instance).DisplayRows;
end;

procedure __DC__SetTCustomDataGrid__DisplayRows(Instance : TObject; Params : PVariantArgList);
begin
TCustomDataGrid(Instance).DisplayRows:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomDataGrid__TableAttributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomDataGrid(Instance).TableAttributes);
end;

procedure __DC__SetTCustomDataGrid__TableAttributes(Instance : TObject; Params : PVariantArgList);
begin
TCustomDataGrid(Instance).TableAttributes:=TGridAttributes(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomDataGrid__HeadingAttributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomDataGrid(Instance).HeadingAttributes);
end;

procedure __DC__SetTCustomDataGrid__HeadingAttributes(Instance : TObject; Params : PVariantArgList);
begin
TCustomDataGrid(Instance).HeadingAttributes:=TGridRowAttributes(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomDataGrid__RowAttributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomDataGrid(Instance).RowAttributes);
end;

procedure __DC__SetTCustomDataGrid__RowAttributes(Instance : TObject; Params : PVariantArgList);
begin
TCustomDataGrid(Instance).RowAttributes:=TGridRowAttributes(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomDataNavigator__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomDataNavigator(Instance).Custom;
end;

procedure __DC__SetTCustomDataNavigator__Custom(Instance : TObject; Params : PVariantArgList);
begin
TCustomDataNavigator(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomDataNavigator__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomDataNavigator(Instance).Style;
end;

procedure __DC__SetTCustomDataNavigator__Style(Instance : TObject; Params : PVariantArgList);
begin
TCustomDataNavigator(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomDataNavigator__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomDataNavigator(Instance).StyleRule;
end;

procedure __DC__SetTCustomDataNavigator__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TCustomDataNavigator(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomFieldGroup__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomFieldGroup(Instance).Custom;
end;

procedure __DC__SetTCustomFieldGroup__Custom(Instance : TObject; Params : PVariantArgList);
begin
TCustomFieldGroup(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomFieldGroup__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomFieldGroup(Instance).Style;
end;

procedure __DC__SetTCustomFieldGroup__Style(Instance : TObject; Params : PVariantArgList);
begin
TCustomFieldGroup(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomFieldGroup__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomFieldGroup(Instance).StyleRule;
end;

procedure __DC__SetTCustomFieldGroup__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TCustomFieldGroup(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomLayoutGroup__DisplayColumns(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomLayoutGroup(Instance).DisplayColumns;
end;

procedure __DC__SetTCustomLayoutGroup__DisplayColumns(Instance : TObject; Params : PVariantArgList);
begin
TCustomLayoutGroup(Instance).DisplayColumns:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomLayoutGroup__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomLayoutGroup(Instance).Style;
end;

procedure __DC__SetTCustomLayoutGroup__Style(Instance : TObject; Params : PVariantArgList);
begin
TCustomLayoutGroup(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomLayoutGroup__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomLayoutGroup(Instance).Custom;
end;

procedure __DC__SetTCustomLayoutGroup__Custom(Instance : TObject; Params : PVariantArgList);
begin
TCustomLayoutGroup(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomLayoutGroup__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomLayoutGroup(Instance).StyleRule;
end;

procedure __DC__SetTCustomLayoutGroup__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TCustomLayoutGroup(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomQueryButtons__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomQueryButtons(Instance).Style;
end;

procedure __DC__SetTCustomQueryButtons__Style(Instance : TObject; Params : PVariantArgList);
begin
TCustomQueryButtons(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomQueryButtons__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomQueryButtons(Instance).Custom;
end;

procedure __DC__SetTCustomQueryButtons__Custom(Instance : TObject; Params : PVariantArgList);
begin
TCustomQueryButtons(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomQueryButtons__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomQueryButtons(Instance).StyleRule;
end;

procedure __DC__SetTCustomQueryButtons__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TCustomQueryButtons(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomQueryForm__Action(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomQueryForm(Instance).Action;
end;

procedure __DC__SetTCustomQueryForm__Action(Instance : TObject; Params : PVariantArgList);
begin
TCustomQueryForm(Instance).Action:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomQueryForm__Method(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomQueryForm(Instance).Method;
end;

procedure __DC__SetTCustomQueryForm__Method(Instance : TObject; Params : PVariantArgList);
begin
TCustomQueryForm(Instance).Method:=OleVariant(Params^[0]);
end;

function __DC__GetTFormLayout__ColumnCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TFormLayout(Instance).ColumnCount;
end;

procedure __DC__SetTFormLayout__ColumnCount(Instance : TObject; Params : PVariantArgList);
begin
TFormLayout(Instance).ColumnCount:=OleVariant(Params^[0]);
end;

function __DC__GetTFormLayout__BreakButtons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TFormLayout(Instance).BreakButtons;
end;

procedure __DC__SetTFormLayout__BreakButtons(Instance : TObject; Params : PVariantArgList);
begin
TFormLayout(Instance).BreakButtons:=OleVariant(Params^[0]);
end;

function __DC__GetTFormLayout__TableHeader(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TFormLayout(Instance).TableHeader;
end;

procedure __DC__SetTFormLayout__TableHeader(Instance : TObject; Params : PVariantArgList);
begin
TFormLayout(Instance).TableHeader:=OleVariant(Params^[0]);
end;

function __DC__GetTGridAttributes__Parent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TGridAttributes(Instance).Parent);
end;

function __DC__GetTGridRowAttributes__Parent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TGridRowAttributes(Instance).Parent);
end;

function __DC__GetTWebButton__Caption(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebButton(Instance).Caption;
end;

procedure __DC__SetTWebButton__Caption(Instance : TObject; Params : PVariantArgList);
begin
TWebButton(Instance).Caption:=OleVariant(Params^[0]);
end;

function __DC__GetTWebButton__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebButton(Instance).Style;
end;

procedure __DC__SetTWebButton__Style(Instance : TObject; Params : PVariantArgList);
begin
TWebButton(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTWebButton__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebButton(Instance).Custom;
end;

procedure __DC__SetTWebButton__Custom(Instance : TObject; Params : PVariantArgList);
begin
TWebButton(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTWebButton__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebButton(Instance).StyleRule;
end;

procedure __DC__SetTWebButton__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TWebButton(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTWebControlGroup__WebFieldControls(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebControlGroup(Instance).WebFieldControls);
end;

function __DC__GetTWebDataDisplay__Caption(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebDataDisplay(Instance).Caption;
end;

procedure __DC__SetTWebDataDisplay__Caption(Instance : TObject; Params : PVariantArgList);
begin
TWebDataDisplay(Instance).Caption:=OleVariant(Params^[0]);
end;

function __DC__GetTWebDataDisplay__TabIndex(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebDataDisplay(Instance).TabIndex;
end;

procedure __DC__SetTWebDataDisplay__TabIndex(Instance : TObject; Params : PVariantArgList);
begin
TWebDataDisplay(Instance).TabIndex:=OleVariant(Params^[0]);
end;

function __DC__GetTWebDataDisplay__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebDataDisplay(Instance).Custom;
end;

procedure __DC__SetTWebDataDisplay__Custom(Instance : TObject; Params : PVariantArgList);
begin
TWebDataDisplay(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTWebDataDisplay__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebDataDisplay(Instance).Style;
end;

procedure __DC__SetTWebDataDisplay__Style(Instance : TObject; Params : PVariantArgList);
begin
TWebDataDisplay(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTWebDataDisplay__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebDataDisplay(Instance).StyleRule;
end;

procedure __DC__SetTWebDataDisplay__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TWebDataDisplay(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTWebDataDisplay__CaptionAttributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebDataDisplay(Instance).CaptionAttributes);
end;

procedure __DC__SetTWebDataDisplay__CaptionAttributes(Instance : TObject; Params : PVariantArgList);
begin
TWebDataDisplay(Instance).CaptionAttributes:=TCaptionAttributes(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTWebDataInput__FieldName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebDataInput(Instance).FieldName;
end;

procedure __DC__SetTWebDataInput__FieldName(Instance : TObject; Params : PVariantArgList);
begin
TWebDataInput(Instance).FieldName:=OleVariant(Params^[0]);
end;

function __DC__GetTWebDisplay__Parent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebDisplay(Instance).Parent);
end;

function __DC__GetTWebDisplay__DisplayComponent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebDisplay(Instance).DisplayComponent);
end;

procedure __DC__SetTWebDisplay__DisplayComponent(Instance : TObject; Params : PVariantArgList);
begin
TWebDisplay(Instance).DisplayComponent:=TComponent(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTWebForm__WebComponents(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebForm(Instance).WebComponents);
end;

function __DC__GetTWebForm__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebForm(Instance).Style;
end;

procedure __DC__SetTWebForm__Style(Instance : TObject; Params : PVariantArgList);
begin
TWebForm(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTWebForm__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebForm(Instance).Custom;
end;

procedure __DC__SetTWebForm__Custom(Instance : TObject; Params : PVariantArgList);
begin
TWebForm(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTWebForm__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebForm(Instance).StyleRule;
end;

procedure __DC__SetTWebForm__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TWebForm(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTWebListInput__Values(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebListInput(Instance).Values);
end;

procedure __DC__SetTWebListInput__Values(Instance : TObject; Params : PVariantArgList);
begin
TWebListInput(Instance).Values:=TStrings(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTWebListInput__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebListInput(Instance).Items);
end;

procedure __DC__SetTWebListInput__Items(Instance : TObject; Params : PVariantArgList);
begin
TWebListInput(Instance).Items:=TStrings(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTWebListInput__DataSet(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebListInput(Instance).DataSet);
end;

procedure __DC__SetTWebListInput__DataSet(Instance : TObject; Params : PVariantArgList);
begin
TWebListInput(Instance).DataSet:=TDataSet(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTWebListInput__ValuesField(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebListInput(Instance).ValuesField;
end;

procedure __DC__SetTWebListInput__ValuesField(Instance : TObject; Params : PVariantArgList);
begin
TWebListInput(Instance).ValuesField:=OleVariant(Params^[0]);
end;

function __DC__GetTWebListInput__ItemsField(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebListInput(Instance).ItemsField;
end;

procedure __DC__SetTWebListInput__ItemsField(Instance : TObject; Params : PVariantArgList);
begin
TWebListInput(Instance).ItemsField:=OleVariant(Params^[0]);
end;

function __DC__GetTWebRadioGroupInput__ReadOnly(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRadioGroupInput(Instance).ReadOnly;
end;

procedure __DC__SetTWebRadioGroupInput__ReadOnly(Instance : TObject; Params : PVariantArgList);
begin
TWebRadioGroupInput(Instance).ReadOnly:=OleVariant(Params^[0]);
end;

function __DC__GetTWebRadioGroupInput__DisplayWidth(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRadioGroupInput(Instance).DisplayWidth;
end;

procedure __DC__SetTWebRadioGroupInput__DisplayWidth(Instance : TObject; Params : PVariantArgList);
begin
TWebRadioGroupInput(Instance).DisplayWidth:=OleVariant(Params^[0]);
end;

function __DC__GetTWebRadioGroupInput__DisplayColumns(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebRadioGroupInput(Instance).DisplayColumns;
end;

procedure __DC__SetTWebRadioGroupInput__DisplayColumns(Instance : TObject; Params : PVariantArgList);
begin
TWebRadioGroupInput(Instance).DisplayColumns:=OleVariant(Params^[0]);
end;

function __DC__GetTWebSelectOptionsInput__DisplayRows(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebSelectOptionsInput(Instance).DisplayRows;
end;

procedure __DC__SetTWebSelectOptionsInput__DisplayRows(Instance : TObject; Params : PVariantArgList);
begin
TWebSelectOptionsInput(Instance).DisplayRows:=OleVariant(Params^[0]);
end;

function __DC__GetTWebStatus__DisplayWidth(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebStatus(Instance).DisplayWidth;
end;

procedure __DC__SetTWebStatus__DisplayWidth(Instance : TObject; Params : PVariantArgList);
begin
TWebStatus(Instance).DisplayWidth:=OleVariant(Params^[0]);
end;

function __DC__GetTWebStatus__Caption(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebStatus(Instance).Caption;
end;

procedure __DC__SetTWebStatus__Caption(Instance : TObject; Params : PVariantArgList);
begin
TWebStatus(Instance).Caption:=OleVariant(Params^[0]);
end;

function __DC__GetTWebStatus__CaptionAttributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebStatus(Instance).CaptionAttributes);
end;

procedure __DC__SetTWebStatus__CaptionAttributes(Instance : TObject; Params : PVariantArgList);
begin
TWebStatus(Instance).CaptionAttributes:=TCaptionAttributes(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTWebStatus__CaptionPosition(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebStatus(Instance).CaptionPosition;
end;

procedure __DC__SetTWebStatus__CaptionPosition(Instance : TObject; Params : PVariantArgList);
begin
TWebStatus(Instance).CaptionPosition:=OleVariant(Params^[0]);
end;

function __DC__GetTWebTextAreaInput__ReadOnly(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebTextAreaInput(Instance).ReadOnly;
end;

procedure __DC__SetTWebTextAreaInput__ReadOnly(Instance : TObject; Params : PVariantArgList);
begin
TWebTextAreaInput(Instance).ReadOnly:=OleVariant(Params^[0]);
end;

function __DC__GetTWebTextAreaInput__Wrap(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebTextAreaInput(Instance).Wrap;
end;

procedure __DC__SetTWebTextAreaInput__Wrap(Instance : TObject; Params : PVariantArgList);
begin
TWebTextAreaInput(Instance).Wrap:=OleVariant(Params^[0]);
end;

function __DC__GetTWebTextAreaInput__DisplayWidth(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebTextAreaInput(Instance).DisplayWidth;
end;

procedure __DC__SetTWebTextAreaInput__DisplayWidth(Instance : TObject; Params : PVariantArgList);
begin
TWebTextAreaInput(Instance).DisplayWidth:=OleVariant(Params^[0]);
end;

function __DC__GetTWebTextAreaInput__DisplayRows(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebTextAreaInput(Instance).DisplayRows;
end;

procedure __DC__SetTWebTextAreaInput__DisplayRows(Instance : TObject; Params : PVariantArgList);
begin
TWebTextAreaInput(Instance).DisplayRows:=OleVariant(Params^[0]);
end;

function __DC__GetTWebTextInput__DisplayWidth(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebTextInput(Instance).DisplayWidth;
end;

procedure __DC__SetTWebTextInput__DisplayWidth(Instance : TObject; Params : PVariantArgList);
begin
TWebTextInput(Instance).DisplayWidth:=OleVariant(Params^[0]);
end;

function __DC__GetTWebTextInput__ReadOnly(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebTextInput(Instance).ReadOnly;
end;

procedure __DC__SetTWebTextInput__ReadOnly(Instance : TObject; Params : PVariantArgList);
begin
TWebTextInput(Instance).ReadOnly:=OleVariant(Params^[0]);
end;

function __DC__GetTWebTextInput__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebTextInput(Instance).Style;
end;

procedure __DC__SetTWebTextInput__Style(Instance : TObject; Params : PVariantArgList);
begin
TWebTextInput(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTWebTextInput__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebTextInput(Instance).Custom;
end;

procedure __DC__SetTWebTextInput__Custom(Instance : TObject; Params : PVariantArgList);
begin
TWebTextInput(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTWebTextInput__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebTextInput(Instance).StyleRule;
end;

procedure __DC__SetTWebTextInput__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TWebTextInput(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTXMLButton__XMLBroker(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXMLButton(Instance).XMLBroker);
end;

procedure __DC__SetTXMLButton__XMLBroker(Instance : TObject; Params : PVariantArgList);
begin
TXMLButton(Instance).XMLBroker:=TXMLBroker(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTXMLButton__XMLUseParent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXMLButton(Instance).XMLUseParent;
end;

procedure __DC__SetTXMLButton__XMLUseParent(Instance : TObject; Params : PVariantArgList);
begin
TXMLButton(Instance).XMLUseParent:=OleVariant(Params^[0]);
end;

function __DC__GetTXMLData__Parent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXMLData(Instance).Parent);
end;

function __DC__GetTXMLData__XMLBroker(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXMLData(Instance).XMLBroker);
end;

procedure __DC__SetTXMLData__XMLBroker(Instance : TObject; Params : PVariantArgList);
begin
TXMLData(Instance).XMLBroker:=TXMLBroker(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTXMLDataSet__DataSetPath(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXMLDataSet(Instance).DataSetPath);
end;

function __DC__GetTXMLDataSet__DataSetField(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXMLDataSet(Instance).DataSetField;
end;

procedure __DC__SetTXMLDataSet__DataSetField(Instance : TObject; Params : PVariantArgList);
begin
TXMLDataSet(Instance).DataSetField:=OleVariant(Params^[0]);
end;

function __DC__GetTXMLDisplayGroup__VisibleFields(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXMLDisplayGroup(Instance).VisibleFields);
end;

function __DC__GetTXMLDisplayReferenceButton__XMLComponent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXMLDisplayReferenceButton(Instance).XMLComponent);
end;

procedure __DC__SetTXMLDisplayReferenceButton__XMLComponent(Instance : TObject; Params : PVariantArgList);
begin
TXMLDisplayReferenceButton(Instance).XMLComponent:=TComponent(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTXMLDisplayReferenceButton__XMLUseParent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TXMLDisplayReferenceButton(Instance).XMLUseParent;
end;

procedure __DC__SetTXMLDisplayReferenceButton__XMLUseParent(Instance : TObject; Params : PVariantArgList);
begin
TXMLDisplayReferenceButton(Instance).XMLUseParent:=OleVariant(Params^[0]);
end;

function __DC__GetTXMLDisplayReferenceGroup__XMLComponent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TXMLDisplayReferenceGroup(Instance).XMLComponent);
end;

procedure __DC__SetTXMLDisplayReferenceGroup__XMLComponent(Instance : TObject; Params : PVariantArgList);
begin
TXMLDisplayReferenceGroup(Instance).XMLComponent:=TComponent(VarToObject(OleVariant(Params^[0])));
end;

procedure __RegisterProps;
begin
RegisterProperty(TCaptionAttributes,'Parent',__DC__GetTCaptionAttributes__Parent,nil);
RegisterProperty(TCustomDataGrid,'DisplayRows',__DC__GetTCustomDataGrid__DisplayRows,__DC__SetTCustomDataGrid__DisplayRows);
RegisterProperty(TCustomDataGrid,'TableAttributes',__DC__GetTCustomDataGrid__TableAttributes,__DC__SetTCustomDataGrid__TableAttributes);
RegisterProperty(TCustomDataGrid,'HeadingAttributes',__DC__GetTCustomDataGrid__HeadingAttributes,__DC__SetTCustomDataGrid__HeadingAttributes);
RegisterProperty(TCustomDataGrid,'RowAttributes',__DC__GetTCustomDataGrid__RowAttributes,__DC__SetTCustomDataGrid__RowAttributes);
RegisterProperty(TCustomDataNavigator,'Custom',__DC__GetTCustomDataNavigator__Custom,__DC__SetTCustomDataNavigator__Custom);
RegisterProperty(TCustomDataNavigator,'Style',__DC__GetTCustomDataNavigator__Style,__DC__SetTCustomDataNavigator__Style);
RegisterProperty(TCustomDataNavigator,'StyleRule',__DC__GetTCustomDataNavigator__StyleRule,__DC__SetTCustomDataNavigator__StyleRule);
RegisterProperty(TCustomFieldGroup,'Custom',__DC__GetTCustomFieldGroup__Custom,__DC__SetTCustomFieldGroup__Custom);
RegisterProperty(TCustomFieldGroup,'Style',__DC__GetTCustomFieldGroup__Style,__DC__SetTCustomFieldGroup__Style);
RegisterProperty(TCustomFieldGroup,'StyleRule',__DC__GetTCustomFieldGroup__StyleRule,__DC__SetTCustomFieldGroup__StyleRule);
RegisterProperty(TCustomLayoutGroup,'DisplayColumns',__DC__GetTCustomLayoutGroup__DisplayColumns,__DC__SetTCustomLayoutGroup__DisplayColumns);
RegisterProperty(TCustomLayoutGroup,'Style',__DC__GetTCustomLayoutGroup__Style,__DC__SetTCustomLayoutGroup__Style);
RegisterProperty(TCustomLayoutGroup,'Custom',__DC__GetTCustomLayoutGroup__Custom,__DC__SetTCustomLayoutGroup__Custom);
RegisterProperty(TCustomLayoutGroup,'StyleRule',__DC__GetTCustomLayoutGroup__StyleRule,__DC__SetTCustomLayoutGroup__StyleRule);
RegisterProperty(TCustomQueryButtons,'Style',__DC__GetTCustomQueryButtons__Style,__DC__SetTCustomQueryButtons__Style);
RegisterProperty(TCustomQueryButtons,'Custom',__DC__GetTCustomQueryButtons__Custom,__DC__SetTCustomQueryButtons__Custom);
RegisterProperty(TCustomQueryButtons,'StyleRule',__DC__GetTCustomQueryButtons__StyleRule,__DC__SetTCustomQueryButtons__StyleRule);
RegisterProperty(TCustomQueryForm,'Action',__DC__GetTCustomQueryForm__Action,__DC__SetTCustomQueryForm__Action);
RegisterProperty(TCustomQueryForm,'Method',__DC__GetTCustomQueryForm__Method,__DC__SetTCustomQueryForm__Method);
RegisterProperty(TFormLayout,'ColumnCount',__DC__GetTFormLayout__ColumnCount,__DC__SetTFormLayout__ColumnCount);
RegisterProperty(TFormLayout,'BreakButtons',__DC__GetTFormLayout__BreakButtons,__DC__SetTFormLayout__BreakButtons);
RegisterProperty(TFormLayout,'TableHeader',__DC__GetTFormLayout__TableHeader,__DC__SetTFormLayout__TableHeader);
RegisterProperty(TGridAttributes,'Parent',__DC__GetTGridAttributes__Parent,nil);
RegisterProperty(TGridRowAttributes,'Parent',__DC__GetTGridRowAttributes__Parent,nil);
RegisterProperty(TWebButton,'Caption',__DC__GetTWebButton__Caption,__DC__SetTWebButton__Caption);
RegisterProperty(TWebButton,'Style',__DC__GetTWebButton__Style,__DC__SetTWebButton__Style);
RegisterProperty(TWebButton,'Custom',__DC__GetTWebButton__Custom,__DC__SetTWebButton__Custom);
RegisterProperty(TWebButton,'StyleRule',__DC__GetTWebButton__StyleRule,__DC__SetTWebButton__StyleRule);
RegisterProperty(TWebControlGroup,'WebFieldControls',__DC__GetTWebControlGroup__WebFieldControls,nil);
RegisterProperty(TWebDataDisplay,'Caption',__DC__GetTWebDataDisplay__Caption,__DC__SetTWebDataDisplay__Caption);
RegisterProperty(TWebDataDisplay,'TabIndex',__DC__GetTWebDataDisplay__TabIndex,__DC__SetTWebDataDisplay__TabIndex);
RegisterProperty(TWebDataDisplay,'Custom',__DC__GetTWebDataDisplay__Custom,__DC__SetTWebDataDisplay__Custom);
RegisterProperty(TWebDataDisplay,'Style',__DC__GetTWebDataDisplay__Style,__DC__SetTWebDataDisplay__Style);
RegisterProperty(TWebDataDisplay,'StyleRule',__DC__GetTWebDataDisplay__StyleRule,__DC__SetTWebDataDisplay__StyleRule);
RegisterProperty(TWebDataDisplay,'CaptionAttributes',__DC__GetTWebDataDisplay__CaptionAttributes,__DC__SetTWebDataDisplay__CaptionAttributes);
RegisterProperty(TWebDataInput,'FieldName',__DC__GetTWebDataInput__FieldName,__DC__SetTWebDataInput__FieldName);
RegisterProperty(TWebDisplay,'Parent',__DC__GetTWebDisplay__Parent,nil);
RegisterProperty(TWebDisplay,'DisplayComponent',__DC__GetTWebDisplay__DisplayComponent,__DC__SetTWebDisplay__DisplayComponent);
RegisterProperty(TWebForm,'WebComponents',__DC__GetTWebForm__WebComponents,nil);
RegisterProperty(TWebForm,'Style',__DC__GetTWebForm__Style,__DC__SetTWebForm__Style);
RegisterProperty(TWebForm,'Custom',__DC__GetTWebForm__Custom,__DC__SetTWebForm__Custom);
RegisterProperty(TWebForm,'StyleRule',__DC__GetTWebForm__StyleRule,__DC__SetTWebForm__StyleRule);
RegisterProperty(TWebListInput,'Values',__DC__GetTWebListInput__Values,__DC__SetTWebListInput__Values);
RegisterProperty(TWebListInput,'Items',__DC__GetTWebListInput__Items,__DC__SetTWebListInput__Items);
RegisterProperty(TWebListInput,'DataSet',__DC__GetTWebListInput__DataSet,__DC__SetTWebListInput__DataSet);
RegisterProperty(TWebListInput,'ValuesField',__DC__GetTWebListInput__ValuesField,__DC__SetTWebListInput__ValuesField);
RegisterProperty(TWebListInput,'ItemsField',__DC__GetTWebListInput__ItemsField,__DC__SetTWebListInput__ItemsField);
RegisterProperty(TWebRadioGroupInput,'ReadOnly',__DC__GetTWebRadioGroupInput__ReadOnly,__DC__SetTWebRadioGroupInput__ReadOnly);
RegisterProperty(TWebRadioGroupInput,'DisplayWidth',__DC__GetTWebRadioGroupInput__DisplayWidth,__DC__SetTWebRadioGroupInput__DisplayWidth);
RegisterProperty(TWebRadioGroupInput,'DisplayColumns',__DC__GetTWebRadioGroupInput__DisplayColumns,__DC__SetTWebRadioGroupInput__DisplayColumns);
RegisterProperty(TWebSelectOptionsInput,'DisplayRows',__DC__GetTWebSelectOptionsInput__DisplayRows,__DC__SetTWebSelectOptionsInput__DisplayRows);
RegisterProperty(TWebStatus,'DisplayWidth',__DC__GetTWebStatus__DisplayWidth,__DC__SetTWebStatus__DisplayWidth);
RegisterProperty(TWebStatus,'Caption',__DC__GetTWebStatus__Caption,__DC__SetTWebStatus__Caption);
RegisterProperty(TWebStatus,'CaptionAttributes',__DC__GetTWebStatus__CaptionAttributes,__DC__SetTWebStatus__CaptionAttributes);
RegisterProperty(TWebStatus,'CaptionPosition',__DC__GetTWebStatus__CaptionPosition,__DC__SetTWebStatus__CaptionPosition);
RegisterProperty(TWebTextAreaInput,'ReadOnly',__DC__GetTWebTextAreaInput__ReadOnly,__DC__SetTWebTextAreaInput__ReadOnly);
RegisterProperty(TWebTextAreaInput,'Wrap',__DC__GetTWebTextAreaInput__Wrap,__DC__SetTWebTextAreaInput__Wrap);
RegisterProperty(TWebTextAreaInput,'DisplayWidth',__DC__GetTWebTextAreaInput__DisplayWidth,__DC__SetTWebTextAreaInput__DisplayWidth);
RegisterProperty(TWebTextAreaInput,'DisplayRows',__DC__GetTWebTextAreaInput__DisplayRows,__DC__SetTWebTextAreaInput__DisplayRows);
RegisterProperty(TWebTextInput,'DisplayWidth',__DC__GetTWebTextInput__DisplayWidth,__DC__SetTWebTextInput__DisplayWidth);
RegisterProperty(TWebTextInput,'ReadOnly',__DC__GetTWebTextInput__ReadOnly,__DC__SetTWebTextInput__ReadOnly);
RegisterProperty(TWebTextInput,'Style',__DC__GetTWebTextInput__Style,__DC__SetTWebTextInput__Style);
RegisterProperty(TWebTextInput,'Custom',__DC__GetTWebTextInput__Custom,__DC__SetTWebTextInput__Custom);
RegisterProperty(TWebTextInput,'StyleRule',__DC__GetTWebTextInput__StyleRule,__DC__SetTWebTextInput__StyleRule);
RegisterProperty(TXMLButton,'XMLBroker',__DC__GetTXMLButton__XMLBroker,__DC__SetTXMLButton__XMLBroker);
RegisterProperty(TXMLButton,'XMLUseParent',__DC__GetTXMLButton__XMLUseParent,__DC__SetTXMLButton__XMLUseParent);
RegisterProperty(TXMLData,'Parent',__DC__GetTXMLData__Parent,nil);
RegisterProperty(TXMLData,'XMLBroker',__DC__GetTXMLData__XMLBroker,__DC__SetTXMLData__XMLBroker);
RegisterProperty(TXMLDataSet,'DataSetPath',__DC__GetTXMLDataSet__DataSetPath,nil);
RegisterProperty(TXMLDataSet,'DataSetField',__DC__GetTXMLDataSet__DataSetField,__DC__SetTXMLDataSet__DataSetField);
RegisterProperty(TXMLDisplayGroup,'VisibleFields',__DC__GetTXMLDisplayGroup__VisibleFields,nil);
RegisterProperty(TXMLDisplayReferenceButton,'XMLComponent',__DC__GetTXMLDisplayReferenceButton__XMLComponent,__DC__SetTXMLDisplayReferenceButton__XMLComponent);
RegisterProperty(TXMLDisplayReferenceButton,'XMLUseParent',__DC__GetTXMLDisplayReferenceButton__XMLUseParent,__DC__SetTXMLDisplayReferenceButton__XMLUseParent);
RegisterProperty(TXMLDisplayReferenceGroup,'XMLComponent',__DC__GetTXMLDisplayReferenceGroup__XMLComponent,__DC__SetTXMLDisplayReferenceGroup__XMLComponent);
end;

const __ConstNames0 : array[0..40] of string = (
'fmPost'
,'fmGet'
,'capLeft'
,'capRight'
,'capAbove'
,'capBelow'
,'wrOff'
,'wrPhysical'
,'wrVirtual'
,'lsUnknown'
,'lsFields'
,'lsButtons'
,'sTabIndexAttr'
,'sStyleAttr'
,'sClassAttr'
,'sSizeAttr'
,'sMultipleAttr'
,'sBgColorAttr'
,'sBorderAttr'
,'sCellPaddingAttr'
,'sCellSpacingAttr'
,'sNameAttr'
,'sColSpanAttr'
,'sEncTypeAttr'
,'sMethodAttr'
,'sActionAttr'
,'sColsAttr'
,'sRowsAttr'
,'sWrapAttr'
,'sValueAttr'
,'sOnClickAttr'
,'sTypeAttr'
,'sCheckedAttr'
,'sReadOnlyAttr'
,'sSelectedAttr'
,'sMaxLengthAttr'
,'sWidthAttr'
,'sAlignAttr'
,'sVAlignAttr'
,'sImageHeightAttr'
,'sImageWidthAttr'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,fmPost));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,fmGet));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,capLeft));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,capRight));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,capAbove));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,capBelow));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,wrOff));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,wrPhysical));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,wrVirtual));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,lsUnknown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,lsFields));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,lsButtons));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,sTabIndexAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,sStyleAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,sClassAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,sSizeAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,sMultipleAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,sBgColorAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,sBorderAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,sCellPaddingAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,sCellSpacingAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,sNameAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,sColSpanAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,sEncTypeAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,sMethodAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,sActionAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,sColsAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,sRowsAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,sWrapAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,sValueAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,sOnClickAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,sTypeAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,sCheckedAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,sReadOnlyAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,sSelectedAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,sMaxLengthAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,sWidthAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,sAlignAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,sVAlignAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,sImageHeightAttr));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,sImageWidthAttr));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..68] of TClass = (
TApplyUpdatesButton,
TCaptionAttributes,
TCustomDataForm,
TCustomDataGrid,
TCustomDataNavigator,
TCustomFieldGroup,
TCustomLayoutGroup,
TCustomQueryButtons,
TCustomQueryForm,
TDataForm,
TDataGrid,
TDataNavigator,
TDataSetButton,
TDeleteButton,
TFieldGroup,
TFieldRadioGroup,
TFieldSelectOptions,
TFieldStatus,
TFieldText,
TFieldTextArea,
TFirstButton,
TFormLayout,
TGridAttributes,
TGridRowAttributes,
TInsertButton,
TLastButton,
TLayoutGroup,
TNextButton,
TNextPageButton,
TPostButton,
TPriorButton,
TPriorPageButton,
TQueryButton,
TQueryButtons,
TQueryFieldGroup,
TQueryForm,
TQueryRadioGroup,
TQuerySelectOptions,
TQueryText,
TQueryTextArea,
TResetQueryButton,
TSelectOptionsColumn,
TStatusColumn,
TSubmitQueryButton,
TTextAreaColumn,
TTextColumn,
TUndoButton,
TWebButton,
TWebControlGroup,
TWebDataDisplay,
TWebDataInput,
TWebDisplay,
TWebDisplayReferenceGroup,
TWebForm,
TWebListInput,
TWebRadioGroupInput,
TWebSelectOptionsInput,
TWebStatus,
TWebTextAreaInput,
TWebTextInput,
TXMLButton,
TXMLData,
TXMLDataParent,
TXMLDataSet,
TXMLDataSetParent,
TXMLDisplayGroup,
TXMLDisplayParent,
TXMLDisplayReferenceButton,
TXMLDisplayReferenceGroup
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..8] of string = (
'GetItemValuesFromDataSet'
,'AddIntAttrib'
,'AddStringAttrib'
,'AddCustomAttrib'
,'AddBoolAttrib'
,'AddQuotedAttrib'
,'FormatColumnHeading'
,'FormatColumnData'
,'FindProducer'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TDataSet),
TypeInfo(string),
TypeInfo(string),
TypeInfo(TStrings),
TypeInfo(TStrings),TypeInfo(Boolean)],Addr(GetItemValuesFromDataSet),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(string),
TypeInfo(string),
TypeInfo(Integer)],Addr(AddIntAttrib),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(string),
TypeInfo(string),
TypeInfo(string)],Addr(AddStringAttrib),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),[
TypeInfo(string),
TypeInfo(string)],Addr(AddCustomAttrib),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T4),[
TypeInfo(string),
TypeInfo(string),
TypeInfo(Boolean)],Addr(AddBoolAttrib),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T5),[
TypeInfo(string),
TypeInfo(string),
TypeInfo(string)],Addr(AddQuotedAttrib),cRegister);

RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T6),[
TypeInfo(TWebDataDisplay),TypeInfo(string)],Addr(FormatColumnHeading),cRegister);

RegisterProc(nil,MethodNames[7],mtProc,TypeInfo(_T7),[
TypeInfo(TWebDataDisplay),
TypeInfo(string),TypeInfo(string)],Addr(FormatColumnData),cRegister);

RegisterProc(nil,MethodNames[8],mtProc,TypeInfo(_T12),[
TypeInfo(TComponent),TypeInfo(TCustomContentProducer)],Addr(FindProducer),cRegister);

RegisterProc(TCaptionAttributes,'Create',mtConstructor,TypeInfo(_T14),[
TypeInfo(TComponent)],Addr(TCaptionAttributes.Create),cRegister);

//RegRegisterMethod(TCustomDataForm,'GetHTMLFormTag',TypeInfo(_T15),[TypeInfo(TWebContentOptions),TypeInfo(string)], pointer(84));
RegRegisterMethod(TCustomDataForm,'GetHTMLFormTag',TypeInfo(_T15),[TypeInfo(TWebContentOptions),TypeInfo(string)],  getVMTProcAddr('TCustomDataForm','GetHTMLFormTag',84));


//RegRegisterMethod(TCustomDataNavigator,'GetDefaultButtons',TypeInfo(_T16),NoParams, pointer(92));
RegRegisterMethod(TCustomDataNavigator,'GetDefaultButtons',TypeInfo(_T16),NoParams,  getVMTProcAddr('TCustomDataNavigator','GetDefaultButtons',92));


//RegRegisterMethod(TCustomQueryButtons,'GetDefaultButtons',TypeInfo(_T17),NoParams, pointer(88));
RegRegisterMethod(TCustomQueryButtons,'GetDefaultButtons',TypeInfo(_T17),NoParams,  getVMTProcAddr('TCustomQueryButtons','GetDefaultButtons',88));


//RegRegisterMethod(TCustomQueryForm,'GetHTMLFormTag',TypeInfo(_T18),[TypeInfo(TWebContentOptions),TypeInfo(string)], pointer(84));
RegRegisterMethod(TCustomQueryForm,'GetHTMLFormTag',TypeInfo(_T18),[TypeInfo(TWebContentOptions),TypeInfo(string)],  getVMTProcAddr('TCustomQueryForm','GetHTMLFormTag',84));


RegRegisterMethod(TCustomQueryForm,'AssignStrings',TypeInfo(_T19),[
TypeInfo(TStrings)],Addr(TCustomQueryForm.AssignStrings));

//RegRegisterMethod(TDataSetButton,'GetMethodName',TypeInfo(_T21),[TypeInfo(string)], pointer(76));
RegRegisterMethod(TDataSetButton,'GetMethodName',TypeInfo(_T21),[TypeInfo(string)],  getVMTProcAddr('TDataSetButton','GetMethodName',76));


RegisterProc(TFormLayout,'Create',mtConstructor,TypeInfo(_T22),[
TypeInfo(TLayout)],Addr(TFormLayout.Create),cRegister);

RegRegisterMethod(TFormLayout,'EndLayout',TypeInfo(_T23),[TypeInfo(string)],Addr(TFormLayout.EndLayout));

RegisterProc(TGridAttributes,'Create',mtConstructor,TypeInfo(_T24),[
TypeInfo(TComponent)],Addr(TGridAttributes.Create),cRegister);

RegisterProc(TGridRowAttributes,'Create',mtConstructor,TypeInfo(_T25),[
TypeInfo(TComponent)],Addr(TGridRowAttributes.Create),cRegister);

//RegRegisterMethod(TQueryButton,'GetInputType',TypeInfo(_T26),[TypeInfo(string)], pointer(72));
RegRegisterMethod(TQueryButton,'GetInputType',TypeInfo(_T26),[TypeInfo(string)],  getVMTProcAddr('TQueryButton','GetInputType',72));


//RegRegisterMethod(TQueryButton,'GetHTMLControlName',TypeInfo(_T27),[TypeInfo(string)], pointer(76));
RegRegisterMethod(TQueryButton,'GetHTMLControlName',TypeInfo(_T27),[TypeInfo(string)],  getVMTProcAddr('TQueryButton','GetHTMLControlName',76));


//RegRegisterMethod(TQueryButton,'EventContent',TypeInfo(_T28),[TypeInfo(TWebContentOptions),TypeInfo(string)], pointer(80));
RegRegisterMethod(TQueryButton,'EventContent',TypeInfo(_T28),[TypeInfo(TWebContentOptions),TypeInfo(string)],  getVMTProcAddr('TQueryButton','EventContent',80));


//RegRegisterMethod(TWebButton,'ImplContent',TypeInfo(_T29),[TypeInfo(TWebContentOptions),TypeInfo(TLayout),TypeInfo(string)], pointer(56));
RegRegisterMethod(TWebButton,'ImplContent',TypeInfo(_T29),[TypeInfo(TWebContentOptions),TypeInfo(TLayout),TypeInfo(string)],  getVMTProcAddr('TWebButton','ImplContent',56));


//RegRegisterMethod(TWebButton,'GetCaption',TypeInfo(_T30),[TypeInfo(string)], pointer(60));
RegRegisterMethod(TWebButton,'GetCaption',TypeInfo(_T30),[TypeInfo(string)],  getVMTProcAddr('TWebButton','GetCaption',60));


//RegRegisterMethod(TWebButton,'SetCaption',TypeInfo(_T31),[TypeInfo(string)], pointer(64));
RegRegisterMethod(TWebButton,'SetCaption',TypeInfo(_T31),[TypeInfo(string)],  getVMTProcAddr('TWebButton','SetCaption',64));


//RegRegisterMethod(TWebButton,'GetLayoutAttributes',TypeInfo(_T32),[TypeInfo(TLayoutAttributes)], pointer(68));
RegRegisterMethod(TWebButton,'GetLayoutAttributes',TypeInfo(_T32),[TypeInfo(TLayoutAttributes)],  getVMTProcAddr('TWebButton','GetLayoutAttributes',68));


//RegRegisterMethod(TWebControlGroup,'ImplGetSubComponents',TypeInfo(_T33),[TypeInfo(TObject)], pointer(68));
RegRegisterMethod(TWebControlGroup,'ImplGetSubComponents',TypeInfo(_T33),[TypeInfo(TObject)],  getVMTProcAddr('TWebControlGroup','ImplGetSubComponents',68));


//RegRegisterMethod(TWebControlGroup,'ImplContent',TypeInfo(_T35),[TypeInfo(TWebContentOptions),TypeInfo(TLayout),TypeInfo(string)], pointer(76));
RegRegisterMethod(TWebControlGroup,'ImplContent',TypeInfo(_T35),[TypeInfo(TWebContentOptions),TypeInfo(TLayout),TypeInfo(string)],  getVMTProcAddr('TWebControlGroup','ImplContent',76));


//RegRegisterMethod(TWebControlGroup,'GetLayoutAttributes',TypeInfo(_T37),[TypeInfo(TLayoutAttributes)], pointer(84));
RegRegisterMethod(TWebControlGroup,'GetLayoutAttributes',TypeInfo(_T37),[TypeInfo(TLayoutAttributes)],  getVMTProcAddr('TWebControlGroup','GetLayoutAttributes',84));


//RegRegisterMethod(TWebDataDisplay,'ImplContent',TypeInfo(_T38),[TypeInfo(TWebContentOptions),TypeInfo(TLayout),TypeInfo(string)], pointer(56));
RegRegisterMethod(TWebDataDisplay,'ImplContent',TypeInfo(_T38),[TypeInfo(TWebContentOptions),TypeInfo(TLayout),TypeInfo(string)],  getVMTProcAddr('TWebDataDisplay','ImplContent',56));


//RegRegisterMethod(TWebDataDisplay,'ImplGetHTMLControlName',TypeInfo(_T39),[TypeInfo(string)], pointer(60));
RegRegisterMethod(TWebDataDisplay,'ImplGetHTMLControlName',TypeInfo(_T39),[TypeInfo(string)],  getVMTProcAddr('TWebDataDisplay','ImplGetHTMLControlName',60));


//RegRegisterMethod(TWebDataDisplay,'ControlContent',TypeInfo(_T40),[TypeInfo(TWebContentOptions),TypeInfo(string)], pointer(64));
RegRegisterMethod(TWebDataDisplay,'ControlContent',TypeInfo(_T40),[TypeInfo(TWebContentOptions),TypeInfo(string)],  getVMTProcAddr('TWebDataDisplay','ControlContent',64));


//RegRegisterMethod(TWebDataDisplay,'LabelContent',TypeInfo(_T41),[TypeInfo(string)], pointer(68));
RegRegisterMethod(TWebDataDisplay,'LabelContent',TypeInfo(_T41),[TypeInfo(string)],  getVMTProcAddr('TWebDataDisplay','LabelContent',68));


//RegRegisterMethod(TWebDataDisplay,'GetCaption',TypeInfo(_T42),[TypeInfo(string)], pointer(72));
RegRegisterMethod(TWebDataDisplay,'GetCaption',TypeInfo(_T42),[TypeInfo(string)],  getVMTProcAddr('TWebDataDisplay','GetCaption',72));


//RegRegisterMethod(TWebDataDisplay,'SetCaption',TypeInfo(_T43),[TypeInfo(string)], pointer(76));
RegRegisterMethod(TWebDataDisplay,'SetCaption',TypeInfo(_T43),[TypeInfo(string)],  getVMTProcAddr('TWebDataDisplay','SetCaption',76));


//RegRegisterMethod(TWebDataDisplay,'EventContent',TypeInfo(_T44),[TypeInfo(TWebContentOptions),TypeInfo(string)], pointer(80));
RegRegisterMethod(TWebDataDisplay,'EventContent',TypeInfo(_T44),[TypeInfo(TWebContentOptions),TypeInfo(string)],  getVMTProcAddr('TWebDataDisplay','EventContent',80));


//RegRegisterMethod(TWebDataDisplay,'FormatCaption',TypeInfo(_T45),[TypeInfo(string)], pointer(84));
RegRegisterMethod(TWebDataDisplay,'FormatCaption',TypeInfo(_T45),[TypeInfo(string)],  getVMTProcAddr('TWebDataDisplay','FormatCaption',84));


//RegRegisterMethod(TWebDataDisplay,'GetLayoutAttributes',TypeInfo(_T46),[TypeInfo(TLayoutAttributes)], pointer(88));
RegRegisterMethod(TWebDataDisplay,'GetLayoutAttributes',TypeInfo(_T46),[TypeInfo(TLayoutAttributes)],  getVMTProcAddr('TWebDataDisplay','GetLayoutAttributes',88));


RegisterProc(TWebDataDisplay,'IsColumn',mtClassMethod,TypeInfo(_T47),[TypeInfo(Boolean)], pointer(92),cRegister);

RegisterProc(TWebDataDisplay,'IsQueryField',mtClassMethod,TypeInfo(_T48),[TypeInfo(Boolean)], pointer(96),cRegister);

//RegRegisterMethod(TWebDataInput,'ImplRestoreDefaults',TypeInfo(_T49),NoParams, pointer(100));
RegRegisterMethod(TWebDataInput,'ImplRestoreDefaults',TypeInfo(_T49),NoParams,  getVMTProcAddr('TWebDataInput','ImplRestoreDefaults',100));


//RegRegisterMethod(TWebDataInput,'ImplGetFieldName',TypeInfo(_T50),[TypeInfo(string)], pointer(104));
RegRegisterMethod(TWebDataInput,'ImplGetFieldName',TypeInfo(_T50),[TypeInfo(string)],  getVMTProcAddr('TWebDataInput','ImplGetFieldName',104));


//RegRegisterMethod(TWebDataInput,'ImplGetRowSetFieldAttributes',TypeInfo(_T51),[TypeInfo(string),TypeInfo(string)], pointer(108));
RegRegisterMethod(TWebDataInput,'ImplGetRowSetFieldAttributes',TypeInfo(_T51),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TWebDataInput','ImplGetRowSetFieldAttributes',108));


//RegRegisterMethod(TWebDataInput,'RestoreFieldDefaults',TypeInfo(_T52),[TypeInfo(TField)], pointer(112));
RegRegisterMethod(TWebDataInput,'RestoreFieldDefaults',TypeInfo(_T52),[TypeInfo(TField)],  getVMTProcAddr('TWebDataInput','RestoreFieldDefaults',112));


//RegRegisterMethod(TWebDataInput,'GetParamName',TypeInfo(_T54),[TypeInfo(string)], pointer(120));
RegRegisterMethod(TWebDataInput,'GetParamName',TypeInfo(_T54),[TypeInfo(string)],  getVMTProcAddr('TWebDataInput','GetParamName',120));


//RegRegisterMethod(TWebDisplay,'GetDisplayComponent',TypeInfo(_T55),[TypeInfo(TComponent)], pointer(0));
RegRegisterMethod(TWebDisplay,'GetDisplayComponent',TypeInfo(_T55),[TypeInfo(TComponent)],  getVMTProcAddr('TWebDisplay','GetDisplayComponent',0));


//RegRegisterMethod(TWebDisplay,'ChangedDisplayComponent',TypeInfo(_T56),NoParams, pointer(4));
RegRegisterMethod(TWebDisplay,'ChangedDisplayComponent',TypeInfo(_T56),NoParams,  getVMTProcAddr('TWebDisplay','ChangedDisplayComponent',4));


//RegRegisterMethod(TWebDisplay,'Notification',TypeInfo(_T57),[TypeInfo(TComponent),TypeInfo(TOperation)], pointer(8));
RegRegisterMethod(TWebDisplay,'Notification',TypeInfo(_T57),[TypeInfo(TComponent),TypeInfo(TOperation)],  getVMTProcAddr('TWebDisplay','Notification',8));


RegisterProc(TWebDisplay,'Create',mtConstructor,TypeInfo(_T58),[
TypeInfo(TComponent)],Addr(TWebDisplay.Create),cRegister);

//RegRegisterMethod(TWebDisplayReferenceGroup,'SetWebDisplayComponent',TypeInfo(_T59),[TypeInfo(TComponent)], pointer(88));
RegRegisterMethod(TWebDisplayReferenceGroup,'SetWebDisplayComponent',TypeInfo(_T59),[TypeInfo(TComponent)],  getVMTProcAddr('TWebDisplayReferenceGroup','SetWebDisplayComponent',88));


//RegRegisterMethod(TWebForm,'ImplContent',TypeInfo(_T61),[TypeInfo(TWebContentOptions),TypeInfo(TLayout),TypeInfo(string)], pointer(72));
RegRegisterMethod(TWebForm,'ImplContent',TypeInfo(_T61),[TypeInfo(TWebContentOptions),TypeInfo(TLayout),TypeInfo(string)],  getVMTProcAddr('TWebForm','ImplContent',72));


//RegRegisterMethod(TWebForm,'GetLayoutAttributes',TypeInfo(_T63),[TypeInfo(TLayoutAttributes)], pointer(80));
RegRegisterMethod(TWebForm,'GetLayoutAttributes',TypeInfo(_T63),[TypeInfo(TLayoutAttributes)],  getVMTProcAddr('TWebForm','GetLayoutAttributes',80));


//RegRegisterMethod(TWebListInput,'FormatInputs',TypeInfo(_T65),[TypeInfo(TStrings),TypeInfo(TStrings),TypeInfo(TWebContentOptions),TypeInfo(string)], pointer(128));
RegRegisterMethod(TWebListInput,'FormatInputs',TypeInfo(_T65),[TypeInfo(TStrings),TypeInfo(TStrings),TypeInfo(TWebContentOptions),TypeInfo(string)],  getVMTProcAddr('TWebListInput','FormatInputs',128));


//RegRegisterMethod(TWebRadioGroupInput,'AddAttributes',TypeInfo(_T66),[TypeInfo(string)], pointer(132));
RegRegisterMethod(TWebRadioGroupInput,'AddAttributes',TypeInfo(_T66),[TypeInfo(string)],  getVMTProcAddr('TWebRadioGroupInput','AddAttributes',132));


//RegRegisterMethod(TWebRadioGroupInput,'GetCheckIndex',TypeInfo(_T67),[TypeInfo(TStrings),TypeInfo(TStrings),TypeInfo(Integer)], pointer(136));
RegRegisterMethod(TWebRadioGroupInput,'GetCheckIndex',TypeInfo(_T67),[TypeInfo(TStrings),TypeInfo(TStrings),TypeInfo(Integer)],  getVMTProcAddr('TWebRadioGroupInput','GetCheckIndex',136));


//RegRegisterMethod(TWebSelectOptionsInput,'AddAttributes',TypeInfo(_T68),[TypeInfo(string)], pointer(132));
RegRegisterMethod(TWebSelectOptionsInput,'AddAttributes',TypeInfo(_T68),[TypeInfo(string)],  getVMTProcAddr('TWebSelectOptionsInput','AddAttributes',132));


//RegRegisterMethod(TWebSelectOptionsInput,'GetSelectIndex',TypeInfo(_T69),[TypeInfo(TStrings),TypeInfo(TStrings),TypeInfo(Integer)], pointer(136));
RegRegisterMethod(TWebSelectOptionsInput,'GetSelectIndex',TypeInfo(_T69),[TypeInfo(TStrings),TypeInfo(TStrings),TypeInfo(Integer)],  getVMTProcAddr('TWebSelectOptionsInput','GetSelectIndex',136));


RegisterProc(TWebStatus,'Identifier',mtClassMethod,TypeInfo(_T70),[TypeInfo(string)],Addr(TWebStatus.Identifier),cRegister);

//RegRegisterMethod(TWebTextAreaInput,'AddAttributes',TypeInfo(_T71),[TypeInfo(string)], pointer(124));
RegRegisterMethod(TWebTextAreaInput,'AddAttributes',TypeInfo(_T71),[TypeInfo(string)],  getVMTProcAddr('TWebTextAreaInput','AddAttributes',124));


//RegRegisterMethod(TWebTextInput,'AddAttributes',TypeInfo(_T72),[TypeInfo(string)], pointer(124));
RegRegisterMethod(TWebTextInput,'AddAttributes',TypeInfo(_T72),[TypeInfo(string)],  getVMTProcAddr('TWebTextInput','AddAttributes',124));


//RegRegisterMethod(TXMLData,'ChangedXMLBroker',TypeInfo(_T73),NoParams, pointer(0));
RegRegisterMethod(TXMLData,'ChangedXMLBroker',TypeInfo(_T73),NoParams,  getVMTProcAddr('TXMLData','ChangedXMLBroker',0));


//RegRegisterMethod(TXMLData,'SetXMLBroker',TypeInfo(_T74),[TypeInfo(TXMLBroker)], pointer(4));
RegRegisterMethod(TXMLData,'SetXMLBroker',TypeInfo(_T74),[TypeInfo(TXMLBroker)],  getVMTProcAddr('TXMLData','SetXMLBroker',4));


//RegRegisterMethod(TXMLData,'GetXMLBroker',TypeInfo(_T75),[TypeInfo(TXMLBroker)], pointer(8));
RegRegisterMethod(TXMLData,'GetXMLBroker',TypeInfo(_T75),[TypeInfo(TXMLBroker)],  getVMTProcAddr('TXMLData','GetXMLBroker',8));


//RegRegisterMethod(TXMLData,'Notification',TypeInfo(_T76),[TypeInfo(TComponent),TypeInfo(TOperation)], pointer(12));
RegRegisterMethod(TXMLData,'Notification',TypeInfo(_T76),[TypeInfo(TComponent),TypeInfo(TOperation)],  getVMTProcAddr('TXMLData','Notification',12));


RegisterProc(TXMLData,'Create',mtConstructor,TypeInfo(_T77),[
TypeInfo(TComponent)],Addr(TXMLData.Create),cRegister);

//RegRegisterMethod(TXMLDataParent,'ChangedUseParent',TypeInfo(_T78),NoParams, pointer(16));
RegRegisterMethod(TXMLDataParent,'ChangedUseParent',TypeInfo(_T78),NoParams,  getVMTProcAddr('TXMLDataParent','ChangedUseParent',16));


RegisterProc(TXMLDataSet,'QueryInterface',mtMethod,TypeInfo(_T79),[
TypeInfo(IDispatch),
TypeInfoUntyped,TypeInfo(HResult)], pointer(16),cRegister);

//RegRegisterMethod(TXMLDataSet,'ChangedDataSetField',TypeInfo(_T80),NoParams, pointer(20));
RegRegisterMethod(TXMLDataSet,'ChangedDataSetField',TypeInfo(_T80),NoParams,  getVMTProcAddr('TXMLDataSet','ChangedDataSetField',20));


//RegRegisterMethod(TXMLDataSet,'GetDataSetField',TypeInfo(_T81),[TypeInfo(string)], pointer(24));
RegRegisterMethod(TXMLDataSet,'GetDataSetField',TypeInfo(_T81),[TypeInfo(string)],  getVMTProcAddr('TXMLDataSet','GetDataSetField',24));


RegisterProc(TXMLDataSet,'Create',mtConstructor,TypeInfo(_T82),[
TypeInfo(TComponent)],Addr(TXMLDataSet.Create),cRegister);

//RegRegisterMethod(TXMLDataSetParent,'ChangedUseParent',TypeInfo(_T83),NoParams, pointer(28));
RegRegisterMethod(TXMLDataSetParent,'ChangedUseParent',TypeInfo(_T83),NoParams,  getVMTProcAddr('TXMLDataSetParent','ChangedUseParent',28));


//RegRegisterMethod(TXMLDisplayGroup,'XMLDataChange',TypeInfo(_T84),[TypeInfo(TObject)], pointer(88));
RegRegisterMethod(TXMLDisplayGroup,'XMLDataChange',TypeInfo(_T84),[TypeInfo(TObject)],  getVMTProcAddr('TXMLDisplayGroup','XMLDataChange',88));


//RegRegisterMethod(TXMLDisplayGroup,'ImplIsMultipleRecordView',TypeInfo(_T85),[TypeInfo(Boolean)], pointer(92));
RegRegisterMethod(TXMLDisplayGroup,'ImplIsMultipleRecordView',TypeInfo(_T85),[TypeInfo(Boolean)],  getVMTProcAddr('TXMLDisplayGroup','ImplIsMultipleRecordView',92));


//RegRegisterMethod(TXMLDisplayGroup,'GetFieldsList',TypeInfo(_T86),[TypeInfo(TStrings)], pointer(96));
RegRegisterMethod(TXMLDisplayGroup,'GetFieldsList',TypeInfo(_T86),[TypeInfo(TStrings)],  getVMTProcAddr('TXMLDisplayGroup','GetFieldsList',96));


//RegRegisterMethod(TXMLDisplayGroup,'CreateDefaultFields',TypeInfo(_T87),NoParams, pointer(100));
RegRegisterMethod(TXMLDisplayGroup,'CreateDefaultFields',TypeInfo(_T87),NoParams,  getVMTProcAddr('TXMLDisplayGroup','CreateDefaultFields',100));


//RegRegisterMethod(TXMLDisplayParent,'ChangedUseParent',TypeInfo(_T88),NoParams, pointer(12));
RegRegisterMethod(TXMLDisplayParent,'ChangedUseParent',TypeInfo(_T88),NoParams,  getVMTProcAddr('TXMLDisplayParent','ChangedUseParent',12));


RegisterProc(TXMLDisplayParent,'Create',mtConstructor,TypeInfo(_T89),[
TypeInfo(TComponent)],Addr(TXMLDisplayParent.Create),cRegister);

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'CreateDefaultButtonClasses',mtProc,TypeInfo(_T8),[
ArrayInfo(TypeInfo(TWebButtonClass)),
TypeInfo(TWebComponentList)],Addr(CreateDefaultButtonClasses),cRegister)}

{RegisterProc(nil,'CanAddClassHelper',mtProc,TypeInfo(_T9),[
TypeInfo(TComponent),
TypeInfo(TComponent),
TypeInfo(TClass),TypeInfo(Boolean)],Addr(CanAddClassHelper),cRegister)}

{RegisterProc(nil,'DeclareSubmitForm',mtProc,TypeInfo(_T10),[
TypeInfo(TComponent),
TypeInfo(TXMLBroker),
TypeInfo(IAddScriptElements)],Addr(DeclareSubmitForm),cRegister)}

{RegisterProc(nil,'FindDispatcher',mtProc,TypeInfo(_T11),[
TypeInfo(TComponent),TypeInfo(IWebDispatcherAccess)],Addr(FindDispatcher),cRegister)}

{RegRegisterMethod(TApplyUpdatesButton,'ImplAddElements',TypeInfo(_T13),[
TypeInfo(IAddScriptElements)], pointer(72))}

{RegRegisterMethod(TDataSetButton,'ImplAddElements',TypeInfo(_T20),[
TypeInfo(IAddScriptElements)], pointer(72))}

{RegRegisterMethod(TWebControlGroup,'ImplAddElements',TypeInfo(_T34),[
TypeInfo(IAddScriptElements)], pointer(72))}

{RegRegisterMethod(TWebControlGroup,'ImplCanAddClass',TypeInfo(_T36),[
TypeInfo(TComponent),
TypeInfo(TClass),TypeInfo(Boolean)], pointer(80))}

{RegRegisterMethod(TWebDataInput,'FindAssociatedField',TypeInfo(_T53),[
TypeInfo(IInetXWebDataSet),TypeInfo(TField)], pointer(116))}

{RegRegisterMethod(TWebForm,'ImplCanAddClass',TypeInfo(_T60),[
TypeInfo(TComponent),
TypeInfo(TClass),TypeInfo(Boolean)], pointer(68))}

{RegRegisterMethod(TWebForm,'ImplAddElements',TypeInfo(_T62),[
TypeInfo(IAddScriptElements)], pointer(76))}

{RegRegisterMethod(TWebListInput,'ImplAddElements',TypeInfo(_T64),[
TypeInfo(IAddScriptElements)], pointer(124))}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
