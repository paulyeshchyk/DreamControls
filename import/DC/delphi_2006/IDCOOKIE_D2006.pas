{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IDCOOKIE_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  SysUtils,
  SyncObjs,
  IdGlobal,
  IdException,
  IdCookie;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : TPersistent) of object;

_T1 = function : TIdCookieRFC2109 of object;

_T2 = function : TIdCookieRFC2965 of object;

_T3 = procedure (p0 : TIdCookieRFC2109) of object;

_T4 = procedure (const p0 : string) of object;

_T5 = procedure (p0 : Integer) of object;

_T6 = function (p0 : Integer;
const p1 : string): Integer of object;

_T7 = function (p0 : TIdCookieAccess): TIdCookieList of object;

_T8 = procedure (p0 : TIdCookieAccess) of object;

_T9 = function : string of object;

_T10 = procedure (p0 : string) of object;

_T11 = _T9;

_T12 = _T9;

_T13 = procedure (p0 : TStringList) of object;

_T14 = function (p0 : string): Boolean of object;

_T15 = procedure (const p0 : string;
const p1 : string) of object;

_T16 = function : TIdServerCookie of object;

function __DC__GetTIdCookieList__Cookies(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TIdCookieList(Instance).Cookies[OleVariant(Params^[0])]);
end;

function __DC__GetTIdCookieRFC2109__Comment(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdCookieRFC2109(Instance).Comment;
end;

procedure __DC__SetTIdCookieRFC2109__Comment(Instance : TObject; Params : PVariantArgList);
begin
TIdCookieRFC2109(Instance).Comment:=OleVariant(Params^[0]);
end;

function __DC__GetTIdCookieRFC2109__Version(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdCookieRFC2109(Instance).Version;
end;

procedure __DC__SetTIdCookieRFC2109__Version(Instance : TObject; Params : PVariantArgList);
begin
TIdCookieRFC2109(Instance).Version:=OleVariant(Params^[0]);
end;

function __DC__GetTIdCookieRFC2965__CommentURL(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdCookieRFC2965(Instance).CommentURL;
end;

procedure __DC__SetTIdCookieRFC2965__CommentURL(Instance : TObject; Params : PVariantArgList);
begin
TIdCookieRFC2965(Instance).CommentURL:=OleVariant(Params^[0]);
end;

function __DC__GetTIdCookieRFC2965__Discard(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdCookieRFC2965(Instance).Discard;
end;

procedure __DC__SetTIdCookieRFC2965__Discard(Instance : TObject; Params : PVariantArgList);
begin
TIdCookieRFC2965(Instance).Discard:=OleVariant(Params^[0]);
end;

function __DC__GetTIdCookieRFC2965__PortList(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdCookieRFC2965(Instance).PortList[OleVariant(Params^[0])];
end;

procedure __DC__SetTIdCookieRFC2965__PortList(Instance : TObject; Params : PVariantArgList);
begin
TIdCookieRFC2965(Instance).PortList[OleVariant(Params^[1])]:=OleVariant(Params^[0]);
end;

function __DC__GetTIdCookies__Cookie(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TIdCookies(Instance).Cookie[OleVariant(Params^[1]), OleVariant(Params^[0])]);
end;

function __DC__GetTIdCookies__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TIdCookies(Instance).Items[OleVariant(Params^[0])]);
end;

procedure __DC__SetTIdCookies__Items(Instance : TObject; Params : PVariantArgList);
begin
TIdCookies(Instance).Items[OleVariant(Params^[1])]:=TIdCookieRFC2109(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTIdNetscapeCookie__CookieText(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNetscapeCookie(Instance).CookieText;
end;

procedure __DC__SetTIdNetscapeCookie__CookieText(Instance : TObject; Params : PVariantArgList);
begin
TIdNetscapeCookie(Instance).CookieText:=OleVariant(Params^[0]);
end;

function __DC__GetTIdNetscapeCookie__ServerCookie(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNetscapeCookie(Instance).ServerCookie;
end;

function __DC__GetTIdNetscapeCookie__ClientCookie(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNetscapeCookie(Instance).ClientCookie;
end;

function __DC__GetTIdNetscapeCookie__Domain(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNetscapeCookie(Instance).Domain;
end;

procedure __DC__SetTIdNetscapeCookie__Domain(Instance : TObject; Params : PVariantArgList);
begin
TIdNetscapeCookie(Instance).Domain:=OleVariant(Params^[0]);
end;

function __DC__GetTIdNetscapeCookie__Expires(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNetscapeCookie(Instance).Expires;
end;

procedure __DC__SetTIdNetscapeCookie__Expires(Instance : TObject; Params : PVariantArgList);
begin
TIdNetscapeCookie(Instance).Expires:=OleVariant(Params^[0]);
end;

function __DC__GetTIdNetscapeCookie__CookieName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNetscapeCookie(Instance).CookieName;
end;

procedure __DC__SetTIdNetscapeCookie__CookieName(Instance : TObject; Params : PVariantArgList);
begin
TIdNetscapeCookie(Instance).CookieName:=OleVariant(Params^[0]);
end;

function __DC__GetTIdNetscapeCookie__Path(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNetscapeCookie(Instance).Path;
end;

procedure __DC__SetTIdNetscapeCookie__Path(Instance : TObject; Params : PVariantArgList);
begin
TIdNetscapeCookie(Instance).Path:=OleVariant(Params^[0]);
end;

function __DC__GetTIdNetscapeCookie__Secure(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNetscapeCookie(Instance).Secure;
end;

procedure __DC__SetTIdNetscapeCookie__Secure(Instance : TObject; Params : PVariantArgList);
begin
TIdNetscapeCookie(Instance).Secure:=OleVariant(Params^[0]);
end;

function __DC__GetTIdNetscapeCookie__Value(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNetscapeCookie(Instance).Value;
end;

procedure __DC__SetTIdNetscapeCookie__Value(Instance : TObject; Params : PVariantArgList);
begin
TIdNetscapeCookie(Instance).Value:=OleVariant(Params^[0]);
end;

function __DC__GetTIdServerCookies__Cookie(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TIdServerCookies(Instance).Cookie[OleVariant(Params^[0])]);
end;

procedure __RegisterProps;
begin
RegisterIndexedProperty(TIdCookieList,'Cookies',1,False,__DC__GetTIdCookieList__Cookies,nil);
RegisterProperty(TIdCookieRFC2109,'Comment',__DC__GetTIdCookieRFC2109__Comment,__DC__SetTIdCookieRFC2109__Comment);
RegisterProperty(TIdCookieRFC2109,'Version',__DC__GetTIdCookieRFC2109__Version,__DC__SetTIdCookieRFC2109__Version);
RegisterProperty(TIdCookieRFC2965,'CommentURL',__DC__GetTIdCookieRFC2965__CommentURL,__DC__SetTIdCookieRFC2965__CommentURL);
RegisterProperty(TIdCookieRFC2965,'Discard',__DC__GetTIdCookieRFC2965__Discard,__DC__SetTIdCookieRFC2965__Discard);
RegisterIndexedProperty(TIdCookieRFC2965,'PortList',1,False,__DC__GetTIdCookieRFC2965__PortList,__DC__SetTIdCookieRFC2965__PortList);
RegisterIndexedProperty(TIdCookies,'Cookie',2,False,__DC__GetTIdCookies__Cookie,nil);
RegisterIndexedProperty(TIdCookies,'Items',1,True,__DC__GetTIdCookies__Items,__DC__SetTIdCookies__Items);
RegisterProperty(TIdNetscapeCookie,'CookieText',__DC__GetTIdNetscapeCookie__CookieText,__DC__SetTIdNetscapeCookie__CookieText);
RegisterProperty(TIdNetscapeCookie,'ServerCookie',__DC__GetTIdNetscapeCookie__ServerCookie,nil);
RegisterProperty(TIdNetscapeCookie,'ClientCookie',__DC__GetTIdNetscapeCookie__ClientCookie,nil);
RegisterProperty(TIdNetscapeCookie,'Domain',__DC__GetTIdNetscapeCookie__Domain,__DC__SetTIdNetscapeCookie__Domain);
RegisterProperty(TIdNetscapeCookie,'Expires',__DC__GetTIdNetscapeCookie__Expires,__DC__SetTIdNetscapeCookie__Expires);
RegisterProperty(TIdNetscapeCookie,'CookieName',__DC__GetTIdNetscapeCookie__CookieName,__DC__SetTIdNetscapeCookie__CookieName);
RegisterProperty(TIdNetscapeCookie,'Path',__DC__GetTIdNetscapeCookie__Path,__DC__SetTIdNetscapeCookie__Path);
RegisterProperty(TIdNetscapeCookie,'Secure',__DC__GetTIdNetscapeCookie__Secure,__DC__SetTIdNetscapeCookie__Secure);
RegisterProperty(TIdNetscapeCookie,'Value',__DC__GetTIdNetscapeCookie__Value,__DC__SetTIdNetscapeCookie__Value);
RegisterIndexedProperty(TIdServerCookies,'Cookie',1,False,__DC__GetTIdServerCookies__Cookie,nil);
end;

const __ConstNames0 : array[0..5] of string = (
'GFMaxAge'
,'cvNetscape'
,'cvRFC2109'
,'cvRFC2965'
,'caRead'
,'caReadWrite'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,GFMaxAge));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,cvNetscape));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,cvRFC2109));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,cvRFC2965));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,caRead));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,caReadWrite));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..6] of TClass = (
TIdCookieList,
TIdCookieRFC2109,
TIdCookieRFC2965,
TIdCookies,
TIdNetscapeCookie,
TIdServerCookie,
TIdServerCookies
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegisterProc(TIdCookies,'Create',mtConstructor,TypeInfo(_T0),[
TypeInfo(TPersistent)],Addr(TIdCookies.Create),cRegister);

RegRegisterMethod(TIdCookies,'Add',TypeInfo(_T1),[TypeInfo(TIdCookieRFC2109)],Addr(TIdCookies.Add));

RegRegisterMethod(TIdCookies,'Add2',TypeInfo(_T2),[TypeInfo(TIdCookieRFC2965)],Addr(TIdCookies.Add2));

RegRegisterMethod(TIdCookies,'AddCookie',TypeInfo(_T3),[
TypeInfo(TIdCookieRFC2109)],Addr(TIdCookies.AddCookie));

RegRegisterMethod(TIdCookies,'AddSrcCookie',TypeInfo(_T4),[
TypeInfo(string)],Addr(TIdCookies.AddSrcCookie));

RegRegisterMethod(TIdCookies,'Delete',TypeInfo(_T5),[
TypeInfo(Integer)],Addr(TIdCookies.Delete));

RegRegisterMethod(TIdCookies,'GetCookieIndex',TypeInfo(_T6),[
TypeInfo(Integer),
TypeInfo(string),TypeInfo(Integer)],Addr(TIdCookies.GetCookieIndex));

RegRegisterMethod(TIdCookies,'LockCookieListByDomain',TypeInfo(_T7),[
TypeInfo(TIdCookieAccess),TypeInfo(TIdCookieList)],Addr(TIdCookies.LockCookieListByDomain));

RegRegisterMethod(TIdCookies,'UnlockCookieListByDomain',TypeInfo(_T8),[
TypeInfo(TIdCookieAccess)],Addr(TIdCookies.UnlockCookieListByDomain));

//RegRegisterMethod(TIdNetscapeCookie,'GetCookie',TypeInfo(_T9),[TypeInfo(string)], pointer(32));
RegRegisterMethod(TIdNetscapeCookie,'GetCookie',TypeInfo(_T9),[TypeInfo(string)],  getVMTProcAddr('TIdNetscapeCookie','GetCookie',32));


//RegRegisterMethod(TIdNetscapeCookie,'SetExpires',TypeInfo(_T10),[TypeInfo(string)], pointer(36));
RegRegisterMethod(TIdNetscapeCookie,'SetExpires',TypeInfo(_T10),[TypeInfo(string)],  getVMTProcAddr('TIdNetscapeCookie','SetExpires',36));


//RegRegisterMethod(TIdNetscapeCookie,'GetServerCookie',TypeInfo(_T11),[TypeInfo(string)], pointer(40));
RegRegisterMethod(TIdNetscapeCookie,'GetServerCookie',TypeInfo(_T11),[TypeInfo(string)],  getVMTProcAddr('TIdNetscapeCookie','GetServerCookie',40));


//RegRegisterMethod(TIdNetscapeCookie,'GetClientCookie',TypeInfo(_T12),[TypeInfo(string)], pointer(44));
RegRegisterMethod(TIdNetscapeCookie,'GetClientCookie',TypeInfo(_T12),[TypeInfo(string)],  getVMTProcAddr('TIdNetscapeCookie','GetClientCookie',44));


//RegRegisterMethod(TIdNetscapeCookie,'LoadProperties',TypeInfo(_T13),[TypeInfo(TStringList)], pointer(48));
RegRegisterMethod(TIdNetscapeCookie,'LoadProperties',TypeInfo(_T13),[TypeInfo(TStringList)],  getVMTProcAddr('TIdNetscapeCookie','LoadProperties',48));


//RegRegisterMethod(TIdNetscapeCookie,'IsValidCookie',TypeInfo(_T14),[TypeInfo(string),TypeInfo(Boolean)], pointer(52));
RegRegisterMethod(TIdNetscapeCookie,'IsValidCookie',TypeInfo(_T14),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TIdNetscapeCookie','IsValidCookie',52));


RegRegisterMethod(TIdServerCookie,'AddAttribute',TypeInfo(_T15),[
TypeInfo(string),
TypeInfo(string)],Addr(TIdServerCookie.AddAttribute));

RegRegisterMethod(TIdServerCookies,'Add',TypeInfo(_T16),[TypeInfo(TIdServerCookie)],Addr(TIdServerCookies.Add));

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
