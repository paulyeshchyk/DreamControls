{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit treeinsp_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcdreamlib,
  Windows,
  Classes,
  Graphics,
  Controls,
  Forms,
  menus,
  Buttons,
  ExtCtrls,
  ComCtrls,
  dcdsgnstuff,
  typinfo,
  Grids,
  dcstdctl,
  dcpalet,
  oinspect,
  dctree,
  dctslite,
  dcdtree,
  dctsrc,
  dcgen,
  dccommon,
  dcsystem,
  dcconsts,
  treeinsp;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure  of object;

_T1 = _T0;

_T2 = function (p0 : TTreeSource): TTreeInspForm of object;

{_T3 = procedure (p0 : TComponent;
const p1 : string;
p2 : TTreeSourceClass) of object;}

{_T4 = function (p0 : TComponent;
const p1 : string;
p2 : TTreeSourceClass): TTreeInspForm of object;}

_T5 = procedure (p0 : TObject) of object;

_T6 = _T5;

_T7 = _T5;

_T8 = _T5;

_T9 = _T5;

_T10 = procedure (p0 : TObject;
p1 : TTreeNode) of object;

_T11 = procedure (p0 : TObject;
var p1 : Word;
p2 : TShiftState) of object;

_T12 = _T5;

_T13 = _T5;

_T14 = procedure (p0 : TObject;
var p1 : TCloseAction) of object;

_T15 = procedure (p0 : TObject;
var p1 : Char) of object;

_T16 = _T5;

procedure __RegisterProps;
begin
end;

function __DC__Gettreeinsp__TreeInspForm(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(treeinsp.TreeInspForm);
end;

procedure __DC__Settreeinsp__TreeInspForm(Instance : TObject; Params : PVariantArgList);
begin
TObject(treeinsp.TreeInspForm):=(VarToObject(OleVariant(Params^[0])));
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('TreeInspForm',__DC__Gettreeinsp__TreeInspForm,__DC__Settreeinsp__TreeInspForm));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..2] of TClass = (
TDCModalTreeEdit,
TModalCollectEdit,
TTreeInspForm
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..2] of string = (
'ShowIDEInspector'
,'InitializeIdeInspector'
,'EditTreeSource'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),NoParams,Addr(ShowIDEInspector),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),NoParams,Addr(InitializeIdeInspector),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(TTreeSource),TypeInfo(TTreeInspForm)],Addr(EditTreeSource),cRegister);

RegRegisterMethod(TTreeInspForm,'RefrButClick',TypeInfo(_T5),[
TypeInfo(TObject)],Addr(TTreeInspForm.RefrButClick));

RegRegisterMethod(TTreeInspForm,'UpButClick',TypeInfo(_T6),[
TypeInfo(TObject)],Addr(TTreeInspForm.UpButClick));

RegRegisterMethod(TTreeInspForm,'NewButClick',TypeInfo(_T7),[
TypeInfo(TObject)],Addr(TTreeInspForm.NewButClick));

RegRegisterMethod(TTreeInspForm,'NewSubButtonClick',TypeInfo(_T8),[
TypeInfo(TObject)],Addr(TTreeInspForm.NewSubButtonClick));

RegRegisterMethod(TTreeInspForm,'DeleteButtonClick',TypeInfo(_T9),[
TypeInfo(TObject)],Addr(TTreeInspForm.DeleteButtonClick));

RegRegisterMethod(TTreeInspForm,'TreeViewSelectionChanged',TypeInfo(_T10),[
TypeInfo(TObject),
TypeInfo(TTreeNode)],Addr(TTreeInspForm.TreeViewSelectionChanged));

RegRegisterMethod(TTreeInspForm,'TreeViewKeyDown',TypeInfo(_T11),[
TypeInfo(TObject),
TypeInfo(Word),
TypeInfo(TShiftState)],Addr(TTreeInspForm.TreeViewKeyDown));

RegRegisterMethod(TTreeInspForm,'FormCreate',TypeInfo(_T12),[
TypeInfo(TObject)],Addr(TTreeInspForm.FormCreate));

RegRegisterMethod(TTreeInspForm,'FormShow',TypeInfo(_T13),[
TypeInfo(TObject)],Addr(TTreeInspForm.FormShow));

RegRegisterMethod(TTreeInspForm,'FormClose',TypeInfo(_T14),[
TypeInfo(TObject),
TypeInfo(TCloseAction)],Addr(TTreeInspForm.FormClose));

RegRegisterMethod(TTreeInspForm,'FormKeyPress',TypeInfo(_T15),[
TypeInfo(TObject),
TypeInfo(Char)],Addr(TTreeInspForm.FormKeyPress));

RegRegisterMethod(TTreeInspForm,'TabControl1Change',TypeInfo(_T16),[
TypeInfo(TObject)],Addr(TTreeInspForm.TabControl1Change));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'_ModalEdit',mtProc,TypeInfo(_T3),[
TypeInfo(TComponent),
TypeInfo(string),
TypeInfo(TTreeSourceClass)],Addr(_ModalEdit),cRegister)}

{RegisterProc(nil,'GetEditForm',mtProc,TypeInfo(_T4),[
TypeInfo(TComponent),
TypeInfo(string),
TypeInfo(TTreeSourceClass),TypeInfo(TTreeInspForm)],Addr(GetEditForm),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
