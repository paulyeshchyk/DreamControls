{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit dcgraphfunc_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  Types,
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  Controls,
  Classes,
  CommCtrl,
  Graphics,
  StdCtrls,
  FontMan,
  DCGraphFunc;
function ConvertTRectToVariant(var R : TRect) : OleVariant;
function ConvertVariantToTRect(const V : OleVariant) : TRect;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TRect__Wrapper = class(TDCRecordWrapper)
private
fR : TRect;
public
function GetRecordPtr : pointer; override;
published
procedure setLeft(const val : Longint);
function getLeft : Longint;
property Left : Longint read getLeft write setLeft;
procedure setTop(const val : Longint);
function getTop : Longint;
property Top : Longint read getTop write setTop;
procedure setRight(const val : Longint);
function getRight : Longint;
property Right : Longint read getRight write setRight;
procedure setBottom(const val : Longint);
function getBottom : Longint;
property Bottom : Longint read getBottom write setBottom;
end;
type
_T0 = procedure (p0 : TCanvas;
const p1 : IDispatch) of object;

_T1 = procedure (p0 : TCanvas;
const p1 : IDispatch;
const p2 : IDispatch) of object;

_T2 = procedure (p0 : TBitmap;
p1 : Integer;
p2 : Integer) of object;

_T3 = function (p0 : TImageList;
p1 : TBitmap): Integer of object;

_T4 = procedure (p0 : TImageList;
p1 : Integer;
p2 : TCanvas;
const p3 : IDispatch;
p4 : TColorRef;
p5 : TColorRef;
p6 : Cardinal) of object;

_T5 = function : Integer of object;

_T6 = _T5;

_T7 = procedure (p0 : hDC;
const p1 : IDispatch;
p2 : Boolean) of object;

_T8 = procedure (p0 : TCanvas;
p1 : Boolean;
const p2 : IDispatch;
p3 : Boolean) of object;

_T9 = procedure (p0 : TCanvas;
const p1 : IDispatch;
p2 : TCheckBoxState;
p3 : Boolean;
p4 : Boolean;
p5 : Boolean) of object;

_T10 = procedure (p0 : TBitmap;
p1 : Integer;
p2 : Integer;
p3 : TCheckBoxState;
p4 : Boolean;
p5 : Boolean) of object;

_T11 = procedure (p0 : TBitmap;
p1 : Integer;
p2 : Integer;
p3 : Boolean;
p4 : Integer) of object;

_T12 = procedure (p0 : TCanvas;
const p1 : IDispatch;
p2 : Boolean;
p3 : Integer) of object;

_T13 = procedure (p0 : TCanvas;
const p1 : IDispatch;
p2 : Integer;
p3 : Integer;
const p4 : String) of object;

_T14 = procedure (p0 : TCanvas;
p1 : TImageList;
p2 : Integer;
p3 : Integer;
p4 : Integer;
p5 : Integer) of object;

_T15 = procedure (p0 : TCanvas;
const p1 : IDispatch;
p2 : TBitmap;
const p3 : IDispatch;
p4 : TColor) of object;

_T16 = procedure (p0 : TCanvas;
const p1 : IDispatch;
p2 : TBitmap) of object;

_T17 = _T13;

_T18 = function (p0 : TCanvas;
const p1 : String): Integer of object;

_T19 = procedure (p0 : TCanvas;
const p1 : IDispatch;
const p2 : String;
p3 : Integer) of object;

_T20 = procedure (p0 : TFont) of object;

function __TRect__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRect__Wrapper.setLeft(const val : Longint);
begin
TRect(GetRecordPtr^).Left := val;
end;
function __TRect__Wrapper.getLeft : Longint;
begin
result := TRect(GetRecordPtr^).Left;
end;
procedure __TRect__Wrapper.setTop(const val : Longint);
begin
TRect(GetRecordPtr^).Top := val;
end;
function __TRect__Wrapper.getTop : Longint;
begin
result := TRect(GetRecordPtr^).Top;
end;
procedure __TRect__Wrapper.setRight(const val : Longint);
begin
TRect(GetRecordPtr^).Right := val;
end;
function __TRect__Wrapper.getRight : Longint;
begin
result := TRect(GetRecordPtr^).Right;
end;
procedure __TRect__Wrapper.setBottom(const val : Longint);
begin
TRect(GetRecordPtr^).Bottom := val;
end;
function __TRect__Wrapper.getBottom : Longint;
begin
result := TRect(GetRecordPtr^).Bottom;
end;
procedure ____DCDrawEmptyRect__Wrapper(p0 : TCanvas;
const p1 : IDispatch);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
DCDrawEmptyRect(p0,__p1^);
end;

procedure ____DCFillExcludeRect__Wrapper(p0 : TCanvas;
const p1 : IDispatch;
const p2 : IDispatch);
var
__p1 : ^TRect;
__i1 : IDispatch;
__p2 : ^TRect;
__i2 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
if p2 = nil then exit;
__p2 := (p2 as IDCRecordWrapper).GetRecordPtr;
DCFillExcludeRect(p0,__p1^,__p2^);
end;

procedure ____DCImageList_DrawCentered__Wrapper(p0 : TImageList;
p1 : Integer;
p2 : TCanvas;
const p3 : IDispatch;
p4 : TColorRef;
p5 : TColorRef;
p6 : Cardinal);
var
__p3 : ^TRect;
__i3 : IDispatch;
begin
if p3 = nil then exit;
__p3 := (p3 as IDCRecordWrapper).GetRecordPtr;
DCImageList_DrawCentered(p0,p1,p2,__p3^,p4,p5,p6);
end;

procedure ____DCDrawEdge__Wrapper(p0 : hDC;
const p1 : IDispatch;
p2 : Boolean);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
DCDrawEdge(p0,__p1^,p2);
end;

procedure ____DCDrawArrow__Wrapper(p0 : TCanvas;
p1 : Boolean;
const p2 : IDispatch;
p3 : Boolean);
var
__p2 : ^TRect;
__i2 : IDispatch;
begin
if p2 = nil then exit;
__p2 := (p2 as IDCRecordWrapper).GetRecordPtr;
DCDrawArrow(p0,p1,__p2^,p3);
end;

procedure ____DCDrawCheckBox__Wrapper(p0 : TCanvas;
const p1 : IDispatch;
p2 : TCheckBoxState;
p3 : Boolean;
p4 : Boolean;
p5 : Boolean);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
DCDrawCheckBox(p0,__p1^,p2,p3,p4,p5);
end;

procedure ____DCDrawMenuItemImage__Wrapper(p0 : TCanvas;
const p1 : IDispatch;
p2 : Boolean;
p3 : Integer);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
DCDrawMenuItemImage(p0,__p1^,p2,p3);
end;

procedure ____DCSmartTextOut__Wrapper(p0 : TCanvas;
const p1 : IDispatch;
p2 : Integer;
p3 : Integer;
const p4 : String);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
DCSmartTextOut(p0,__p1^,p2,p3,p4);
end;

procedure ____DCBrushCopy__Wrapper(p0 : TCanvas;
const p1 : IDispatch;
p2 : TBitmap;
const p3 : IDispatch;
p4 : TColor);
var
__p1 : ^TRect;
__i1 : IDispatch;
__p3 : ^TRect;
__i3 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
if p3 = nil then exit;
__p3 := (p3 as IDCRecordWrapper).GetRecordPtr;
DCBrushCopy(p0,__p1^,p2,__p3^,p4);
end;

procedure ____DCStretchDraw__Wrapper(p0 : TCanvas;
const p1 : IDispatch;
p2 : TBitmap);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
DCStretchDraw(p0,__p1^,p2);
end;

procedure ____DCDrawHighlightedText__Wrapper(p0 : TCanvas;
const p1 : IDispatch;
p2 : Integer;
p3 : Integer;
const p4 : String);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
DCDrawHighlightedText(p0,__p1^,p2,p3,p4);
end;

procedure ____DCDrawDisabledText__Wrapper(p0 : TCanvas;
const p1 : IDispatch;
const p2 : String;
p3 : Integer);
var
__p1 : ^TRect;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
DCDrawDisabledText(p0,__p1^,p2,p3);
end;


type __TRect__Wrapper__ = class(__TRect__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRect__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRectToVariant(var R : TRect) : OleVariant;
var
__rw : __TRect__Wrapper__;
begin
__rw := __TRect__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRect(const V : OleVariant) : TRect;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRect((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..4] of string = (
'ht_BoldText'
,'ht_ItalicText'
,'ht_UnderlinedText'
,'ht_StrikeOut'
,'sDCThreeDots'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,ht_BoldText));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,ht_ItalicText));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,ht_UnderlinedText));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,ht_StrikeOut));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,sDCThreeDots));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..20] of string = (
'DCDrawEmptyRect'
,'DCFillExcludeRect'
,'DCFitBitmap'
,'DCAddImageInList'
,'DCImageList_DrawCentered'
,'DCDefaultCheckWidth'
,'DCDefaultCheckHeight'
,'DCDrawEdge'
,'DCDrawArrow'
,'DCDrawCheckBox'
,'DCDrawCheckBoxEx'
,'DCGetMenuItemImageMask'
,'DCDrawMenuItemImage'
,'DCSmartTextOut'
,'DCDrawImageWithBackground'
,'DCBrushCopy'
,'DCStretchDraw'
,'DCDrawHighlightedText'
,'DCGetHighlightedTextWidth'
,'DCDrawDisabledText'
,'DCDecreaseFontSize'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TCanvas),
TypeInfo(IDispatch)],Addr(____DCDrawEmptyRect__Wrapper),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(IDispatch)],Addr(____DCFillExcludeRect__Wrapper),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(TBitmap),
TypeInfo(Integer),
TypeInfo(Integer)],Addr(DCFitBitmap),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),[
TypeInfo(TImageList),
TypeInfo(TBitmap),TypeInfo(Integer)],Addr(DCAddImageInList),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T4),[
TypeInfo(TImageList),
TypeInfo(Integer),
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(TColorRef),
TypeInfo(TColorRef),
TypeInfo(Cardinal)],Addr(____DCImageList_DrawCentered__Wrapper),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T5),[TypeInfo(Integer)],Addr(DCDefaultCheckWidth),cRegister);

RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T6),[TypeInfo(Integer)],Addr(DCDefaultCheckHeight),cRegister);

RegisterProc(nil,MethodNames[7],mtProc,TypeInfo(_T7),[
TypeInfo(hDC),
TypeInfo(IDispatch),
TypeInfo(Boolean)],Addr(____DCDrawEdge__Wrapper),cRegister);

RegisterProc(nil,MethodNames[8],mtProc,TypeInfo(_T8),[
TypeInfo(TCanvas),
TypeInfo(Boolean),
TypeInfo(IDispatch),
TypeInfo(Boolean)],Addr(____DCDrawArrow__Wrapper),cRegister);

RegisterProc(nil,MethodNames[9],mtProc,TypeInfo(_T9),[
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(TCheckBoxState),
TypeInfo(Boolean),
TypeInfo(Boolean),
TypeInfo(Boolean)],Addr(____DCDrawCheckBox__Wrapper),cRegister);

RegisterProc(nil,MethodNames[10],mtProc,TypeInfo(_T10),[
TypeInfo(TBitmap),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(TCheckBoxState),
TypeInfo(Boolean),
TypeInfo(Boolean)],Addr(DCDrawCheckBoxEx),cRegister);

RegisterProc(nil,MethodNames[11],mtProc,TypeInfo(_T11),[
TypeInfo(TBitmap),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Boolean),
TypeInfo(Integer)],Addr(DCGetMenuItemImageMask),cRegister);

RegisterProc(nil,MethodNames[12],mtProc,TypeInfo(_T12),[
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(Boolean),
TypeInfo(Integer)],Addr(____DCDrawMenuItemImage__Wrapper),cRegister);

RegisterProc(nil,MethodNames[13],mtProc,TypeInfo(_T13),[
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(String)],Addr(____DCSmartTextOut__Wrapper),cRegister);

RegisterProc(nil,MethodNames[14],mtProc,TypeInfo(_T14),[
TypeInfo(TCanvas),
TypeInfo(TImageList),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Integer)],Addr(DCDrawImageWithBackground),cRegister);

RegisterProc(nil,MethodNames[15],mtProc,TypeInfo(_T15),[
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(TBitmap),
TypeInfo(IDispatch),
TypeInfo(TColor)],Addr(____DCBrushCopy__Wrapper),cRegister);

RegisterProc(nil,MethodNames[16],mtProc,TypeInfo(_T16),[
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(TBitmap)],Addr(____DCStretchDraw__Wrapper),cRegister);

RegisterProc(nil,MethodNames[17],mtProc,TypeInfo(_T17),[
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(String)],Addr(____DCDrawHighlightedText__Wrapper),cRegister);

RegisterProc(nil,MethodNames[18],mtProc,TypeInfo(_T18),[
TypeInfo(TCanvas),
TypeInfo(String),TypeInfo(Integer)],Addr(DCGetHighlightedTextWidth),cRegister);

RegisterProc(nil,MethodNames[19],mtProc,TypeInfo(_T19),[
TypeInfo(TCanvas),
TypeInfo(IDispatch),
TypeInfo(String),
TypeInfo(Integer)],Addr(____DCDrawDisabledText__Wrapper),cRegister);

RegisterProc(nil,MethodNames[20],mtProc,TypeInfo(_T20),[
TypeInfo(TFont)],Addr(DCDecreaseFontSize),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
