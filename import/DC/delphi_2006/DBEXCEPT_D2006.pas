{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit DBEXCEPT_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  SysUtils,
  Classes,
  Graphics,
  Forms,
  Controls,
  Buttons,
  StdCtrls,
  ExtCtrls,
  DB,
  DBTables,
  DbExcept;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : TObject) of object;

_T1 = _T0;

_T2 = _T0;

_T3 = _T0;

_T4 = _T0;

_T5 = _T0;

_T6 = procedure  of object;

_T7 = function (p0 : EDbEngineError): TModalResult of object;

function __DC__GetTDbEngineErrorDlg__DbException(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDbEngineErrorDlg(Instance).DbException);
end;

procedure __DC__SetTDbEngineErrorDlg__DbException(Instance : TObject; Params : PVariantArgList);
begin
TDbEngineErrorDlg(Instance).DbException:=EDbEngineError(VarToObject(OleVariant(Params^[0])));
end;

procedure __RegisterProps;
begin
RegisterProperty(TDbEngineErrorDlg,'DbException',__DC__GetTDbEngineErrorDlg__DbException,__DC__SetTDbEngineErrorDlg__DbException);
end;

function __DC__GetDbExcept__DbEngineErrorDlg(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(DbExcept.DbEngineErrorDlg);
end;

procedure __DC__SetDbExcept__DbEngineErrorDlg(Instance : TObject; Params : PVariantArgList);
begin
TObject(DbExcept.DbEngineErrorDlg):=(VarToObject(OleVariant(Params^[0])));
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('DbEngineErrorDlg',__DC__GetDbExcept__DbEngineErrorDlg,__DC__SetDbExcept__DbEngineErrorDlg));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..0] of TClass = (
TDbEngineErrorDlg
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegRegisterMethod(TDbEngineErrorDlg,'FormShow',TypeInfo(_T0),[
TypeInfo(TObject)],Addr(TDbEngineErrorDlg.FormShow));

RegRegisterMethod(TDbEngineErrorDlg,'BackClick',TypeInfo(_T1),[
TypeInfo(TObject)],Addr(TDbEngineErrorDlg.BackClick));

RegRegisterMethod(TDbEngineErrorDlg,'NextClick',TypeInfo(_T2),[
TypeInfo(TObject)],Addr(TDbEngineErrorDlg.NextClick));

RegRegisterMethod(TDbEngineErrorDlg,'FormCreate',TypeInfo(_T3),[
TypeInfo(TObject)],Addr(TDbEngineErrorDlg.FormCreate));

RegRegisterMethod(TDbEngineErrorDlg,'DetailsBtnClick',TypeInfo(_T4),[
TypeInfo(TObject)],Addr(TDbEngineErrorDlg.DetailsBtnClick));

RegRegisterMethod(TDbEngineErrorDlg,'FormDestroy',TypeInfo(_T5),[
TypeInfo(TObject)],Addr(TDbEngineErrorDlg.FormDestroy));

RegRegisterMethod(TDbEngineErrorDlg,'HookExceptions',TypeInfo(_T6),NoParams,Addr(TDbEngineErrorDlg.HookExceptions));

RegRegisterMethod(TDbEngineErrorDlg,'ShowException',TypeInfo(_T7),[
TypeInfo(EDbEngineError),TypeInfo(TModalResult)],Addr(TDbEngineErrorDlg.ShowException));

end;
initialization
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
end.
