{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit WEBCOMP_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  HTTPApp,
  HTTPProd,
  Masks,
  WebComp;
function ConvertTGUIDToVariant(var R : TGUID) : OleVariant;
function ConvertVariantToTGUID(const V : OleVariant) : TGUID;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TGUID__Wrapper = class(TDCRecordWrapper)
private
fR : TGUID;
public
function GetRecordPtr : pointer; override;
published
procedure setD1(const val : LongWord);
function getD1 : LongWord;
property D1 : LongWord read getD1 write setD1;
procedure setD2(const val : Word);
function getD2 : Word;
property D2 : Word read getD2 write setD2;
procedure setD3(const val : Word);
function getD3 : Word;
property D3 : Word read getD3 write setD3;
end;
type __TLayoutWebContent__ = class(TLayoutWebContent);
type __TWebComponentList__ = class(TWebComponentList);
type __TWebComponentsEditorHelper__ = class(TWebComponentsEditorHelper);
type
{_T1 = procedure (const p0 : Array of TComponentClass) of object;}

{_T2 = procedure (p0 : TEnumWebComponentsProc;
p1 : Pointer) of object;}

{_T3 = function (p0 : TClass): TObject of object;}

_T4 = function (const p0 : string): string of object;

_T5 = procedure (p0 : TComponent;
p1 : TComponent) of object;

_T6 = function (p0 : TComponent): Boolean of object;

_T7 = procedure  of object;

_T8 = function (const p0 : IDispatch;
out p1): HResult of object;

_T9 = function (const p0 : string;
p1 : TLayoutAttributes): string of object;

_T10 = _T9;

_T11 = function (const p0 : string;
const p1 : string;
p2 : TLayoutAttributes): string of object;

_T12 = _T9;

_T13 = procedure (p0 : TLayout) of object;

_T14 = function (p0 : TComponent): TComponent of object;

_T15 = _T8;

_T16 = procedure (p0 : TComponent) of object;

_T17 = _T7;

_T18 = _T7;

_T19 = function : Boolean of object;

_T20 = _T16;

_T21 = procedure (p0 : TComponent;
p1 : Integer) of object;

_T22 = _T7;

_T23 = function (p0 : TComponent): Integer of object;

_T24 = _T16;

_T25 = _T8;

{_T26 = function (p0 : TComponent;
p1 : TComponent;
p2 : TClass): Boolean of object;}

_T27 = _T19;

_T28 = _T7;

_T29 = _T7;

{_T30 = procedure (p0 : TComponent;
p1 : TNotifyEvent) of object;}

_T31 = _T19;

_T32 = _T19;

_T33 = _T7;

_T34 = function : TObject of object;

_T35 = function : TWebComponentList of object;

_T36 = procedure (p0 : TWebComponentList) of object;

_T37 = _T34;

_T38 = _T35;

_T39 = _T36;

{_T40 = procedure (p0 : TGetChildProc;
p1 : TComponent) of object;}

_T41 = _T21;

{_T42 = procedure (p0 : TComponent;
p1 : TGetComponentListEvent;
p2 : TSetComponentListEvent) of object;}

_T43 = procedure (p0 : TWebContentFlags) of object;

function __TGUID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TGUID__Wrapper.setD1(const val : LongWord);
begin
TGUID(GetRecordPtr^).D1 := val;
end;
function __TGUID__Wrapper.getD1 : LongWord;
begin
result := TGUID(GetRecordPtr^).D1;
end;
procedure __TGUID__Wrapper.setD2(const val : Word);
begin
TGUID(GetRecordPtr^).D2 := val;
end;
function __TGUID__Wrapper.getD2 : Word;
begin
result := TGUID(GetRecordPtr^).D2;
end;
procedure __TGUID__Wrapper.setD3(const val : Word);
begin
TGUID(GetRecordPtr^).D3 := val;
end;
function __TGUID__Wrapper.getD3 : Word;
begin
result := TGUID(GetRecordPtr^).D3;
end;
function __TLayoutWebContent__QueryInterface__Wrapper(__Instance : TLayoutWebContent;
const p0 : IDispatch;
out p1): HResult;
var
__p0 : ^TGUID;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := __TLayoutWebContent__(__Instance).QueryInterface(__p0^,p1);
end;

function __TWebComponentList__QueryInterface__Wrapper(__Instance : TWebComponentList;
const p0 : IDispatch;
out p1): HResult;
var
__p0 : ^TGUID;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := __TWebComponentList__(__Instance).QueryInterface(__p0^,p1);
end;

function __TWebComponentsEditorHelper__QueryInterface__Wrapper(__Instance : TWebComponentsEditorHelper;
const p0 : IDispatch;
out p1): HResult;
var
__p0 : ^TGUID;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := __TWebComponentsEditorHelper__(__Instance).QueryInterface(__p0^,p1);
end;


type __TGUID__Wrapper__ = class(__TGUID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TGUID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTGUIDToVariant(var R : TGUID) : OleVariant;
var
__rw : __TGUID__Wrapper__;
begin
__rw := __TGUID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTGUID(const V : OleVariant) : TGUID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TGUID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
function __DC__GetTLayoutWebContent__ParentLayout(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TLayoutWebContent(Instance).ParentLayout);
end;

function __DC__GetTWebComponentList__Count(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TWebComponentList(Instance).Count;
end;

function __DC__GetTWebComponentList__WebComponents(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebComponentList(Instance).WebComponents[OleVariant(Params^[0])]);
end;

function __DC__GetTWebComponentList__ParentComponent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebComponentList(Instance).ParentComponent);
end;

function __DC__GetTWebContainedComponentHelper__WebParent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebContainedComponentHelper(Instance).WebParent);
end;

function __DC__GetTWebContainedComponentHelper__ContainerList(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebContainedComponentHelper(Instance).ContainerList);
end;

function __DC__GetTWebContainerComponentHelper__WebComponents(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebContainerComponentHelper(Instance).WebComponents);
end;

function __DC__GetTWebContainerComponentHelper__DefaultWebComponents(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TWebContainerComponentHelper(Instance).DefaultWebComponents);
end;

procedure __DC__SetTWebContainerComponentHelper__DefaultWebComponents(Instance : TObject; Params : PVariantArgList);
begin
TWebContainerComponentHelper(Instance).DefaultWebComponents:=TWebComponentList(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTWebContentOptions__Flags(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
  tmp : TWebContentFlags;
begin
tmp := TWebContentOptions(Instance).Flags;
result := VarFromSet(tmp, sizeof(tmp));
end;

procedure __RegisterProps;
begin
RegisterProperty(TLayoutWebContent,'ParentLayout',__DC__GetTLayoutWebContent__ParentLayout,nil);
RegisterProperty(TWebComponentList,'Count',__DC__GetTWebComponentList__Count,nil);
RegisterIndexedProperty(TWebComponentList,'WebComponents',1,True,__DC__GetTWebComponentList__WebComponents,nil);
RegisterProperty(TWebComponentList,'ParentComponent',__DC__GetTWebComponentList__ParentComponent,nil);
RegisterProperty(TWebContainedComponentHelper,'WebParent',__DC__GetTWebContainedComponentHelper__WebParent,nil);
RegisterProperty(TWebContainedComponentHelper,'ContainerList',__DC__GetTWebContainedComponentHelper__ContainerList,nil);
RegisterProperty(TWebContainerComponentHelper,'WebComponents',__DC__GetTWebContainerComponentHelper__WebComponents,nil);
RegisterProperty(TWebContainerComponentHelper,'DefaultWebComponents',__DC__GetTWebContainerComponentHelper__DefaultWebComponents,__DC__SetTWebContainerComponentHelper__DefaultWebComponents);
RegisterProperty(TWebContentOptions,'Flags',__DC__GetTWebContentOptions__Flags,nil);
end;

const __ConstNames0 : array[0..6] of string = (
'coNoScript'
,'coLocalPaths'
,'coNoExecuteScript'
,'lposLeft'
,'lposRight'
,'lposAbove'
,'lposBelow'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,coNoScript));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,coLocalPaths));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,coNoExecuteScript));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,lposLeft));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,lposRight));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,lposAbove));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,lposBelow));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..12] of TClass = (
TLayout,
TLayoutAttributes,
TLayoutWebContent,
TWebComponentClassDescription,
TWebComponentContainer,
TWebComponentList,
TWebComponentsEditorHelper,
TWebContainedComponent,
TWebContainedComponentHelper,
TWebContainedContainerComponent,
TWebContainerComponent,
TWebContainerComponentHelper,
TWebContentOptions
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..2] of string = (
'QualifyFileName'
,'ValidateWebParent'
,'DesigningComponent'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T4),[
TypeInfo(string),TypeInfo(string)],Addr(QualifyFileName),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T5),[
TypeInfo(TComponent),
TypeInfo(TComponent)],Addr(ValidateWebParent),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T6),[
TypeInfo(TComponent),TypeInfo(Boolean)],Addr(DesigningComponent),cRegister);

RegisterProc(TLayoutAttributes,'Create',mtConstructor,TypeInfo(_T7),NoParams,Addr(TLayoutAttributes.Create),cRegister);

//RegisterProc(TLayoutWebContent,'QueryInterface',mtMethod,TypeInfo(_T8),[TypeInfo(IDispatch),TypeInfoUntyped,TypeInfo(HResult)], pointer(0),cRegister);
RegisterProc(TLayoutWebContent,'QueryInterface',mtMethod,TypeInfo(_T8),[TypeInfo(IDispatch),TypeInfoUntyped,TypeInfo(HResult)],  getVMTProcAddr('TLayoutWebContent','QueryInterface',0),cRegister);


//RegRegisterMethod(TLayoutWebContent,'ImplLayoutButton',TypeInfo(_T9),[TypeInfo(string),TypeInfo(TLayoutAttributes),TypeInfo(string)], pointer(4));
RegRegisterMethod(TLayoutWebContent,'ImplLayoutButton',TypeInfo(_T9),[TypeInfo(string),TypeInfo(TLayoutAttributes),TypeInfo(string)],  getVMTProcAddr('TLayoutWebContent','ImplLayoutButton',4));


//RegRegisterMethod(TLayoutWebContent,'ImplLayoutField',TypeInfo(_T10),[TypeInfo(string),TypeInfo(TLayoutAttributes),TypeInfo(string)], pointer(8));
RegRegisterMethod(TLayoutWebContent,'ImplLayoutField',TypeInfo(_T10),[TypeInfo(string),TypeInfo(TLayoutAttributes),TypeInfo(string)],  getVMTProcAddr('TLayoutWebContent','ImplLayoutField',8));


//RegRegisterMethod(TLayoutWebContent,'ImplLayoutLabelAndField',TypeInfo(_T11),[TypeInfo(string),TypeInfo(string),TypeInfo(TLayoutAttributes),TypeInfo(string)], pointer(12));
RegRegisterMethod(TLayoutWebContent,'ImplLayoutLabelAndField',TypeInfo(_T11),[TypeInfo(string),TypeInfo(string),TypeInfo(TLayoutAttributes),TypeInfo(string)],  getVMTProcAddr('TLayoutWebContent','ImplLayoutLabelAndField',12));


//RegRegisterMethod(TLayoutWebContent,'ImplLayoutTable',TypeInfo(_T12),[TypeInfo(string),TypeInfo(TLayoutAttributes),TypeInfo(string)], pointer(16));
RegRegisterMethod(TLayoutWebContent,'ImplLayoutTable',TypeInfo(_T12),[TypeInfo(string),TypeInfo(TLayoutAttributes),TypeInfo(string)],  getVMTProcAddr('TLayoutWebContent','ImplLayoutTable',16));


RegisterProc(TLayoutWebContent,'Create',mtConstructor,TypeInfo(_T13),[
TypeInfo(TLayout)],Addr(TLayoutWebContent.Create),cRegister);

//RegRegisterMethod(TWebComponentList,'NewComponent',TypeInfo(_T14),[TypeInfo(TComponent),TypeInfo(TComponent)], pointer(12));
RegRegisterMethod(TWebComponentList,'NewComponent',TypeInfo(_T14),[TypeInfo(TComponent),TypeInfo(TComponent)],  getVMTProcAddr('TWebComponentList','NewComponent',12));


RegisterProc(TWebComponentList,'QueryInterface',mtMethod,TypeInfo(_T15),[
TypeInfo(IDispatch),
TypeInfoUntyped,TypeInfo(HResult)], pointer(16),cRegister);

RegisterProc(TWebComponentList,'Create',mtConstructor,TypeInfo(_T16),[
TypeInfo(TComponent)],Addr(TWebComponentList.Create),cRegister);

RegRegisterMethod(TWebComponentList,'LockNotify',TypeInfo(_T17),NoParams,Addr(TWebComponentList.LockNotify));

RegRegisterMethod(TWebComponentList,'UnlockNotify',TypeInfo(_T18),NoParams,Addr(TWebComponentList.UnlockNotify));

RegRegisterMethod(TWebComponentList,'NotifyLocked',TypeInfo(_T19),[TypeInfo(Boolean)],Addr(TWebComponentList.NotifyLocked));

RegRegisterMethod(TWebComponentList,'Add',TypeInfo(_T20),[
TypeInfo(TComponent)],Addr(TWebComponentList.Add));

RegRegisterMethod(TWebComponentList,'SetComponentIndex',TypeInfo(_T21),[
TypeInfo(TComponent),
TypeInfo(Integer)],Addr(TWebComponentList.SetComponentIndex));

RegRegisterMethod(TWebComponentList,'Clear',TypeInfo(_T22),NoParams,Addr(TWebComponentList.Clear));

RegRegisterMethod(TWebComponentList,'IndexOf',TypeInfo(_T23),[
TypeInfo(TComponent),TypeInfo(Integer)],Addr(TWebComponentList.IndexOf));

RegRegisterMethod(TWebComponentList,'Remove',TypeInfo(_T24),[
TypeInfo(TComponent)],Addr(TWebComponentList.Remove));

RegisterProc(TWebComponentsEditorHelper,'QueryInterface',mtMethod,TypeInfo(_T25),[
TypeInfo(IDispatch),
TypeInfoUntyped,TypeInfo(HResult)], pointer(0),cRegister);

//RegRegisterMethod(TWebContainedComponent,'IsDefaultField',TypeInfo(_T27),[TypeInfo(Boolean)], pointer(48));
RegRegisterMethod(TWebContainedComponent,'IsDefaultField',TypeInfo(_T27),[TypeInfo(Boolean)],  getVMTProcAddr('TWebContainedComponent','IsDefaultField',48));


//RegRegisterMethod(TWebContainedComponent,'ParentChanged',TypeInfo(_T28),NoParams, pointer(52));
RegRegisterMethod(TWebContainedComponent,'ParentChanged',TypeInfo(_T28),NoParams,  getVMTProcAddr('TWebContainedComponent','ParentChanged',52));


//RegRegisterMethod(TWebContainedComponentHelper,'ParentChanged',TypeInfo(_T29),NoParams, pointer(0));
RegRegisterMethod(TWebContainedComponentHelper,'ParentChanged',TypeInfo(_T29),NoParams,  getVMTProcAddr('TWebContainedComponentHelper','ParentChanged',0));


RegRegisterMethod(TWebContainedComponentHelper,'IsDefaultField',TypeInfo(_T31),[TypeInfo(Boolean)],Addr(TWebContainedComponentHelper.IsDefaultField));

//RegRegisterMethod(TWebContainedContainerComponent,'IsDefaultField',TypeInfo(_T32),[TypeInfo(Boolean)], pointer(48));
RegRegisterMethod(TWebContainedContainerComponent,'IsDefaultField',TypeInfo(_T32),[TypeInfo(Boolean)],  getVMTProcAddr('TWebContainedContainerComponent','IsDefaultField',48));


//RegRegisterMethod(TWebContainedContainerComponent,'ParentChanged',TypeInfo(_T33),NoParams, pointer(52));
RegRegisterMethod(TWebContainedContainerComponent,'ParentChanged',TypeInfo(_T33),NoParams,  getVMTProcAddr('TWebContainedContainerComponent','ParentChanged',52));


//RegRegisterMethod(TWebContainedContainerComponent,'ImplGetDefaultComponentList',TypeInfo(_T34),[TypeInfo(TObject)], pointer(56));
RegRegisterMethod(TWebContainedContainerComponent,'ImplGetDefaultComponentList',TypeInfo(_T34),[TypeInfo(TObject)],  getVMTProcAddr('TWebContainedContainerComponent','ImplGetDefaultComponentList',56));


//RegRegisterMethod(TWebContainedContainerComponent,'GetDefaultWebComponents',TypeInfo(_T35),[TypeInfo(TWebComponentList)], pointer(60));
RegRegisterMethod(TWebContainedContainerComponent,'GetDefaultWebComponents',TypeInfo(_T35),[TypeInfo(TWebComponentList)],  getVMTProcAddr('TWebContainedContainerComponent','GetDefaultWebComponents',60));


//RegRegisterMethod(TWebContainedContainerComponent,'SetDefaultWebComponents',TypeInfo(_T36),[TypeInfo(TWebComponentList)], pointer(64));
RegRegisterMethod(TWebContainedContainerComponent,'SetDefaultWebComponents',TypeInfo(_T36),[TypeInfo(TWebComponentList)],  getVMTProcAddr('TWebContainedContainerComponent','SetDefaultWebComponents',64));


//RegRegisterMethod(TWebContainerComponent,'ImplGetDefaultComponentList',TypeInfo(_T37),[TypeInfo(TObject)], pointer(48));
RegRegisterMethod(TWebContainerComponent,'ImplGetDefaultComponentList',TypeInfo(_T37),[TypeInfo(TObject)],  getVMTProcAddr('TWebContainerComponent','ImplGetDefaultComponentList',48));


//RegRegisterMethod(TWebContainerComponent,'GetDefaultWebComponents',TypeInfo(_T38),[TypeInfo(TWebComponentList)], pointer(52));
RegRegisterMethod(TWebContainerComponent,'GetDefaultWebComponents',TypeInfo(_T38),[TypeInfo(TWebComponentList)],  getVMTProcAddr('TWebContainerComponent','GetDefaultWebComponents',52));


//RegRegisterMethod(TWebContainerComponent,'SetDefaultWebComponents',TypeInfo(_T39),[TypeInfo(TWebComponentList)], pointer(56));
RegRegisterMethod(TWebContainerComponent,'SetDefaultWebComponents',TypeInfo(_T39),[TypeInfo(TWebComponentList)],  getVMTProcAddr('TWebContainerComponent','SetDefaultWebComponents',56));


RegRegisterMethod(TWebContainerComponentHelper,'SetChildOrder',TypeInfo(_T41),[
TypeInfo(TComponent),
TypeInfo(Integer)],Addr(TWebContainerComponentHelper.SetChildOrder));

RegisterProc(TWebContentOptions,'Create',mtConstructor,TypeInfo(_T43),[
TypeInfo(TWebContentFlags)],Addr(TWebContentOptions.Create),cRegister);

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'UnRegisterWebComponents',mtProc,TypeInfo(_T1),[
ArrayInfo(TypeInfo(TComponentClass))],Addr(UnRegisterWebComponents),cRegister)}

{RegisterProc(nil,'EnumRegisteredWebComponents',mtProc,TypeInfo(_T2),[
TypeInfo(TEnumWebComponentsProc),
TypeInfoPointer],Addr(EnumRegisteredWebComponents),cRegister)}

{RegisterProc(nil,'FindWebComponentEditorHelper',mtProc,TypeInfo(_T3),[
TypeInfo(TClass),TypeInfo(TObject)],Addr(FindWebComponentEditorHelper),cRegister)}

{RegRegisterMethod(TWebComponentsEditorHelper,'ImplCanAddClassHelper',TypeInfo(_T26),[
TypeInfo(TComponent),
TypeInfo(TComponent),
TypeInfo(TClass),TypeInfo(Boolean)], pointer(4))}

{RegisterProc(TWebContainedComponentHelper,'Create',mtConstructor,TypeInfo(_T30),[
TypeInfo(TComponent),
TypeInfo(TNotifyEvent)],Addr(TWebContainedComponentHelper.Create),cRegister)}

{RegRegisterMethod(TWebContainerComponentHelper,'GetChildren',TypeInfo(_T40),[
TypeInfo(TGetChildProc),
TypeInfo(TComponent)],Addr(TWebContainerComponentHelper.GetChildren))}

{RegisterProc(TWebContainerComponentHelper,'Create',mtConstructor,TypeInfo(_T42),[
TypeInfo(TComponent),
TypeInfo(TGetComponentListEvent),
TypeInfo(TSetComponentListEvent)],Addr(TWebContainerComponentHelper.Create),cRegister)}

RegisterEvent(TypeInfo(TEnumWebComponentsProc),[
TypeInfo(TWebComponentClassDescription),
TypeInfoPointer]);

RegisterEvent(TypeInfo(TGetComponentListEvent),[
TypeInfo(TObject),
TypeInfo(TWebComponentList)]);

RegisterEvent(TypeInfo(TSetComponentListEvent),[
TypeInfo(TObject),
TypeInfo(TWebComponentList)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
