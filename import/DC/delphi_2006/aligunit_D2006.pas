{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit aligunit_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcconsts,
  consts,
  Windows,
  Messages,
  SysUtils,
  Classes,
  Graphics,
  Controls,
  Forms,
  Dialogs,
  Buttons,
  Menus,
  dcdreamlib,
  dcGen,
  dccommon,
  AligUnit;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure  of object;

_T1 = function : TAlignForm of object;

_T2 = procedure (p0 : TObject) of object;

_T3 = _T2;

_T4 = _T2;

_T5 = _T2;

_T6 = _T2;

procedure __RegisterProps;
begin
end;

function __DC__GetAligUnit__AlignForm(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(AligUnit.AlignForm);
end;

procedure __DC__SetAligUnit__AlignForm(Instance : TObject; Params : PVariantArgList);
begin
TObject(AligUnit.AlignForm):=(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetAligUnit__AlignPalMessageAnswer(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(AligUnit.AlignPalMessageAnswer);
end;

procedure __DC__SetAligUnit__AlignPalMessageAnswer(Instance : TObject; Params : PVariantArgList);
begin
TObject(AligUnit.AlignPalMessageAnswer):=(VarToObject(OleVariant(Params^[0])));
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('AlignForm',__DC__GetAligUnit__AlignForm,__DC__SetAligUnit__AlignForm));
__RegisteredVars.Add(RegisterVar('AlignPalMessageAnswer',__DC__GetAligUnit__AlignPalMessageAnswer,__DC__SetAligUnit__AlignPalMessageAnswer));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..0] of TClass = (
TAlignForm
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..1] of string = (
'Register'
,'GetAlignForm'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),NoParams,Addr(Register),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[TypeInfo(TAlignForm)],Addr(GetAlignForm),cRegister);

RegRegisterMethod(TAlignForm,'Hide1Click',TypeInfo(_T2),[
TypeInfo(TObject)],Addr(TAlignForm.Hide1Click));

RegRegisterMethod(TAlignForm,'FormCreate',TypeInfo(_T3),[
TypeInfo(TObject)],Addr(TAlignForm.FormCreate));

RegRegisterMethod(TAlignForm,'PopupMenu1Popup',TypeInfo(_T4),[
TypeInfo(TObject)],Addr(TAlignForm.PopupMenu1Popup));

RegRegisterMethod(TAlignForm,'Stayontop1Click',TypeInfo(_T5),[
TypeInfo(TObject)],Addr(TAlignForm.Stayontop1Click));

RegRegisterMethod(TAlignForm,'FormDestroy',TypeInfo(_T6),[
TypeInfo(TObject)],Addr(TAlignForm.FormDestroy));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
