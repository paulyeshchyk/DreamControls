{*******************************************************}
{                                                       }
{ Import unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

Unit Keyboard_imp;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Vcl.Touch.KeyboardTypes, System.Generics.Collections, Vcl.Controls, System.Classes, Winapi.Messages, Winapi.Windows,
  Vcl.ExtCtrls, Vcl.Graphics, System.Types, Vcl.Touch.Keyboard;





implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TRect__Wrapper = class(TDCRecordWrapper)
private
fR : TRect;
public
function GetRecordPtr : pointer; override;
published
procedure setLeft(const val : Longint);
function getLeft : Longint;
property Left : Longint read getLeft write setLeft;
procedure setTop(const val : Longint);
function getTop : Longint;
property Top : Longint read getTop write setTop;
procedure setRight(const val : Longint);
function getRight : Longint;
property Right : Longint read getRight write setRight;
procedure setBottom(const val : Longint);
function getBottom : Longint;
property Bottom : Longint read getBottom write setBottom;
end;
type __TKeyCaption__Wrapper = class(TDCRecordWrapper)
private
fR : TKeyCaptions.TKeyCaption;
public
function GetRecordPtr : pointer; override;
published
procedure setName(const val : AnsiString);
function getName : AnsiString;
property Name : AnsiString read getName write setName;
procedure setValue(const val : AnsiString);
function getValue : AnsiString;
property Value : AnsiString read getValue write setValue;
procedure setLanguage(const val : AnsiString);
function getLanguage : AnsiString;
property Language : AnsiString read getLanguage write setLanguage;
end;
type __TChangeState__Wrapper = class(TDCRecordWrapper)
private
//fR : TCustomTouchKeyboard.TChangeState;
public
function GetRecordPtr : pointer; override;
published
procedure setButton(const val : TCustomKeyboardButton);
function getButton : TCustomKeyboardButton;
property Button : TCustomKeyboardButton read getButton write setButton;
procedure setState(const val : TCustomKeyboardButton.TDrawState);
function getState : TCustomKeyboardButton.TDrawState;
property State : TCustomKeyboardButton.TDrawState read getState write setState;
end;
type
_T0 = procedure (const Keys : Array of TKeyData) of object;

_T1 = procedure (const Key : TKeyData;
KeyState : TKeyState) of object;

_T2 = procedure (const AKey : TVirtualKey) of object;

_T3 = procedure (Canvas : TCustomCanvas) of object;

_T4 = procedure  of object;

{_T5 = procedure (const ResourceName : string) of object;}

_T6 = procedure (Stream : TStream) of object;

_T9 = _T4;

function __TRect__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRect__Wrapper.setLeft(const val : Longint);
begin
TRect(GetRecordPtr^).Left := val;
end;
function __TRect__Wrapper.getLeft : Longint;
begin
result := TRect(GetRecordPtr^).Left;
end;
procedure __TRect__Wrapper.setTop(const val : Longint);
begin
TRect(GetRecordPtr^).Top := val;
end;
function __TRect__Wrapper.getTop : Longint;
begin
result := TRect(GetRecordPtr^).Top;
end;
procedure __TRect__Wrapper.setRight(const val : Longint);
begin
TRect(GetRecordPtr^).Right := val;
end;
function __TRect__Wrapper.getRight : Longint;
begin
result := TRect(GetRecordPtr^).Right;
end;
procedure __TRect__Wrapper.setBottom(const val : Longint);
begin
TRect(GetRecordPtr^).Bottom := val;
end;
function __TRect__Wrapper.getBottom : Longint;
begin
result := TRect(GetRecordPtr^).Bottom;
end;
function __TKeyCaption__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TKeyCaption__Wrapper.setName(const val : AnsiString);
begin
TKeyCaptions.TKeyCaption(GetRecordPtr^).Name := val;
end;
function __TKeyCaption__Wrapper.getName : AnsiString;
begin
result := TKeyCaptions.TKeyCaption(GetRecordPtr^).Name;
end;
procedure __TKeyCaption__Wrapper.setValue(const val : AnsiString);
begin
TKeyCaptions.TKeyCaption(GetRecordPtr^).Value := val;
end;
function __TKeyCaption__Wrapper.getValue : AnsiString;
begin
result := TKeyCaptions.TKeyCaption(GetRecordPtr^).Value;
end;
procedure __TKeyCaption__Wrapper.setLanguage(const val : AnsiString);
begin
TKeyCaptions.TKeyCaption(GetRecordPtr^).Language := val;
end;
function __TKeyCaption__Wrapper.getLanguage : AnsiString;
begin
result := TKeyCaptions.TKeyCaption(GetRecordPtr^).Language;
end;
function __TChangeState__Wrapper.GetRecordPtr : pointer;
begin
//result := @fR;
end;
procedure __TChangeState__Wrapper.setButton(const val : TCustomKeyboardButton);
begin
//  TCustomTouchKeyboard.TChangeState(GetRecordPtr^).Button := val;
end;
function __TChangeState__Wrapper.getButton : TCustomKeyboardButton;
begin
//result := TCustomTouchKeyboard.TChangeState(GetRecordPtr^).Button;
end;
procedure __TChangeState__Wrapper.setState(const val : TCustomKeyboardButton.TDrawState);
begin
//TChangeState(GetRecordPtr^).State := val;
end;
function __TChangeState__Wrapper.getState : TCustomKeyboardButton.TDrawState;
begin
//result := TChangeState(GetRecordPtr^).State;
end;
function _TChangeState_ : IDispatch;
begin
  result := __TChangeState__Wrapper.Create;
end;
function _TKeyCaption_ : IDispatch;
begin
  result := __TKeyCaption__Wrapper.Create;
end;
procedure __TCustomKeyboardButton__Paint__Wrapper(__Instance : TObject; cArgs : integer; pArgs : PArgList);
begin
case cArgs of
0:
begin
TCustomKeyboardButton(__Instance).Paint;
end;
1:
begin
TCustomKeyboardButton(__Instance).Paint(TCustomCanvas(VarToObject(OleVariant(pargs^[0]))));
end;
end
end;


type __TChangeState__Wrapper__ = class(__TChangeState__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TChangeState__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;

type __TKeyCaption__Wrapper__ = class(__TKeyCaption__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TKeyCaption__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;

type __TRect__Wrapper__ = class(__TRect__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRect__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;

function __DC__GetTCustomKeyboardButton__BottomMargin(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomKeyboardButton(Instance).BottomMargin;
end;

function __DC__GetTCustomKeyboardButton__BoundsRect(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
__wrapper : __TRect__Wrapper;
begin
__wrapper := __TRect__Wrapper.Create;
__wrapper.fR := TCustomKeyboardButton(Instance).BoundsRect;
result := IUnknown(__wrapper) as IDispatch;
end;

procedure __DC__SetTCustomKeyboardButton__BoundsRect(Instance : TObject; Params : PVariantArgList);
var
__idisp:IDispatch;
__iwrapper:IDCRecordWrapper;
begin
__idisp:=DCVarToInterface(OleVariant(Params^[0]));
if __idisp=nil then exit;
__idisp.QueryInterface(IDCRecordWrapper, __iwrapper);
TCustomKeyboardButton(Instance).BoundsRect:=TRect(__iwrapper.GetRecordPtr^);
end;

function __DC__GetTCustomKeyboardButton__ClientRect(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
__wrapper : __TRect__Wrapper;
begin
__wrapper := __TRect__Wrapper.Create;
__wrapper.fR := TCustomKeyboardButton(Instance).ClientRect;
result := IUnknown(__wrapper) as IDispatch;
end;

function __DC__GetTCustomKeyboardButton__Down(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomKeyboardButton(Instance).Down;
end;

procedure __DC__SetTCustomKeyboardButton__Down(Instance : TObject; Params : PVariantArgList);
begin
TCustomKeyboardButton(Instance).Down:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomKeyboardButton__Height(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomKeyboardButton(Instance).Height;
end;

function __DC__GetTCustomKeyboardButton__ID(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomKeyboardButton(Instance).ID;
end;

procedure __DC__SetTCustomKeyboardButton__ID(Instance : TObject; Params : PVariantArgList);
begin
TCustomKeyboardButton(Instance).ID:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomKeyboardButton__Key(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
//result := VarFromObject(TCustomKeyboardButton(Instance).Key);
end;

function __DC__GetTCustomKeyboardButton__KeyImage(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
//result := VarFromObject(TCustomKeyboardButton(Instance).KeyImage);
end;

procedure __DC__SetTCustomKeyboardButton__KeyImage(Instance : TObject; Params : PVariantArgList);
begin
//TCustomKeyboardButton(Instance).KeyImage:=TKeyImage(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomKeyboardButton__Left(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomKeyboardButton(Instance).Left;
end;

function __DC__GetTCustomKeyboardButton__Modifier(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomKeyboardButton(Instance).Modifier;
end;

procedure __DC__SetTCustomKeyboardButton__Modifier(Instance : TObject; Params : PVariantArgList);
begin
TCustomKeyboardButton(Instance).Modifier:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomKeyboardButton__Parent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomKeyboardButton(Instance).Parent);
end;

function __DC__GetTCustomKeyboardButton__State(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomKeyboardButton(Instance).State;
end;

function __DC__GetTCustomKeyboardButton__Top(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomKeyboardButton(Instance).Top;
end;

function __DC__GetTCustomKeyboardButton__TopMargin(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomKeyboardButton(Instance).TopMargin;
end;

function __DC__GetTCustomKeyboardButton__Width(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomKeyboardButton(Instance).Width;
end;

function __DC__GetTCustomTouchKeyboard__CaptionOverrides(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomTouchKeyboard(Instance).CaptionOverrides);
end;

function __DC__GetTCustomTouchKeyboard__DrawingStyle(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomTouchKeyboard(Instance).DrawingStyle;
end;

procedure __DC__SetTCustomTouchKeyboard__DrawingStyle(Instance : TObject; Params : PVariantArgList);
begin
TCustomTouchKeyboard(Instance).DrawingStyle:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomTouchKeyboard__GradientEnd(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomTouchKeyboard(Instance).GradientEnd;
end;

procedure __DC__SetTCustomTouchKeyboard__GradientEnd(Instance : TObject; Params : PVariantArgList);
begin
TCustomTouchKeyboard(Instance).GradientEnd:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomTouchKeyboard__GradientStart(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomTouchKeyboard(Instance).GradientStart;
end;

procedure __DC__SetTCustomTouchKeyboard__GradientStart(Instance : TObject; Params : PVariantArgList);
begin
TCustomTouchKeyboard(Instance).GradientStart:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomTouchKeyboard__Layout(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := (String(TCustomTouchKeyboard(Instance).Layout));
end;

procedure __DC__SetTCustomTouchKeyboard__Layout(Instance : TObject; Params : PVariantArgList);
begin
TCustomTouchKeyboard(Instance).Layout:=TKeyboardLayout(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomTouchKeyboard__RepeatRate(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomTouchKeyboard(Instance).RepeatRate;
end;

procedure __DC__SetTCustomTouchKeyboard__RepeatRate(Instance : TObject; Params : PVariantArgList);
begin
TCustomTouchKeyboard(Instance).RepeatRate:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomTouchKeyboard__RepeatDelay(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomTouchKeyboard(Instance).RepeatDelay;
end;

procedure __DC__SetTCustomTouchKeyboard__RepeatDelay(Instance : TObject; Params : PVariantArgList);
begin
TCustomTouchKeyboard(Instance).RepeatDelay:=OleVariant(Params^[0]);
end;

function __DC__GetTKeyboardLayouts__Count(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TKeyboardLayouts(Instance).Count;
end;

function __DC__GetTKeyCaptions__Count(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TKeyCaptions(Instance).Count;
end;

function __DC__GetTKeyCaptions__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
__wrapper : __TKeyCaption__Wrapper;
begin
__wrapper := __TKeyCaption__Wrapper.Create;
__wrapper.fR := TKeyCaptions(Instance).Items[OleVariant(Params^[0])];
result := IUnknown(__wrapper) as IDispatch;
end;

procedure __DC__SetTKeyCaptions__Items(Instance : TObject; Params : PVariantArgList);
var
__idisp:IDispatch;
__iwrapper:IDCRecordWrapper;
begin
__idisp:=DCVarToInterface(OleVariant(Params^[0]));
if __idisp=nil then exit;
__idisp.QueryInterface(IDCRecordWrapper, __iwrapper);
TKeyCaptions(Instance).Items[OleVariant(Params^[1])]:=TKeyCaptions.TKeyCaption(__iwrapper.GetRecordPtr^);
end;

procedure __RegisterProps;
begin
RegisterProperty(TCustomKeyboardButton,'BottomMargin',__DC__GetTCustomKeyboardButton__BottomMargin,nil);
RegisterProperty(TCustomKeyboardButton,'BoundsRect',__DC__GetTCustomKeyboardButton__BoundsRect,__DC__SetTCustomKeyboardButton__BoundsRect);
RegisterProperty(TCustomKeyboardButton,'ClientRect',__DC__GetTCustomKeyboardButton__ClientRect,nil);
RegisterProperty(TCustomKeyboardButton,'Down',__DC__GetTCustomKeyboardButton__Down,__DC__SetTCustomKeyboardButton__Down);
RegisterProperty(TCustomKeyboardButton,'Height',__DC__GetTCustomKeyboardButton__Height,nil);
RegisterProperty(TCustomKeyboardButton,'ID',__DC__GetTCustomKeyboardButton__ID,__DC__SetTCustomKeyboardButton__ID);
RegisterProperty(TCustomKeyboardButton,'Key',__DC__GetTCustomKeyboardButton__Key,nil);
RegisterProperty(TCustomKeyboardButton,'KeyImage',__DC__GetTCustomKeyboardButton__KeyImage,__DC__SetTCustomKeyboardButton__KeyImage);
RegisterProperty(TCustomKeyboardButton,'Left',__DC__GetTCustomKeyboardButton__Left,nil);
RegisterProperty(TCustomKeyboardButton,'Modifier',__DC__GetTCustomKeyboardButton__Modifier,__DC__SetTCustomKeyboardButton__Modifier);
RegisterProperty(TCustomKeyboardButton,'Parent',__DC__GetTCustomKeyboardButton__Parent,nil);
RegisterProperty(TCustomKeyboardButton,'State',__DC__GetTCustomKeyboardButton__State,nil);
RegisterProperty(TCustomKeyboardButton,'Top',__DC__GetTCustomKeyboardButton__Top,nil);
RegisterProperty(TCustomKeyboardButton,'TopMargin',__DC__GetTCustomKeyboardButton__TopMargin,nil);
RegisterProperty(TCustomKeyboardButton,'Width',__DC__GetTCustomKeyboardButton__Width,nil);
RegisterProperty(TCustomTouchKeyboard,'CaptionOverrides',__DC__GetTCustomTouchKeyboard__CaptionOverrides,nil);
RegisterProperty(TCustomTouchKeyboard,'DrawingStyle',__DC__GetTCustomTouchKeyboard__DrawingStyle,__DC__SetTCustomTouchKeyboard__DrawingStyle);
RegisterProperty(TCustomTouchKeyboard,'GradientEnd',__DC__GetTCustomTouchKeyboard__GradientEnd,__DC__SetTCustomTouchKeyboard__GradientEnd);
RegisterProperty(TCustomTouchKeyboard,'GradientStart',__DC__GetTCustomTouchKeyboard__GradientStart,__DC__SetTCustomTouchKeyboard__GradientStart);
RegisterProperty(TCustomTouchKeyboard,'Layout',__DC__GetTCustomTouchKeyboard__Layout,__DC__SetTCustomTouchKeyboard__Layout);
RegisterProperty(TCustomTouchKeyboard,'RepeatRate',__DC__GetTCustomTouchKeyboard__RepeatRate,__DC__SetTCustomTouchKeyboard__RepeatRate);
RegisterProperty(TCustomTouchKeyboard,'RepeatDelay',__DC__GetTCustomTouchKeyboard__RepeatDelay,__DC__SetTCustomTouchKeyboard__RepeatDelay);
RegisterProperty(TKeyboardLayouts,'Count',__DC__GetTKeyboardLayouts__Count,nil);
RegisterProperty(TKeyCaptions,'Count',__DC__GetTKeyCaptions__Count,nil);
RegisterIndexedProperty(TKeyCaptions,'Items',1,True,__DC__GetTKeyCaptions__Items,__DC__SetTKeyCaptions__Items);
end;

const __ConstNames0 : array[0..4] of string = (
'dsNormal'
,'dsPressed'
,'dsDisabled'
,'dsNormal'
,'dsGradient'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,dsNormal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,TCustomKeyboardButton.TDrawState.dsPressed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,TCustomKeyboardButton.TDrawState.dsDisabled));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,dsNormal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,dsGradient));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..6] of TClass = (
TButtonList,
//TChangeStates,
TCustomKeyboardButton,
TCustomTouchKeyboard,
TKeyboardButton,
TKeyboardLayouts,
TKeyCaptions,
TTouchKeyboard
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..3] of string = (
'TChangeState'
,'TKeyCaption'
,'SendKeys'
,'SendKey'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_TChangeState_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_TKeyCaption_)));
RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T0),[
ArrayInfo(TypeInfo(TKeyData))],Addr(SendKeys),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T1),[
TypeInfo(TKeyData),
TypeInfo(TKeyState)],Addr(SendKey),cRegister);

RegisterProc(TCustomKeyboardButton,'Create',mtConstructor,TypeInfo(_T2),[
TypeInfo(TVirtualKey)],Addr(TCustomKeyboardButton.Create),cRegister);

RegisterProc(TCustomKeyboardButton,'Paint',mtScriptMethod,TypeInfo(_T3),[
TypeInfo(TCustomCanvas)],Addr(__TCustomKeyboardButton__Paint__Wrapper),cRegister);

RegRegisterMethod(TCustomTouchKeyboard,'Redraw',TypeInfo(_T4),NoParams,Addr(TCustomTouchKeyboard.Redraw));

RegRegisterMethod(TKeyboardLayouts,'LoadFromStream',TypeInfo(_T6),[
TypeInfo(TStream)],Addr(TKeyboardLayouts.LoadFromStream));

RegRegisterMethod(TKeyCaptions,'Clear',TypeInfo(_T9),NoParams,Addr(TKeyCaptions.Clear));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegRegisterMethod(TKeyboardLayouts,'LoadFromResourceName',TypeInfo(_T5),[
TypeInfo(string)],Addr(TKeyboardLayouts.LoadFromResourceName))}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
