{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IDNNTPSERVER_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  IdAssignedNumbers,
  IdGlobal,
  IdTCPServer,
  IdNNTPServer;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (const p0 : string): TDateTime of object;

_T1 = _T0;

function __DC__GetTIdNNTPThread__CurrentArticle(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNNTPThread(Instance).CurrentArticle;
end;

function __DC__GetTIdNNTPThread__CurrentGroup(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNNTPThread(Instance).CurrentGroup;
end;

function __DC__GetTIdNNTPThread__ModeReader(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNNTPThread(Instance).ModeReader;
end;

function __DC__GetTIdNNTPThread__UserName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNNTPThread(Instance).UserName;
end;

function __DC__GetTIdNNTPThread__Password(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNNTPThread(Instance).Password;
end;

function __DC__GetTIdNNTPThread__Authenticator(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNNTPThread(Instance).Authenticator;
end;

function __DC__GetTIdNNTPThread__AuthParams(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNNTPThread(Instance).AuthParams;
end;

function __DC__GetTIdNNTPThread__Authenticated(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNNTPThread(Instance).Authenticated;
end;

function __DC__GetTIdNNTPThread__AuthType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TIdNNTPThread(Instance).AuthType;
end;

procedure __RegisterProps;
begin
RegisterProperty(TIdNNTPThread,'CurrentArticle',__DC__GetTIdNNTPThread__CurrentArticle,nil);
RegisterProperty(TIdNNTPThread,'CurrentGroup',__DC__GetTIdNNTPThread__CurrentGroup,nil);
RegisterProperty(TIdNNTPThread,'ModeReader',__DC__GetTIdNNTPThread__ModeReader,nil);
RegisterProperty(TIdNNTPThread,'UserName',__DC__GetTIdNNTPThread__UserName,nil);
RegisterProperty(TIdNNTPThread,'Password',__DC__GetTIdNNTPThread__Password,nil);
RegisterProperty(TIdNNTPThread,'Authenticator',__DC__GetTIdNNTPThread__Authenticator,nil);
RegisterProperty(TIdNNTPThread,'AuthParams',__DC__GetTIdNNTPThread__AuthParams,nil);
RegisterProperty(TIdNNTPThread,'Authenticated',__DC__GetTIdNNTPThread__Authenticated,nil);
RegisterProperty(TIdNNTPThread,'AuthType',__DC__GetTIdNNTPThread__AuthType,nil);
end;

const __ConstNames0 : array[0..2] of string = (
'atUserPass'
,'atSimple'
,'atGeneric'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,atUserPass));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,atSimple));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,atGeneric));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..1] of TClass = (
TIdNNTPServer,
TIdNNTPThread
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
procedure _mreg_0;
begin
RegisterProc(TIdNNTPServer,'NNTPTimeToTime',mtClassMethod,TypeInfo(_T0),[
TypeInfo(string),TypeInfo(TDateTime)],Addr(TIdNNTPServer.NNTPTimeToTime),cRegister);

RegisterProc(TIdNNTPServer,'NNTPDateTimeToDateTime',mtClassMethod,TypeInfo(_T1),[
TypeInfo(string),TypeInfo(TDateTime)],Addr(TIdNNTPServer.NNTPDateTimeToDateTime),cRegister);

end;
initialization
_mreg_0;
RegisterEvent(TypeInfo(TIdNNTPOnArticleByID),[
TypeInfo(TIdNNTPThread),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TIdNNTPOnArticleByNo),[
TypeInfo(TIdNNTPThread),
TypeInfo(Integer)]);

RegisterEvent(TypeInfo(TIdNNTPOnAuth),[
TypeInfo(TIdNNTPThread),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TIdNNTPOnAuthRequired),[
TypeInfo(TIdNNTPThread),
TypeInfo(string),
TypeInfo(string),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TIdNNTPOnCheckListGroup),[
TypeInfo(TIdNNTPThread),
TypeInfo(string),
TypeInfo(Boolean),
TypeInfo(Integer)]);

RegisterEvent(TypeInfo(TIdNNTPOnCheckMsgID),[
TypeInfo(TIdNNTPThread),
TypeInfo(string),
TypeInfo(Integer)]);

RegisterEvent(TypeInfo(TIdNNTPOnCheckMsgNo),[
TypeInfo(TIdNNTPThread),
TypeInfo(Integer),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TIdNNTPOnIHaveCheck),[
TypeInfo(TIdNNTPThread),
TypeInfo(string),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TIdNNTPOnListPattern),[
TypeInfo(TIdNNTPThread),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TIdNNTPOnMovePointer),[
TypeInfo(TIdNNTPThread),
TypeInfo(Integer),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TIdNNTPOnNewGroupsList),[
TypeInfo(TIdNNTPThread),
TypeInfo(TDateTime),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TIdNNTPOnNewNews),[
TypeInfo(TIdNNTPThread),
TypeInfo(string),
TypeInfo(TDateTime),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TIdNNTPOnPost),[
TypeInfo(TIdNNTPThread),
TypeInfo(Boolean),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TIdNNTPOnSelectGroup),[
TypeInfo(TIdNNTPThread),
TypeInfo(string),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TIdNNTPOnXHdr),[
TypeInfo(TIdNNTPThread),
TypeInfo(string),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TIdNNTPOnXOver),[
TypeInfo(TIdNNTPThread),
TypeInfo(Integer),
TypeInfo(Integer)]);

RegisterEvent(TypeInfo(TIdNNTPOnXPat),[
TypeInfo(TIdNNTPThread),
TypeInfo(string),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(string),
TypeInfo(string)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
