{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit TREEINTF_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  CommCtrl,
  ActiveX,
  ComObj,
  Messages,
  SysUtils,
  Classes,
  Graphics,
  Variants,
  Controls,
  Forms,
  Dialogs,
  ExtCtrls,
  ComCtrls,
  DesignMenus,
  TypInfo,
  Contnrs,
  IniFiles,
  Menus,
  ImgList,
  StructureViewAPI,
  TreeIntf;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TSprig__ = class(TSprig);
type
{_T0 = procedure (const p0 : TClass;
p1 : TSprigClass) of object;}

{_T1 = function (p0 : TClass): TSprigClass of object;}

{_T2 = procedure (const p0 : TClass;
p1 : TRootSprigClass) of object;}

{_T3 = function (p0 : TClass): TRootSprigClass of object;}

_T4 = function : TRootSprigList of object;

_T5 = procedure  of object;

_T6 = _T5;

_T7 = procedure (p0 : TPersistent;
p1 : TSprig) of object;

_T8 = procedure (p0 : TSprig) of object;

_T9 = function : Integer of object;

_T10 = procedure (p0 : TInformant) of object;

_T11 = _T5;

_T12 = _T5;

_T13 = _T5;

_T14 = _T10;

_T15 = _T10;

_T16 = function : Boolean of object;

_T17 = function : TCustomTreeView of object;

_T18 = _T5;

_T19 = _T5;

_T20 = procedure (p0 : TPersistent) of object;

_T21 = _T5;

_T22 = procedure (p0 : Boolean) of object;

{_T23 = function : IOTAStructureContext of object;}

_T24 = function (p0 : TEditAction): Boolean of object;

_T25 = function : TEditState of object;

{_T26 = function (p0 : TClass): Boolean of object;}

_T27 = _T5;

{_T28 = function (const p0 : IDesigner;
out p1 : TRootSprig): Boolean of object;}

{_T29 = procedure (const p0 : IDesigner;
p1 : Boolean) of object;}

{_T30 = procedure (const p0 : IDesigner;
p1 : Boolean) of object;}

{_T31 = procedure (const p0 : IDesigner;
p1 : TPersistent) of object;}

{_T32 = procedure (const p0 : IDesigner;
p1 : TPersistent) of object;}

{_T33 = procedure (const p0 : IDesigner) of object;}

_T34 = procedure (p0 : TRootSprig) of object;

_T35 = _T5;

_T36 = function : string of object;

_T37 = procedure (const p0 : Array of TPersistent;
p1 : Boolean) of object;

_T38 = _T5;

_T39 = _T5;

_T40 = function (p0 : TPersistent;
p1 : Boolean): TSprig of object;

{_T41 = function (const p0 : string;
p1 : TClass;
p2 : Boolean): TSprig of object;}

_T42 = function (const p0 : string;
p1 : Boolean): TSprig of object;

{_T43 = function (out p0 : IDesigner): Boolean of object;}

_T44 = function : TImageIndex of object;

_T45 = procedure (const p0 : TImageIndex) of object;

_T46 = _T44;

_T47 = _T5;

_T48 = _T5;

_T49 = _T5;

_T50 = function (p0 : Integer): string of object;

_T51 = _T20;

_T52 = _T5;

_T53 = _T16;

_T54 = _T16;

_T55 = _T16;

_T56 = _T16;

_T57 = function : TPersistent of object;

{_T58 = function : TClass of object;}

_T59 = function : TSprig of object;

_T60 = _T5;

{_T61 = function : IOTAStructureNode of object;}

_T62 = function (p0 : TCustomTreeView): TTreeNode of object;

_T63 = _T5;

_T64 = _T36;

_T65 = _T36;

_T66 = _T36;

{_T67 = procedure (const p0 : IMenuItems) of object;}

_T68 = _T16;

{_T69 = function : TClass of object;}

_T70 = function (p0 : TSprig): Boolean of object;

_T71 = _T70;

_T72 = _T70;

_T73 = _T70;

{_T74 = function (p0 : TSprigClass;
p1 : TClass): Boolean of object;}

{_T75 = function (p0 : TSprig;
p1 : TClass): Boolean of object;}

_T76 = function (p0 : TSprig): TSprig of object;

_T77 = _T40;

_T78 = _T42;

_T79 = function (p0 : TSprig): Integer of object;

_T80 = procedure (p0 : TSprig;
p1 : Integer) of object;

_T82 = _T5;

_T83 = function : TSprigDeleteStyle of object;

_T84 = _T16;

_T85 = function (p0 : Boolean): Boolean of object;

_T86 = _T85;

_T87 = _T16;

_T88 = _T9;

_T89 = procedure (p0 : Integer) of object;

_T90 = _T5;

_T91 = _T16;

_T92 = _T16;

_T93 = _T9;

_T94 = function (p0 : TBitmap): Boolean of object;

_T95 = _T70;

_T96 = _T36;

_T97 = _T9;

_T98 = _T5;

{_T99 = function (p0 : TComponentClass): TComponent of object;}

_T100 = _T40;

_T101 = _T36;

_T102 = _T5;

_T103 = _T5;

_T104 = _T5;

_T105 = _T8;

_T106 = _T8;

_T107 = function (p0 : TPersistent): TSprig of object;

{_T108 = procedure (const p0 : TGUIDArray;
const p1 : TSprigClass) of object;}

{_T109 = function (const p0 : TClass): Boolean of object;}

_T110 = _T8;

_T111 = _T5;

{_T112 = procedure (const p0 : TClass;
const p1 : TSprigClass) of object;}

{_T113 = function (const p0 : TClass): Integer of object;}

_T114 = _T5;

{_T115 = function (const p0 : TClass): TSprigClass of object;}

{_T116 = procedure (const p0 : TClass;
const p1 : TSprigClass) of object;}

_T117 = _T89;

procedure __TRootSprig__ItemsModified__Wrapper(__Instance : TObject; cArgs : integer; pArgs : PArgList);
begin
case cArgs of
0:
begin
TRootSprig(__Instance).ItemsModified;
end;
1:
begin
TRootSprig(__Instance).ItemsModified(OleVariant(pargs^[0]));
end;
end
end;

procedure __TSprig__SelectItems__Wrapper(__Instance : TSprig;
const p0 : Array of TPersistent;
p1 : Boolean);
begin
__TSprig__(__Instance).SelectItems(p0,p1);
end;

function __TSprig__FindItemByPath__Wrapper(__Instance : TObject; cArgs : integer; pArgs : PArgList) : OleVariant;
begin
case cArgs of
1:
begin
result := VarFromObject(__TSprig__(__Instance).FindItemByPath(OleVariant(pargs^[0])));
end;
2:
begin
result := VarFromObject(__TSprig__(__Instance).FindItemByPath(OleVariant(pargs^[1]),OleVariant(pargs^[0])));
end;
end
end;

function __TSprig__Find__Wrapper(__Instance : TSprig;
p0 : TPersistent;
p1 : Boolean): TSprig;
begin
result := TSprig(__Instance).Find(p0,p1);
end;

function __TSprig__FindPath__Wrapper(__Instance : TObject; cArgs : integer; pArgs : PArgList) : OleVariant;
begin
case cArgs of
1:
begin
result := VarFromObject(TSprig(__Instance).FindPath(OleVariant(pargs^[0])));
end;
2:
begin
result := VarFromObject(TSprig(__Instance).FindPath(OleVariant(pargs^[1]),OleVariant(pargs^[0])));
end;
end
end;

function __TSprig__SeekParent__Wrapper(__Instance : TSprig;
p0 : TPersistent;
p1 : Boolean): TSprig;
begin
result := TSprig(__Instance).SeekParent(p0,p1);
end;

function __DC__GetTDragSprigs__Sprigs(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDragSprigs(Instance).Sprigs[OleVariant(Params^[0])]);
end;

function __DC__GetTInformant__Destroying(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TInformant(Instance).Destroying;
end;

function __DC__GetTRootSprig__Repopulating(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TRootSprig(Instance).Repopulating;
end;

function __DC__GetTRootSprig__RepopulateNeeded(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TRootSprig(Instance).RepopulateNeeded;
end;

procedure __DC__SetTRootSprig__RepopulateNeeded(Instance : TObject; Params : PVariantArgList);
begin
TRootSprig(Instance).RepopulateNeeded:=OleVariant(Params^[0]);
end;

function __DC__GetTSprig__Invalid(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TSprig(Instance).Invalid;
end;

function __DC__GetTSprig__Item(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TSprig(Instance).Item);
end;

function __DC__GetTSprig__TreeNode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TSprig(Instance).TreeNode);
end;

function __DC__GetTSprig__Expanded(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TSprig(Instance).Expanded;
end;

procedure __DC__SetTSprig__Expanded(Instance : TObject; Params : PVariantArgList);
begin
TSprig(Instance).Expanded:=OleVariant(Params^[0]);
end;

function __DC__GetTSprig__ImageIndex(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TSprig(Instance).ImageIndex;
end;

procedure __DC__SetTSprig__ImageIndex(Instance : TObject; Params : PVariantArgList);
begin
TSprig(Instance).ImageIndex:=OleVariant(Params^[0]);
end;

function __DC__GetTSprig__StateIndex(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TSprig(Instance).StateIndex;
end;

function __DC__GetTSprig__AddTypes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TSprig(Instance).AddTypes[OleVariant(Params^[0])];
end;

function __DC__GetTSprig__Root(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TSprig(Instance).Root);
end;

function __DC__GetTSprig__Parent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TSprig(Instance).Parent);
end;

function __DC__GetTSprig__Items(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TSprig(Instance).Items[OleVariant(Params^[0])]);
end;

function __DC__GetTSprig__Index(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TSprig(Instance).Index;
end;

procedure __DC__SetTSprig__Index(Instance : TObject; Params : PVariantArgList);
begin
TSprig(Instance).Index:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterIndexedProperty(TDragSprigs,'Sprigs',1,False,__DC__GetTDragSprigs__Sprigs,nil);
RegisterProperty(TInformant,'Destroying',__DC__GetTInformant__Destroying,nil);
RegisterProperty(TRootSprig,'Repopulating',__DC__GetTRootSprig__Repopulating,nil);
RegisterProperty(TRootSprig,'RepopulateNeeded',__DC__GetTRootSprig__RepopulateNeeded,__DC__SetTRootSprig__RepopulateNeeded);
RegisterProperty(TSprig,'Invalid',__DC__GetTSprig__Invalid,nil);
RegisterProperty(TSprig,'Item',__DC__GetTSprig__Item,nil);
RegisterProperty(TSprig,'TreeNode',__DC__GetTSprig__TreeNode,nil);
RegisterProperty(TSprig,'Expanded',__DC__GetTSprig__Expanded,__DC__SetTSprig__Expanded);
RegisterProperty(TSprig,'ImageIndex',__DC__GetTSprig__ImageIndex,__DC__SetTSprig__ImageIndex);
RegisterProperty(TSprig,'StateIndex',__DC__GetTSprig__StateIndex,nil);
RegisterIndexedProperty(TSprig,'AddTypes',1,False,__DC__GetTSprig__AddTypes,nil);
RegisterProperty(TSprig,'Root',__DC__GetTSprig__Root,nil);
RegisterProperty(TSprig,'Parent',__DC__GetTSprig__Parent,nil);
RegisterIndexedProperty(TSprig,'Items',1,True,__DC__GetTSprig__Items,nil);
RegisterProperty(TSprig,'Index',__DC__GetTSprig__Index,__DC__SetTSprig__Index);
end;

function __DC__GetTreeIntf__GShowClassNameInTreeView(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TreeIntf.GShowClassNameInTreeView;
end;

procedure __DC__SetTreeIntf__GShowClassNameInTreeView(Instance : TObject; Params : PVariantArgList);
begin
TreeIntf.GShowClassNameInTreeView:=OleVariant(Params^[0]);
end;

function __DC__GetTreeIntf__GImageOffset(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TreeIntf.GImageOffset;
end;

procedure __DC__SetTreeIntf__GImageOffset(Instance : TObject; Params : PVariantArgList);
begin
TreeIntf.GImageOffset:=OleVariant(Params^[0]);
end;

function __DC__GetTreeIntf__GStateImageOffset(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TreeIntf.GStateImageOffset;
end;

procedure __DC__SetTreeIntf__GStateImageOffset(Instance : TObject; Params : PVariantArgList);
begin
TreeIntf.GStateImageOffset:=OleVariant(Params^[0]);
end;

function __DC__GetTreeIntf__GToolButtonImageOffset(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TreeIntf.GToolButtonImageOffset;
end;

procedure __DC__SetTreeIntf__GToolButtonImageOffset(Instance : TObject; Params : PVariantArgList);
begin
TreeIntf.GToolButtonImageOffset:=OleVariant(Params^[0]);
end;

function __DC__GetTreeIntf__GSprigClipboardFormat(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TreeIntf.GSprigClipboardFormat;
end;

procedure __DC__SetTreeIntf__GSprigClipboardFormat(Instance : TObject; Params : PVariantArgList);
begin
TreeIntf.GSprigClipboardFormat:=OleVariant(Params^[0]);
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('GShowClassNameInTreeView',__DC__GetTreeIntf__GShowClassNameInTreeView,__DC__SetTreeIntf__GShowClassNameInTreeView));
__RegisteredVars.Add(RegisterVar('GImageOffset',__DC__GetTreeIntf__GImageOffset,__DC__SetTreeIntf__GImageOffset));
__RegisteredVars.Add(RegisterVar('GStateImageOffset',__DC__GetTreeIntf__GStateImageOffset,__DC__SetTreeIntf__GStateImageOffset));
__RegisteredVars.Add(RegisterVar('GToolButtonImageOffset',__DC__GetTreeIntf__GToolButtonImageOffset,__DC__SetTreeIntf__GToolButtonImageOffset));
__RegisteredVars.Add(RegisterVar('GSprigClipboardFormat',__DC__GetTreeIntf__GSprigClipboardFormat,__DC__SetTreeIntf__GSprigClipboardFormat));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

const __ConstNames0 : array[0..18] of string = (
'dsNormal'
,'dsIgnore'
,'dsAbort'
,'dsCustom'
,'CFakeSprigImage'
,'CFakeCollectionSprigImage'
,'CPersistentSprigImage'
,'CCollectionSprigImage'
,'CComponentSprigImage'
,'CDataModuleSprigImage'
,'CControlSprigImage'
,'CUIControlSprigImage'
,'CUIContainerSprigImage'
,'CFormSprigImage'
,'CGhostedOffset'
,'CNoStateImage'
,'CCheckOutStateImage'
,'CCollectionName'
,'CSprigClipboardFormat'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,dsNormal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,dsIgnore));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,dsAbort));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,dsCustom));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,CFakeSprigImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,CFakeCollectionSprigImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,CPersistentSprigImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,CCollectionSprigImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,CComponentSprigImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,CDataModuleSprigImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,CControlSprigImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,CUIControlSprigImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,CUIContainerSprigImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,CFormSprigImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,CGhostedOffset));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,CNoStateImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,CCheckOutStateImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,CCollectionName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,CSprigClipboardFormat));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..20] of TClass = (
TAbstractCollectionSprig,
TAbstractSprig,
TCollectionItemSprig,
TCollectionSprig,
TComponentSprig,
TDragSprigs,
TInformant,
TPersistentSprig,
TPropertySprig,
TRootSprig,
TRootSprigList,
TRootSprigStructureContext,
TSprig,
TSprigIndex,
TSprigIntfType,
TSprigStructureNode,
TSprigTreeNode,
TSprigType,
TSprigTypeList,
TTransientCollectionSprig,
TTransientSprig
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..2] of string = (
'RootSprigList'
,'InitDesignNotification'
,'DoneDesignNotification'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T4),[TypeInfo(TRootSprigList)],Addr(RootSprigList),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T5),NoParams,Addr(InitDesignNotification),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T6),NoParams,Addr(DoneDesignNotification),cRegister);

RegisterProc(TComponentSprig,'Create',mtConstructor,TypeInfo(_T7),[
TypeInfo(TPersistent),
TypeInfo(TSprig)],Addr(TComponentSprig.Create),cRegister);

RegRegisterMethod(TDragSprigs,'Add',TypeInfo(_T8),[
TypeInfo(TSprig)],Addr(TDragSprigs.Add));

RegRegisterMethod(TDragSprigs,'Count',TypeInfo(_T9),[TypeInfo(Integer)],Addr(TDragSprigs.Count));

//RegRegisterMethod(TInformant,'Changed',TypeInfo(_T10),[TypeInfo(TInformant)], pointer(0));
RegRegisterMethod(TInformant,'Changed',TypeInfo(_T10),[TypeInfo(TInformant)],  getVMTProcAddr('TInformant','Changed',0));


RegRegisterMethod(TInformant,'DisableNotify',TypeInfo(_T11),NoParams,Addr(TInformant.DisableNotify));

RegRegisterMethod(TInformant,'EnableNotify',TypeInfo(_T12),NoParams,Addr(TInformant.EnableNotify));

RegRegisterMethod(TInformant,'Notification',TypeInfo(_T13),NoParams,Addr(TInformant.Notification));

RegRegisterMethod(TInformant,'Notify',TypeInfo(_T14),[
TypeInfo(TInformant)],Addr(TInformant.Notify));

RegRegisterMethod(TInformant,'Unnotify',TypeInfo(_T15),[
TypeInfo(TInformant)],Addr(TInformant.Unnotify));

RegRegisterMethod(TRootSprig,'Repopulate',TypeInfo(_T16),[TypeInfo(Boolean)],Addr(TRootSprig.Repopulate));

RegRegisterMethod(TRootSprig,'TreeView',TypeInfo(_T17),[TypeInfo(TCustomTreeView)],Addr(TRootSprig.TreeView));

RegRegisterMethod(TRootSprig,'RefreshTreeView',TypeInfo(_T18),NoParams,Addr(TRootSprig.RefreshTreeView));

RegRegisterMethod(TRootSprig,'StoreTreeState',TypeInfo(_T19),NoParams,Addr(TRootSprig.StoreTreeState));

RegRegisterMethod(TRootSprig,'ItemDeleted',TypeInfo(_T20),[
TypeInfo(TPersistent)],Addr(TRootSprig.ItemDeleted));

RegRegisterMethod(TRootSprig,'ItemInserted',TypeInfo(_T21),NoParams,Addr(TRootSprig.ItemInserted));

RegisterProc(TRootSprig,'ItemsModified',mtScriptMethod,TypeInfo(_T22),[
TypeInfo(Boolean)],Addr(__TRootSprig__ItemsModified__Wrapper),cRegister);

RegRegisterMethod(TRootSprig,'EditAction',TypeInfo(_T24),[
TypeInfo(TEditAction),TypeInfo(Boolean)],Addr(TRootSprig.EditAction));

RegRegisterMethod(TRootSprig,'GetEditState',TypeInfo(_T25),[TypeInfo(TEditState)],Addr(TRootSprig.GetEditState));

RegisterProc(TRootSprigList,'Create',mtConstructor,TypeInfo(_T27),NoParams,Addr(TRootSprigList.Create),cRegister);

RegisterProc(TRootSprigStructureContext,'Create',mtConstructor,TypeInfo(_T34),[
TypeInfo(TRootSprig)],Addr(TRootSprigStructureContext.Create),cRegister);

RegRegisterMethod(TRootSprigStructureContext,'ClearRootSprig',TypeInfo(_T35),NoParams,Addr(TRootSprigStructureContext.ClearRootSprig));

//RegRegisterMethod(TSprig,'UniqueName',TypeInfo(_T36),[TypeInfo(string)], pointer(4));
RegRegisterMethod(TSprig,'UniqueName',TypeInfo(_T36),[TypeInfo(string)],  getVMTProcAddr('TSprig','UniqueName',4));


//RegRegisterMethod(TSprig,'SelectItems',TypeInfo(_T37),[ArrayInfo(TypeInfo(TPersistent)),TypeInfo(Boolean)], pointer(8));
RegRegisterMethod(TSprig,'SelectItems',TypeInfo(_T37),[ArrayInfo(TypeInfo(TPersistent)),TypeInfo(Boolean)],  getVMTProcAddr('TSprig','SelectItems',8));


//RegRegisterMethod(TSprig,'RuntimeChange',TypeInfo(_T38),NoParams, pointer(12));
RegRegisterMethod(TSprig,'RuntimeChange',TypeInfo(_T38),NoParams,  getVMTProcAddr('TSprig','RuntimeChange',12));


//RegRegisterMethod(TSprig,'DesigntimeChange',TypeInfo(_T39),NoParams, pointer(16));
RegRegisterMethod(TSprig,'DesigntimeChange',TypeInfo(_T39),NoParams,  getVMTProcAddr('TSprig','DesigntimeChange',16));


//RegRegisterMethod(TSprig,'FindItem',TypeInfo(_T40),[TypeInfo(TPersistent),TypeInfo(Boolean),TypeInfo(TSprig)], pointer(20));
RegRegisterMethod(TSprig,'FindItem',TypeInfo(_T40),[TypeInfo(TPersistent),TypeInfo(Boolean),TypeInfo(TSprig)],  getVMTProcAddr('TSprig','FindItem',20));


RegisterProc(TSprig,'FindItemByPath',mtScriptMethod,TypeInfo(_T42),[
TypeInfo(string),
TypeInfo(Boolean),TypeInfo(TSprig)],Addr(__TSprig__FindItemByPath__Wrapper),cRegister);

//RegRegisterMethod(TSprig,'GetImageIndex',TypeInfo(_T44),[TypeInfo(TImageIndex)], pointer(36));
RegRegisterMethod(TSprig,'GetImageIndex',TypeInfo(_T44),[TypeInfo(TImageIndex)],  getVMTProcAddr('TSprig','GetImageIndex',36));


//RegRegisterMethod(TSprig,'SetImageIndex',TypeInfo(_T45),[TypeInfo(TImageIndex)], pointer(40));
RegRegisterMethod(TSprig,'SetImageIndex',TypeInfo(_T45),[TypeInfo(TImageIndex)],  getVMTProcAddr('TSprig','SetImageIndex',40));


//RegRegisterMethod(TSprig,'GetStateIndex',TypeInfo(_T46),[TypeInfo(TImageIndex)], pointer(44));
RegRegisterMethod(TSprig,'GetStateIndex',TypeInfo(_T46),[TypeInfo(TImageIndex)],  getVMTProcAddr('TSprig','GetStateIndex',44));


//RegRegisterMethod(TSprig,'BeginUpdate',TypeInfo(_T47),NoParams, pointer(48));
RegRegisterMethod(TSprig,'BeginUpdate',TypeInfo(_T47),NoParams,  getVMTProcAddr('TSprig','BeginUpdate',48));


//RegRegisterMethod(TSprig,'EnsureUpdate',TypeInfo(_T48),NoParams, pointer(52));
RegRegisterMethod(TSprig,'EnsureUpdate',TypeInfo(_T48),NoParams,  getVMTProcAddr('TSprig','EnsureUpdate',52));


//RegRegisterMethod(TSprig,'EndUpdate',TypeInfo(_T49),NoParams, pointer(56));
RegRegisterMethod(TSprig,'EndUpdate',TypeInfo(_T49),NoParams,  getVMTProcAddr('TSprig','EndUpdate',56));


//RegRegisterMethod(TSprig,'GetAddType',TypeInfo(_T50),[TypeInfo(Integer),TypeInfo(string)], pointer(60));
RegRegisterMethod(TSprig,'GetAddType',TypeInfo(_T50),[TypeInfo(Integer),TypeInfo(string)],  getVMTProcAddr('TSprig','GetAddType',60));


RegisterProc(TSprig,'Create',mtConstructor,TypeInfo(_T51),[
TypeInfo(TPersistent)], pointer(64),cRegister);

RegRegisterMethod(TSprig,'Invalidate',TypeInfo(_T52),NoParams,Addr(TSprig.Invalidate));

//RegRegisterMethod(TSprig,'Transient',TypeInfo(_T53),[TypeInfo(Boolean)], pointer(68));
RegRegisterMethod(TSprig,'Transient',TypeInfo(_T53),[TypeInfo(Boolean)],  getVMTProcAddr('TSprig','Transient',68));


//RegRegisterMethod(TSprig,'AnyProblems',TypeInfo(_T54),[TypeInfo(Boolean)], pointer(72));
RegRegisterMethod(TSprig,'AnyProblems',TypeInfo(_T54),[TypeInfo(Boolean)],  getVMTProcAddr('TSprig','AnyProblems',72));


//RegRegisterMethod(TSprig,'Hidden',TypeInfo(_T55),[TypeInfo(Boolean)], pointer(76));
RegRegisterMethod(TSprig,'Hidden',TypeInfo(_T55),[TypeInfo(Boolean)],  getVMTProcAddr('TSprig','Hidden',76));


//RegRegisterMethod(TSprig,'Ghosted',TypeInfo(_T56),[TypeInfo(Boolean)], pointer(80));
RegRegisterMethod(TSprig,'Ghosted',TypeInfo(_T56),[TypeInfo(Boolean)],  getVMTProcAddr('TSprig','Ghosted',80));


//RegRegisterMethod(TSprig,'FocusItem',TypeInfo(_T57),[TypeInfo(TPersistent)], pointer(84));
RegRegisterMethod(TSprig,'FocusItem',TypeInfo(_T57),[TypeInfo(TPersistent)],  getVMTProcAddr('TSprig','FocusItem',84));


//RegRegisterMethod(TSprig,'Owner',TypeInfo(_T59),[TypeInfo(TSprig)], pointer(92));
RegRegisterMethod(TSprig,'Owner',TypeInfo(_T59),[TypeInfo(TSprig)],  getVMTProcAddr('TSprig','Owner',92));


//RegRegisterMethod(TSprig,'VisualRefresh',TypeInfo(_T60),NoParams, pointer(96));
RegRegisterMethod(TSprig,'VisualRefresh',TypeInfo(_T60),NoParams,  getVMTProcAddr('TSprig','VisualRefresh',96));


//RegRegisterMethod(TSprig,'TreeNodeFor',TypeInfo(_T62),[TypeInfo(TCustomTreeView),TypeInfo(TTreeNode)], pointer(104));
RegRegisterMethod(TSprig,'TreeNodeFor',TypeInfo(_T62),[TypeInfo(TCustomTreeView),TypeInfo(TTreeNode)],  getVMTProcAddr('TSprig','TreeNodeFor',104));


RegRegisterMethod(TSprig,'ClearTreeNode',TypeInfo(_T63),NoParams,Addr(TSprig.ClearTreeNode));

//RegRegisterMethod(TSprig,'Name',TypeInfo(_T64),[TypeInfo(string)], pointer(108));
RegRegisterMethod(TSprig,'Name',TypeInfo(_T64),[TypeInfo(string)],  getVMTProcAddr('TSprig','Name',108));


//RegRegisterMethod(TSprig,'Caption',TypeInfo(_T65),[TypeInfo(string)], pointer(112));
RegRegisterMethod(TSprig,'Caption',TypeInfo(_T65),[TypeInfo(string)],  getVMTProcAddr('TSprig','Caption',112));


//RegRegisterMethod(TSprig,'Hint',TypeInfo(_T66),[TypeInfo(string)], pointer(116));
RegRegisterMethod(TSprig,'Hint',TypeInfo(_T66),[TypeInfo(string)],  getVMTProcAddr('TSprig','Hint',116));


//RegRegisterMethod(TSprig,'ShowRegisteredMenus',TypeInfo(_T68),[TypeInfo(Boolean)], pointer(124));
RegRegisterMethod(TSprig,'ShowRegisteredMenus',TypeInfo(_T68),[TypeInfo(Boolean)],  getVMTProcAddr('TSprig','ShowRegisteredMenus',124));


//RegRegisterMethod(TSprig,'DragOver',TypeInfo(_T70),[TypeInfo(TSprig),TypeInfo(Boolean)], pointer(128));
RegRegisterMethod(TSprig,'DragOver',TypeInfo(_T70),[TypeInfo(TSprig),TypeInfo(Boolean)],  getVMTProcAddr('TSprig','DragOver',128));


//RegRegisterMethod(TSprig,'DragOverTo',TypeInfo(_T71),[TypeInfo(TSprig),TypeInfo(Boolean)], pointer(132));
RegRegisterMethod(TSprig,'DragOverTo',TypeInfo(_T71),[TypeInfo(TSprig),TypeInfo(Boolean)],  getVMTProcAddr('TSprig','DragOverTo',132));


//RegRegisterMethod(TSprig,'DragDrop',TypeInfo(_T72),[TypeInfo(TSprig),TypeInfo(Boolean)], pointer(136));
RegRegisterMethod(TSprig,'DragDrop',TypeInfo(_T72),[TypeInfo(TSprig),TypeInfo(Boolean)],  getVMTProcAddr('TSprig','DragDrop',136));


//RegRegisterMethod(TSprig,'DragDropTo',TypeInfo(_T73),[TypeInfo(TSprig),TypeInfo(Boolean)], pointer(140));
RegRegisterMethod(TSprig,'DragDropTo',TypeInfo(_T73),[TypeInfo(TSprig),TypeInfo(Boolean)],  getVMTProcAddr('TSprig','DragDropTo',140));


RegRegisterMethod(TSprig,'Add',TypeInfo(_T76),[
TypeInfo(TSprig),TypeInfo(TSprig)],Addr(TSprig.Add));

RegRegisterMethod(TSprig,'Find',TypeInfo(_T77),[
TypeInfo(TPersistent),
TypeInfo(Boolean),TypeInfo(TSprig)],Addr(__TSprig__Find__Wrapper));

RegisterProc(TSprig,'FindPath',mtScriptMethod,TypeInfo(_T78),[
TypeInfo(string),
TypeInfo(Boolean),TypeInfo(TSprig)],Addr(__TSprig__FindPath__Wrapper),cRegister);

RegRegisterMethod(TSprig,'IndexOf',TypeInfo(_T79),[
TypeInfo(TSprig),TypeInfo(Integer)],Addr(TSprig.IndexOf));

RegRegisterMethod(TSprig,'SetIndexOf',TypeInfo(_T80),[
TypeInfo(TSprig),
TypeInfo(Integer)],Addr(TSprig.SetIndexOf));

RegRegisterMethod(TSprig,'ClearUnneededSprigs',TypeInfo(_T82),NoParams,Addr(TSprig.ClearUnneededSprigs));

//RegRegisterMethod(TSprig,'DeleteStyle',TypeInfo(_T83),[TypeInfo(TSprigDeleteStyle)], pointer(152));
RegRegisterMethod(TSprig,'DeleteStyle',TypeInfo(_T83),[TypeInfo(TSprigDeleteStyle)],  getVMTProcAddr('TSprig','DeleteStyle',152));


//RegRegisterMethod(TSprig,'CustomDelete',TypeInfo(_T84),[TypeInfo(Boolean)], pointer(156));
RegRegisterMethod(TSprig,'CustomDelete',TypeInfo(_T84),[TypeInfo(Boolean)],  getVMTProcAddr('TSprig','CustomDelete',156));


//RegRegisterMethod(TSprig,'CanMove',TypeInfo(_T85),[TypeInfo(Boolean),TypeInfo(Boolean)], pointer(160));
RegRegisterMethod(TSprig,'CanMove',TypeInfo(_T85),[TypeInfo(Boolean),TypeInfo(Boolean)],  getVMTProcAddr('TSprig','CanMove',160));


//RegRegisterMethod(TSprig,'Move',TypeInfo(_T86),[TypeInfo(Boolean),TypeInfo(Boolean)], pointer(164));
RegRegisterMethod(TSprig,'Move',TypeInfo(_T86),[TypeInfo(Boolean),TypeInfo(Boolean)],  getVMTProcAddr('TSprig','Move',164));


//RegRegisterMethod(TSprig,'CanAdd',TypeInfo(_T87),[TypeInfo(Boolean)], pointer(168));
RegRegisterMethod(TSprig,'CanAdd',TypeInfo(_T87),[TypeInfo(Boolean)],  getVMTProcAddr('TSprig','CanAdd',168));


//RegRegisterMethod(TSprig,'AddTypeCount',TypeInfo(_T88),[TypeInfo(Integer)], pointer(172));
RegRegisterMethod(TSprig,'AddTypeCount',TypeInfo(_T88),[TypeInfo(Integer)],  getVMTProcAddr('TSprig','AddTypeCount',172));


//RegRegisterMethod(TSprig,'AddType',TypeInfo(_T89),[TypeInfo(Integer)], pointer(176));
RegRegisterMethod(TSprig,'AddType',TypeInfo(_T89),[TypeInfo(Integer)],  getVMTProcAddr('TSprig','AddType',176));


//RegRegisterMethod(TSprig,'SortItems',TypeInfo(_T90),NoParams, pointer(180));
RegRegisterMethod(TSprig,'SortItems',TypeInfo(_T90),NoParams,  getVMTProcAddr('TSprig','SortItems',180));


//RegRegisterMethod(TSprig,'SortByIndex',TypeInfo(_T91),[TypeInfo(Boolean)], pointer(184));
RegRegisterMethod(TSprig,'SortByIndex',TypeInfo(_T91),[TypeInfo(Boolean)],  getVMTProcAddr('TSprig','SortByIndex',184));


//RegRegisterMethod(TSprig,'IncludeIndexInCaption',TypeInfo(_T92),[TypeInfo(Boolean)], pointer(188));
RegRegisterMethod(TSprig,'IncludeIndexInCaption',TypeInfo(_T92),[TypeInfo(Boolean)],  getVMTProcAddr('TSprig','IncludeIndexInCaption',188));


//RegRegisterMethod(TSprig,'ItemIndex',TypeInfo(_T93),[TypeInfo(Integer)], pointer(192));
RegRegisterMethod(TSprig,'ItemIndex',TypeInfo(_T93),[TypeInfo(Integer)],  getVMTProcAddr('TSprig','ItemIndex',192));


//RegRegisterMethod(TSprig,'CopyGlyph',TypeInfo(_T94),[TypeInfo(TBitmap),TypeInfo(Boolean)], pointer(196));
RegRegisterMethod(TSprig,'CopyGlyph',TypeInfo(_T94),[TypeInfo(TBitmap),TypeInfo(Boolean)],  getVMTProcAddr('TSprig','CopyGlyph',196));


RegRegisterMethod(TSprig,'Parents',TypeInfo(_T95),[
TypeInfo(TSprig),TypeInfo(Boolean)],Addr(TSprig.Parents));

RegRegisterMethod(TSprig,'Path',TypeInfo(_T96),[TypeInfo(string)],Addr(TSprig.Path));

RegRegisterMethod(TSprig,'Count',TypeInfo(_T97),[TypeInfo(Integer)],Addr(TSprig.Count));

//RegRegisterMethod(TSprig,'Reparent',TypeInfo(_T98),NoParams, pointer(200));
RegRegisterMethod(TSprig,'Reparent',TypeInfo(_T98),NoParams,  getVMTProcAddr('TSprig','Reparent',200));


RegRegisterMethod(TSprig,'SeekParent',TypeInfo(_T100),[
TypeInfo(TPersistent),
TypeInfo(Boolean),TypeInfo(TSprig)],Addr(__TSprig__SeekParent__Wrapper));

RegisterProc(TSprig,'ParentProperty',mtClassMethod,TypeInfo(_T101),[TypeInfo(string)], pointer(208),cRegister);

//RegRegisterMethod(TSprig,'FigureParent',TypeInfo(_T102),NoParams, pointer(212));
RegRegisterMethod(TSprig,'FigureParent',TypeInfo(_T102),NoParams,  getVMTProcAddr('TSprig','FigureParent',212));


//RegRegisterMethod(TSprig,'FigureChildren',TypeInfo(_T103),NoParams, pointer(216));
RegRegisterMethod(TSprig,'FigureChildren',TypeInfo(_T103),NoParams,  getVMTProcAddr('TSprig','FigureChildren',216));


RegisterProc(TSprigIndex,'Create',mtConstructor,TypeInfo(_T104),NoParams,Addr(TSprigIndex.Create),cRegister);

RegRegisterMethod(TSprigIndex,'Add',TypeInfo(_T105),[
TypeInfo(TSprig)],Addr(TSprigIndex.Add));

RegRegisterMethod(TSprigIndex,'Remove',TypeInfo(_T106),[
TypeInfo(TSprig)],Addr(TSprigIndex.Remove));

RegRegisterMethod(TSprigIndex,'Find',TypeInfo(_T107),[
TypeInfo(TPersistent),TypeInfo(TSprig)],Addr(TSprigIndex.Find));

RegisterProc(TSprigStructureNode,'Create',mtConstructor,TypeInfo(_T110),[
TypeInfo(TSprig)],Addr(TSprigStructureNode.Create),cRegister);

RegRegisterMethod(TSprigStructureNode,'ClearSprig',TypeInfo(_T111),NoParams,Addr(TSprigStructureNode.ClearSprig));

RegisterProc(TSprigTypeList,'Create',mtConstructor,TypeInfo(_T114),NoParams,Addr(TSprigTypeList.Create),cRegister);

RegRegisterMethod(TSprigTypeList,'FreeEditorGroup',TypeInfo(_T117),[
TypeInfo(Integer)],Addr(TSprigTypeList.FreeEditorGroup));

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'RegisterSprigType',mtProc,TypeInfo(_T0),[
TypeInfo(TClass),
TypeInfo(TSprigClass)],Addr(RegisterSprigType),cRegister)}

{RegisterProc(nil,'FindBestSprigClass',mtProc,TypeInfo(_T1),[
TypeInfo(TClass),TypeInfo(TSprigClass)],Addr(FindBestSprigClass),cRegister)}

{RegisterProc(nil,'RegisterRootSprigType',mtProc,TypeInfo(_T2),[
TypeInfo(TClass),
TypeInfo(TRootSprigClass)],Addr(RegisterRootSprigType),cRegister)}

{RegisterProc(nil,'FindBestRootSprigClass',mtProc,TypeInfo(_T3),[
TypeInfo(TClass),TypeInfo(TRootSprigClass)],Addr(FindBestRootSprigClass),cRegister)}

{RegRegisterMethod(TRootSprig,'StructureContextFor',TypeInfo(_T23),[TypeInfo(IOTAStructureContext)],Addr(TRootSprig.StructureContextFor))}

{RegRegisterMethod(TRootSprig,'AcceptsClass',TypeInfo(_T26),[
TypeInfo(TClass),TypeInfo(Boolean)], pointer(220))}

{RegRegisterMethod(TRootSprigList,'FindRoot',TypeInfo(_T28),[
TypeInfo(IDesigner),
TypeInfo(TRootSprig),TypeInfo(Boolean)],Addr(TRootSprigList.FindRoot))}

{RegRegisterMethod(TRootSprigList,'DesignerClosed',TypeInfo(_T29),[
TypeInfo(IDesigner),
TypeInfo(Boolean)],Addr(TRootSprigList.DesignerClosed))}

{RegRegisterMethod(TRootSprigList,'DesignerOpened',TypeInfo(_T30),[
TypeInfo(IDesigner),
TypeInfo(Boolean)],Addr(TRootSprigList.DesignerOpened))}

{RegRegisterMethod(TRootSprigList,'ItemDeleted',TypeInfo(_T31),[
TypeInfo(IDesigner),
TypeInfo(TPersistent)],Addr(TRootSprigList.ItemDeleted))}

{RegRegisterMethod(TRootSprigList,'ItemInserted',TypeInfo(_T32),[
TypeInfo(IDesigner),
TypeInfo(TPersistent)],Addr(TRootSprigList.ItemInserted))}

{RegRegisterMethod(TRootSprigList,'ItemsModified',TypeInfo(_T33),[
TypeInfo(IDesigner)],Addr(TRootSprigList.ItemsModified))}

{RegRegisterMethod(TSprig,'FindItemByName',TypeInfo(_T41),[
TypeInfo(string),
TypeInfo(TClass),
TypeInfo(Boolean),TypeInfo(TSprig)], pointer(24))}

{RegRegisterMethod(TSprig,'GetDesigner',TypeInfo(_T43),[
TypeInfo(IDesigner),TypeInfo(Boolean)], pointer(32))}

{RegRegisterMethod(TSprig,'ItemClass',TypeInfo(_T58),[TypeInfo(TClass)], pointer(88))}

{RegRegisterMethod(TSprig,'StructureNodeFor',TypeInfo(_T61),[TypeInfo(IOTAStructureNode)], pointer(100))}

{RegRegisterMethod(TSprig,'PrepareMenu',TypeInfo(_T67),[
TypeInfo(IMenuItems)], pointer(120))}

{RegRegisterMethod(TSprig,'DragClass',TypeInfo(_T69),[TypeInfo(TClass)],Addr(TSprig.DragClass))}

{RegRegisterMethod(TSprig,'PaletteOver',TypeInfo(_T74),[
TypeInfo(TSprigClass),
TypeInfo(TClass),TypeInfo(Boolean)], pointer(144))}

{RegisterProc(TSprig,'PaletteOverTo',mtClassMethod,TypeInfo(_T75),[
TypeInfo(TSprig),
TypeInfo(TClass),TypeInfo(Boolean)], pointer(148),cRegister)}

{RegRegisterMethod(TSprig,'Construct',TypeInfo(_T99),[
TypeInfo(TComponentClass),TypeInfo(TComponent)], pointer(204))}

{RegisterProc(TSprigIntfType,'Create',mtConstructor,TypeInfo(_T108),[
DynArrayInfo(TypeInfo(TGUIDArray)),
TypeInfo(TSprigClass)],Addr(TSprigIntfType.Create),cRegister)}

{RegRegisterMethod(TSprigIntfType,'Match',TypeInfo(_T109),[
TypeInfo(TClass),TypeInfo(Boolean)],Addr(TSprigIntfType.Match))}

{RegisterProc(TSprigType,'Create',mtConstructor,TypeInfo(_T112),[
TypeInfo(TClass),
TypeInfo(TSprigClass)],Addr(TSprigType.Create),cRegister)}

{RegRegisterMethod(TSprigType,'Score',TypeInfo(_T113),[
TypeInfo(TClass),TypeInfo(Integer)],Addr(TSprigType.Score))}

{RegRegisterMethod(TSprigTypeList,'Match',TypeInfo(_T115),[
TypeInfo(TClass),TypeInfo(TSprigClass)],Addr(TSprigTypeList.Match))}

{RegRegisterMethod(TSprigTypeList,'Add',TypeInfo(_T116),[
TypeInfo(TClass),
TypeInfo(TSprigClass)],Addr(TSprigTypeList.Add))}

RegisterEvent(TypeInfo(TCopySprigGlyphFunc),[
TypeInfo(TSprig),
TypeInfo(TBitmap),TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TSprigAction),[
TypeInfo(TSprig)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
