{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit XMLSCHEMATAGS_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  XMLSchemaTags;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..126] of string = (
'SAbstract'
,'SAll'
,'SAnnotation'
,'SAny'
,'SAppInfo'
,'SAttribute'
,'SAttributeFormDefault'
,'SAttributeGroup'
,'SBase'
,'SBase64'
,'SBlockDefault'
,'SChoice'
,'SComplexContent'
,'SComplexType'
,'SDefault'
,'SDerivedBy'
,'SDocumentation'
,'SElement'
,'SElementFormDefault'
,'SExtension'
,'SFinal'
,'SFinalDefault'
,'SFixed'
,'SGroup'
,'SHex'
,'SImport'
,'SInclude'
,'SItemType'
,'SList'
,'SMaxOccurs'
,'SMemberTypes'
,'SMinOccurs'
,'SMixed'
,'SName'
,'SNotation'
,'SOptional'
,'SPublic'
,'SProhibited'
,'SQualified'
,'SRef'
,'SRequired'
,'SRestriction'
,'SSchema'
,'SSchemaLocation'
,'SSequence'
,'SSimpleContent'
,'SSimpleType'
,'SSource'
,'SSystem'
,'STargetNamespace'
,'SType'
,'SUnbounded'
,'SUnqualified'
,'SUse'
,'SUnion'
,'SValue'
,'SVersion'
,'xsdString'
,'xsdBoolean'
,'xsdDecimal'
,'xsdFloat'
,'xsdDouble'
,'xsdDuration'
,'xsdDateTime'
,'xsdTime'
,'xsdDate'
,'xsdGYearMonth'
,'xsdGYear'
,'xsdGMonthDay'
,'xsdGDay'
,'xsdGMonth'
,'xsdHexBinary'
,'xsdBase64Binary'
,'xsdAnyUri'
,'xsdQName'
,'xsdNOTATION'
,'xsdNormalizedString'
,'xsdToken'
,'xsdLanguage'
,'xsdENTITIES'
,'xsdNMTOKEN'
,'xsdNMTOKENS'
,'xsdName'
,'xsdNCName'
,'xsdENTITY'
,'xsdInteger'
,'xsdNonPositiveInteger'
,'xsdNegativeInteger'
,'xsdLong'
,'xsdInt'
,'xsdShort'
,'xsdByte'
,'xsdNonNegativeInteger'
,'xsdUnsignedLong'
,'xsdUnsignedInt'
,'xsdUnsignedShort'
,'xsdUnsignedByte'
,'xsdPositiveInteger'
,'xsdTimeDuration'
,'xsdBinary'
,'xsdUriReference'
,'xsdTimeInstant'
,'xsdRecurringDate'
,'xsdRecurringDay'
,'xsdMonth'
,'xsdYear'
,'xsdTimePeriod'
,'xsdRecurringDuration'
,'xsdCentury'
,'xsdanySimpleType'
,'xsdanyType'
,'xsfOrdered'
,'xsfBounded'
,'xsfCardinality'
,'xsfNumeric'
,'xsfLength'
,'xsfMinLength'
,'xsfMaxLength'
,'xsfPattern'
,'xsfEnumeration'
,'xsfMaxInclusive'
,'xsfMaxExclusive'
,'xsfMinInclusive'
,'xsfMinExclusive'
,'xsfWhitespace'
,'xsfTotalDigits'
,'xsfFractionalDigits'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,SAbstract));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,SAll));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,SAnnotation));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,SAny));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,SAppInfo));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,SAttribute));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,SAttributeFormDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,SAttributeGroup));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,SBase));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,SBase64));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,SBlockDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,SChoice));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,SComplexContent));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,SComplexType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,SDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,SDerivedBy));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,SDocumentation));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,SElement));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,SElementFormDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,SExtension));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,SFinal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,SFinalDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,SFixed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,SGroup));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,SHex));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,SImport));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,SInclude));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,SItemType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,SList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,SMaxOccurs));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,SMemberTypes));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,SMinOccurs));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,SMixed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,SName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,SNotation));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,SOptional));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,SPublic));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,SProhibited));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,SQualified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,SRef));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,SRequired));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,SRestriction));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,SSchema));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,SSchemaLocation));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,SSequence));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,SSimpleContent));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,SSimpleType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,SSource));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,SSystem));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,STargetNamespace));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,SType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,SUnbounded));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,SUnqualified));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,SUse));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,SUnion));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,SValue));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,SVersion));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,xsdString));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,xsdBoolean));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,xsdDecimal));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,xsdFloat));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,xsdDouble));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,xsdDuration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,xsdDateTime));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,xsdTime));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,xsdDate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,xsdGYearMonth));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,xsdGYear));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,xsdGMonthDay));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,xsdGDay));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,xsdGMonth));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,xsdHexBinary));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,xsdBase64Binary));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,xsdAnyUri));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,xsdQName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,xsdNOTATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,xsdNormalizedString));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,xsdToken));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,xsdLanguage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,xsdENTITIES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,xsdNMTOKEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,xsdNMTOKENS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,xsdName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,xsdNCName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,xsdENTITY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,xsdInteger));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,xsdNonPositiveInteger));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,xsdNegativeInteger));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,xsdLong));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,xsdInt));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,xsdShort));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,xsdByte));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,xsdNonNegativeInteger));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,xsdUnsignedLong));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,xsdUnsignedInt));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,xsdUnsignedShort));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,xsdUnsignedByte));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,xsdPositiveInteger));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,xsdTimeDuration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,xsdBinary));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,xsdUriReference));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,xsdTimeInstant));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,xsdRecurringDate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,xsdRecurringDay));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,xsdMonth));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[105] ,xsdYear));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[106] ,xsdTimePeriod));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[107] ,xsdRecurringDuration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[108] ,xsdCentury));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[109] ,xsdanySimpleType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[110] ,xsdanyType));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[111] ,xsfOrdered));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[112] ,xsfBounded));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[113] ,xsfCardinality));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[114] ,xsfNumeric));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[115] ,xsfLength));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[116] ,xsfMinLength));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[117] ,xsfMaxLength));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[118] ,xsfPattern));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[119] ,xsfEnumeration));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[120] ,xsfMaxInclusive));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[121] ,xsfMaxExclusive));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[122] ,xsfMinInclusive));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[123] ,xsfMinExclusive));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[124] ,xsfWhitespace));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[125] ,xsfTotalDigits));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[126] ,xsfFractionalDigits));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

procedure _mreg_0;
begin
end;
initialization
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
end.
