{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit SOCKTRANSPORT_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  SysUtils,
  Variants,
  SockTransport;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : Integer) of object;

{_T1 = procedure (const p0 : IDataBlock) of object;}

{_T2 = procedure (p0 : ISendDataBlock) of object;}

_T3 = procedure  of object;

{_T4 = function (const p0 : IDataBlock;
p1 : Boolean): IDataBlock of object;}

{_T5 = procedure (p0 : ITransport) of object;}

procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..4] of string = (
'vfByRef'
,'vfVariant'
,'CallSig'
,'ResultSig'
,'asMask'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,vfByRef));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,vfVariant));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,CallSig));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,ResultSig));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,asMask));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..4] of TClass = (
EInterpreterError,
ESocketConnectionError,
TCustomDataBlockInterpreter,
TDataBlock,
TSendDataBlock
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..0] of string = (
'CheckSignature'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(Integer)],Addr(CheckSignature),cRegister);

RegisterProc(TDataBlock,'Create',mtConstructor,TypeInfo(_T3),NoParams,Addr(TDataBlock.Create),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegRegisterMethod(TCustomDataBlockInterpreter,'InterpretData',TypeInfo(_T1),[
TypeInfo(IDataBlock)], pointer(0))}

{RegisterProc(TCustomDataBlockInterpreter,'Create',mtConstructor,TypeInfo(_T2),[
TypeInfo(ISendDataBlock)],Addr(TCustomDataBlockInterpreter.Create),cRegister)}

{RegisterProc(TSendDataBlock,'Send',mtMethod,TypeInfo(_T4),[
TypeInfo(IDataBlock),
TypeInfo(Boolean),TypeInfo(IDataBlock)], pointer(0),cStdCall)}

{RegisterProc(TSendDataBlock,'Create',mtConstructor,TypeInfo(_T5),[
TypeInfo(ITransport)],Addr(TSendDataBlock.Create),cRegister)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
