{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit COMSVCS_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  Mtx,
  ActiveX,
  ComSvcs;
function Convert__MIDL___MIDL_itf_autosvcs_0279_0001ToVariant(var R : __MIDL___MIDL_itf_autosvcs_0279_0001) : OleVariant;
function ConvertVariantTo__MIDL___MIDL_itf_autosvcs_0279_0001(const V : OleVariant) : __MIDL___MIDL_itf_autosvcs_0279_0001;
function ConvertappDataToVariant(var R : appData) : OleVariant;
function ConvertVariantToappData(const V : OleVariant) : appData;
function ConvertAPPSTATISTICSToVariant(var R : APPSTATISTICS) : OleVariant;
function ConvertVariantToAPPSTATISTICS(const V : OleVariant) : APPSTATISTICS;
function ConvertBOIDToVariant(var R : BOID) : OleVariant;
function ConvertVariantToBOID(const V : OleVariant) : BOID;
function ConvertCAppDataToVariant(var R : CAppData) : OleVariant;
function ConvertVariantToCAppData(const V : OleVariant) : CAppData;
function ConvertCAppStatisticsToVariant(var R : CAppStatistics) : OleVariant;
function ConvertVariantToCAppStatistics(const V : OleVariant) : CAppStatistics;
function ConvertCCLSIDDataToVariant(var R : CCLSIDData) : OleVariant;
function ConvertVariantToCCLSIDData(const V : OleVariant) : CCLSIDData;
function ConvertCLSIDDATAToVariant(var R : CLSIDDATA) : OleVariant;
function ConvertVariantToCLSIDDATA(const V : OleVariant) : CLSIDDATA;
function ConvertCOMSVCSEVENTINFOToVariant(var R : COMSVCSEVENTINFO) : OleVariant;
function ConvertVariantToCOMSVCSEVENTINFO(const V : OleVariant) : COMSVCSEVENTINFO;
function ConverttagBLOBToVariant(var R : tagBLOB) : OleVariant;
function ConvertVariantTotagBLOB(const V : OleVariant) : tagBLOB;
function ConverttagCrmLogRecordReadToVariant(var R : tagCrmLogRecordRead) : OleVariant;
function ConvertVariantTotagCrmLogRecordRead(const V : OleVariant) : tagCrmLogRecordRead;
function ConvertXACTTRANSINFOToVariant(var R : XACTTRANSINFO) : OleVariant;
function ConvertVariantToXACTTRANSINFO(const V : OleVariant) : XACTTRANSINFO;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper = class(TDCRecordWrapper)
private
fR : __MIDL___MIDL_itf_autosvcs_0279_0001;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : LongWord);
function getcbSize : LongWord;
property cbSize : LongWord read getcbSize write setcbSize;
procedure setdwPid(const val : LongWord);
function getdwPid : LongWord;
property dwPid : LongWord read getdwPid write setdwPid;
procedure setlMicroTime(const val : Integer);
function getlMicroTime : Integer;
property lMicroTime : Integer read getlMicroTime write setlMicroTime;
end;
type __appData__Wrapper = class(TDCRecordWrapper)
private
fR : appData;
public
function GetRecordPtr : pointer; override;
published
procedure setm_idApp(const val : LongWord);
function getm_idApp : LongWord;
property m_idApp : LongWord read getm_idApp write setm_idApp;
procedure setm_dwAppProcessId(const val : LongWord);
function getm_dwAppProcessId : LongWord;
property m_dwAppProcessId : LongWord read getm_dwAppProcessId write setm_dwAppProcessId;
end;
type __APPSTATISTICS__Wrapper = class(TDCRecordWrapper)
private
fR : APPSTATISTICS;
public
function GetRecordPtr : pointer; override;
published
procedure setm_cTotalCalls(const val : LongWord);
function getm_cTotalCalls : LongWord;
property m_cTotalCalls : LongWord read getm_cTotalCalls write setm_cTotalCalls;
procedure setm_cTotalInstances(const val : LongWord);
function getm_cTotalInstances : LongWord;
property m_cTotalInstances : LongWord read getm_cTotalInstances write setm_cTotalInstances;
procedure setm_cTotalClasses(const val : LongWord);
function getm_cTotalClasses : LongWord;
property m_cTotalClasses : LongWord read getm_cTotalClasses write setm_cTotalClasses;
procedure setm_cCallsPerSecond(const val : LongWord);
function getm_cCallsPerSecond : LongWord;
property m_cCallsPerSecond : LongWord read getm_cCallsPerSecond write setm_cCallsPerSecond;
end;
type __BOID__Wrapper = class(TDCRecordWrapper)
private
fR : BOID;
public
function GetRecordPtr : pointer; override;
published
end;
type __CAppData__Wrapper = class(TDCRecordWrapper)
private
fR : CAppData;
public
function GetRecordPtr : pointer; override;
published
procedure setm_idApp(const val : LongWord);
function getm_idApp : LongWord;
property m_idApp : LongWord read getm_idApp write setm_idApp;
procedure setm_dwAppProcessId(const val : LongWord);
function getm_dwAppProcessId : LongWord;
property m_dwAppProcessId : LongWord read getm_dwAppProcessId write setm_dwAppProcessId;
end;
type __CAppStatistics__Wrapper = class(TDCRecordWrapper)
private
fR : CAppStatistics;
public
function GetRecordPtr : pointer; override;
published
procedure setm_cTotalCalls(const val : LongWord);
function getm_cTotalCalls : LongWord;
property m_cTotalCalls : LongWord read getm_cTotalCalls write setm_cTotalCalls;
procedure setm_cTotalInstances(const val : LongWord);
function getm_cTotalInstances : LongWord;
property m_cTotalInstances : LongWord read getm_cTotalInstances write setm_cTotalInstances;
procedure setm_cTotalClasses(const val : LongWord);
function getm_cTotalClasses : LongWord;
property m_cTotalClasses : LongWord read getm_cTotalClasses write setm_cTotalClasses;
procedure setm_cCallsPerSecond(const val : LongWord);
function getm_cCallsPerSecond : LongWord;
property m_cCallsPerSecond : LongWord read getm_cCallsPerSecond write setm_cCallsPerSecond;
end;
type __CCLSIDData__Wrapper = class(TDCRecordWrapper)
private
fR : CCLSIDData;
public
function GetRecordPtr : pointer; override;
published
procedure setm_cReferences(const val : LongWord);
function getm_cReferences : LongWord;
property m_cReferences : LongWord read getm_cReferences write setm_cReferences;
procedure setm_cBound(const val : LongWord);
function getm_cBound : LongWord;
property m_cBound : LongWord read getm_cBound write setm_cBound;
procedure setm_cPooled(const val : LongWord);
function getm_cPooled : LongWord;
property m_cPooled : LongWord read getm_cPooled write setm_cPooled;
procedure setm_cInCall(const val : LongWord);
function getm_cInCall : LongWord;
property m_cInCall : LongWord read getm_cInCall write setm_cInCall;
procedure setm_dwRespTime(const val : LongWord);
function getm_dwRespTime : LongWord;
property m_dwRespTime : LongWord read getm_dwRespTime write setm_dwRespTime;
procedure setm_cCallsCompleted(const val : LongWord);
function getm_cCallsCompleted : LongWord;
property m_cCallsCompleted : LongWord read getm_cCallsCompleted write setm_cCallsCompleted;
procedure setm_cCallsFailed(const val : LongWord);
function getm_cCallsFailed : LongWord;
property m_cCallsFailed : LongWord read getm_cCallsFailed write setm_cCallsFailed;
end;
type __CLSIDDATA__Wrapper = class(TDCRecordWrapper)
private
fR : CLSIDDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setm_cReferences(const val : LongWord);
function getm_cReferences : LongWord;
property m_cReferences : LongWord read getm_cReferences write setm_cReferences;
procedure setm_cBound(const val : LongWord);
function getm_cBound : LongWord;
property m_cBound : LongWord read getm_cBound write setm_cBound;
procedure setm_cPooled(const val : LongWord);
function getm_cPooled : LongWord;
property m_cPooled : LongWord read getm_cPooled write setm_cPooled;
procedure setm_cInCall(const val : LongWord);
function getm_cInCall : LongWord;
property m_cInCall : LongWord read getm_cInCall write setm_cInCall;
procedure setm_dwRespTime(const val : LongWord);
function getm_dwRespTime : LongWord;
property m_dwRespTime : LongWord read getm_dwRespTime write setm_dwRespTime;
procedure setm_cCallsCompleted(const val : LongWord);
function getm_cCallsCompleted : LongWord;
property m_cCallsCompleted : LongWord read getm_cCallsCompleted write setm_cCallsCompleted;
procedure setm_cCallsFailed(const val : LongWord);
function getm_cCallsFailed : LongWord;
property m_cCallsFailed : LongWord read getm_cCallsFailed write setm_cCallsFailed;
end;
type __COMSVCSEVENTINFO__Wrapper = class(TDCRecordWrapper)
private
fR : COMSVCSEVENTINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : LongWord);
function getcbSize : LongWord;
property cbSize : LongWord read getcbSize write setcbSize;
procedure setdwPid(const val : LongWord);
function getdwPid : LongWord;
property dwPid : LongWord read getdwPid write setdwPid;
procedure setlMicroTime(const val : Integer);
function getlMicroTime : Integer;
property lMicroTime : Integer read getlMicroTime write setlMicroTime;
end;
type __tagBLOB__Wrapper = class(TDCRecordWrapper)
private
fR : tagBLOB;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : LongWord);
function getcbSize : LongWord;
property cbSize : LongWord read getcbSize write setcbSize;
end;
type __tagCrmLogRecordRead__Wrapper = class(TDCRecordWrapper)
private
fR : tagCrmLogRecordRead;
public
function GetRecordPtr : pointer; override;
published
procedure setdwCrmFlags(const val : LongWord);
function getdwCrmFlags : LongWord;
property dwCrmFlags : LongWord read getdwCrmFlags write setdwCrmFlags;
procedure setdwSequenceNumber(const val : LongWord);
function getdwSequenceNumber : LongWord;
property dwSequenceNumber : LongWord read getdwSequenceNumber write setdwSequenceNumber;
end;
type __XACTTRANSINFO__Wrapper = class(TDCRecordWrapper)
private
fR : XACTTRANSINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setisoLevel(const val : Integer);
function getisoLevel : Integer;
property isoLevel : Integer read getisoLevel write setisoLevel;
procedure setisoFlags(const val : LongWord);
function getisoFlags : LongWord;
property isoFlags : LongWord read getisoFlags write setisoFlags;
procedure setgrfTCSupported(const val : LongWord);
function getgrfTCSupported : LongWord;
property grfTCSupported : LongWord read getgrfTCSupported write setgrfTCSupported;
procedure setgrfRMSupported(const val : LongWord);
function getgrfRMSupported : LongWord;
property grfRMSupported : LongWord read getgrfRMSupported write setgrfRMSupported;
procedure setgrfTCSupportedRetaining(const val : LongWord);
function getgrfTCSupportedRetaining : LongWord;
property grfTCSupportedRetaining : LongWord read getgrfTCSupportedRetaining write setgrfTCSupportedRetaining;
procedure setgrfRMSupportedRetaining(const val : LongWord);
function getgrfRMSupportedRetaining : LongWord;
property grfRMSupportedRetaining : LongWord read getgrfRMSupportedRetaining write setgrfRMSupportedRetaining;
end;
function ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper.setcbSize(const val : LongWord);
begin
__MIDL___MIDL_itf_autosvcs_0279_0001(GetRecordPtr^).cbSize := val;
end;
function ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper.getcbSize : LongWord;
begin
result := __MIDL___MIDL_itf_autosvcs_0279_0001(GetRecordPtr^).cbSize;
end;
procedure ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper.setdwPid(const val : LongWord);
begin
__MIDL___MIDL_itf_autosvcs_0279_0001(GetRecordPtr^).dwPid := val;
end;
function ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper.getdwPid : LongWord;
begin
result := __MIDL___MIDL_itf_autosvcs_0279_0001(GetRecordPtr^).dwPid;
end;
procedure ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper.setlMicroTime(const val : Integer);
begin
__MIDL___MIDL_itf_autosvcs_0279_0001(GetRecordPtr^).lMicroTime := val;
end;
function ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper.getlMicroTime : Integer;
begin
result := __MIDL___MIDL_itf_autosvcs_0279_0001(GetRecordPtr^).lMicroTime;
end;
function __appData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __appData__Wrapper.setm_idApp(const val : LongWord);
begin
appData(GetRecordPtr^).m_idApp := val;
end;
function __appData__Wrapper.getm_idApp : LongWord;
begin
result := appData(GetRecordPtr^).m_idApp;
end;
procedure __appData__Wrapper.setm_dwAppProcessId(const val : LongWord);
begin
appData(GetRecordPtr^).m_dwAppProcessId := val;
end;
function __appData__Wrapper.getm_dwAppProcessId : LongWord;
begin
result := appData(GetRecordPtr^).m_dwAppProcessId;
end;
function __APPSTATISTICS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __APPSTATISTICS__Wrapper.setm_cTotalCalls(const val : LongWord);
begin
APPSTATISTICS(GetRecordPtr^).m_cTotalCalls := val;
end;
function __APPSTATISTICS__Wrapper.getm_cTotalCalls : LongWord;
begin
result := APPSTATISTICS(GetRecordPtr^).m_cTotalCalls;
end;
procedure __APPSTATISTICS__Wrapper.setm_cTotalInstances(const val : LongWord);
begin
APPSTATISTICS(GetRecordPtr^).m_cTotalInstances := val;
end;
function __APPSTATISTICS__Wrapper.getm_cTotalInstances : LongWord;
begin
result := APPSTATISTICS(GetRecordPtr^).m_cTotalInstances;
end;
procedure __APPSTATISTICS__Wrapper.setm_cTotalClasses(const val : LongWord);
begin
APPSTATISTICS(GetRecordPtr^).m_cTotalClasses := val;
end;
function __APPSTATISTICS__Wrapper.getm_cTotalClasses : LongWord;
begin
result := APPSTATISTICS(GetRecordPtr^).m_cTotalClasses;
end;
procedure __APPSTATISTICS__Wrapper.setm_cCallsPerSecond(const val : LongWord);
begin
APPSTATISTICS(GetRecordPtr^).m_cCallsPerSecond := val;
end;
function __APPSTATISTICS__Wrapper.getm_cCallsPerSecond : LongWord;
begin
result := APPSTATISTICS(GetRecordPtr^).m_cCallsPerSecond;
end;
function __BOID__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
function __CAppData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAppData__Wrapper.setm_idApp(const val : LongWord);
begin
CAppData(GetRecordPtr^).m_idApp := val;
end;
function __CAppData__Wrapper.getm_idApp : LongWord;
begin
result := CAppData(GetRecordPtr^).m_idApp;
end;
procedure __CAppData__Wrapper.setm_dwAppProcessId(const val : LongWord);
begin
CAppData(GetRecordPtr^).m_dwAppProcessId := val;
end;
function __CAppData__Wrapper.getm_dwAppProcessId : LongWord;
begin
result := CAppData(GetRecordPtr^).m_dwAppProcessId;
end;
function __CAppStatistics__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CAppStatistics__Wrapper.setm_cTotalCalls(const val : LongWord);
begin
CAppStatistics(GetRecordPtr^).m_cTotalCalls := val;
end;
function __CAppStatistics__Wrapper.getm_cTotalCalls : LongWord;
begin
result := CAppStatistics(GetRecordPtr^).m_cTotalCalls;
end;
procedure __CAppStatistics__Wrapper.setm_cTotalInstances(const val : LongWord);
begin
CAppStatistics(GetRecordPtr^).m_cTotalInstances := val;
end;
function __CAppStatistics__Wrapper.getm_cTotalInstances : LongWord;
begin
result := CAppStatistics(GetRecordPtr^).m_cTotalInstances;
end;
procedure __CAppStatistics__Wrapper.setm_cTotalClasses(const val : LongWord);
begin
CAppStatistics(GetRecordPtr^).m_cTotalClasses := val;
end;
function __CAppStatistics__Wrapper.getm_cTotalClasses : LongWord;
begin
result := CAppStatistics(GetRecordPtr^).m_cTotalClasses;
end;
procedure __CAppStatistics__Wrapper.setm_cCallsPerSecond(const val : LongWord);
begin
CAppStatistics(GetRecordPtr^).m_cCallsPerSecond := val;
end;
function __CAppStatistics__Wrapper.getm_cCallsPerSecond : LongWord;
begin
result := CAppStatistics(GetRecordPtr^).m_cCallsPerSecond;
end;
function __CCLSIDData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CCLSIDData__Wrapper.setm_cReferences(const val : LongWord);
begin
CCLSIDData(GetRecordPtr^).m_cReferences := val;
end;
function __CCLSIDData__Wrapper.getm_cReferences : LongWord;
begin
result := CCLSIDData(GetRecordPtr^).m_cReferences;
end;
procedure __CCLSIDData__Wrapper.setm_cBound(const val : LongWord);
begin
CCLSIDData(GetRecordPtr^).m_cBound := val;
end;
function __CCLSIDData__Wrapper.getm_cBound : LongWord;
begin
result := CCLSIDData(GetRecordPtr^).m_cBound;
end;
procedure __CCLSIDData__Wrapper.setm_cPooled(const val : LongWord);
begin
CCLSIDData(GetRecordPtr^).m_cPooled := val;
end;
function __CCLSIDData__Wrapper.getm_cPooled : LongWord;
begin
result := CCLSIDData(GetRecordPtr^).m_cPooled;
end;
procedure __CCLSIDData__Wrapper.setm_cInCall(const val : LongWord);
begin
CCLSIDData(GetRecordPtr^).m_cInCall := val;
end;
function __CCLSIDData__Wrapper.getm_cInCall : LongWord;
begin
result := CCLSIDData(GetRecordPtr^).m_cInCall;
end;
procedure __CCLSIDData__Wrapper.setm_dwRespTime(const val : LongWord);
begin
CCLSIDData(GetRecordPtr^).m_dwRespTime := val;
end;
function __CCLSIDData__Wrapper.getm_dwRespTime : LongWord;
begin
result := CCLSIDData(GetRecordPtr^).m_dwRespTime;
end;
procedure __CCLSIDData__Wrapper.setm_cCallsCompleted(const val : LongWord);
begin
CCLSIDData(GetRecordPtr^).m_cCallsCompleted := val;
end;
function __CCLSIDData__Wrapper.getm_cCallsCompleted : LongWord;
begin
result := CCLSIDData(GetRecordPtr^).m_cCallsCompleted;
end;
procedure __CCLSIDData__Wrapper.setm_cCallsFailed(const val : LongWord);
begin
CCLSIDData(GetRecordPtr^).m_cCallsFailed := val;
end;
function __CCLSIDData__Wrapper.getm_cCallsFailed : LongWord;
begin
result := CCLSIDData(GetRecordPtr^).m_cCallsFailed;
end;
function __CLSIDDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CLSIDDATA__Wrapper.setm_cReferences(const val : LongWord);
begin
CLSIDDATA(GetRecordPtr^).m_cReferences := val;
end;
function __CLSIDDATA__Wrapper.getm_cReferences : LongWord;
begin
result := CLSIDDATA(GetRecordPtr^).m_cReferences;
end;
procedure __CLSIDDATA__Wrapper.setm_cBound(const val : LongWord);
begin
CLSIDDATA(GetRecordPtr^).m_cBound := val;
end;
function __CLSIDDATA__Wrapper.getm_cBound : LongWord;
begin
result := CLSIDDATA(GetRecordPtr^).m_cBound;
end;
procedure __CLSIDDATA__Wrapper.setm_cPooled(const val : LongWord);
begin
CLSIDDATA(GetRecordPtr^).m_cPooled := val;
end;
function __CLSIDDATA__Wrapper.getm_cPooled : LongWord;
begin
result := CLSIDDATA(GetRecordPtr^).m_cPooled;
end;
procedure __CLSIDDATA__Wrapper.setm_cInCall(const val : LongWord);
begin
CLSIDDATA(GetRecordPtr^).m_cInCall := val;
end;
function __CLSIDDATA__Wrapper.getm_cInCall : LongWord;
begin
result := CLSIDDATA(GetRecordPtr^).m_cInCall;
end;
procedure __CLSIDDATA__Wrapper.setm_dwRespTime(const val : LongWord);
begin
CLSIDDATA(GetRecordPtr^).m_dwRespTime := val;
end;
function __CLSIDDATA__Wrapper.getm_dwRespTime : LongWord;
begin
result := CLSIDDATA(GetRecordPtr^).m_dwRespTime;
end;
procedure __CLSIDDATA__Wrapper.setm_cCallsCompleted(const val : LongWord);
begin
CLSIDDATA(GetRecordPtr^).m_cCallsCompleted := val;
end;
function __CLSIDDATA__Wrapper.getm_cCallsCompleted : LongWord;
begin
result := CLSIDDATA(GetRecordPtr^).m_cCallsCompleted;
end;
procedure __CLSIDDATA__Wrapper.setm_cCallsFailed(const val : LongWord);
begin
CLSIDDATA(GetRecordPtr^).m_cCallsFailed := val;
end;
function __CLSIDDATA__Wrapper.getm_cCallsFailed : LongWord;
begin
result := CLSIDDATA(GetRecordPtr^).m_cCallsFailed;
end;
function __COMSVCSEVENTINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __COMSVCSEVENTINFO__Wrapper.setcbSize(const val : LongWord);
begin
COMSVCSEVENTINFO(GetRecordPtr^).cbSize := val;
end;
function __COMSVCSEVENTINFO__Wrapper.getcbSize : LongWord;
begin
result := COMSVCSEVENTINFO(GetRecordPtr^).cbSize;
end;
procedure __COMSVCSEVENTINFO__Wrapper.setdwPid(const val : LongWord);
begin
COMSVCSEVENTINFO(GetRecordPtr^).dwPid := val;
end;
function __COMSVCSEVENTINFO__Wrapper.getdwPid : LongWord;
begin
result := COMSVCSEVENTINFO(GetRecordPtr^).dwPid;
end;
procedure __COMSVCSEVENTINFO__Wrapper.setlMicroTime(const val : Integer);
begin
COMSVCSEVENTINFO(GetRecordPtr^).lMicroTime := val;
end;
function __COMSVCSEVENTINFO__Wrapper.getlMicroTime : Integer;
begin
result := COMSVCSEVENTINFO(GetRecordPtr^).lMicroTime;
end;
function __tagBLOB__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagBLOB__Wrapper.setcbSize(const val : LongWord);
begin
tagBLOB(GetRecordPtr^).cbSize := val;
end;
function __tagBLOB__Wrapper.getcbSize : LongWord;
begin
result := tagBLOB(GetRecordPtr^).cbSize;
end;
function __tagCrmLogRecordRead__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagCrmLogRecordRead__Wrapper.setdwCrmFlags(const val : LongWord);
begin
tagCrmLogRecordRead(GetRecordPtr^).dwCrmFlags := val;
end;
function __tagCrmLogRecordRead__Wrapper.getdwCrmFlags : LongWord;
begin
result := tagCrmLogRecordRead(GetRecordPtr^).dwCrmFlags;
end;
procedure __tagCrmLogRecordRead__Wrapper.setdwSequenceNumber(const val : LongWord);
begin
tagCrmLogRecordRead(GetRecordPtr^).dwSequenceNumber := val;
end;
function __tagCrmLogRecordRead__Wrapper.getdwSequenceNumber : LongWord;
begin
result := tagCrmLogRecordRead(GetRecordPtr^).dwSequenceNumber;
end;
function __XACTTRANSINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __XACTTRANSINFO__Wrapper.setisoLevel(const val : Integer);
begin
XACTTRANSINFO(GetRecordPtr^).isoLevel := val;
end;
function __XACTTRANSINFO__Wrapper.getisoLevel : Integer;
begin
result := XACTTRANSINFO(GetRecordPtr^).isoLevel;
end;
procedure __XACTTRANSINFO__Wrapper.setisoFlags(const val : LongWord);
begin
XACTTRANSINFO(GetRecordPtr^).isoFlags := val;
end;
function __XACTTRANSINFO__Wrapper.getisoFlags : LongWord;
begin
result := XACTTRANSINFO(GetRecordPtr^).isoFlags;
end;
procedure __XACTTRANSINFO__Wrapper.setgrfTCSupported(const val : LongWord);
begin
XACTTRANSINFO(GetRecordPtr^).grfTCSupported := val;
end;
function __XACTTRANSINFO__Wrapper.getgrfTCSupported : LongWord;
begin
result := XACTTRANSINFO(GetRecordPtr^).grfTCSupported;
end;
procedure __XACTTRANSINFO__Wrapper.setgrfRMSupported(const val : LongWord);
begin
XACTTRANSINFO(GetRecordPtr^).grfRMSupported := val;
end;
function __XACTTRANSINFO__Wrapper.getgrfRMSupported : LongWord;
begin
result := XACTTRANSINFO(GetRecordPtr^).grfRMSupported;
end;
procedure __XACTTRANSINFO__Wrapper.setgrfTCSupportedRetaining(const val : LongWord);
begin
XACTTRANSINFO(GetRecordPtr^).grfTCSupportedRetaining := val;
end;
function __XACTTRANSINFO__Wrapper.getgrfTCSupportedRetaining : LongWord;
begin
result := XACTTRANSINFO(GetRecordPtr^).grfTCSupportedRetaining;
end;
procedure __XACTTRANSINFO__Wrapper.setgrfRMSupportedRetaining(const val : LongWord);
begin
XACTTRANSINFO(GetRecordPtr^).grfRMSupportedRetaining := val;
end;
function __XACTTRANSINFO__Wrapper.getgrfRMSupportedRetaining : LongWord;
begin
result := XACTTRANSINFO(GetRecordPtr^).grfRMSupportedRetaining;
end;
function ___MIDL___MIDL_itf_autosvcs_0279_0001_ : IDispatch;
begin
  result := ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper.Create;
end;
function _appData_ : IDispatch;
begin
  result := __appData__Wrapper.Create;
end;
function _APPSTATISTICS_ : IDispatch;
begin
  result := __APPSTATISTICS__Wrapper.Create;
end;
function _BOID_ : IDispatch;
begin
  result := __BOID__Wrapper.Create;
end;
function _CAppData_ : IDispatch;
begin
  result := __CAppData__Wrapper.Create;
end;
function _CAppStatistics_ : IDispatch;
begin
  result := __CAppStatistics__Wrapper.Create;
end;
function _CCLSIDData_ : IDispatch;
begin
  result := __CCLSIDData__Wrapper.Create;
end;
function _CLSIDDATA_ : IDispatch;
begin
  result := __CLSIDDATA__Wrapper.Create;
end;
function _COMSVCSEVENTINFO_ : IDispatch;
begin
  result := __COMSVCSEVENTINFO__Wrapper.Create;
end;
function _tagBLOB_ : IDispatch;
begin
  result := __tagBLOB__Wrapper.Create;
end;
function _tagCrmLogRecordRead_ : IDispatch;
begin
  result := __tagCrmLogRecordRead__Wrapper.Create;
end;
function _XACTTRANSINFO_ : IDispatch;
begin
  result := __XACTTRANSINFO__Wrapper.Create;
end;

type ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper__ = class(____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert__MIDL___MIDL_itf_autosvcs_0279_0001ToVariant(var R : __MIDL___MIDL_itf_autosvcs_0279_0001) : OleVariant;
var
__rw : ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper__;
begin
__rw := ____MIDL___MIDL_itf_autosvcs_0279_0001__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo__MIDL___MIDL_itf_autosvcs_0279_0001(const V : OleVariant) : __MIDL___MIDL_itf_autosvcs_0279_0001;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := __MIDL___MIDL_itf_autosvcs_0279_0001((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __appData__Wrapper__ = class(__appData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __appData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertappDataToVariant(var R : appData) : OleVariant;
var
__rw : __appData__Wrapper__;
begin
__rw := __appData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToappData(const V : OleVariant) : appData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := appData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __APPSTATISTICS__Wrapper__ = class(__APPSTATISTICS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __APPSTATISTICS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertAPPSTATISTICSToVariant(var R : APPSTATISTICS) : OleVariant;
var
__rw : __APPSTATISTICS__Wrapper__;
begin
__rw := __APPSTATISTICS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToAPPSTATISTICS(const V : OleVariant) : APPSTATISTICS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := APPSTATISTICS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __BOID__Wrapper__ = class(__BOID__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __BOID__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertBOIDToVariant(var R : BOID) : OleVariant;
var
__rw : __BOID__Wrapper__;
begin
__rw := __BOID__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToBOID(const V : OleVariant) : BOID;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := BOID((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAppData__Wrapper__ = class(__CAppData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAppData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAppDataToVariant(var R : CAppData) : OleVariant;
var
__rw : __CAppData__Wrapper__;
begin
__rw := __CAppData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAppData(const V : OleVariant) : CAppData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAppData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CAppStatistics__Wrapper__ = class(__CAppStatistics__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CAppStatistics__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCAppStatisticsToVariant(var R : CAppStatistics) : OleVariant;
var
__rw : __CAppStatistics__Wrapper__;
begin
__rw := __CAppStatistics__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCAppStatistics(const V : OleVariant) : CAppStatistics;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CAppStatistics((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CCLSIDData__Wrapper__ = class(__CCLSIDData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CCLSIDData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCCLSIDDataToVariant(var R : CCLSIDData) : OleVariant;
var
__rw : __CCLSIDData__Wrapper__;
begin
__rw := __CCLSIDData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCCLSIDData(const V : OleVariant) : CCLSIDData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CCLSIDData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CLSIDDATA__Wrapper__ = class(__CLSIDDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CLSIDDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCLSIDDATAToVariant(var R : CLSIDDATA) : OleVariant;
var
__rw : __CLSIDDATA__Wrapper__;
begin
__rw := __CLSIDDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCLSIDDATA(const V : OleVariant) : CLSIDDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CLSIDDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __COMSVCSEVENTINFO__Wrapper__ = class(__COMSVCSEVENTINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __COMSVCSEVENTINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCOMSVCSEVENTINFOToVariant(var R : COMSVCSEVENTINFO) : OleVariant;
var
__rw : __COMSVCSEVENTINFO__Wrapper__;
begin
__rw := __COMSVCSEVENTINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCOMSVCSEVENTINFO(const V : OleVariant) : COMSVCSEVENTINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := COMSVCSEVENTINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagBLOB__Wrapper__ = class(__tagBLOB__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagBLOB__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagBLOBToVariant(var R : tagBLOB) : OleVariant;
var
__rw : __tagBLOB__Wrapper__;
begin
__rw := __tagBLOB__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagBLOB(const V : OleVariant) : tagBLOB;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagBLOB((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagCrmLogRecordRead__Wrapper__ = class(__tagCrmLogRecordRead__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagCrmLogRecordRead__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagCrmLogRecordReadToVariant(var R : tagCrmLogRecordRead) : OleVariant;
var
__rw : __tagCrmLogRecordRead__Wrapper__;
begin
__rw := __tagCrmLogRecordRead__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagCrmLogRecordRead(const V : OleVariant) : tagCrmLogRecordRead;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagCrmLogRecordRead((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __XACTTRANSINFO__Wrapper__ = class(__XACTTRANSINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __XACTTRANSINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertXACTTRANSINFOToVariant(var R : XACTTRANSINFO) : OleVariant;
var
__rw : __XACTTRANSINFO__Wrapper__;
begin
__rw := __XACTTRANSINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToXACTTRANSINFO(const V : OleVariant) : XACTTRANSINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := XACTTRANSINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..47] of string = (
'TxCommit'
,'TxAbort'
,'mtsErrCtxAborted'
,'mtsErrCtxAborting'
,'mtsErrCtxNoContext'
,'mtsErrCtxNotRegistered'
,'mtsErrCtxSynchTimeout'
,'mtsErrCtxOldReference'
,'mtsErrCtxRoleNotFound'
,'mtsErrCtxNoSecurity'
,'mtsErrCtxWrongThread'
,'mtsErrCtxTMNotAvailable'
,'comQCErrApplicationNotQueued'
,'comQCErrNoQueueableInterfaces'
,'comQCErrQueuingServiceNotAvailable'
,'comQCErrQueueTransactMismatch'
,'comqcErrRecorderMarshalled'
,'comqcErrOutParam'
,'comqcErrRecorderNotTrusted'
,'comqcErrPSLoad'
,'comqcErrMarshaledObjSameTxn'
,'comqcErrInvalidMessage'
,'comqcErrMsmqSidUnavailable'
,'comqcErrWrongMsgExtension'
,'comqcErrMsmqServiceUnavailable'
,'comqcErrMsgNotAuthenticated'
,'comqcErrMsmqConnectorUsed'
,'comqcErrBadMarshaledObject'
,'LockSetGet'
,'LockMethod'
,'Standard'
,'Process'
,'CRMFLAG_FORGETTARGET'
,'CRMFLAG_WRITTENDURINGPREPARE'
,'CRMFLAG_WRITTENDURINGCOMMIT'
,'CRMFLAG_WRITTENDURINGABORT'
,'CRMFLAG_WRITTENDURINGRECOVERY'
,'CRMFLAG_WRITTENDURINGREPLAY'
,'CRMFLAG_REPLAYINPROGRESS'
,'CRMREGFLAG_PREPAREPHASE'
,'CRMREGFLAG_COMMITPHASE'
,'CRMREGFLAG_ABORTPHASE'
,'CRMREGFLAG_ALLPHASES'
,'CRMREGFLAG_FAILIFINDOUBTSREMAIN'
,'TxState_Active'
,'TxState_Committed'
,'TxState_Aborted'
,'TxState_Indoubt'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,TxCommit));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,TxAbort));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,mtsErrCtxAborted));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,mtsErrCtxAborting));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,mtsErrCtxNoContext));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,mtsErrCtxNotRegistered));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,mtsErrCtxSynchTimeout));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,mtsErrCtxOldReference));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,mtsErrCtxRoleNotFound));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,mtsErrCtxNoSecurity));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,mtsErrCtxWrongThread));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,mtsErrCtxTMNotAvailable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,comQCErrApplicationNotQueued));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,comQCErrNoQueueableInterfaces));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,comQCErrQueuingServiceNotAvailable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,comQCErrQueueTransactMismatch));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,comqcErrRecorderMarshalled));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,comqcErrOutParam));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,comqcErrRecorderNotTrusted));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,comqcErrPSLoad));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,comqcErrMarshaledObjSameTxn));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,comqcErrInvalidMessage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,comqcErrMsmqSidUnavailable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,comqcErrWrongMsgExtension));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,comqcErrMsmqServiceUnavailable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,comqcErrMsgNotAuthenticated));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,comqcErrMsmqConnectorUsed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,comqcErrBadMarshaledObject));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,LockSetGet));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,LockMethod));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,Standard));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,Process));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,CRMFLAG_FORGETTARGET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,CRMFLAG_WRITTENDURINGPREPARE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,CRMFLAG_WRITTENDURINGCOMMIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,CRMFLAG_WRITTENDURINGABORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,CRMFLAG_WRITTENDURINGRECOVERY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,CRMFLAG_WRITTENDURINGREPLAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,CRMFLAG_REPLAYINPROGRESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,CRMREGFLAG_PREPAREPHASE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,CRMREGFLAG_COMMITPHASE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,CRMREGFLAG_ABORTPHASE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,CRMREGFLAG_ALLPHASES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,CRMREGFLAG_FAILIFINDOUBTSREMAIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,TxState_Active));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,TxState_Committed));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,TxState_Aborted));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,TxState_Indoubt));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..11] of string = (
'__MIDL___MIDL_itf_autosvcs_0279_0001'
,'appData'
,'APPSTATISTICS'
,'BOID'
,'CAppData'
,'CAppStatistics'
,'CCLSIDData'
,'CLSIDDATA'
,'COMSVCSEVENTINFO'
,'tagBLOB'
,'tagCrmLogRecordRead'
,'XACTTRANSINFO'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(___MIDL___MIDL_itf_autosvcs_0279_0001_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_appData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(_APPSTATISTICS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[3],Addr(_BOID_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[4],Addr(_CAppData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[5],Addr(_CAppStatistics_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[6],Addr(_CCLSIDData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[7],Addr(_CLSIDDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[8],Addr(_COMSVCSEVENTINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[9],Addr(_tagBLOB_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[10],Addr(_tagCrmLogRecordRead_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[11],Addr(_XACTTRANSINFO_)));
end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
