{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit DESIGNINTF_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  dcscript,
  dcsystem,
  dcdreamlib,
  SysUtils,
  Classes,
  Types,
  ActiveX,
  TypInfo,
  IniFiles,
  DesignerTypes,
  DesignMenus,
  Controls,
  Messages;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
{_T0 = procedure (const p0 : IDesignNotification) of object;}

{_T1 = procedure (const p0 : IDesignNotification) of object;}

{_T2 = procedure (p0 : PTypeInfo;
p1 : TClass;
const p2 : string;
p3 : TPropertyEditorClass) of object;}

{_T3 = procedure (p0 : TPropertyEditorClass;
p1 : TPersistentClass) of object;}

{_T4 = procedure (p0 : TClass;
const p1 : string) of object;}

_T5 = procedure (const p0 : string;
const p1 : string) of object;

_T6 = procedure (const p0 : string;
const p1 : Array of Const) of object;

{_T7 = procedure (p0 : TPropertyMapperFunc) of object;}

{_T8 = procedure (p0 : TComponentClass;
p1 : TComponentEditorClass) of object;}

{_T9 = procedure (p0 : TClass;
p1 : TSelectionEditorClass) of object;}

{_T10 = procedure (p0 : TComponentClass;
p1 : TCustomModuleClass) of object;}

{_T11 = function : IDesignerSelections of object;}

_T12 = procedure (p0 : TDemandLoadState) of object;

_T13 = procedure (p0 : Boolean) of object;

{_T14 = procedure (const p0 : string;
p1 : TDragTargetClass) of object;}

{_T15 = procedure (p0 : TDragObjectClass) of object;}

{_T16 = procedure (const p0 : IDropTarget) of object;}

{_T17 = function (p0 : TPersistent): IDesignObject of object;}

{_T18 = procedure (p0 : TComponentClass;
p1 : TComponentGuidelinesClass) of object;}

{_T19 = procedure (p0 : TComponent;
p1 : IDesigner) of object;}

{_T20 = procedure (const p0 : IDesigner) of object;}

_T21 = procedure (p0 : TComponent;
p1 : TComponent) of object;

{_T22 = procedure (p0 : TComponent;
const p1 : IDesigner) of object;}

{_T23 = function : TComponentClass of object;}

_T24 = procedure  of object;

{_T25 = procedure (p0 : Integer;
p1 : TPersistent;
p2 : PPropInfo) of object;}

{_T26 = procedure (const p0 : IDesigner;
p1 : Integer) of object;}

{_T27 = procedure (const p0 : IDesigner) of object;}

{_T28 = procedure (p0 : TClass) of object;}

_T29 = _T24;

{_T30 = procedure (const p0 : IDesignerSelections) of object;}

{_T31 = procedure (const p0 : IDesigner) of object;}

_T32 = function (p0 : TObject;
p1 : TObject;
p2 : Integer;
p3 : Integer;
p4 : TDragState): Boolean of object;

_T33 = procedure (p0 : TObject;
p1 : TObject;
p2 : Integer;
p3 : Integer) of object;

{_T34 = procedure (p0 : PPropInfo) of object;}

procedure __RegisterProps;
begin
end;

function __DC__GetDesignIntf__GReferenceExpandable(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := DesignIntf.GReferenceExpandable;
end;

procedure __DC__SetDesignIntf__GReferenceExpandable(Instance : TObject; Params : PVariantArgList);
begin
DesignIntf.GReferenceExpandable:=OleVariant(Params^[0]);
end;

function __DC__GetDesignIntf__GShowReadOnlyProps(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := DesignIntf.GShowReadOnlyProps;
end;

procedure __DC__SetDesignIntf__GShowReadOnlyProps(Instance : TObject; Params : PVariantArgList);
begin
DesignIntf.GShowReadOnlyProps:=OleVariant(Params^[0]);
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('GReferenceExpandable',__DC__GetDesignIntf__GReferenceExpandable,__DC__SetDesignIntf__GReferenceExpandable));
__RegisteredVars.Add(RegisterVar('GShowReadOnlyProps',__DC__GetDesignIntf__GShowReadOnlyProps,__DC__SetDesignIntf__GShowReadOnlyProps));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

const __ConstNames0 : array[0..67] of string = (
'pkProperties'
,'pkEvents'
,'paValueList'
,'paSubProperties'
,'paDialog'
,'paMultiSelect'
,'paAutoUpdate'
,'paSortList'
,'paReadOnly'
,'paRevertable'
,'paFullWidthName'
,'paVolatileSubProperties'
,'paVCL'
,'paNotNestable'
,'paDisplayReadOnly'
,'paCustomDropDown'
,'paValueEditable'
,'sActionCategoryName'
,'sDataCategoryName'
,'sDatabaseCategoryName'
,'sDragNDropCategoryName'
,'sHelpCategoryName'
,'sLayoutCategoryName'
,'sLegacyCategoryName'
,'sLinkageCategoryName'
,'sLocaleCategoryName'
,'sLocalizableCategoryName'
,'sMiscellaneousCategoryName'
,'sVisualCategoryName'
,'sInvalidFilter'
,'cmaVirtualSize'
,'MaxIdentLength'
,'eaUndo'
,'eaRedo'
,'eaCut'
,'eaCopy'
,'eaPaste'
,'eaDelete'
,'eaSelectAll'
,'eaPrint'
,'eaElide'
,'esCanUndo'
,'esCanRedo'
,'esCanCut'
,'esCanCopy'
,'esCanPaste'
,'esCanDelete'
,'esCanEditOle'
,'esCanPrint'
,'esCanSelectAll'
,'esCanCreateTemplate'
,'esCanElide'
,'dlDefault'
,'dlDisable'
,'dlEnable'
,'gtAlignLeft'
,'gtAlignTop'
,'gtAlignRight'
,'gtAlignBottom'
,'gtMarginLeft'
,'gtMarginTop'
,'gtMarginRight'
,'gtMarginBottom'
,'gtPaddingLeft'
,'gtPaddingTop'
,'gtPaddingRight'
,'gtPaddingBottom'
,'gtBaseline'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,pkProperties));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,pkEvents));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,paValueList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,paSubProperties));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,paDialog));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,paMultiSelect));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,paAutoUpdate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,paSortList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,paReadOnly));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,paRevertable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,paFullWidthName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,paVolatileSubProperties));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,paVCL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,paNotNestable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,paDisplayReadOnly));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,paCustomDropDown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,paValueEditable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,sActionCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,sDataCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,sDatabaseCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,sDragNDropCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,sHelpCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,sLayoutCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,sLegacyCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,sLinkageCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,sLocaleCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,sLocalizableCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,sMiscellaneousCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,sVisualCategoryName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,sInvalidFilter));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,cmaVirtualSize));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,MaxIdentLength));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,eaUndo));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,eaRedo));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,eaCut));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,eaCopy));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,eaPaste));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,eaDelete));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,eaSelectAll));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,eaPrint));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,eaElide));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,esCanUndo));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,esCanRedo));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,esCanCut));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,esCanCopy));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,esCanPaste));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,esCanDelete));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,esCanEditOle));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,esCanPrint));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,esCanSelectAll));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,esCanCreateTemplate));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,esCanElide));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,dlDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,dlDisable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,dlEnable));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,gtAlignLeft));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,gtAlignTop));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,gtAlignRight));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,gtAlignBottom));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,gtMarginLeft));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,gtMarginTop));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,gtMarginRight));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,gtMarginBottom));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,gtPaddingLeft));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,gtPaddingTop));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,gtPaddingRight));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,gtPaddingBottom));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,gtBaseline));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..8] of TClass = (
TBaseComponentEditor,
TBaseComponentGuidelines,
TBaseCustomModule,
TBasePropertyEditor,
TBaseSelectionEditor,
TClassWrapper,
TDesignerSelections,
TDragTarget,
TEventInfo
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..3] of string = (
'RegisterPropertyInCategory'
,'RegisterPropertiesInCategory'
,'ForceDemandLoadState'
,'EnableDemandLoadReport'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T5),[
TypeInfo(string),
TypeInfo(string)],Addr(RegisterPropertyInCategory),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T6),[
TypeInfo(string),
TypeInfoArrayOfConst],Addr(RegisterPropertiesInCategory),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T12),[
TypeInfo(TDemandLoadState)],Addr(ForceDemandLoadState),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T13),[
TypeInfo(Boolean)],Addr(EnableDemandLoadReport),cRegister);

//RegRegisterMethod(TBaseComponentGuidelines,'Initialize',TypeInfo(_T21),[TypeInfo(TComponent),TypeInfo(TComponent)], pointer(4));
RegRegisterMethod(TBaseComponentGuidelines,'Initialize',TypeInfo(_T21),[TypeInfo(TComponent),TypeInfo(TComponent)],  getVMTProcAddr('TBaseComponentGuidelines','Initialize',4));


//RegRegisterMethod(TBasePropertyEditor,'Initialize',TypeInfo(_T24),NoParams, pointer(0));
RegRegisterMethod(TBasePropertyEditor,'Initialize',TypeInfo(_T24),NoParams,  getVMTProcAddr('TBasePropertyEditor','Initialize',0));


RegisterProc(TDesignerSelections,'Create',mtConstructor,TypeInfo(_T29),NoParams, pointer(0),cRegister);

//RegRegisterMethod(TDragTarget,'DragOver',TypeInfo(_T32),[TypeInfo(TObject),TypeInfo(TObject),TypeInfo(Integer),TypeInfo(Integer),TypeInfo(TDragState),TypeInfo(Boolean)], pointer(4));
RegRegisterMethod(TDragTarget,'DragOver',TypeInfo(_T32),[TypeInfo(TObject),TypeInfo(TObject),TypeInfo(Integer),TypeInfo(Integer),TypeInfo(TDragState),TypeInfo(Boolean)],  getVMTProcAddr('TDragTarget','DragOver',4));


//RegRegisterMethod(TDragTarget,'DragDrop',TypeInfo(_T33),[TypeInfo(TObject),TypeInfo(TObject),TypeInfo(Integer),TypeInfo(Integer)], pointer(8));
RegRegisterMethod(TDragTarget,'DragDrop',TypeInfo(_T33),[TypeInfo(TObject),TypeInfo(TObject),TypeInfo(Integer),TypeInfo(Integer)],  getVMTProcAddr('TDragTarget','DragDrop',8));


end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'RegisterDesignNotification',mtProc,TypeInfo(_T0),[
TypeInfo(IDesignNotification)],Addr(RegisterDesignNotification),cRegister)}

{RegisterProc(nil,'UnregisterDesignNotification',mtProc,TypeInfo(_T1),[
TypeInfo(IDesignNotification)],Addr(UnregisterDesignNotification),cRegister)}

{RegisterProc(nil,'RegisterPropertyEditor',mtProc,TypeInfo(_T2),[
TypeInfoPointer,
TypeInfo(TClass),
TypeInfo(string),
TypeInfo(TPropertyEditorClass)],Addr(RegisterPropertyEditor),cRegister)}

{RegisterProc(nil,'SetPropertyEditorGroup',mtProc,TypeInfo(_T3),[
TypeInfo(TPropertyEditorClass),
TypeInfo(TPersistentClass)],Addr(SetPropertyEditorGroup),cRegister)}

{RegisterProc(nil,'UnlistPublishedProperty',mtProc,TypeInfo(_T4),[
TypeInfo(TClass),
TypeInfo(string)],Addr(UnlistPublishedProperty),cRegister)}

{RegisterProc(nil,'RegisterPropertyMapper',mtProc,TypeInfo(_T7),[
TypeInfo(TPropertyMapperFunc)],Addr(RegisterPropertyMapper),cRegister)}

{RegisterProc(nil,'RegisterComponentEditor',mtProc,TypeInfo(_T8),[
TypeInfo(TComponentClass),
TypeInfo(TComponentEditorClass)],Addr(RegisterComponentEditor),cRegister)}

{RegisterProc(nil,'RegisterSelectionEditor',mtProc,TypeInfo(_T9),[
TypeInfo(TClass),
TypeInfo(TSelectionEditorClass)],Addr(RegisterSelectionEditor),cRegister)}

{RegisterProc(nil,'RegisterCustomModule',mtProc,TypeInfo(_T10),[
TypeInfo(TComponentClass),
TypeInfo(TCustomModuleClass)],Addr(RegisterCustomModule),cRegister)}

{RegisterProc(nil,'CreateSelectionList',mtProc,TypeInfo(_T11),[TypeInfo(IDesignerSelections)],Addr(CreateSelectionList),cRegister)}

{RegisterProc(nil,'RegisterDragTarget',mtProc,TypeInfo(_T14),[
TypeInfo(string),
TypeInfo(TDragTargetClass)],Addr(RegisterDragTarget),cRegister)}

{RegisterProc(nil,'RegisterDesignDragObject',mtProc,TypeInfo(_T15),[
TypeInfo(TDragObjectClass)],Addr(RegisterDesignDragObject),cRegister)}

{RegisterProc(nil,'RegisterIDropTarget',mtProc,TypeInfo(_T16),[
TypeInfo(IDropTarget)],Addr(RegisterIDropTarget),cRegister)}

{RegisterProc(nil,'PersistentToDesignObject',mtProc,TypeInfo(_T17),[
TypeInfo(TPersistent),TypeInfo(IDesignObject)],Addr(PersistentToDesignObject),cRegister)}

{RegisterProc(nil,'RegisterComponentGuidelines',mtProc,TypeInfo(_T18),[
TypeInfo(TComponentClass),
TypeInfo(TComponentGuidelinesClass)],Addr(RegisterComponentGuidelines),cRegister)}

{RegisterProc(TBaseComponentEditor,'Create',mtConstructor,TypeInfo(_T19),[
TypeInfo(TComponent),
TypeInfo(IDesigner)], pointer(0),cRegister)}

{RegisterProc(TBaseComponentGuidelines,'Create',mtConstructor,TypeInfo(_T20),[
TypeInfo(IDesigner)], pointer(0),cRegister)}

{RegisterProc(TBaseCustomModule,'Create',mtConstructor,TypeInfo(_T22),[
TypeInfo(TComponent),
TypeInfo(IDesigner)], pointer(0),cRegister)}

{RegisterProc(TBaseCustomModule,'DesignClass',mtClassMethod,TypeInfo(_T23),[TypeInfo(TComponentClass)], pointer(4),cRegister)}

{RegRegisterMethod(TBasePropertyEditor,'SetPropEntry',TypeInfo(_T25),[
TypeInfo(Integer),
TypeInfo(TPersistent),
TypeInfoPointer], pointer(4))}

{RegisterProc(TBasePropertyEditor,'Create',mtConstructor,TypeInfo(_T26),[
TypeInfo(IDesigner),
TypeInfo(Integer)], pointer(8),cRegister)}

{RegisterProc(TBaseSelectionEditor,'Create',mtConstructor,TypeInfo(_T27),[
TypeInfo(IDesigner)], pointer(0),cRegister)}

{RegisterProc(TClassWrapper,'Create',mtConstructor,TypeInfo(_T28),[
TypeInfo(TClass)],Addr(TClassWrapper.Create),cRegister)}

{RegisterProc(TDesignerSelections,'Copy',mtConstructor,TypeInfo(_T30),[
TypeInfo(IDesignerSelections)],Addr(TDesignerSelections.Copy),cRegister)}

{RegisterProc(TDragTarget,'Create',mtConstructor,TypeInfo(_T31),[
TypeInfo(IDesigner)], pointer(0),cRegister)}

{RegisterProc(TEventInfo,'Create',mtConstructor,TypeInfo(_T34),[
TypeInfoPointer],Addr(TEventInfo.Create),cRegister)}

{RegisterEvent(TypeInfo(TGetDesignerEvent),[
TypeInfo(TObject),
TypeInfo(IDesigner)]);}

{RegisterEvent(TypeInfo(TGetPropProc),[
TypeInfo(IProperty)]);}

RegisterEvent(TypeInfo(TGetWideStrProc),[
TypeInfo(WideString)]);

{RegisterEvent(TypeInfo(TPropertyEditorFilterFunc),[
TypeInfo(IProperty),TypeInfo(Boolean)]);}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
