{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit WINSOCK_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  Types,
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  WinSock;
function Convert_TRANSMIT_FILE_BUFFERSToVariant(var R : _TRANSMIT_FILE_BUFFERS) : OleVariant;
function ConvertVariantTo_TRANSMIT_FILE_BUFFERS(const V : OleVariant) : _TRANSMIT_FILE_BUFFERS;
function ConverthostentToVariant(var R : hostent) : OleVariant;
function ConvertVariantTohostent(const V : OleVariant) : hostent;
function Convertin_addrToVariant(var R : in_addr) : OleVariant;
function ConvertVariantToin_addr(const V : OleVariant) : in_addr;
function ConvertlingerToVariant(var R : linger) : OleVariant;
function ConvertVariantTolinger(const V : OleVariant) : linger;
function ConvertnetentToVariant(var R : netent) : OleVariant;
function ConvertVariantTonetent(const V : OleVariant) : netent;
function ConvertprotoentToVariant(var R : protoent) : OleVariant;
function ConvertVariantToprotoent(const V : OleVariant) : protoent;
function ConvertserventToVariant(var R : servent) : OleVariant;
function ConvertVariantToservent(const V : OleVariant) : servent;
function Convertsockaddr_inToVariant(var R : sockaddr_in) : OleVariant;
function ConvertVariantTosockaddr_in(const V : OleVariant) : sockaddr_in;
function ConvertsockprotoToVariant(var R : sockproto) : OleVariant;
function ConvertVariantTosockproto(const V : OleVariant) : sockproto;
function ConvertSunBToVariant(var R : SunB) : OleVariant;
function ConvertVariantToSunB(const V : OleVariant) : SunB;
function ConvertSunWToVariant(var R : SunW) : OleVariant;
function ConvertVariantToSunW(const V : OleVariant) : SunW;
function ConvertTFDSetToVariant(var R : TFDSet) : OleVariant;
function ConvertVariantToTFDSet(const V : OleVariant) : TFDSet;
function ConvertTHostEntToVariant(var R : THostEnt) : OleVariant;
function ConvertVariantToTHostEnt(const V : OleVariant) : THostEnt;
function ConverttimevalToVariant(var R : timeval) : OleVariant;
function ConvertVariantTotimeval(const V : OleVariant) : timeval;
function ConvertTInAddrToVariant(var R : TInAddr) : OleVariant;
function ConvertVariantToTInAddr(const V : OleVariant) : TInAddr;
function ConvertTLingerToVariant(var R : TLinger) : OleVariant;
function ConvertVariantToTLinger(const V : OleVariant) : TLinger;
function ConvertTNetEntToVariant(var R : TNetEnt) : OleVariant;
function ConvertVariantToTNetEnt(const V : OleVariant) : TNetEnt;
function ConvertTProtoEntToVariant(var R : TProtoEnt) : OleVariant;
function ConvertVariantToTProtoEnt(const V : OleVariant) : TProtoEnt;
function ConvertTRANSMIT_FILE_BUFFERSToVariant(var R : TRANSMIT_FILE_BUFFERS) : OleVariant;
function ConvertVariantToTRANSMIT_FILE_BUFFERS(const V : OleVariant) : TRANSMIT_FILE_BUFFERS;
function ConvertTServEntToVariant(var R : TServEnt) : OleVariant;
function ConvertVariantToTServEnt(const V : OleVariant) : TServEnt;
function ConvertTSockAddrToVariant(var R : TSockAddr) : OleVariant;
function ConvertVariantToTSockAddr(const V : OleVariant) : TSockAddr;
function ConvertTSockAddrInToVariant(var R : TSockAddrIn) : OleVariant;
function ConvertVariantToTSockAddrIn(const V : OleVariant) : TSockAddrIn;
function ConvertTSockProtoToVariant(var R : TSockProto) : OleVariant;
function ConvertVariantToTSockProto(const V : OleVariant) : TSockProto;
function ConvertTTimeValToVariant(var R : TTimeVal) : OleVariant;
function ConvertVariantToTTimeVal(const V : OleVariant) : TTimeVal;
function ConvertTTransmitFileBuffersToVariant(var R : TTransmitFileBuffers) : OleVariant;
function ConvertVariantToTTransmitFileBuffers(const V : OleVariant) : TTransmitFileBuffers;
function ConvertTWSADataToVariant(var R : TWSAData) : OleVariant;
function ConvertVariantToTWSAData(const V : OleVariant) : TWSAData;
function ConvertWSADataToVariant(var R : WSAData) : OleVariant;
function ConvertVariantToWSAData(const V : OleVariant) : WSAData;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type ___TRANSMIT_FILE_BUFFERS__Wrapper = class(TDCRecordWrapper)
private
fR : _TRANSMIT_FILE_BUFFERS;
public
function GetRecordPtr : pointer; override;
published
procedure setHeadLength(const val : DWORD);
function getHeadLength : DWORD;
property HeadLength : DWORD read getHeadLength write setHeadLength;
procedure setTailLength(const val : DWORD);
function getTailLength : DWORD;
property TailLength : DWORD read getTailLength write setTailLength;
end;
type __hostent__Wrapper = class(TDCRecordWrapper)
private
fR : hostent;
public
function GetRecordPtr : pointer; override;
published
procedure seth_addrtype(const val : SmallInt);
function geth_addrtype : SmallInt;
property h_addrtype : SmallInt read geth_addrtype write seth_addrtype;
procedure seth_length(const val : SmallInt);
function geth_length : SmallInt;
property h_length : SmallInt read geth_length write seth_length;
end;
type __in_addr__Wrapper = class(TDCRecordWrapper)
private
fR : in_addr;
public
function GetRecordPtr : pointer; override;
published
procedure setS_addr(const val : u_long);
function getS_addr : u_long;
property S_addr : u_long read getS_addr write setS_addr;
end;
type __linger__Wrapper = class(TDCRecordWrapper)
private
fR : linger;
public
function GetRecordPtr : pointer; override;
published
procedure setl_onoff(const val : u_short);
function getl_onoff : u_short;
property l_onoff : u_short read getl_onoff write setl_onoff;
procedure setl_linger(const val : u_short);
function getl_linger : u_short;
property l_linger : u_short read getl_linger write setl_linger;
end;
type __netent__Wrapper = class(TDCRecordWrapper)
private
fR : netent;
public
function GetRecordPtr : pointer; override;
published
procedure setn_addrtype(const val : SmallInt);
function getn_addrtype : SmallInt;
property n_addrtype : SmallInt read getn_addrtype write setn_addrtype;
procedure setn_net(const val : u_long);
function getn_net : u_long;
property n_net : u_long read getn_net write setn_net;
end;
type __protoent__Wrapper = class(TDCRecordWrapper)
private
fR : protoent;
public
function GetRecordPtr : pointer; override;
published
procedure setp_proto(const val : SmallInt);
function getp_proto : SmallInt;
property p_proto : SmallInt read getp_proto write setp_proto;
end;
type __servent__Wrapper = class(TDCRecordWrapper)
private
fR : servent;
public
function GetRecordPtr : pointer; override;
published
procedure sets_port(const val : Word);
function gets_port : Word;
property s_port : Word read gets_port write sets_port;
end;
type __sockaddr_in__Wrapper = class(TDCRecordWrapper)
private
fR : sockaddr_in;
public
function GetRecordPtr : pointer; override;
published
procedure setsin_family(const val : u_short);
function getsin_family : u_short;
property sin_family : u_short read getsin_family write setsin_family;
procedure setsin_port(const val : u_short);
function getsin_port : u_short;
property sin_port : u_short read getsin_port write setsin_port;
procedure setsa_family(const val : u_short);
function getsa_family : u_short;
property sa_family : u_short read getsa_family write setsa_family;
end;
type __sockproto__Wrapper = class(TDCRecordWrapper)
private
fR : sockproto;
public
function GetRecordPtr : pointer; override;
published
procedure setsp_family(const val : u_short);
function getsp_family : u_short;
property sp_family : u_short read getsp_family write setsp_family;
procedure setsp_protocol(const val : u_short);
function getsp_protocol : u_short;
property sp_protocol : u_short read getsp_protocol write setsp_protocol;
end;
type __SunB__Wrapper = class(TDCRecordWrapper)
private
fR : SunB;
public
function GetRecordPtr : pointer; override;
published
procedure sets_b1(const val : u_char);
function gets_b1 : u_char;
property s_b1 : u_char read gets_b1 write sets_b1;
procedure sets_b2(const val : u_char);
function gets_b2 : u_char;
property s_b2 : u_char read gets_b2 write sets_b2;
procedure sets_b3(const val : u_char);
function gets_b3 : u_char;
property s_b3 : u_char read gets_b3 write sets_b3;
procedure sets_b4(const val : u_char);
function gets_b4 : u_char;
property s_b4 : u_char read gets_b4 write sets_b4;
end;
type __SunW__Wrapper = class(TDCRecordWrapper)
private
fR : SunW;
public
function GetRecordPtr : pointer; override;
published
procedure sets_w1(const val : u_short);
function gets_w1 : u_short;
property s_w1 : u_short read gets_w1 write sets_w1;
procedure sets_w2(const val : u_short);
function gets_w2 : u_short;
property s_w2 : u_short read gets_w2 write sets_w2;
end;
type __TFDSet__Wrapper = class(TDCRecordWrapper)
private
fR : TFDSet;
public
function GetRecordPtr : pointer; override;
published
procedure setfd_count(const val : u_int);
function getfd_count : u_int;
property fd_count : u_int read getfd_count write setfd_count;
end;
type __THostEnt__Wrapper = class(TDCRecordWrapper)
private
fR : THostEnt;
public
function GetRecordPtr : pointer; override;
published
procedure seth_addrtype(const val : SmallInt);
function geth_addrtype : SmallInt;
property h_addrtype : SmallInt read geth_addrtype write seth_addrtype;
procedure seth_length(const val : SmallInt);
function geth_length : SmallInt;
property h_length : SmallInt read geth_length write seth_length;
end;
type __timeval__Wrapper = class(TDCRecordWrapper)
private
fR : timeval;
public
function GetRecordPtr : pointer; override;
published
procedure settv_sec(const val : Longint);
function gettv_sec : Longint;
property tv_sec : Longint read gettv_sec write settv_sec;
procedure settv_usec(const val : Longint);
function gettv_usec : Longint;
property tv_usec : Longint read gettv_usec write settv_usec;
end;
type __TInAddr__Wrapper = class(TDCRecordWrapper)
private
fR : TInAddr;
public
function GetRecordPtr : pointer; override;
published
procedure setS_addr(const val : u_long);
function getS_addr : u_long;
property S_addr : u_long read getS_addr write setS_addr;
end;
type __TLinger__Wrapper = class(TDCRecordWrapper)
private
fR : TLinger;
public
function GetRecordPtr : pointer; override;
published
procedure setl_onoff(const val : u_short);
function getl_onoff : u_short;
property l_onoff : u_short read getl_onoff write setl_onoff;
procedure setl_linger(const val : u_short);
function getl_linger : u_short;
property l_linger : u_short read getl_linger write setl_linger;
end;
type __TNetEnt__Wrapper = class(TDCRecordWrapper)
private
fR : TNetEnt;
public
function GetRecordPtr : pointer; override;
published
procedure setn_addrtype(const val : SmallInt);
function getn_addrtype : SmallInt;
property n_addrtype : SmallInt read getn_addrtype write setn_addrtype;
procedure setn_net(const val : u_long);
function getn_net : u_long;
property n_net : u_long read getn_net write setn_net;
end;
type __TProtoEnt__Wrapper = class(TDCRecordWrapper)
private
fR : TProtoEnt;
public
function GetRecordPtr : pointer; override;
published
procedure setp_proto(const val : SmallInt);
function getp_proto : SmallInt;
property p_proto : SmallInt read getp_proto write setp_proto;
end;
type __TRANSMIT_FILE_BUFFERS__Wrapper = class(TDCRecordWrapper)
private
fR : TRANSMIT_FILE_BUFFERS;
public
function GetRecordPtr : pointer; override;
published
procedure setHeadLength(const val : DWORD);
function getHeadLength : DWORD;
property HeadLength : DWORD read getHeadLength write setHeadLength;
procedure setTailLength(const val : DWORD);
function getTailLength : DWORD;
property TailLength : DWORD read getTailLength write setTailLength;
end;
type __TServEnt__Wrapper = class(TDCRecordWrapper)
private
fR : TServEnt;
public
function GetRecordPtr : pointer; override;
published
procedure sets_port(const val : Word);
function gets_port : Word;
property s_port : Word read gets_port write sets_port;
end;
type __TSockAddr__Wrapper = class(TDCRecordWrapper)
private
fR : TSockAddr;
public
function GetRecordPtr : pointer; override;
published
procedure setsin_family(const val : u_short);
function getsin_family : u_short;
property sin_family : u_short read getsin_family write setsin_family;
procedure setsin_port(const val : u_short);
function getsin_port : u_short;
property sin_port : u_short read getsin_port write setsin_port;
procedure setsa_family(const val : u_short);
function getsa_family : u_short;
property sa_family : u_short read getsa_family write setsa_family;
end;
type __TSockAddrIn__Wrapper = class(TDCRecordWrapper)
private
fR : TSockAddrIn;
public
function GetRecordPtr : pointer; override;
published
procedure setsin_family(const val : u_short);
function getsin_family : u_short;
property sin_family : u_short read getsin_family write setsin_family;
procedure setsin_port(const val : u_short);
function getsin_port : u_short;
property sin_port : u_short read getsin_port write setsin_port;
procedure setsa_family(const val : u_short);
function getsa_family : u_short;
property sa_family : u_short read getsa_family write setsa_family;
end;
type __TSockProto__Wrapper = class(TDCRecordWrapper)
private
fR : TSockProto;
public
function GetRecordPtr : pointer; override;
published
procedure setsp_family(const val : u_short);
function getsp_family : u_short;
property sp_family : u_short read getsp_family write setsp_family;
procedure setsp_protocol(const val : u_short);
function getsp_protocol : u_short;
property sp_protocol : u_short read getsp_protocol write setsp_protocol;
end;
type __TTimeVal__Wrapper = class(TDCRecordWrapper)
private
fR : TTimeVal;
public
function GetRecordPtr : pointer; override;
published
procedure settv_sec(const val : Longint);
function gettv_sec : Longint;
property tv_sec : Longint read gettv_sec write settv_sec;
procedure settv_usec(const val : Longint);
function gettv_usec : Longint;
property tv_usec : Longint read gettv_usec write settv_usec;
end;
type __TTransmitFileBuffers__Wrapper = class(TDCRecordWrapper)
private
fR : TTransmitFileBuffers;
public
function GetRecordPtr : pointer; override;
published
procedure setHeadLength(const val : DWORD);
function getHeadLength : DWORD;
property HeadLength : DWORD read getHeadLength write setHeadLength;
procedure setTailLength(const val : DWORD);
function getTailLength : DWORD;
property TailLength : DWORD read getTailLength write setTailLength;
end;
type __TWSAData__Wrapper = class(TDCRecordWrapper)
private
fR : TWSAData;
public
function GetRecordPtr : pointer; override;
published
procedure setwVersion(const val : Word);
function getwVersion : Word;
property wVersion : Word read getwVersion write setwVersion;
procedure setwHighVersion(const val : Word);
function getwHighVersion : Word;
property wHighVersion : Word read getwHighVersion write setwHighVersion;
procedure setiMaxSockets(const val : Word);
function getiMaxSockets : Word;
property iMaxSockets : Word read getiMaxSockets write setiMaxSockets;
procedure setiMaxUdpDg(const val : Word);
function getiMaxUdpDg : Word;
property iMaxUdpDg : Word read getiMaxUdpDg write setiMaxUdpDg;
end;
type __WSAData__Wrapper = class(TDCRecordWrapper)
private
fR : WSAData;
public
function GetRecordPtr : pointer; override;
published
procedure setwVersion(const val : Word);
function getwVersion : Word;
property wVersion : Word read getwVersion write setwVersion;
procedure setwHighVersion(const val : Word);
function getwHighVersion : Word;
property wHighVersion : Word read getwHighVersion write setwHighVersion;
procedure setiMaxSockets(const val : Word);
function getiMaxSockets : Word;
property iMaxSockets : Word read getiMaxSockets write setiMaxSockets;
procedure setiMaxUdpDg(const val : Word);
function getiMaxUdpDg : Word;
property iMaxUdpDg : Word read getiMaxUdpDg write setiMaxUdpDg;
end;
type
{_T0 = function (p0 : TSocket;
p1 : PSOCKADDR;
p2 : PInteger): TSocket of object;}

_T1 = function (p0 : TSocket;
const p1 : IDispatch;
p2 : Integer): Integer of object;

_T2 = function (p0 : TSocket): Integer of object;

_T3 = _T1;

_T4 = function (p0 : TSocket;
p1 : DWORD;
var p2 : u_long): Integer of object;

_T5 = function (p0 : TSocket;
const p1 : IDispatch;
var p2 : Integer): Integer of object;

_T6 = _T5;

{_T7 = function (p0 : TSocket;
p1 : Integer;
p2 : Integer;
p3 : PChar;
var p4 : Integer): Integer of object;}

_T8 = function (p0 : u_long): u_long of object;

_T9 = function (p0 : u_short): u_short of object;

{_T10 = function (p0 : PChar): u_long of object;}

_T11 = function (const p0 : IDispatch): PChar of object;

_T12 = function (p0 : TSocket;
p1 : Integer): Integer of object;

_T13 = _T8;

_T14 = _T9;

_T15 = function (p0 : TSocket;
var p1 : TSocket;
p2 : Integer;
p3 : Integer): Integer of object;

_T16 = function (p0 : TSocket;
var p1 : TSocket;
p2 : Integer;
p3 : Integer;
const p4 : IDispatch;
var p5 : Integer): Integer of object;

{_T17 = function (p0 : Integer;
p1 : PFDSet;
p2 : PFDSet;
p3 : PFDSet;
p4 : PTimeVal): Longint of object;}

_T18 = _T15;

_T19 = function (p0 : TSocket;
var p1 : TSocket;
p2 : Integer;
p3 : Integer;
const p4 : IDispatch;
p5 : Integer): Integer of object;

{_T20 = function (p0 : TSocket;
p1 : Integer;
p2 : Integer;
p3 : PChar;
p4 : Integer): Integer of object;}

_T21 = _T12;

_T22 = function (p0 : Integer;
p1 : Integer;
p2 : Integer): TSocket of object;

{_T23 = function (p0 : Pointer;
p1 : Integer;
p2 : Integer): PHostEnt of object;}

{_T24 = function (p0 : PChar): PHostEnt of object;}

{_T25 = function (p0 : PChar;
p1 : Integer): Integer of object;}

{_T26 = function (p0 : Integer;
p1 : PChar): PServEnt of object;}

{_T27 = function (p0 : PChar;
p1 : PChar): PServEnt of object;}

{_T28 = function (p0 : Integer): PProtoEnt of object;}

{_T29 = function (p0 : PChar): PProtoEnt of object;}

_T30 = function (p0 : Word;
const p1 : IDispatch): Integer of object;

_T31 = function : Integer of object;

_T32 = procedure (p0 : Integer) of object;

_T33 = _T31;

_T34 = function : BOOL of object;

_T35 = _T31;

_T36 = function (p0 : TFarProc): TFarProc of object;

_T37 = _T31;

{_T38 = function (p0 : HWND;
p1 : u_int;
p2 : PChar;
p3 : PChar;
p4 : PChar;
p5 : Integer): THandle of object;}

{_T39 = function (p0 : HWND;
p1 : u_int;
p2 : u_int;
p3 : PChar;
p4 : PChar;
p5 : Integer): THandle of object;}

{_T40 = function (p0 : HWND;
p1 : u_int;
p2 : PChar;
p3 : PChar;
p4 : Integer): THandle of object;}

{_T41 = function (p0 : HWND;
p1 : u_int;
p2 : Integer;
p3 : PChar;
p4 : Integer): THandle of object;}

{_T42 = function (p0 : HWND;
p1 : u_int;
p2 : PChar;
p3 : PChar;
p4 : Integer): THandle of object;}

{_T43 = function (p0 : HWND;
p1 : u_int;
p2 : PChar;
p3 : Integer;
p4 : Integer;
p5 : PChar;
p6 : Integer): THandle of object;}

_T44 = function (p0 : THandle): Integer of object;

_T45 = function (p0 : TSocket;
p1 : HWND;
p2 : u_int;
p3 : Longint): Integer of object;

_T46 = function (p0 : TSocket;
var p1 : TSocket;
p2 : Integer;
var p3 : Integer): Integer of object;

_T47 = function (p0 : TSocket;
const p1 : IDispatch): BOOL of object;

{_T48 = function (p0 : TSocket;
p1 : THandle;
p2 : DWORD;
p3 : DWORD;
p4 : POverlapped;
p5 : PTransmitFileBuffers;
p6 : DWORD): BOOL of object;}

{_T49 = function (p0 : TSocket;
p1 : TSocket;
p2 : Pointer;
p3 : DWORD;
p4 : DWORD;
p5 : DWORD;
var p6 : DWORD;
p7 : POverlapped): BOOL of object;}

{_T50 = procedure (p0 : Pointer;
p1 : DWORD;
p2 : DWORD;
p3 : DWORD;
var p4 : PSOCKADDR;
var p5 : Integer;
var p6 : PSOCKADDR;
var p7 : Integer) of object;}

_T51 = function (p0 : Word;
p1 : Word): Longint of object;

_T52 = _T51;

_T53 = function (p0 : Longint): Word of object;

_T54 = _T53;

_T55 = _T53;

_T56 = _T53;

_T57 = procedure (p0 : TSocket;
const p1 : IDispatch) of object;

_T58 = function (p0 : TSocket;
const p1 : IDispatch): Boolean of object;

_T59 = _T57;

_T60 = procedure (const p0 : IDispatch) of object;

function ___TRANSMIT_FILE_BUFFERS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___TRANSMIT_FILE_BUFFERS__Wrapper.setHeadLength(const val : DWORD);
begin
_TRANSMIT_FILE_BUFFERS(GetRecordPtr^).HeadLength := val;
end;
function ___TRANSMIT_FILE_BUFFERS__Wrapper.getHeadLength : DWORD;
begin
result := _TRANSMIT_FILE_BUFFERS(GetRecordPtr^).HeadLength;
end;
procedure ___TRANSMIT_FILE_BUFFERS__Wrapper.setTailLength(const val : DWORD);
begin
_TRANSMIT_FILE_BUFFERS(GetRecordPtr^).TailLength := val;
end;
function ___TRANSMIT_FILE_BUFFERS__Wrapper.getTailLength : DWORD;
begin
result := _TRANSMIT_FILE_BUFFERS(GetRecordPtr^).TailLength;
end;
function __hostent__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __hostent__Wrapper.seth_addrtype(const val : SmallInt);
begin
hostent(GetRecordPtr^).h_addrtype := val;
end;
function __hostent__Wrapper.geth_addrtype : SmallInt;
begin
result := hostent(GetRecordPtr^).h_addrtype;
end;
procedure __hostent__Wrapper.seth_length(const val : SmallInt);
begin
hostent(GetRecordPtr^).h_length := val;
end;
function __hostent__Wrapper.geth_length : SmallInt;
begin
result := hostent(GetRecordPtr^).h_length;
end;
function __in_addr__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __in_addr__Wrapper.setS_addr(const val : u_long);
begin
in_addr(GetRecordPtr^).S_addr := val;
end;
function __in_addr__Wrapper.getS_addr : u_long;
begin
result := in_addr(GetRecordPtr^).S_addr;
end;
function __linger__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __linger__Wrapper.setl_onoff(const val : u_short);
begin
linger(GetRecordPtr^).l_onoff := val;
end;
function __linger__Wrapper.getl_onoff : u_short;
begin
result := linger(GetRecordPtr^).l_onoff;
end;
procedure __linger__Wrapper.setl_linger(const val : u_short);
begin
linger(GetRecordPtr^).l_linger := val;
end;
function __linger__Wrapper.getl_linger : u_short;
begin
result := linger(GetRecordPtr^).l_linger;
end;
function __netent__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __netent__Wrapper.setn_addrtype(const val : SmallInt);
begin
netent(GetRecordPtr^).n_addrtype := val;
end;
function __netent__Wrapper.getn_addrtype : SmallInt;
begin
result := netent(GetRecordPtr^).n_addrtype;
end;
procedure __netent__Wrapper.setn_net(const val : u_long);
begin
netent(GetRecordPtr^).n_net := val;
end;
function __netent__Wrapper.getn_net : u_long;
begin
result := netent(GetRecordPtr^).n_net;
end;
function __protoent__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __protoent__Wrapper.setp_proto(const val : SmallInt);
begin
protoent(GetRecordPtr^).p_proto := val;
end;
function __protoent__Wrapper.getp_proto : SmallInt;
begin
result := protoent(GetRecordPtr^).p_proto;
end;
function __servent__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __servent__Wrapper.sets_port(const val : Word);
begin
servent(GetRecordPtr^).s_port := val;
end;
function __servent__Wrapper.gets_port : Word;
begin
result := servent(GetRecordPtr^).s_port;
end;
function __sockaddr_in__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __sockaddr_in__Wrapper.setsin_family(const val : u_short);
begin
sockaddr_in(GetRecordPtr^).sin_family := val;
end;
function __sockaddr_in__Wrapper.getsin_family : u_short;
begin
result := sockaddr_in(GetRecordPtr^).sin_family;
end;
procedure __sockaddr_in__Wrapper.setsin_port(const val : u_short);
begin
sockaddr_in(GetRecordPtr^).sin_port := val;
end;
function __sockaddr_in__Wrapper.getsin_port : u_short;
begin
result := sockaddr_in(GetRecordPtr^).sin_port;
end;
procedure __sockaddr_in__Wrapper.setsa_family(const val : u_short);
begin
sockaddr_in(GetRecordPtr^).sa_family := val;
end;
function __sockaddr_in__Wrapper.getsa_family : u_short;
begin
result := sockaddr_in(GetRecordPtr^).sa_family;
end;
function __sockproto__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __sockproto__Wrapper.setsp_family(const val : u_short);
begin
sockproto(GetRecordPtr^).sp_family := val;
end;
function __sockproto__Wrapper.getsp_family : u_short;
begin
result := sockproto(GetRecordPtr^).sp_family;
end;
procedure __sockproto__Wrapper.setsp_protocol(const val : u_short);
begin
sockproto(GetRecordPtr^).sp_protocol := val;
end;
function __sockproto__Wrapper.getsp_protocol : u_short;
begin
result := sockproto(GetRecordPtr^).sp_protocol;
end;
function __SunB__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SunB__Wrapper.sets_b1(const val : u_char);
begin
SunB(GetRecordPtr^).s_b1 := val;
end;
function __SunB__Wrapper.gets_b1 : u_char;
begin
result := SunB(GetRecordPtr^).s_b1;
end;
procedure __SunB__Wrapper.sets_b2(const val : u_char);
begin
SunB(GetRecordPtr^).s_b2 := val;
end;
function __SunB__Wrapper.gets_b2 : u_char;
begin
result := SunB(GetRecordPtr^).s_b2;
end;
procedure __SunB__Wrapper.sets_b3(const val : u_char);
begin
SunB(GetRecordPtr^).s_b3 := val;
end;
function __SunB__Wrapper.gets_b3 : u_char;
begin
result := SunB(GetRecordPtr^).s_b3;
end;
procedure __SunB__Wrapper.sets_b4(const val : u_char);
begin
SunB(GetRecordPtr^).s_b4 := val;
end;
function __SunB__Wrapper.gets_b4 : u_char;
begin
result := SunB(GetRecordPtr^).s_b4;
end;
function __SunW__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SunW__Wrapper.sets_w1(const val : u_short);
begin
SunW(GetRecordPtr^).s_w1 := val;
end;
function __SunW__Wrapper.gets_w1 : u_short;
begin
result := SunW(GetRecordPtr^).s_w1;
end;
procedure __SunW__Wrapper.sets_w2(const val : u_short);
begin
SunW(GetRecordPtr^).s_w2 := val;
end;
function __SunW__Wrapper.gets_w2 : u_short;
begin
result := SunW(GetRecordPtr^).s_w2;
end;
function __TFDSet__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TFDSet__Wrapper.setfd_count(const val : u_int);
begin
TFDSet(GetRecordPtr^).fd_count := val;
end;
function __TFDSet__Wrapper.getfd_count : u_int;
begin
result := TFDSet(GetRecordPtr^).fd_count;
end;
function __THostEnt__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __THostEnt__Wrapper.seth_addrtype(const val : SmallInt);
begin
THostEnt(GetRecordPtr^).h_addrtype := val;
end;
function __THostEnt__Wrapper.geth_addrtype : SmallInt;
begin
result := THostEnt(GetRecordPtr^).h_addrtype;
end;
procedure __THostEnt__Wrapper.seth_length(const val : SmallInt);
begin
THostEnt(GetRecordPtr^).h_length := val;
end;
function __THostEnt__Wrapper.geth_length : SmallInt;
begin
result := THostEnt(GetRecordPtr^).h_length;
end;
function __timeval__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __timeval__Wrapper.settv_sec(const val : Longint);
begin
timeval(GetRecordPtr^).tv_sec := val;
end;
function __timeval__Wrapper.gettv_sec : Longint;
begin
result := timeval(GetRecordPtr^).tv_sec;
end;
procedure __timeval__Wrapper.settv_usec(const val : Longint);
begin
timeval(GetRecordPtr^).tv_usec := val;
end;
function __timeval__Wrapper.gettv_usec : Longint;
begin
result := timeval(GetRecordPtr^).tv_usec;
end;
function __TInAddr__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TInAddr__Wrapper.setS_addr(const val : u_long);
begin
TInAddr(GetRecordPtr^).S_addr := val;
end;
function __TInAddr__Wrapper.getS_addr : u_long;
begin
result := TInAddr(GetRecordPtr^).S_addr;
end;
function __TLinger__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TLinger__Wrapper.setl_onoff(const val : u_short);
begin
TLinger(GetRecordPtr^).l_onoff := val;
end;
function __TLinger__Wrapper.getl_onoff : u_short;
begin
result := TLinger(GetRecordPtr^).l_onoff;
end;
procedure __TLinger__Wrapper.setl_linger(const val : u_short);
begin
TLinger(GetRecordPtr^).l_linger := val;
end;
function __TLinger__Wrapper.getl_linger : u_short;
begin
result := TLinger(GetRecordPtr^).l_linger;
end;
function __TNetEnt__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TNetEnt__Wrapper.setn_addrtype(const val : SmallInt);
begin
TNetEnt(GetRecordPtr^).n_addrtype := val;
end;
function __TNetEnt__Wrapper.getn_addrtype : SmallInt;
begin
result := TNetEnt(GetRecordPtr^).n_addrtype;
end;
procedure __TNetEnt__Wrapper.setn_net(const val : u_long);
begin
TNetEnt(GetRecordPtr^).n_net := val;
end;
function __TNetEnt__Wrapper.getn_net : u_long;
begin
result := TNetEnt(GetRecordPtr^).n_net;
end;
function __TProtoEnt__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TProtoEnt__Wrapper.setp_proto(const val : SmallInt);
begin
TProtoEnt(GetRecordPtr^).p_proto := val;
end;
function __TProtoEnt__Wrapper.getp_proto : SmallInt;
begin
result := TProtoEnt(GetRecordPtr^).p_proto;
end;
function __TRANSMIT_FILE_BUFFERS__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRANSMIT_FILE_BUFFERS__Wrapper.setHeadLength(const val : DWORD);
begin
TRANSMIT_FILE_BUFFERS(GetRecordPtr^).HeadLength := val;
end;
function __TRANSMIT_FILE_BUFFERS__Wrapper.getHeadLength : DWORD;
begin
result := TRANSMIT_FILE_BUFFERS(GetRecordPtr^).HeadLength;
end;
procedure __TRANSMIT_FILE_BUFFERS__Wrapper.setTailLength(const val : DWORD);
begin
TRANSMIT_FILE_BUFFERS(GetRecordPtr^).TailLength := val;
end;
function __TRANSMIT_FILE_BUFFERS__Wrapper.getTailLength : DWORD;
begin
result := TRANSMIT_FILE_BUFFERS(GetRecordPtr^).TailLength;
end;
function __TServEnt__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TServEnt__Wrapper.sets_port(const val : Word);
begin
TServEnt(GetRecordPtr^).s_port := val;
end;
function __TServEnt__Wrapper.gets_port : Word;
begin
result := TServEnt(GetRecordPtr^).s_port;
end;
function __TSockAddr__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSockAddr__Wrapper.setsin_family(const val : u_short);
begin
TSockAddr(GetRecordPtr^).sin_family := val;
end;
function __TSockAddr__Wrapper.getsin_family : u_short;
begin
result := TSockAddr(GetRecordPtr^).sin_family;
end;
procedure __TSockAddr__Wrapper.setsin_port(const val : u_short);
begin
TSockAddr(GetRecordPtr^).sin_port := val;
end;
function __TSockAddr__Wrapper.getsin_port : u_short;
begin
result := TSockAddr(GetRecordPtr^).sin_port;
end;
procedure __TSockAddr__Wrapper.setsa_family(const val : u_short);
begin
TSockAddr(GetRecordPtr^).sa_family := val;
end;
function __TSockAddr__Wrapper.getsa_family : u_short;
begin
result := TSockAddr(GetRecordPtr^).sa_family;
end;
function __TSockAddrIn__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSockAddrIn__Wrapper.setsin_family(const val : u_short);
begin
TSockAddrIn(GetRecordPtr^).sin_family := val;
end;
function __TSockAddrIn__Wrapper.getsin_family : u_short;
begin
result := TSockAddrIn(GetRecordPtr^).sin_family;
end;
procedure __TSockAddrIn__Wrapper.setsin_port(const val : u_short);
begin
TSockAddrIn(GetRecordPtr^).sin_port := val;
end;
function __TSockAddrIn__Wrapper.getsin_port : u_short;
begin
result := TSockAddrIn(GetRecordPtr^).sin_port;
end;
procedure __TSockAddrIn__Wrapper.setsa_family(const val : u_short);
begin
TSockAddrIn(GetRecordPtr^).sa_family := val;
end;
function __TSockAddrIn__Wrapper.getsa_family : u_short;
begin
result := TSockAddrIn(GetRecordPtr^).sa_family;
end;
function __TSockProto__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSockProto__Wrapper.setsp_family(const val : u_short);
begin
TSockProto(GetRecordPtr^).sp_family := val;
end;
function __TSockProto__Wrapper.getsp_family : u_short;
begin
result := TSockProto(GetRecordPtr^).sp_family;
end;
procedure __TSockProto__Wrapper.setsp_protocol(const val : u_short);
begin
TSockProto(GetRecordPtr^).sp_protocol := val;
end;
function __TSockProto__Wrapper.getsp_protocol : u_short;
begin
result := TSockProto(GetRecordPtr^).sp_protocol;
end;
function __TTimeVal__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TTimeVal__Wrapper.settv_sec(const val : Longint);
begin
TTimeVal(GetRecordPtr^).tv_sec := val;
end;
function __TTimeVal__Wrapper.gettv_sec : Longint;
begin
result := TTimeVal(GetRecordPtr^).tv_sec;
end;
procedure __TTimeVal__Wrapper.settv_usec(const val : Longint);
begin
TTimeVal(GetRecordPtr^).tv_usec := val;
end;
function __TTimeVal__Wrapper.gettv_usec : Longint;
begin
result := TTimeVal(GetRecordPtr^).tv_usec;
end;
function __TTransmitFileBuffers__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TTransmitFileBuffers__Wrapper.setHeadLength(const val : DWORD);
begin
TTransmitFileBuffers(GetRecordPtr^).HeadLength := val;
end;
function __TTransmitFileBuffers__Wrapper.getHeadLength : DWORD;
begin
result := TTransmitFileBuffers(GetRecordPtr^).HeadLength;
end;
procedure __TTransmitFileBuffers__Wrapper.setTailLength(const val : DWORD);
begin
TTransmitFileBuffers(GetRecordPtr^).TailLength := val;
end;
function __TTransmitFileBuffers__Wrapper.getTailLength : DWORD;
begin
result := TTransmitFileBuffers(GetRecordPtr^).TailLength;
end;
function __TWSAData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TWSAData__Wrapper.setwVersion(const val : Word);
begin
TWSAData(GetRecordPtr^).wVersion := val;
end;
function __TWSAData__Wrapper.getwVersion : Word;
begin
result := TWSAData(GetRecordPtr^).wVersion;
end;
procedure __TWSAData__Wrapper.setwHighVersion(const val : Word);
begin
TWSAData(GetRecordPtr^).wHighVersion := val;
end;
function __TWSAData__Wrapper.getwHighVersion : Word;
begin
result := TWSAData(GetRecordPtr^).wHighVersion;
end;
procedure __TWSAData__Wrapper.setiMaxSockets(const val : Word);
begin
TWSAData(GetRecordPtr^).iMaxSockets := val;
end;
function __TWSAData__Wrapper.getiMaxSockets : Word;
begin
result := TWSAData(GetRecordPtr^).iMaxSockets;
end;
procedure __TWSAData__Wrapper.setiMaxUdpDg(const val : Word);
begin
TWSAData(GetRecordPtr^).iMaxUdpDg := val;
end;
function __TWSAData__Wrapper.getiMaxUdpDg : Word;
begin
result := TWSAData(GetRecordPtr^).iMaxUdpDg;
end;
function __WSAData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __WSAData__Wrapper.setwVersion(const val : Word);
begin
WSAData(GetRecordPtr^).wVersion := val;
end;
function __WSAData__Wrapper.getwVersion : Word;
begin
result := WSAData(GetRecordPtr^).wVersion;
end;
procedure __WSAData__Wrapper.setwHighVersion(const val : Word);
begin
WSAData(GetRecordPtr^).wHighVersion := val;
end;
function __WSAData__Wrapper.getwHighVersion : Word;
begin
result := WSAData(GetRecordPtr^).wHighVersion;
end;
procedure __WSAData__Wrapper.setiMaxSockets(const val : Word);
begin
WSAData(GetRecordPtr^).iMaxSockets := val;
end;
function __WSAData__Wrapper.getiMaxSockets : Word;
begin
result := WSAData(GetRecordPtr^).iMaxSockets;
end;
procedure __WSAData__Wrapper.setiMaxUdpDg(const val : Word);
begin
WSAData(GetRecordPtr^).iMaxUdpDg := val;
end;
function __WSAData__Wrapper.getiMaxUdpDg : Word;
begin
result := WSAData(GetRecordPtr^).iMaxUdpDg;
end;
function __TRANSMIT_FILE_BUFFERS_ : IDispatch;
begin
  result := ___TRANSMIT_FILE_BUFFERS__Wrapper.Create;
end;
function _hostent_ : IDispatch;
begin
  result := __hostent__Wrapper.Create;
end;
function _in_addr_ : IDispatch;
begin
  result := __in_addr__Wrapper.Create;
end;
function _linger_ : IDispatch;
begin
  result := __linger__Wrapper.Create;
end;
function _netent_ : IDispatch;
begin
  result := __netent__Wrapper.Create;
end;
function _protoent_ : IDispatch;
begin
  result := __protoent__Wrapper.Create;
end;
function _servent_ : IDispatch;
begin
  result := __servent__Wrapper.Create;
end;
function _sockaddr_in_ : IDispatch;
begin
  result := __sockaddr_in__Wrapper.Create;
end;
function _sockproto_ : IDispatch;
begin
  result := __sockproto__Wrapper.Create;
end;
function _SunB_ : IDispatch;
begin
  result := __SunB__Wrapper.Create;
end;
function _SunW_ : IDispatch;
begin
  result := __SunW__Wrapper.Create;
end;
function _TFDSet_ : IDispatch;
begin
  result := __TFDSet__Wrapper.Create;
end;
function _THostEnt_ : IDispatch;
begin
  result := __THostEnt__Wrapper.Create;
end;
function _timeval_ : IDispatch;
begin
  result := __timeval__Wrapper.Create;
end;
function _TInAddr_ : IDispatch;
begin
  result := __TInAddr__Wrapper.Create;
end;
function _TLinger_ : IDispatch;
begin
  result := __TLinger__Wrapper.Create;
end;
function _TNetEnt_ : IDispatch;
begin
  result := __TNetEnt__Wrapper.Create;
end;
function _TProtoEnt_ : IDispatch;
begin
  result := __TProtoEnt__Wrapper.Create;
end;
function _TRANSMIT_FILE_BUFFERS_ : IDispatch;
begin
  result := __TRANSMIT_FILE_BUFFERS__Wrapper.Create;
end;
function _TServEnt_ : IDispatch;
begin
  result := __TServEnt__Wrapper.Create;
end;
function _TSockAddr_ : IDispatch;
begin
  result := __TSockAddr__Wrapper.Create;
end;
function _TSockAddrIn_ : IDispatch;
begin
  result := __TSockAddrIn__Wrapper.Create;
end;
function _TSockProto_ : IDispatch;
begin
  result := __TSockProto__Wrapper.Create;
end;
function _TTimeVal_ : IDispatch;
begin
  result := __TTimeVal__Wrapper.Create;
end;
function _TTransmitFileBuffers_ : IDispatch;
begin
  result := __TTransmitFileBuffers__Wrapper.Create;
end;
function _TWSAData_ : IDispatch;
begin
  result := __TWSAData__Wrapper.Create;
end;
function _WSAData_ : IDispatch;
begin
  result := __WSAData__Wrapper.Create;
end;
function ____bind__Wrapper(p0 : TSocket;
const p1 : IDispatch;
p2 : Integer): Integer;
var
__p1 : ^TSockAddr;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := bind(p0,__p1^,p2);
end;

function ____connect__Wrapper(p0 : TSocket;
const p1 : IDispatch;
p2 : Integer): Integer;
var
__p1 : ^TSockAddr;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := connect(p0,__p1^,p2);
end;

function ____getpeername__Wrapper(p0 : TSocket;
const p1 : IDispatch;
var p2 : Integer): Integer;
var
__p1 : ^TSockAddr;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := getpeername(p0,__p1^,p2);
end;

function ____getsockname__Wrapper(p0 : TSocket;
const p1 : IDispatch;
var p2 : Integer): Integer;
var
__p1 : ^TSockAddr;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := getsockname(p0,__p1^,p2);
end;

function ____inet_ntoa__Wrapper(const p0 : IDispatch): PChar;
var
__p0 : ^TInAddr;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := inet_ntoa(__p0^);
end;

function ____recvfrom__Wrapper(p0 : TSocket;
var p1 : TSocket;
p2 : Integer;
p3 : Integer;
const p4 : IDispatch;
var p5 : Integer): Integer;
var
__p4 : ^TSockAddr;
__i4 : IDispatch;
begin
if p4 = nil then exit;
__p4 := (p4 as IDCRecordWrapper).GetRecordPtr;
result := recvfrom(p0,p1,p2,p3,__p4^,p5);
end;

function ____sendto__Wrapper(p0 : TSocket;
var p1 : TSocket;
p2 : Integer;
p3 : Integer;
const p4 : IDispatch;
p5 : Integer): Integer;
var
__p4 : ^TSockAddr;
__i4 : IDispatch;
begin
if p4 = nil then exit;
__p4 := (p4 as IDCRecordWrapper).GetRecordPtr;
result := sendto(p0,p1,p2,p3,__p4^,p5);
end;

function ____WSAStartup__Wrapper(p0 : Word;
const p1 : IDispatch): Integer;
var
__p1 : ^TWSAData;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := WSAStartup(p0,__p1^);
end;

function ______WSAFDIsSet__Wrapper(p0 : TSocket;
const p1 : IDispatch): BOOL;
var
__p1 : ^TFDSet;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := __WSAFDIsSet(p0,__p1^);
end;

procedure ____FD_CLR__Wrapper(p0 : TSocket;
const p1 : IDispatch);
var
__p1 : ^TFDSet;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
FD_CLR(p0,__p1^);
end;

function ____FD_ISSET__Wrapper(p0 : TSocket;
const p1 : IDispatch): Boolean;
var
__p1 : ^TFDSet;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := FD_ISSET(p0,__p1^);
end;

procedure ____FD_SET__Wrapper(p0 : TSocket;
const p1 : IDispatch);
var
__p1 : ^TFDSet;
__i1 : IDispatch;
begin
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
FD_SET(p0,__p1^);
end;

procedure ____FD_ZERO__Wrapper(const p0 : IDispatch);
var
__p0 : ^TFDSet;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
FD_ZERO(__p0^);
end;


type ___TRANSMIT_FILE_BUFFERS__Wrapper__ = class(___TRANSMIT_FILE_BUFFERS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___TRANSMIT_FILE_BUFFERS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_TRANSMIT_FILE_BUFFERSToVariant(var R : _TRANSMIT_FILE_BUFFERS) : OleVariant;
var
__rw : ___TRANSMIT_FILE_BUFFERS__Wrapper__;
begin
__rw := ___TRANSMIT_FILE_BUFFERS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_TRANSMIT_FILE_BUFFERS(const V : OleVariant) : _TRANSMIT_FILE_BUFFERS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _TRANSMIT_FILE_BUFFERS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __hostent__Wrapper__ = class(__hostent__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __hostent__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverthostentToVariant(var R : hostent) : OleVariant;
var
__rw : __hostent__Wrapper__;
begin
__rw := __hostent__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTohostent(const V : OleVariant) : hostent;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := hostent((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __in_addr__Wrapper__ = class(__in_addr__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __in_addr__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertin_addrToVariant(var R : in_addr) : OleVariant;
var
__rw : __in_addr__Wrapper__;
begin
__rw := __in_addr__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToin_addr(const V : OleVariant) : in_addr;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := in_addr((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __linger__Wrapper__ = class(__linger__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __linger__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertlingerToVariant(var R : linger) : OleVariant;
var
__rw : __linger__Wrapper__;
begin
__rw := __linger__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTolinger(const V : OleVariant) : linger;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := linger((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __netent__Wrapper__ = class(__netent__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __netent__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertnetentToVariant(var R : netent) : OleVariant;
var
__rw : __netent__Wrapper__;
begin
__rw := __netent__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTonetent(const V : OleVariant) : netent;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := netent((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __protoent__Wrapper__ = class(__protoent__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __protoent__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertprotoentToVariant(var R : protoent) : OleVariant;
var
__rw : __protoent__Wrapper__;
begin
__rw := __protoent__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToprotoent(const V : OleVariant) : protoent;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := protoent((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __servent__Wrapper__ = class(__servent__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __servent__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertserventToVariant(var R : servent) : OleVariant;
var
__rw : __servent__Wrapper__;
begin
__rw := __servent__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToservent(const V : OleVariant) : servent;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := servent((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __sockaddr_in__Wrapper__ = class(__sockaddr_in__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __sockaddr_in__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convertsockaddr_inToVariant(var R : sockaddr_in) : OleVariant;
var
__rw : __sockaddr_in__Wrapper__;
begin
__rw := __sockaddr_in__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTosockaddr_in(const V : OleVariant) : sockaddr_in;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := sockaddr_in((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __sockproto__Wrapper__ = class(__sockproto__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __sockproto__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertsockprotoToVariant(var R : sockproto) : OleVariant;
var
__rw : __sockproto__Wrapper__;
begin
__rw := __sockproto__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTosockproto(const V : OleVariant) : sockproto;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := sockproto((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SunB__Wrapper__ = class(__SunB__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SunB__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSunBToVariant(var R : SunB) : OleVariant;
var
__rw : __SunB__Wrapper__;
begin
__rw := __SunB__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSunB(const V : OleVariant) : SunB;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SunB((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SunW__Wrapper__ = class(__SunW__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SunW__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSunWToVariant(var R : SunW) : OleVariant;
var
__rw : __SunW__Wrapper__;
begin
__rw := __SunW__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSunW(const V : OleVariant) : SunW;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SunW((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TFDSet__Wrapper__ = class(__TFDSet__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TFDSet__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTFDSetToVariant(var R : TFDSet) : OleVariant;
var
__rw : __TFDSet__Wrapper__;
begin
__rw := __TFDSet__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTFDSet(const V : OleVariant) : TFDSet;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TFDSet((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __THostEnt__Wrapper__ = class(__THostEnt__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __THostEnt__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTHostEntToVariant(var R : THostEnt) : OleVariant;
var
__rw : __THostEnt__Wrapper__;
begin
__rw := __THostEnt__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTHostEnt(const V : OleVariant) : THostEnt;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := THostEnt((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __timeval__Wrapper__ = class(__timeval__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __timeval__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttimevalToVariant(var R : timeval) : OleVariant;
var
__rw : __timeval__Wrapper__;
begin
__rw := __timeval__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotimeval(const V : OleVariant) : timeval;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := timeval((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TInAddr__Wrapper__ = class(__TInAddr__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TInAddr__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTInAddrToVariant(var R : TInAddr) : OleVariant;
var
__rw : __TInAddr__Wrapper__;
begin
__rw := __TInAddr__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTInAddr(const V : OleVariant) : TInAddr;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TInAddr((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TLinger__Wrapper__ = class(__TLinger__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TLinger__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTLingerToVariant(var R : TLinger) : OleVariant;
var
__rw : __TLinger__Wrapper__;
begin
__rw := __TLinger__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTLinger(const V : OleVariant) : TLinger;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TLinger((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TNetEnt__Wrapper__ = class(__TNetEnt__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TNetEnt__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTNetEntToVariant(var R : TNetEnt) : OleVariant;
var
__rw : __TNetEnt__Wrapper__;
begin
__rw := __TNetEnt__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTNetEnt(const V : OleVariant) : TNetEnt;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TNetEnt((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TProtoEnt__Wrapper__ = class(__TProtoEnt__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TProtoEnt__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTProtoEntToVariant(var R : TProtoEnt) : OleVariant;
var
__rw : __TProtoEnt__Wrapper__;
begin
__rw := __TProtoEnt__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTProtoEnt(const V : OleVariant) : TProtoEnt;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TProtoEnt((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TRANSMIT_FILE_BUFFERS__Wrapper__ = class(__TRANSMIT_FILE_BUFFERS__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRANSMIT_FILE_BUFFERS__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRANSMIT_FILE_BUFFERSToVariant(var R : TRANSMIT_FILE_BUFFERS) : OleVariant;
var
__rw : __TRANSMIT_FILE_BUFFERS__Wrapper__;
begin
__rw := __TRANSMIT_FILE_BUFFERS__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRANSMIT_FILE_BUFFERS(const V : OleVariant) : TRANSMIT_FILE_BUFFERS;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRANSMIT_FILE_BUFFERS((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TServEnt__Wrapper__ = class(__TServEnt__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TServEnt__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTServEntToVariant(var R : TServEnt) : OleVariant;
var
__rw : __TServEnt__Wrapper__;
begin
__rw := __TServEnt__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTServEnt(const V : OleVariant) : TServEnt;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TServEnt((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSockAddr__Wrapper__ = class(__TSockAddr__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSockAddr__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSockAddrToVariant(var R : TSockAddr) : OleVariant;
var
__rw : __TSockAddr__Wrapper__;
begin
__rw := __TSockAddr__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSockAddr(const V : OleVariant) : TSockAddr;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSockAddr((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSockAddrIn__Wrapper__ = class(__TSockAddrIn__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSockAddrIn__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSockAddrInToVariant(var R : TSockAddrIn) : OleVariant;
var
__rw : __TSockAddrIn__Wrapper__;
begin
__rw := __TSockAddrIn__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSockAddrIn(const V : OleVariant) : TSockAddrIn;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSockAddrIn((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSockProto__Wrapper__ = class(__TSockProto__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSockProto__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSockProtoToVariant(var R : TSockProto) : OleVariant;
var
__rw : __TSockProto__Wrapper__;
begin
__rw := __TSockProto__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSockProto(const V : OleVariant) : TSockProto;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSockProto((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TTimeVal__Wrapper__ = class(__TTimeVal__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TTimeVal__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTTimeValToVariant(var R : TTimeVal) : OleVariant;
var
__rw : __TTimeVal__Wrapper__;
begin
__rw := __TTimeVal__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTTimeVal(const V : OleVariant) : TTimeVal;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TTimeVal((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TTransmitFileBuffers__Wrapper__ = class(__TTransmitFileBuffers__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TTransmitFileBuffers__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTTransmitFileBuffersToVariant(var R : TTransmitFileBuffers) : OleVariant;
var
__rw : __TTransmitFileBuffers__Wrapper__;
begin
__rw := __TTransmitFileBuffers__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTTransmitFileBuffers(const V : OleVariant) : TTransmitFileBuffers;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TTransmitFileBuffers((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TWSAData__Wrapper__ = class(__TWSAData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TWSAData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTWSADataToVariant(var R : TWSAData) : OleVariant;
var
__rw : __TWSAData__Wrapper__;
begin
__rw := __TWSAData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTWSAData(const V : OleVariant) : TWSAData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TWSAData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __WSAData__Wrapper__ = class(__WSAData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __WSAData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertWSADataToVariant(var R : WSAData) : OleVariant;
var
__rw : __WSAData__Wrapper__;
begin
__rw := __WSAData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToWSAData(const V : OleVariant) : WSAData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := WSAData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..268] of string = (
'FD_SETSIZE'
,'SD_RECEIVE'
,'SD_SEND'
,'SD_BOTH'
,'IOCPARM_MASK'
,'IOC_VOID'
,'IOC_OUT'
,'IOC_IN'
,'IOC_INOUT'
,'IPPROTO_IP'
,'IPPROTO_ICMP'
,'IPPROTO_IGMP'
,'IPPROTO_GGP'
,'IPPROTO_TCP'
,'IPPROTO_PUP'
,'IPPROTO_UDP'
,'IPPROTO_IDP'
,'IPPROTO_ND'
,'IPPROTO_RAW'
,'IPPROTO_MAX'
,'IPPORT_ECHO'
,'IPPORT_DISCARD'
,'IPPORT_SYSTAT'
,'IPPORT_DAYTIME'
,'IPPORT_NETSTAT'
,'IPPORT_FTP'
,'IPPORT_TELNET'
,'IPPORT_SMTP'
,'IPPORT_TIMESERVER'
,'IPPORT_NAMESERVER'
,'IPPORT_WHOIS'
,'IPPORT_MTP'
,'IPPORT_TFTP'
,'IPPORT_RJE'
,'IPPORT_FINGER'
,'IPPORT_TTYLINK'
,'IPPORT_SUPDUP'
,'IPPORT_EXECSERVER'
,'IPPORT_LOGINSERVER'
,'IPPORT_CMDSERVER'
,'IPPORT_EFSSERVER'
,'IPPORT_BIFFUDP'
,'IPPORT_WHOSERVER'
,'IPPORT_ROUTESERVER'
,'IPPORT_RESERVED'
,'IMPLINK_IP'
,'IMPLINK_LOWEXPER'
,'IMPLINK_HIGHEXPER'
,'INADDR_ANY'
,'INADDR_LOOPBACK'
,'INADDR_BROADCAST'
,'INADDR_NONE'
,'WSADESCRIPTION_LEN'
,'WSASYS_STATUS_LEN'
,'TF_DISCONNECT'
,'TF_REUSE_SOCKET'
,'TF_WRITE_BEHIND'
,'IP_OPTIONS'
,'IP_MULTICAST_IF'
,'IP_MULTICAST_TTL'
,'IP_MULTICAST_LOOP'
,'IP_ADD_MEMBERSHIP'
,'IP_DROP_MEMBERSHIP'
,'IP_TTL'
,'IP_TOS'
,'IP_DONTFRAGMENT'
,'IP_DEFAULT_MULTICAST_TTL'
,'IP_DEFAULT_MULTICAST_LOOP'
,'IP_MAX_MEMBERSHIPS'
,'INVALID_SOCKET'
,'SOCKET_ERROR'
,'SOCK_STREAM'
,'SOCK_DGRAM'
,'SOCK_RAW'
,'SOCK_RDM'
,'SOCK_SEQPACKET'
,'SO_DEBUG'
,'SO_ACCEPTCONN'
,'SO_REUSEADDR'
,'SO_KEEPALIVE'
,'SO_DONTROUTE'
,'SO_BROADCAST'
,'SO_USELOOPBACK'
,'SO_LINGER'
,'SO_OOBINLINE'
,'SO_DONTLINGER'
,'SO_SNDBUF'
,'SO_RCVBUF'
,'SO_SNDLOWAT'
,'SO_RCVLOWAT'
,'SO_SNDTIMEO'
,'SO_RCVTIMEO'
,'SO_ERROR'
,'SO_TYPE'
,'SO_CONNDATA'
,'SO_CONNOPT'
,'SO_DISCDATA'
,'SO_DISCOPT'
,'SO_CONNDATALEN'
,'SO_CONNOPTLEN'
,'SO_DISCDATALEN'
,'SO_DISCOPTLEN'
,'SO_OPENTYPE'
,'SO_SYNCHRONOUS_ALERT'
,'SO_SYNCHRONOUS_NONALERT'
,'SO_MAXDG'
,'SO_MAXPATHDG'
,'SO_UPDATE_ACCEPT_CONTEXT'
,'SO_CONNECT_TIME'
,'TCP_NODELAY'
,'TCP_BSDURGENT'
,'AF_UNSPEC'
,'AF_UNIX'
,'AF_INET'
,'AF_IMPLINK'
,'AF_PUP'
,'AF_CHAOS'
,'AF_IPX'
,'AF_NS'
,'AF_ISO'
,'AF_OSI'
,'AF_ECMA'
,'AF_DATAKIT'
,'AF_CCITT'
,'AF_SNA'
,'AF_DECnet'
,'AF_DLI'
,'AF_LAT'
,'AF_HYLINK'
,'AF_APPLETALK'
,'AF_NETBIOS'
,'AF_VOICEVIEW'
,'AF_FIREFOX'
,'AF_UNKNOWN1'
,'AF_BAN'
,'AF_MAX'
,'PF_UNSPEC'
,'PF_UNIX'
,'PF_INET'
,'PF_IMPLINK'
,'PF_PUP'
,'PF_CHAOS'
,'PF_NS'
,'PF_IPX'
,'PF_ISO'
,'PF_OSI'
,'PF_ECMA'
,'PF_DATAKIT'
,'PF_CCITT'
,'PF_SNA'
,'PF_DECnet'
,'PF_DLI'
,'PF_LAT'
,'PF_HYLINK'
,'PF_APPLETALK'
,'PF_VOICEVIEW'
,'PF_FIREFOX'
,'PF_UNKNOWN1'
,'PF_BAN'
,'PF_MAX'
,'SOL_SOCKET'
,'SOMAXCONN'
,'MSG_OOB'
,'MSG_PEEK'
,'MSG_DONTROUTE'
,'MSG_MAXIOVLEN'
,'MSG_PARTIAL'
,'MAXGETHOSTSTRUCT'
,'FD_READ'
,'FD_WRITE'
,'FD_OOB'
,'FD_ACCEPT'
,'FD_CONNECT'
,'FD_CLOSE'
,'WSABASEERR'
,'WSAEINTR'
,'WSAEBADF'
,'WSAEACCES'
,'WSAEFAULT'
,'WSAEINVAL'
,'WSAEMFILE'
,'WSAEWOULDBLOCK'
,'WSAEINPROGRESS'
,'WSAEALREADY'
,'WSAENOTSOCK'
,'WSAEDESTADDRREQ'
,'WSAEMSGSIZE'
,'WSAEPROTOTYPE'
,'WSAENOPROTOOPT'
,'WSAEPROTONOSUPPORT'
,'WSAESOCKTNOSUPPORT'
,'WSAEOPNOTSUPP'
,'WSAEPFNOSUPPORT'
,'WSAEAFNOSUPPORT'
,'WSAEADDRINUSE'
,'WSAEADDRNOTAVAIL'
,'WSAENETDOWN'
,'WSAENETUNREACH'
,'WSAENETRESET'
,'WSAECONNABORTED'
,'WSAECONNRESET'
,'WSAENOBUFS'
,'WSAEISCONN'
,'WSAENOTCONN'
,'WSAESHUTDOWN'
,'WSAETOOMANYREFS'
,'WSAETIMEDOUT'
,'WSAECONNREFUSED'
,'WSAELOOP'
,'WSAENAMETOOLONG'
,'WSAEHOSTDOWN'
,'WSAEHOSTUNREACH'
,'WSAENOTEMPTY'
,'WSAEPROCLIM'
,'WSAEUSERS'
,'WSAEDQUOT'
,'WSAESTALE'
,'WSAEREMOTE'
,'WSAEDISCON'
,'WSASYSNOTREADY'
,'WSAVERNOTSUPPORTED'
,'WSANOTINITIALISED'
,'WSAHOST_NOT_FOUND'
,'HOST_NOT_FOUND'
,'WSATRY_AGAIN'
,'TRY_AGAIN'
,'WSANO_RECOVERY'
,'NO_RECOVERY'
,'WSANO_DATA'
,'NO_DATA'
,'WSANO_ADDRESS'
,'NO_ADDRESS'
,'EWOULDBLOCK'
,'EINPROGRESS'
,'EALREADY'
,'ENOTSOCK'
,'EDESTADDRREQ'
,'EMSGSIZE'
,'EPROTOTYPE'
,'ENOPROTOOPT'
,'EPROTONOSUPPORT'
,'ESOCKTNOSUPPORT'
,'EOPNOTSUPP'
,'EPFNOSUPPORT'
,'EAFNOSUPPORT'
,'EADDRINUSE'
,'EADDRNOTAVAIL'
,'ENETDOWN'
,'ENETUNREACH'
,'ENETRESET'
,'ECONNABORTED'
,'ECONNRESET'
,'ENOBUFS'
,'EISCONN'
,'ENOTCONN'
,'ESHUTDOWN'
,'ETOOMANYREFS'
,'ETIMEDOUT'
,'ECONNREFUSED'
,'ELOOP'
,'ENAMETOOLONG'
,'EHOSTDOWN'
,'EHOSTUNREACH'
,'ENOTEMPTY'
,'EPROCLIM'
,'EUSERS'
,'EDQUOT'
,'ESTALE'
,'EREMOTE'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,FD_SETSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,SD_RECEIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,SD_SEND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,SD_BOTH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,IOCPARM_MASK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,IOC_VOID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,IOC_OUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,IOC_IN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,IOC_INOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,IPPROTO_IP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,IPPROTO_ICMP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,IPPROTO_IGMP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,IPPROTO_GGP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,IPPROTO_TCP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,IPPROTO_PUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,IPPROTO_UDP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,IPPROTO_IDP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,IPPROTO_ND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,IPPROTO_RAW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,IPPROTO_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,IPPORT_ECHO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,IPPORT_DISCARD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,IPPORT_SYSTAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,IPPORT_DAYTIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,IPPORT_NETSTAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,IPPORT_FTP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,IPPORT_TELNET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,IPPORT_SMTP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,IPPORT_TIMESERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,IPPORT_NAMESERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,IPPORT_WHOIS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,IPPORT_MTP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,IPPORT_TFTP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,IPPORT_RJE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,IPPORT_FINGER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,IPPORT_TTYLINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,IPPORT_SUPDUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,IPPORT_EXECSERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,IPPORT_LOGINSERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,IPPORT_CMDSERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,IPPORT_EFSSERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,IPPORT_BIFFUDP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,IPPORT_WHOSERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,IPPORT_ROUTESERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,IPPORT_RESERVED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,IMPLINK_IP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,IMPLINK_LOWEXPER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,IMPLINK_HIGHEXPER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,INADDR_ANY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,INADDR_LOOPBACK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,INADDR_BROADCAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,INADDR_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,WSADESCRIPTION_LEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,WSASYS_STATUS_LEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,TF_DISCONNECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,TF_REUSE_SOCKET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,TF_WRITE_BEHIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,IP_OPTIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,IP_MULTICAST_IF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,IP_MULTICAST_TTL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,IP_MULTICAST_LOOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,IP_ADD_MEMBERSHIP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,IP_DROP_MEMBERSHIP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,IP_TTL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,IP_TOS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,IP_DONTFRAGMENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,IP_DEFAULT_MULTICAST_TTL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,IP_DEFAULT_MULTICAST_LOOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,IP_MAX_MEMBERSHIPS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,INVALID_SOCKET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,SOCKET_ERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,SOCK_STREAM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,SOCK_DGRAM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,SOCK_RAW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,SOCK_RDM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,SOCK_SEQPACKET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,SO_DEBUG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,SO_ACCEPTCONN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,SO_REUSEADDR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,SO_KEEPALIVE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,SO_DONTROUTE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,SO_BROADCAST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,SO_USELOOPBACK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,SO_LINGER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,SO_OOBINLINE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,SO_DONTLINGER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,SO_SNDBUF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,SO_RCVBUF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,SO_SNDLOWAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,SO_RCVLOWAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,SO_SNDTIMEO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,SO_RCVTIMEO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,SO_ERROR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,SO_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,SO_CONNDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,SO_CONNOPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,SO_DISCDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,SO_DISCOPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,SO_CONNDATALEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,SO_CONNOPTLEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,SO_DISCDATALEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,SO_DISCOPTLEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,SO_OPENTYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,SO_SYNCHRONOUS_ALERT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,SO_SYNCHRONOUS_NONALERT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[105] ,SO_MAXDG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[106] ,SO_MAXPATHDG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[107] ,SO_UPDATE_ACCEPT_CONTEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[108] ,SO_CONNECT_TIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[109] ,TCP_NODELAY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[110] ,TCP_BSDURGENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[111] ,AF_UNSPEC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[112] ,AF_UNIX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[113] ,AF_INET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[114] ,AF_IMPLINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[115] ,AF_PUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[116] ,AF_CHAOS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[117] ,AF_IPX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[118] ,AF_NS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[119] ,AF_ISO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[120] ,AF_OSI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[121] ,AF_ECMA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[122] ,AF_DATAKIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[123] ,AF_CCITT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[124] ,AF_SNA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[125] ,AF_DECnet));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[126] ,AF_DLI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[127] ,AF_LAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[128] ,AF_HYLINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[129] ,AF_APPLETALK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[130] ,AF_NETBIOS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[131] ,AF_VOICEVIEW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[132] ,AF_FIREFOX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[133] ,AF_UNKNOWN1));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[134] ,AF_BAN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[135] ,AF_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[136] ,PF_UNSPEC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[137] ,PF_UNIX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[138] ,PF_INET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[139] ,PF_IMPLINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[140] ,PF_PUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[141] ,PF_CHAOS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[142] ,PF_NS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[143] ,PF_IPX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[144] ,PF_ISO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[145] ,PF_OSI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[146] ,PF_ECMA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[147] ,PF_DATAKIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[148] ,PF_CCITT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[149] ,PF_SNA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[150] ,PF_DECnet));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[151] ,PF_DLI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[152] ,PF_LAT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[153] ,PF_HYLINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[154] ,PF_APPLETALK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[155] ,PF_VOICEVIEW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[156] ,PF_FIREFOX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[157] ,PF_UNKNOWN1));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[158] ,PF_BAN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[159] ,PF_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[160] ,SOL_SOCKET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[161] ,SOMAXCONN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[162] ,MSG_OOB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[163] ,MSG_PEEK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[164] ,MSG_DONTROUTE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[165] ,MSG_MAXIOVLEN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[166] ,MSG_PARTIAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[167] ,MAXGETHOSTSTRUCT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[168] ,FD_READ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[169] ,FD_WRITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[170] ,FD_OOB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[171] ,FD_ACCEPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[172] ,FD_CONNECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[173] ,FD_CLOSE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[174] ,WSABASEERR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[175] ,WSAEINTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[176] ,WSAEBADF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[177] ,WSAEACCES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[178] ,WSAEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[179] ,WSAEINVAL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[180] ,WSAEMFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[181] ,WSAEWOULDBLOCK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[182] ,WSAEINPROGRESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[183] ,WSAEALREADY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[184] ,WSAENOTSOCK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[185] ,WSAEDESTADDRREQ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[186] ,WSAEMSGSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[187] ,WSAEPROTOTYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[188] ,WSAENOPROTOOPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[189] ,WSAEPROTONOSUPPORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[190] ,WSAESOCKTNOSUPPORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[191] ,WSAEOPNOTSUPP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[192] ,WSAEPFNOSUPPORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[193] ,WSAEAFNOSUPPORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[194] ,WSAEADDRINUSE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[195] ,WSAEADDRNOTAVAIL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[196] ,WSAENETDOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[197] ,WSAENETUNREACH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[198] ,WSAENETRESET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[199] ,WSAECONNABORTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[200] ,WSAECONNRESET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[201] ,WSAENOBUFS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[202] ,WSAEISCONN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[203] ,WSAENOTCONN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[204] ,WSAESHUTDOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[205] ,WSAETOOMANYREFS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[206] ,WSAETIMEDOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[207] ,WSAECONNREFUSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[208] ,WSAELOOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[209] ,WSAENAMETOOLONG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[210] ,WSAEHOSTDOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[211] ,WSAEHOSTUNREACH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[212] ,WSAENOTEMPTY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[213] ,WSAEPROCLIM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[214] ,WSAEUSERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[215] ,WSAEDQUOT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[216] ,WSAESTALE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[217] ,WSAEREMOTE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[218] ,WSAEDISCON));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[219] ,WSASYSNOTREADY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[220] ,WSAVERNOTSUPPORTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[221] ,WSANOTINITIALISED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[222] ,WSAHOST_NOT_FOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[223] ,HOST_NOT_FOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[224] ,WSATRY_AGAIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[225] ,TRY_AGAIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[226] ,WSANO_RECOVERY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[227] ,NO_RECOVERY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[228] ,WSANO_DATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[229] ,NO_DATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[230] ,WSANO_ADDRESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[231] ,NO_ADDRESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[232] ,EWOULDBLOCK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[233] ,EINPROGRESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[234] ,EALREADY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[235] ,ENOTSOCK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[236] ,EDESTADDRREQ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[237] ,EMSGSIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[238] ,EPROTOTYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[239] ,ENOPROTOOPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[240] ,EPROTONOSUPPORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[241] ,ESOCKTNOSUPPORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[242] ,EOPNOTSUPP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[243] ,EPFNOSUPPORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[244] ,EAFNOSUPPORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[245] ,EADDRINUSE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[246] ,EADDRNOTAVAIL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[247] ,ENETDOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[248] ,ENETUNREACH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[249] ,ENETRESET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[250] ,ECONNABORTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[251] ,ECONNRESET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[252] ,ENOBUFS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[253] ,EISCONN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[254] ,ENOTCONN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[255] ,ESHUTDOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[256] ,ETOOMANYREFS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[257] ,ETIMEDOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[258] ,ECONNREFUSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[259] ,ELOOP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[260] ,ENAMETOOLONG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[261] ,EHOSTDOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[262] ,EHOSTUNREACH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[263] ,ENOTEMPTY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[264] ,EPROCLIM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[265] ,EUSERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[266] ,EDQUOT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[267] ,ESTALE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[268] ,EREMOTE));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..66] of string = (
'_TRANSMIT_FILE_BUFFERS'
,'hostent'
,'in_addr'
,'linger'
,'netent'
,'protoent'
,'servent'
,'sockaddr_in'
,'sockproto'
,'SunB'
,'SunW'
,'TFDSet'
,'THostEnt'
,'timeval'
,'TInAddr'
,'TLinger'
,'TNetEnt'
,'TProtoEnt'
,'TRANSMIT_FILE_BUFFERS'
,'TServEnt'
,'TSockAddr'
,'TSockAddrIn'
,'TSockProto'
,'TTimeVal'
,'TTransmitFileBuffers'
,'TWSAData'
,'WSAData'
,'bind'
,'closesocket'
,'connect'
,'ioctlsocket'
,'getpeername'
,'getsockname'
,'htonl'
,'htons'
,'inet_ntoa'
,'listen'
,'ntohl'
,'ntohs'
,'recv'
,'recvfrom'
,'send'
,'sendto'
,'shutdown'
,'socket'
,'WSAStartup'
,'WSACleanup'
,'WSASetLastError'
,'WSAGetLastError'
,'WSAIsBlocking'
,'WSAUnhookBlockingHook'
,'WSASetBlockingHook'
,'WSACancelBlockingCall'
,'WSACancelAsyncRequest'
,'WSAAsyncSelect'
,'WSARecvEx'
,'__WSAFDIsSet'
,'WSAMakeSyncReply'
,'WSAMakeSelectReply'
,'WSAGetAsyncBuflen'
,'WSAGetAsyncError'
,'WSAGetSelectEvent'
,'WSAGetSelectError'
,'FD_CLR'
,'FD_ISSET'
,'FD_SET'
,'FD_ZERO'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(__TRANSMIT_FILE_BUFFERS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_hostent_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(_in_addr_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[3],Addr(_linger_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[4],Addr(_netent_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[5],Addr(_protoent_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[6],Addr(_servent_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[7],Addr(_sockaddr_in_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[8],Addr(_sockproto_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[9],Addr(_SunB_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[10],Addr(_SunW_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[11],Addr(_TFDSet_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[12],Addr(_THostEnt_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[13],Addr(_timeval_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[14],Addr(_TInAddr_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[15],Addr(_TLinger_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[16],Addr(_TNetEnt_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[17],Addr(_TProtoEnt_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[18],Addr(_TRANSMIT_FILE_BUFFERS_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[19],Addr(_TServEnt_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[20],Addr(_TSockAddr_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[21],Addr(_TSockAddrIn_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[22],Addr(_TSockProto_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[23],Addr(_TTimeVal_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[24],Addr(_TTransmitFileBuffers_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[25],Addr(_TWSAData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[26],Addr(_WSAData_)));
RegisterProc(nil,MethodNames[27],mtProc,TypeInfo(_T1),[
TypeInfo(TSocket),
TypeInfo(IDispatch),
TypeInfo(Integer),TypeInfo(Integer)],Addr(____bind__Wrapper),cRegister);

RegisterProc(nil,MethodNames[28],mtProc,TypeInfo(_T2),[
TypeInfo(TSocket),TypeInfo(Integer)],Addr(closesocket),cStdCall);

RegisterProc(nil,MethodNames[29],mtProc,TypeInfo(_T3),[
TypeInfo(TSocket),
TypeInfo(IDispatch),
TypeInfo(Integer),TypeInfo(Integer)],Addr(____connect__Wrapper),cRegister);

RegisterProc(nil,MethodNames[30],mtProc,TypeInfo(_T4),[
TypeInfo(TSocket),
TypeInfo(DWORD),
TypeInfo(u_long),TypeInfo(Integer)],Addr(ioctlsocket),cStdCall);

RegisterProc(nil,MethodNames[31],mtProc,TypeInfo(_T5),[
TypeInfo(TSocket),
TypeInfo(IDispatch),
TypeInfo(Integer),TypeInfo(Integer)],Addr(____getpeername__Wrapper),cRegister);

RegisterProc(nil,MethodNames[32],mtProc,TypeInfo(_T6),[
TypeInfo(TSocket),
TypeInfo(IDispatch),
TypeInfo(Integer),TypeInfo(Integer)],Addr(____getsockname__Wrapper),cRegister);

RegisterProc(nil,MethodNames[33],mtProc,TypeInfo(_T8),[
TypeInfo(u_long),TypeInfo(u_long)],Addr(htonl),cStdCall);

RegisterProc(nil,MethodNames[34],mtProc,TypeInfo(_T9),[
TypeInfo(u_short),TypeInfo(u_short)],Addr(htons),cStdCall);

RegisterProc(nil,MethodNames[35],mtProc,TypeInfo(_T11),[
TypeInfo(IDispatch),TypeInfoPChar],Addr(____inet_ntoa__Wrapper),cRegister);

RegisterProc(nil,MethodNames[36],mtProc,TypeInfo(_T12),[
TypeInfo(TSocket),
TypeInfo(Integer),TypeInfo(Integer)],Addr(listen),cStdCall);

RegisterProc(nil,MethodNames[37],mtProc,TypeInfo(_T13),[
TypeInfo(u_long),TypeInfo(u_long)],Addr(ntohl),cStdCall);

RegisterProc(nil,MethodNames[38],mtProc,TypeInfo(_T14),[
TypeInfo(u_short),TypeInfo(u_short)],Addr(ntohs),cStdCall);

RegisterProc(nil,MethodNames[39],mtProc,TypeInfo(_T15),[
TypeInfo(TSocket),
TypeInfo(TSocket),
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(Integer)],Addr(recv),cStdCall);

RegisterProc(nil,MethodNames[40],mtProc,TypeInfo(_T16),[
TypeInfo(TSocket),
TypeInfo(TSocket),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(IDispatch),
TypeInfo(Integer),TypeInfo(Integer)],Addr(____recvfrom__Wrapper),cRegister);

RegisterProc(nil,MethodNames[41],mtProc,TypeInfo(_T18),[
TypeInfo(TSocket),
TypeInfo(TSocket),
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(Integer)],Addr(send),cStdCall);

RegisterProc(nil,MethodNames[42],mtProc,TypeInfo(_T19),[
TypeInfo(TSocket),
TypeInfo(TSocket),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(IDispatch),
TypeInfo(Integer),TypeInfo(Integer)],Addr(____sendto__Wrapper),cRegister);

RegisterProc(nil,MethodNames[43],mtProc,TypeInfo(_T21),[
TypeInfo(TSocket),
TypeInfo(Integer),TypeInfo(Integer)],Addr(shutdown),cStdCall);

RegisterProc(nil,MethodNames[44],mtProc,TypeInfo(_T22),[
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(TSocket)],Addr(socket),cStdCall);

RegisterProc(nil,MethodNames[45],mtProc,TypeInfo(_T30),[
TypeInfo(Word),
TypeInfo(IDispatch),TypeInfo(Integer)],Addr(____WSAStartup__Wrapper),cRegister);

RegisterProc(nil,MethodNames[46],mtProc,TypeInfo(_T31),[TypeInfo(Integer)],Addr(WSACleanup),cStdCall);

RegisterProc(nil,MethodNames[47],mtProc,TypeInfo(_T32),[
TypeInfo(Integer)],Addr(WSASetLastError),cStdCall);

RegisterProc(nil,MethodNames[48],mtProc,TypeInfo(_T33),[TypeInfo(Integer)],Addr(WSAGetLastError),cStdCall);

RegisterProc(nil,MethodNames[49],mtProc,TypeInfo(_T34),[TypeInfo(BOOL)],Addr(WSAIsBlocking),cStdCall);

RegisterProc(nil,MethodNames[50],mtProc,TypeInfo(_T35),[TypeInfo(Integer)],Addr(WSAUnhookBlockingHook),cStdCall);

RegisterProc(nil,MethodNames[51],mtProc,TypeInfo(_T36),[
TypeInfoPointer,TypeInfoPointer],Addr(WSASetBlockingHook),cStdCall);

RegisterProc(nil,MethodNames[52],mtProc,TypeInfo(_T37),[TypeInfo(Integer)],Addr(WSACancelBlockingCall),cStdCall);

RegisterProc(nil,MethodNames[53],mtProc,TypeInfo(_T44),[
TypeInfo(THandle),TypeInfo(Integer)],Addr(WSACancelAsyncRequest),cStdCall);

RegisterProc(nil,MethodNames[54],mtProc,TypeInfo(_T45),[
TypeInfo(TSocket),
TypeInfo(HWND),
TypeInfo(u_int),
TypeInfo(Longint),TypeInfo(Integer)],Addr(WSAAsyncSelect),cStdCall);

RegisterProc(nil,MethodNames[55],mtProc,TypeInfo(_T46),[
TypeInfo(TSocket),
TypeInfo(TSocket),
TypeInfo(Integer),
TypeInfo(Integer),TypeInfo(Integer)],Addr(WSARecvEx),cStdCall);

RegisterProc(nil,MethodNames[56],mtProc,TypeInfo(_T47),[
TypeInfo(TSocket),
TypeInfo(IDispatch),TypeInfo(BOOL)],Addr(______WSAFDIsSet__Wrapper),cRegister);

RegisterProc(nil,MethodNames[57],mtProc,TypeInfo(_T51),[
TypeInfo(Word),
TypeInfo(Word),TypeInfo(Longint)],Addr(WSAMakeSyncReply),cRegister);

RegisterProc(nil,MethodNames[58],mtProc,TypeInfo(_T52),[
TypeInfo(Word),
TypeInfo(Word),TypeInfo(Longint)],Addr(WSAMakeSelectReply),cRegister);

RegisterProc(nil,MethodNames[59],mtProc,TypeInfo(_T53),[
TypeInfo(Longint),TypeInfo(Word)],Addr(WSAGetAsyncBuflen),cRegister);

RegisterProc(nil,MethodNames[60],mtProc,TypeInfo(_T54),[
TypeInfo(Longint),TypeInfo(Word)],Addr(WSAGetAsyncError),cRegister);

RegisterProc(nil,MethodNames[61],mtProc,TypeInfo(_T55),[
TypeInfo(Longint),TypeInfo(Word)],Addr(WSAGetSelectEvent),cRegister);

RegisterProc(nil,MethodNames[62],mtProc,TypeInfo(_T56),[
TypeInfo(Longint),TypeInfo(Word)],Addr(WSAGetSelectError),cRegister);

RegisterProc(nil,MethodNames[63],mtProc,TypeInfo(_T57),[
TypeInfo(TSocket),
TypeInfo(IDispatch)],Addr(____FD_CLR__Wrapper),cRegister);

RegisterProc(nil,MethodNames[64],mtProc,TypeInfo(_T58),[
TypeInfo(TSocket),
TypeInfo(IDispatch),TypeInfo(Boolean)],Addr(____FD_ISSET__Wrapper),cRegister);

RegisterProc(nil,MethodNames[65],mtProc,TypeInfo(_T59),[
TypeInfo(TSocket),
TypeInfo(IDispatch)],Addr(____FD_SET__Wrapper),cRegister);

RegisterProc(nil,MethodNames[66],mtProc,TypeInfo(_T60),[
TypeInfo(IDispatch)],Addr(____FD_ZERO__Wrapper),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'accept',mtProc,TypeInfo(_T0),[
TypeInfo(TSocket),
TypeInfoPointer,
TypeInfoPointer,TypeInfo(TSocket)],Addr(accept),cStdCall)}

{RegisterProc(nil,'getsockopt',mtProc,TypeInfo(_T7),[
TypeInfo(TSocket),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(Integer)],Addr(getsockopt),cStdCall)}

{RegisterProc(nil,'inet_addr',mtProc,TypeInfo(_T10),[
TypeInfoPChar,TypeInfo(u_long)],Addr(inet_addr),cStdCall)}

{RegisterProc(nil,'select',mtProc,TypeInfo(_T17),[
TypeInfo(Integer),
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,
TypeInfoPointer,TypeInfo(Longint)],Addr(select),cStdCall)}

{RegisterProc(nil,'setsockopt',mtProc,TypeInfo(_T20),[
TypeInfo(TSocket),
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(Integer)],Addr(setsockopt),cStdCall)}

{RegisterProc(nil,'gethostbyaddr',mtProc,TypeInfo(_T23),[
TypeInfoPointer,
TypeInfo(Integer),
TypeInfo(Integer),TypeInfoPointer],Addr(gethostbyaddr),cStdCall)}

{RegisterProc(nil,'gethostbyname',mtProc,TypeInfo(_T24),[
TypeInfoPChar,TypeInfoPointer],Addr(gethostbyname),cStdCall)}

{RegisterProc(nil,'gethostname',mtProc,TypeInfo(_T25),[
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(Integer)],Addr(gethostname),cStdCall)}

{RegisterProc(nil,'getservbyport',mtProc,TypeInfo(_T26),[
TypeInfo(Integer),
TypeInfoPChar,TypeInfoPointer],Addr(getservbyport),cStdCall)}

{RegisterProc(nil,'getservbyname',mtProc,TypeInfo(_T27),[
TypeInfoPChar,
TypeInfoPChar,TypeInfoPointer],Addr(getservbyname),cStdCall)}

{RegisterProc(nil,'getprotobynumber',mtProc,TypeInfo(_T28),[
TypeInfo(Integer),TypeInfoPointer],Addr(getprotobynumber),cStdCall)}

{RegisterProc(nil,'getprotobyname',mtProc,TypeInfo(_T29),[
TypeInfoPChar,TypeInfoPointer],Addr(getprotobyname),cStdCall)}

{RegisterProc(nil,'WSAAsyncGetServByName',mtProc,TypeInfo(_T38),[
TypeInfo(HWND),
TypeInfo(u_int),
TypeInfoPChar,
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(THandle)],Addr(WSAAsyncGetServByName),cStdCall)}

{RegisterProc(nil,'WSAAsyncGetServByPort',mtProc,TypeInfo(_T39),[
TypeInfo(HWND),
TypeInfo(u_int),
TypeInfo(u_int),
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(THandle)],Addr(WSAAsyncGetServByPort),cStdCall)}

{RegisterProc(nil,'WSAAsyncGetProtoByName',mtProc,TypeInfo(_T40),[
TypeInfo(HWND),
TypeInfo(u_int),
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(THandle)],Addr(WSAAsyncGetProtoByName),cStdCall)}

{RegisterProc(nil,'WSAAsyncGetProtoByNumber',mtProc,TypeInfo(_T41),[
TypeInfo(HWND),
TypeInfo(u_int),
TypeInfo(Integer),
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(THandle)],Addr(WSAAsyncGetProtoByNumber),cStdCall)}

{RegisterProc(nil,'WSAAsyncGetHostByName',mtProc,TypeInfo(_T42),[
TypeInfo(HWND),
TypeInfo(u_int),
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(THandle)],Addr(WSAAsyncGetHostByName),cStdCall)}

{RegisterProc(nil,'WSAAsyncGetHostByAddr',mtProc,TypeInfo(_T43),[
TypeInfo(HWND),
TypeInfo(u_int),
TypeInfoPChar,
TypeInfo(Integer),
TypeInfo(Integer),
TypeInfoPChar,
TypeInfo(Integer),TypeInfo(THandle)],Addr(WSAAsyncGetHostByAddr),cStdCall)}

{RegisterProc(nil,'TransmitFile',mtProc,TypeInfo(_T48),[
TypeInfo(TSocket),
TypeInfo(THandle),
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfoPointer,
TypeInfoPointer,
TypeInfo(DWORD),TypeInfo(BOOL)],Addr(TransmitFile),cStdCall)}

{RegisterProc(nil,'AcceptEx',mtProc,TypeInfo(_T49),[
TypeInfo(TSocket),
TypeInfo(TSocket),
TypeInfoPointer,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfoPointer,TypeInfo(BOOL)],Addr(AcceptEx),cStdCall)}

{RegisterProc(nil,'GetAcceptExSockaddrs',mtProc,TypeInfo(_T50),[
TypeInfoPointer,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfoPointer,
TypeInfo(Integer),
TypeInfoPointer,
TypeInfo(Integer)],Addr(GetAcceptExSockaddrs),cStdCall)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
