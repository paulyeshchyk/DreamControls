{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit URLMON_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  Types,
  Messages,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  Windows,
  ActiveX,
  UrlMon;
function Convert_REMSECURITY_ATTRIBUTESToVariant(var R : _REMSECURITY_ATTRIBUTES) : OleVariant;
function ConvertVariantTo_REMSECURITY_ATTRIBUTES(const V : OleVariant) : _REMSECURITY_ATTRIBUTES;
function Convert_tagBINDINFOToVariant(var R : _tagBINDINFO) : OleVariant;
function ConvertVariantTo_tagBINDINFO(const V : OleVariant) : _tagBINDINFO;
function Convert_tagCODEBASEHOLDToVariant(var R : _tagCODEBASEHOLD) : OleVariant;
function ConvertVariantTo_tagCODEBASEHOLD(const V : OleVariant) : _tagCODEBASEHOLD;
function Convert_tagDATAINFOToVariant(var R : _tagDATAINFO) : OleVariant;
function ConvertVariantTo_tagDATAINFO(const V : OleVariant) : _tagDATAINFO;
function Convert_tagHIT_LOGGING_INFOToVariant(var R : _tagHIT_LOGGING_INFO) : OleVariant;
function ConvertVariantTo_tagHIT_LOGGING_INFO(const V : OleVariant) : _tagHIT_LOGGING_INFO;
function Convert_tagPROTOCOLDATAToVariant(var R : _tagPROTOCOLDATA) : OleVariant;
function ConvertVariantTo_tagPROTOCOLDATA(const V : OleVariant) : _tagPROTOCOLDATA;
function Convert_tagPROTOCOLFILTERDATAToVariant(var R : _tagPROTOCOLFILTERDATA) : OleVariant;
function ConvertVariantTo_tagPROTOCOLFILTERDATA(const V : OleVariant) : _tagPROTOCOLFILTERDATA;
function Convert_tagRemBINDINFOToVariant(var R : _tagRemBINDINFO) : OleVariant;
function ConvertVariantTo_tagRemBINDINFO(const V : OleVariant) : _tagRemBINDINFO;
function Convert_tagSOFTDISTINFOToVariant(var R : _tagSOFTDISTINFO) : OleVariant;
function ConvertVariantTo_tagSOFTDISTINFO(const V : OleVariant) : _tagSOFTDISTINFO;
function Convert_ZONEATTRIBUTESToVariant(var R : _ZONEATTRIBUTES) : OleVariant;
function ConvertVariantTo_ZONEATTRIBUTES(const V : OleVariant) : _ZONEATTRIBUTES;
function ConvertBINDINFOToVariant(var R : BINDINFO) : OleVariant;
function ConvertVariantToBINDINFO(const V : OleVariant) : BINDINFO;
function ConvertCODEBASEHOLDToVariant(var R : CODEBASEHOLD) : OleVariant;
function ConvertVariantToCODEBASEHOLD(const V : OleVariant) : CODEBASEHOLD;
function ConvertDATAINFOToVariant(var R : DATAINFO) : OleVariant;
function ConvertVariantToDATAINFO(const V : OleVariant) : DATAINFO;
function ConvertHIT_LOGGING_INFOToVariant(var R : HIT_LOGGING_INFO) : OleVariant;
function ConvertVariantToHIT_LOGGING_INFO(const V : OleVariant) : HIT_LOGGING_INFO;
function ConvertPROTOCOLDATAToVariant(var R : PROTOCOLDATA) : OleVariant;
function ConvertVariantToPROTOCOLDATA(const V : OleVariant) : PROTOCOLDATA;
function ConvertPROTOCOLFILTERDATAToVariant(var R : PROTOCOLFILTERDATA) : OleVariant;
function ConvertVariantToPROTOCOLFILTERDATA(const V : OleVariant) : PROTOCOLFILTERDATA;
function ConvertRemBINDINFOToVariant(var R : RemBINDINFO) : OleVariant;
function ConvertVariantToRemBINDINFO(const V : OleVariant) : RemBINDINFO;
function ConvertRemFORMATETCToVariant(var R : RemFORMATETC) : OleVariant;
function ConvertVariantToRemFORMATETC(const V : OleVariant) : RemFORMATETC;
function ConvertREMSECURITY_ATTRIBUTESToVariant(var R : REMSECURITY_ATTRIBUTES) : OleVariant;
function ConvertVariantToREMSECURITY_ATTRIBUTES(const V : OleVariant) : REMSECURITY_ATTRIBUTES;
function ConvertSOFTDISTINFOToVariant(var R : SOFTDISTINFO) : OleVariant;
function ConvertVariantToSOFTDISTINFO(const V : OleVariant) : SOFTDISTINFO;
function ConverttagRemFORMATETCToVariant(var R : tagRemFORMATETC) : OleVariant;
function ConvertVariantTotagRemFORMATETC(const V : OleVariant) : tagRemFORMATETC;
function ConvertTBindInfoToVariant(var R : TBindInfo) : OleVariant;
function ConvertVariantToTBindInfo(const V : OleVariant) : TBindInfo;
function ConvertTCodeBaseHoldToVariant(var R : TCodeBaseHold) : OleVariant;
function ConvertVariantToTCodeBaseHold(const V : OleVariant) : TCodeBaseHold;
function ConvertTDataInfoToVariant(var R : TDataInfo) : OleVariant;
function ConvertVariantToTDataInfo(const V : OleVariant) : TDataInfo;
function ConvertTHitLoggingInfoToVariant(var R : THitLoggingInfo) : OleVariant;
function ConvertVariantToTHitLoggingInfo(const V : OleVariant) : THitLoggingInfo;
function ConvertTProtocolDataToVariant(var R : TProtocolData) : OleVariant;
function ConvertVariantToTProtocolData(const V : OleVariant) : TProtocolData;
function ConvertTProtocolFilterDataToVariant(var R : TProtocolFilterData) : OleVariant;
function ConvertVariantToTProtocolFilterData(const V : OleVariant) : TProtocolFilterData;
function ConvertTRemBindInfoToVariant(var R : TRemBindInfo) : OleVariant;
function ConvertVariantToTRemBindInfo(const V : OleVariant) : TRemBindInfo;
function ConvertTRemFormatEtcToVariant(var R : TRemFormatEtc) : OleVariant;
function ConvertVariantToTRemFormatEtc(const V : OleVariant) : TRemFormatEtc;
function ConvertTRemSecurityAttributesToVariant(var R : TRemSecurityAttributes) : OleVariant;
function ConvertVariantToTRemSecurityAttributes(const V : OleVariant) : TRemSecurityAttributes;
function ConvertTSoftDistInfoToVariant(var R : TSoftDistInfo) : OleVariant;
function ConvertVariantToTSoftDistInfo(const V : OleVariant) : TSoftDistInfo;
function ConvertTStgMediumToVariant(var R : TStgMedium) : OleVariant;
function ConvertVariantToTStgMedium(const V : OleVariant) : TStgMedium;
function ConvertTZoneAttributesToVariant(var R : TZoneAttributes) : OleVariant;
function ConvertVariantToTZoneAttributes(const V : OleVariant) : TZoneAttributes;
function ConvertZONEATTRIBUTESToVariant(var R : ZONEATTRIBUTES) : OleVariant;
function ConvertVariantToZONEATTRIBUTES(const V : OleVariant) : ZONEATTRIBUTES;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type ___REMSECURITY_ATTRIBUTES__Wrapper = class(TDCRecordWrapper)
private
fR : _REMSECURITY_ATTRIBUTES;
public
function GetRecordPtr : pointer; override;
published
procedure setnLength(const val : DWORD);
function getnLength : DWORD;
property nLength : DWORD read getnLength write setnLength;
procedure setlpSecurityDescriptor(const val : DWORD);
function getlpSecurityDescriptor : DWORD;
property lpSecurityDescriptor : DWORD read getlpSecurityDescriptor write setlpSecurityDescriptor;
procedure setbInheritHandle(const val : BOOL);
function getbInheritHandle : BOOL;
property bInheritHandle : BOOL read getbInheritHandle write setbInheritHandle;
end;
type ___tagBINDINFO__Wrapper = class(TDCRecordWrapper)
private
fR : _tagBINDINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setgrfBindInfoF(const val : DWORD);
function getgrfBindInfoF : DWORD;
property grfBindInfoF : DWORD read getgrfBindInfoF write setgrfBindInfoF;
procedure setdwBindVerb(const val : DWORD);
function getdwBindVerb : DWORD;
property dwBindVerb : DWORD read getdwBindVerb write setdwBindVerb;
procedure setcbstgmedData(const val : DWORD);
function getcbstgmedData : DWORD;
property cbstgmedData : DWORD read getcbstgmedData write setcbstgmedData;
procedure setdwOptions(const val : DWORD);
function getdwOptions : DWORD;
property dwOptions : DWORD read getdwOptions write setdwOptions;
procedure setdwOptionsFlags(const val : DWORD);
function getdwOptionsFlags : DWORD;
property dwOptionsFlags : DWORD read getdwOptionsFlags write setdwOptionsFlags;
procedure setdwCodePage(const val : DWORD);
function getdwCodePage : DWORD;
property dwCodePage : DWORD read getdwCodePage write setdwCodePage;
procedure setdwReserved(const val : DWORD);
function getdwReserved : DWORD;
property dwReserved : DWORD read getdwReserved write setdwReserved;
end;
type ___tagCODEBASEHOLD__Wrapper = class(TDCRecordWrapper)
private
fR : _tagCODEBASEHOLD;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setdwVersionMS(const val : DWORD);
function getdwVersionMS : DWORD;
property dwVersionMS : DWORD read getdwVersionMS write setdwVersionMS;
procedure setdwVersionLS(const val : DWORD);
function getdwVersionLS : DWORD;
property dwVersionLS : DWORD read getdwVersionLS write setdwVersionLS;
procedure setdwStyle(const val : DWORD);
function getdwStyle : DWORD;
property dwStyle : DWORD read getdwStyle write setdwStyle;
end;
type ___tagDATAINFO__Wrapper = class(TDCRecordWrapper)
private
fR : _tagDATAINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setulTotalSize(const val : ULONG);
function getulTotalSize : ULONG;
property ulTotalSize : ULONG read getulTotalSize write setulTotalSize;
procedure setulavrPacketSize(const val : ULONG);
function getulavrPacketSize : ULONG;
property ulavrPacketSize : ULONG read getulavrPacketSize write setulavrPacketSize;
procedure setulConnectSpeed(const val : ULONG);
function getulConnectSpeed : ULONG;
property ulConnectSpeed : ULONG read getulConnectSpeed write setulConnectSpeed;
procedure setulProcessorSpeed(const val : ULONG);
function getulProcessorSpeed : ULONG;
property ulProcessorSpeed : ULONG read getulProcessorSpeed write setulProcessorSpeed;
end;
type ___tagHIT_LOGGING_INFO__Wrapper = class(TDCRecordWrapper)
private
fR : _tagHIT_LOGGING_INFO;
public
function GetRecordPtr : pointer; override;
published
procedure setdwStructSize(const val : DWORD);
function getdwStructSize : DWORD;
property dwStructSize : DWORD read getdwStructSize write setdwStructSize;
end;
type ___tagPROTOCOLDATA__Wrapper = class(TDCRecordWrapper)
private
fR : _tagPROTOCOLDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setgrfFlags(const val : DWORD);
function getgrfFlags : DWORD;
property grfFlags : DWORD read getgrfFlags write setgrfFlags;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setcbData(const val : ULONG);
function getcbData : ULONG;
property cbData : ULONG read getcbData write setcbData;
end;
type ___tagPROTOCOLFILTERDATA__Wrapper = class(TDCRecordWrapper)
private
fR : _tagPROTOCOLFILTERDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setdwFilterFlags(const val : DWORD);
function getdwFilterFlags : DWORD;
property dwFilterFlags : DWORD read getdwFilterFlags write setdwFilterFlags;
end;
type ___tagRemBINDINFO__Wrapper = class(TDCRecordWrapper)
private
fR : _tagRemBINDINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setgrfBindInfoF(const val : DWORD);
function getgrfBindInfoF : DWORD;
property grfBindInfoF : DWORD read getgrfBindInfoF write setgrfBindInfoF;
procedure setdwBindVerb(const val : DWORD);
function getdwBindVerb : DWORD;
property dwBindVerb : DWORD read getdwBindVerb write setdwBindVerb;
procedure setcbstgmedData(const val : DWORD);
function getcbstgmedData : DWORD;
property cbstgmedData : DWORD read getcbstgmedData write setcbstgmedData;
procedure setdwOptions(const val : DWORD);
function getdwOptions : DWORD;
property dwOptions : DWORD read getdwOptions write setdwOptions;
procedure setdwOptionsFlags(const val : DWORD);
function getdwOptionsFlags : DWORD;
property dwOptionsFlags : DWORD read getdwOptionsFlags write setdwOptionsFlags;
procedure setdwCodePage(const val : DWORD);
function getdwCodePage : DWORD;
property dwCodePage : DWORD read getdwCodePage write setdwCodePage;
procedure setdwReserved(const val : DWORD);
function getdwReserved : DWORD;
property dwReserved : DWORD read getdwReserved write setdwReserved;
end;
type ___tagSOFTDISTINFO__Wrapper = class(TDCRecordWrapper)
private
fR : _tagSOFTDISTINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwAdState(const val : DWORD);
function getdwAdState : DWORD;
property dwAdState : DWORD read getdwAdState write setdwAdState;
procedure setdwInstalledVersionMS(const val : DWORD);
function getdwInstalledVersionMS : DWORD;
property dwInstalledVersionMS : DWORD read getdwInstalledVersionMS write setdwInstalledVersionMS;
procedure setdwInstalledVersionLS(const val : DWORD);
function getdwInstalledVersionLS : DWORD;
property dwInstalledVersionLS : DWORD read getdwInstalledVersionLS write setdwInstalledVersionLS;
procedure setdwUpdateVersionMS(const val : DWORD);
function getdwUpdateVersionMS : DWORD;
property dwUpdateVersionMS : DWORD read getdwUpdateVersionMS write setdwUpdateVersionMS;
procedure setdwUpdateVersionLS(const val : DWORD);
function getdwUpdateVersionLS : DWORD;
property dwUpdateVersionLS : DWORD read getdwUpdateVersionLS write setdwUpdateVersionLS;
procedure setdwAdvertisedVersionMS(const val : DWORD);
function getdwAdvertisedVersionMS : DWORD;
property dwAdvertisedVersionMS : DWORD read getdwAdvertisedVersionMS write setdwAdvertisedVersionMS;
procedure setdwAdvertisedVersionLS(const val : DWORD);
function getdwAdvertisedVersionLS : DWORD;
property dwAdvertisedVersionLS : DWORD read getdwAdvertisedVersionLS write setdwAdvertisedVersionLS;
procedure setdwReserved(const val : DWORD);
function getdwReserved : DWORD;
property dwReserved : DWORD read getdwReserved write setdwReserved;
end;
type ___ZONEATTRIBUTES__Wrapper = class(TDCRecordWrapper)
private
fR : _ZONEATTRIBUTES;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setdwTemplateMinLevel(const val : DWORD);
function getdwTemplateMinLevel : DWORD;
property dwTemplateMinLevel : DWORD read getdwTemplateMinLevel write setdwTemplateMinLevel;
procedure setdwTemplateRecommended(const val : DWORD);
function getdwTemplateRecommended : DWORD;
property dwTemplateRecommended : DWORD read getdwTemplateRecommended write setdwTemplateRecommended;
procedure setdwTemplateCurrentLevel(const val : DWORD);
function getdwTemplateCurrentLevel : DWORD;
property dwTemplateCurrentLevel : DWORD read getdwTemplateCurrentLevel write setdwTemplateCurrentLevel;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
end;
type __BINDINFO__Wrapper = class(TDCRecordWrapper)
private
fR : BINDINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setgrfBindInfoF(const val : DWORD);
function getgrfBindInfoF : DWORD;
property grfBindInfoF : DWORD read getgrfBindInfoF write setgrfBindInfoF;
procedure setdwBindVerb(const val : DWORD);
function getdwBindVerb : DWORD;
property dwBindVerb : DWORD read getdwBindVerb write setdwBindVerb;
procedure setcbstgmedData(const val : DWORD);
function getcbstgmedData : DWORD;
property cbstgmedData : DWORD read getcbstgmedData write setcbstgmedData;
procedure setdwOptions(const val : DWORD);
function getdwOptions : DWORD;
property dwOptions : DWORD read getdwOptions write setdwOptions;
procedure setdwOptionsFlags(const val : DWORD);
function getdwOptionsFlags : DWORD;
property dwOptionsFlags : DWORD read getdwOptionsFlags write setdwOptionsFlags;
procedure setdwCodePage(const val : DWORD);
function getdwCodePage : DWORD;
property dwCodePage : DWORD read getdwCodePage write setdwCodePage;
procedure setdwReserved(const val : DWORD);
function getdwReserved : DWORD;
property dwReserved : DWORD read getdwReserved write setdwReserved;
end;
type __CODEBASEHOLD__Wrapper = class(TDCRecordWrapper)
private
fR : CODEBASEHOLD;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setdwVersionMS(const val : DWORD);
function getdwVersionMS : DWORD;
property dwVersionMS : DWORD read getdwVersionMS write setdwVersionMS;
procedure setdwVersionLS(const val : DWORD);
function getdwVersionLS : DWORD;
property dwVersionLS : DWORD read getdwVersionLS write setdwVersionLS;
procedure setdwStyle(const val : DWORD);
function getdwStyle : DWORD;
property dwStyle : DWORD read getdwStyle write setdwStyle;
end;
type __DATAINFO__Wrapper = class(TDCRecordWrapper)
private
fR : DATAINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setulTotalSize(const val : ULONG);
function getulTotalSize : ULONG;
property ulTotalSize : ULONG read getulTotalSize write setulTotalSize;
procedure setulavrPacketSize(const val : ULONG);
function getulavrPacketSize : ULONG;
property ulavrPacketSize : ULONG read getulavrPacketSize write setulavrPacketSize;
procedure setulConnectSpeed(const val : ULONG);
function getulConnectSpeed : ULONG;
property ulConnectSpeed : ULONG read getulConnectSpeed write setulConnectSpeed;
procedure setulProcessorSpeed(const val : ULONG);
function getulProcessorSpeed : ULONG;
property ulProcessorSpeed : ULONG read getulProcessorSpeed write setulProcessorSpeed;
end;
type __HIT_LOGGING_INFO__Wrapper = class(TDCRecordWrapper)
private
fR : HIT_LOGGING_INFO;
public
function GetRecordPtr : pointer; override;
published
procedure setdwStructSize(const val : DWORD);
function getdwStructSize : DWORD;
property dwStructSize : DWORD read getdwStructSize write setdwStructSize;
end;
type __PROTOCOLDATA__Wrapper = class(TDCRecordWrapper)
private
fR : PROTOCOLDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setgrfFlags(const val : DWORD);
function getgrfFlags : DWORD;
property grfFlags : DWORD read getgrfFlags write setgrfFlags;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setcbData(const val : ULONG);
function getcbData : ULONG;
property cbData : ULONG read getcbData write setcbData;
end;
type __PROTOCOLFILTERDATA__Wrapper = class(TDCRecordWrapper)
private
fR : PROTOCOLFILTERDATA;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setdwFilterFlags(const val : DWORD);
function getdwFilterFlags : DWORD;
property dwFilterFlags : DWORD read getdwFilterFlags write setdwFilterFlags;
end;
type __RemBINDINFO__Wrapper = class(TDCRecordWrapper)
private
fR : RemBINDINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setgrfBindInfoF(const val : DWORD);
function getgrfBindInfoF : DWORD;
property grfBindInfoF : DWORD read getgrfBindInfoF write setgrfBindInfoF;
procedure setdwBindVerb(const val : DWORD);
function getdwBindVerb : DWORD;
property dwBindVerb : DWORD read getdwBindVerb write setdwBindVerb;
procedure setcbstgmedData(const val : DWORD);
function getcbstgmedData : DWORD;
property cbstgmedData : DWORD read getcbstgmedData write setcbstgmedData;
procedure setdwOptions(const val : DWORD);
function getdwOptions : DWORD;
property dwOptions : DWORD read getdwOptions write setdwOptions;
procedure setdwOptionsFlags(const val : DWORD);
function getdwOptionsFlags : DWORD;
property dwOptionsFlags : DWORD read getdwOptionsFlags write setdwOptionsFlags;
procedure setdwCodePage(const val : DWORD);
function getdwCodePage : DWORD;
property dwCodePage : DWORD read getdwCodePage write setdwCodePage;
procedure setdwReserved(const val : DWORD);
function getdwReserved : DWORD;
property dwReserved : DWORD read getdwReserved write setdwReserved;
end;
type __RemFORMATETC__Wrapper = class(TDCRecordWrapper)
private
fR : RemFORMATETC;
public
function GetRecordPtr : pointer; override;
published
procedure setcfFormat(const val : DWORD);
function getcfFormat : DWORD;
property cfFormat : DWORD read getcfFormat write setcfFormat;
procedure setptd(const val : DWORD);
function getptd : DWORD;
property ptd : DWORD read getptd write setptd;
procedure setdwAspect(const val : DWORD);
function getdwAspect : DWORD;
property dwAspect : DWORD read getdwAspect write setdwAspect;
procedure setlindex(const val : Longint);
function getlindex : Longint;
property lindex : Longint read getlindex write setlindex;
procedure settymed(const val : DWORD);
function gettymed : DWORD;
property tymed : DWORD read gettymed write settymed;
end;
type __REMSECURITY_ATTRIBUTES__Wrapper = class(TDCRecordWrapper)
private
fR : REMSECURITY_ATTRIBUTES;
public
function GetRecordPtr : pointer; override;
published
procedure setnLength(const val : DWORD);
function getnLength : DWORD;
property nLength : DWORD read getnLength write setnLength;
procedure setlpSecurityDescriptor(const val : DWORD);
function getlpSecurityDescriptor : DWORD;
property lpSecurityDescriptor : DWORD read getlpSecurityDescriptor write setlpSecurityDescriptor;
procedure setbInheritHandle(const val : BOOL);
function getbInheritHandle : BOOL;
property bInheritHandle : BOOL read getbInheritHandle write setbInheritHandle;
end;
type __SOFTDISTINFO__Wrapper = class(TDCRecordWrapper)
private
fR : SOFTDISTINFO;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwAdState(const val : DWORD);
function getdwAdState : DWORD;
property dwAdState : DWORD read getdwAdState write setdwAdState;
procedure setdwInstalledVersionMS(const val : DWORD);
function getdwInstalledVersionMS : DWORD;
property dwInstalledVersionMS : DWORD read getdwInstalledVersionMS write setdwInstalledVersionMS;
procedure setdwInstalledVersionLS(const val : DWORD);
function getdwInstalledVersionLS : DWORD;
property dwInstalledVersionLS : DWORD read getdwInstalledVersionLS write setdwInstalledVersionLS;
procedure setdwUpdateVersionMS(const val : DWORD);
function getdwUpdateVersionMS : DWORD;
property dwUpdateVersionMS : DWORD read getdwUpdateVersionMS write setdwUpdateVersionMS;
procedure setdwUpdateVersionLS(const val : DWORD);
function getdwUpdateVersionLS : DWORD;
property dwUpdateVersionLS : DWORD read getdwUpdateVersionLS write setdwUpdateVersionLS;
procedure setdwAdvertisedVersionMS(const val : DWORD);
function getdwAdvertisedVersionMS : DWORD;
property dwAdvertisedVersionMS : DWORD read getdwAdvertisedVersionMS write setdwAdvertisedVersionMS;
procedure setdwAdvertisedVersionLS(const val : DWORD);
function getdwAdvertisedVersionLS : DWORD;
property dwAdvertisedVersionLS : DWORD read getdwAdvertisedVersionLS write setdwAdvertisedVersionLS;
procedure setdwReserved(const val : DWORD);
function getdwReserved : DWORD;
property dwReserved : DWORD read getdwReserved write setdwReserved;
end;
type __tagRemFORMATETC__Wrapper = class(TDCRecordWrapper)
private
fR : tagRemFORMATETC;
public
function GetRecordPtr : pointer; override;
published
procedure setcfFormat(const val : DWORD);
function getcfFormat : DWORD;
property cfFormat : DWORD read getcfFormat write setcfFormat;
procedure setptd(const val : DWORD);
function getptd : DWORD;
property ptd : DWORD read getptd write setptd;
procedure setdwAspect(const val : DWORD);
function getdwAspect : DWORD;
property dwAspect : DWORD read getdwAspect write setdwAspect;
procedure setlindex(const val : Longint);
function getlindex : Longint;
property lindex : Longint read getlindex write setlindex;
procedure settymed(const val : DWORD);
function gettymed : DWORD;
property tymed : DWORD read gettymed write settymed;
end;
type __TBindInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TBindInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setgrfBindInfoF(const val : DWORD);
function getgrfBindInfoF : DWORD;
property grfBindInfoF : DWORD read getgrfBindInfoF write setgrfBindInfoF;
procedure setdwBindVerb(const val : DWORD);
function getdwBindVerb : DWORD;
property dwBindVerb : DWORD read getdwBindVerb write setdwBindVerb;
procedure setcbstgmedData(const val : DWORD);
function getcbstgmedData : DWORD;
property cbstgmedData : DWORD read getcbstgmedData write setcbstgmedData;
procedure setdwOptions(const val : DWORD);
function getdwOptions : DWORD;
property dwOptions : DWORD read getdwOptions write setdwOptions;
procedure setdwOptionsFlags(const val : DWORD);
function getdwOptionsFlags : DWORD;
property dwOptionsFlags : DWORD read getdwOptionsFlags write setdwOptionsFlags;
procedure setdwCodePage(const val : DWORD);
function getdwCodePage : DWORD;
property dwCodePage : DWORD read getdwCodePage write setdwCodePage;
procedure setdwReserved(const val : DWORD);
function getdwReserved : DWORD;
property dwReserved : DWORD read getdwReserved write setdwReserved;
end;
type __TCodeBaseHold__Wrapper = class(TDCRecordWrapper)
private
fR : TCodeBaseHold;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setdwVersionMS(const val : DWORD);
function getdwVersionMS : DWORD;
property dwVersionMS : DWORD read getdwVersionMS write setdwVersionMS;
procedure setdwVersionLS(const val : DWORD);
function getdwVersionLS : DWORD;
property dwVersionLS : DWORD read getdwVersionLS write setdwVersionLS;
procedure setdwStyle(const val : DWORD);
function getdwStyle : DWORD;
property dwStyle : DWORD read getdwStyle write setdwStyle;
end;
type __TDataInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TDataInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setulTotalSize(const val : ULONG);
function getulTotalSize : ULONG;
property ulTotalSize : ULONG read getulTotalSize write setulTotalSize;
procedure setulavrPacketSize(const val : ULONG);
function getulavrPacketSize : ULONG;
property ulavrPacketSize : ULONG read getulavrPacketSize write setulavrPacketSize;
procedure setulConnectSpeed(const val : ULONG);
function getulConnectSpeed : ULONG;
property ulConnectSpeed : ULONG read getulConnectSpeed write setulConnectSpeed;
procedure setulProcessorSpeed(const val : ULONG);
function getulProcessorSpeed : ULONG;
property ulProcessorSpeed : ULONG read getulProcessorSpeed write setulProcessorSpeed;
end;
type __THitLoggingInfo__Wrapper = class(TDCRecordWrapper)
private
fR : THitLoggingInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setdwStructSize(const val : DWORD);
function getdwStructSize : DWORD;
property dwStructSize : DWORD read getdwStructSize write setdwStructSize;
end;
type __TProtocolData__Wrapper = class(TDCRecordWrapper)
private
fR : TProtocolData;
public
function GetRecordPtr : pointer; override;
published
procedure setgrfFlags(const val : DWORD);
function getgrfFlags : DWORD;
property grfFlags : DWORD read getgrfFlags write setgrfFlags;
procedure setdwState(const val : DWORD);
function getdwState : DWORD;
property dwState : DWORD read getdwState write setdwState;
procedure setcbData(const val : ULONG);
function getcbData : ULONG;
property cbData : ULONG read getcbData write setcbData;
end;
type __TProtocolFilterData__Wrapper = class(TDCRecordWrapper)
private
fR : TProtocolFilterData;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : DWORD);
function getcbSize : DWORD;
property cbSize : DWORD read getcbSize write setcbSize;
procedure setdwFilterFlags(const val : DWORD);
function getdwFilterFlags : DWORD;
property dwFilterFlags : DWORD read getdwFilterFlags write setdwFilterFlags;
end;
type __TRemBindInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TRemBindInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setgrfBindInfoF(const val : DWORD);
function getgrfBindInfoF : DWORD;
property grfBindInfoF : DWORD read getgrfBindInfoF write setgrfBindInfoF;
procedure setdwBindVerb(const val : DWORD);
function getdwBindVerb : DWORD;
property dwBindVerb : DWORD read getdwBindVerb write setdwBindVerb;
procedure setcbstgmedData(const val : DWORD);
function getcbstgmedData : DWORD;
property cbstgmedData : DWORD read getcbstgmedData write setcbstgmedData;
procedure setdwOptions(const val : DWORD);
function getdwOptions : DWORD;
property dwOptions : DWORD read getdwOptions write setdwOptions;
procedure setdwOptionsFlags(const val : DWORD);
function getdwOptionsFlags : DWORD;
property dwOptionsFlags : DWORD read getdwOptionsFlags write setdwOptionsFlags;
procedure setdwCodePage(const val : DWORD);
function getdwCodePage : DWORD;
property dwCodePage : DWORD read getdwCodePage write setdwCodePage;
procedure setdwReserved(const val : DWORD);
function getdwReserved : DWORD;
property dwReserved : DWORD read getdwReserved write setdwReserved;
end;
type __TRemFormatEtc__Wrapper = class(TDCRecordWrapper)
private
fR : TRemFormatEtc;
public
function GetRecordPtr : pointer; override;
published
procedure setcfFormat(const val : DWORD);
function getcfFormat : DWORD;
property cfFormat : DWORD read getcfFormat write setcfFormat;
procedure setptd(const val : DWORD);
function getptd : DWORD;
property ptd : DWORD read getptd write setptd;
procedure setdwAspect(const val : DWORD);
function getdwAspect : DWORD;
property dwAspect : DWORD read getdwAspect write setdwAspect;
procedure setlindex(const val : Longint);
function getlindex : Longint;
property lindex : Longint read getlindex write setlindex;
procedure settymed(const val : DWORD);
function gettymed : DWORD;
property tymed : DWORD read gettymed write settymed;
end;
type __TRemSecurityAttributes__Wrapper = class(TDCRecordWrapper)
private
fR : TRemSecurityAttributes;
public
function GetRecordPtr : pointer; override;
published
procedure setnLength(const val : DWORD);
function getnLength : DWORD;
property nLength : DWORD read getnLength write setnLength;
procedure setlpSecurityDescriptor(const val : DWORD);
function getlpSecurityDescriptor : DWORD;
property lpSecurityDescriptor : DWORD read getlpSecurityDescriptor write setlpSecurityDescriptor;
procedure setbInheritHandle(const val : BOOL);
function getbInheritHandle : BOOL;
property bInheritHandle : BOOL read getbInheritHandle write setbInheritHandle;
end;
type __TSoftDistInfo__Wrapper = class(TDCRecordWrapper)
private
fR : TSoftDistInfo;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
procedure setdwAdState(const val : DWORD);
function getdwAdState : DWORD;
property dwAdState : DWORD read getdwAdState write setdwAdState;
procedure setdwInstalledVersionMS(const val : DWORD);
function getdwInstalledVersionMS : DWORD;
property dwInstalledVersionMS : DWORD read getdwInstalledVersionMS write setdwInstalledVersionMS;
procedure setdwInstalledVersionLS(const val : DWORD);
function getdwInstalledVersionLS : DWORD;
property dwInstalledVersionLS : DWORD read getdwInstalledVersionLS write setdwInstalledVersionLS;
procedure setdwUpdateVersionMS(const val : DWORD);
function getdwUpdateVersionMS : DWORD;
property dwUpdateVersionMS : DWORD read getdwUpdateVersionMS write setdwUpdateVersionMS;
procedure setdwUpdateVersionLS(const val : DWORD);
function getdwUpdateVersionLS : DWORD;
property dwUpdateVersionLS : DWORD read getdwUpdateVersionLS write setdwUpdateVersionLS;
procedure setdwAdvertisedVersionMS(const val : DWORD);
function getdwAdvertisedVersionMS : DWORD;
property dwAdvertisedVersionMS : DWORD read getdwAdvertisedVersionMS write setdwAdvertisedVersionMS;
procedure setdwAdvertisedVersionLS(const val : DWORD);
function getdwAdvertisedVersionLS : DWORD;
property dwAdvertisedVersionLS : DWORD read getdwAdvertisedVersionLS write setdwAdvertisedVersionLS;
procedure setdwReserved(const val : DWORD);
function getdwReserved : DWORD;
property dwReserved : DWORD read getdwReserved write setdwReserved;
end;
type __TZoneAttributes__Wrapper = class(TDCRecordWrapper)
private
fR : TZoneAttributes;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setdwTemplateMinLevel(const val : DWORD);
function getdwTemplateMinLevel : DWORD;
property dwTemplateMinLevel : DWORD read getdwTemplateMinLevel write setdwTemplateMinLevel;
procedure setdwTemplateRecommended(const val : DWORD);
function getdwTemplateRecommended : DWORD;
property dwTemplateRecommended : DWORD read getdwTemplateRecommended write setdwTemplateRecommended;
procedure setdwTemplateCurrentLevel(const val : DWORD);
function getdwTemplateCurrentLevel : DWORD;
property dwTemplateCurrentLevel : DWORD read getdwTemplateCurrentLevel write setdwTemplateCurrentLevel;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
end;
type __ZONEATTRIBUTES__Wrapper = class(TDCRecordWrapper)
private
fR : ZONEATTRIBUTES;
public
function GetRecordPtr : pointer; override;
published
procedure setcbSize(const val : ULONG);
function getcbSize : ULONG;
property cbSize : ULONG read getcbSize write setcbSize;
procedure setdwTemplateMinLevel(const val : DWORD);
function getdwTemplateMinLevel : DWORD;
property dwTemplateMinLevel : DWORD read getdwTemplateMinLevel write setdwTemplateMinLevel;
procedure setdwTemplateRecommended(const val : DWORD);
function getdwTemplateRecommended : DWORD;
property dwTemplateRecommended : DWORD read getdwTemplateRecommended write setdwTemplateRecommended;
procedure setdwTemplateCurrentLevel(const val : DWORD);
function getdwTemplateCurrentLevel : DWORD;
property dwTemplateCurrentLevel : DWORD read getdwTemplateCurrentLevel write setdwTemplateCurrentLevel;
procedure setdwFlags(const val : DWORD);
function getdwFlags : DWORD;
property dwFlags : DWORD read getdwFlags write setdwFlags;
end;
type __TStgMedium__Wrapper = class(TDCRecordWrapper)
private
fR : TStgMedium;
public
function GetRecordPtr : pointer; override;
published
procedure settymed(const val : Longint);
function gettymed : Longint;
property tymed : Longint read gettymed write settymed;
procedure sethMetaFilePict(const val : THandle);
function gethMetaFilePict : THandle;
property hMetaFilePict : THandle read gethMetaFilePict write sethMetaFilePict;
procedure sethEnhMetaFile(const val : THandle);
function gethEnhMetaFile : THandle;
property hEnhMetaFile : THandle read gethEnhMetaFile write sethEnhMetaFile;
procedure sethGlobal(const val : hGlobal);
function gethGlobal : hGlobal;
property hGlobal : hGlobal read gethGlobal write sethGlobal;
end;
type
{_T0 = function (p0 : LPCWSTR;
p1 : LPCWSTR;
p2 : LPCWSTR;
p3 : IUnknown;
p4 : IBindCtx;
p5 : IBindStatusCallback;
p6 : DWORD;
p7 : DWORD): HResult of object;}

{_T1 = function (p0 : IMoniker;
p1 : LPCWSTR;
p2 : LPCWSTR;
p3 : IUnknown;
p4 : IBindCtx;
p5 : IBindStatusCallback;
p6 : DWORD;
p7 : DWORD): HResult of object;}

{_T2 = function (p0 : IMoniker;
p1 : LPCWSTR;
out p2 : IMoniker): HResult of object;}

{_T4 = function (p0 : DWORD;
p1 : IBindStatusCallback;
p2 : IEnumFORMATETC;
out p3 : IBindCtx): HResult of object;}

{_T5 = function (p0 : IBindCtx;
p1 : DWORD;
p2 : IBindStatusCallback;
p3 : IEnumFORMATETC;
out p4 : IBindCtx;
p5 : DWORD): HResult of object;}

{_T6 = function (p0 : IBindCtx;
p1 : LPCWSTR;
out p2 : ULONG;
out p3 : IMoniker): HResult of object;}

{_T7 = function (p0 : IBindCtx;
p1 : IBindStatusCallback;
out p2 : IBindStatusCallback;
p3 : DWORD): HResult of object;}

{_T8 = function (p0 : IBindCtx;
p1 : IBindStatusCallback): HResult of object;}

{_T10 = function (p0 : IBindCtx;
p1 : LPCWSTR;
p2 : DWORD): HResult of object;}

{_T12 = function (p0 : IMoniker): HResult of object;}

{_T13 = function (p0 : LPCWSTR;
p1 : IBindCtx;
out p2 : IBinding): HResult of object;}

{_T14 = function (p0 : UINT;
const p1 : LPCSTR;
const p2 : TClipFormat): HResult of object;}

{_T15 = function (p0 : LPCSTR;
p1 : PClipFormat): HResult of object;}

{_T17 = function (p0 : IBindCtx;
p1 : IEnumFORMATETC;
p2 : DWORD): HResult of object;}

{_T18 = function (p0 : IBindCtx;
p1 : IEnumFORMATETC): HResult of object;}

{_T19 = function (p0 : IBindCtx;
p1 : UINT;
const p2 : LPCSTR;
p3 : pclsid;
p4 : DWORD): HResult of object;}

_T21 = function (p0 : DWORD;
p1 : Pointer;
p2 : DWORD;
p3 : DWORD): HResult of object;

_T22 = function (p0 : DWORD;
p1 : Pointer;
p2 : DWORD;
out p3 : DWORD;
p4 : DWORD): HResult of object;

{_T23 = function (p0 : IBindCtx;
p1 : LPCWSTR;
p2 : Pointer;
p3 : DWORD;
p4 : LPCWSTR;
p5 : DWORD;
out p6 : LPWSTR;
p7 : DWORD): HResult of object;}

{_T24 = function (p0 : DWORD;
p1 : LPSTR;
var p2 : DWORD): HResult of object;}

{_T25 = function (p0 : IUnknown;
p1 : PChar;
p2 : DWORD;
p3 : IBindStatusCallback): HResult of object;}

{_T26 = function (p0 : IUnknown;
p1 : PAnsiChar;
p2 : DWORD;
p3 : IBindStatusCallback): HResult of object;}

{_T27 = function (p0 : IUnknown;
p1 : PWideChar;
p2 : DWORD;
p3 : IBindStatusCallback): HResult of object;}

{_T28 = function (p0 : IUnknown;
p1 : PChar;
p2 : DWORD;
p3 : IBindStatusCallback): HResult of object;}

{_T29 = function (p0 : IUnknown;
p1 : PAnsiChar;
p2 : DWORD;
p3 : IBindStatusCallback): HResult of object;}

{_T30 = function (p0 : IUnknown;
p1 : PWideChar;
p2 : DWORD;
p3 : IBindStatusCallback): HResult of object;}

{_T31 = function (p0 : IUnknown;
p1 : PChar;
p2 : PChar;
p3 : DWORD;
p4 : IBindStatusCallback): HResult of object;}

{_T32 = function (p0 : IUnknown;
p1 : PAnsiChar;
p2 : PAnsiChar;
p3 : DWORD;
p4 : IBindStatusCallback): HResult of object;}

{_T33 = function (p0 : IUnknown;
p1 : PWideChar;
p2 : PWideChar;
p3 : DWORD;
p4 : IBindStatusCallback): HResult of object;}

{_T34 = function (p0 : IUnknown;
p1 : PChar;
p2 : PChar;
p3 : DWORD;
p4 : DWORD;
p5 : IBindStatusCallback): HResult of object;}

{_T35 = function (p0 : IUnknown;
p1 : PAnsiChar;
p2 : PAnsiChar;
p3 : DWORD;
p4 : DWORD;
p5 : IBindStatusCallback): HResult of object;}

{_T36 = function (p0 : IUnknown;
p1 : PWideChar;
p2 : PWideChar;
p3 : DWORD;
p4 : DWORD;
p5 : IBindStatusCallback): HResult of object;}

{_T37 = function (p0 : IUnknown;
p1 : PChar;
out p2 : IStream;
p3 : DWORD;
p4 : IBindStatusCallback): HResult of object;}

{_T38 = function (p0 : IUnknown;
p1 : PAnsiChar;
out p2 : IStream;
p3 : DWORD;
p4 : IBindStatusCallback): HResult of object;}

{_T39 = function (p0 : IUnknown;
p1 : PWideChar;
out p2 : IStream;
p3 : DWORD;
p4 : IBindStatusCallback): HResult of object;}

{_T40 = function (p0 : IUnknown): HResult of object;}

{_T41 = function (p0 : IUnknown): HResult of object;}

{_T42 = function (p0 : IUnknown;
p1 : LPCWSTR): HResult of object;}

{_T43 = function (p0 : IUnknown;
p1 : IMoniker): HResult of object;}

{_T44 = function (p0 : LPCWSTR;
p1 : TParseAction;
p2 : DWORD;
p3 : LPWSTR;
p4 : DWORD;
var p5 : DWORD;
p6 : DWORD): HResult of object;}

{_T45 = function (p0 : LPCWSTR;
p1 : LPCWSTR;
p2 : DWORD;
p3 : LPWSTR;
p4 : DWORD;
var p5 : DWORD;
p6 : DWORD): HResult of object;}

{_T46 = function (p0 : LPCWSTR;
p1 : LPCWSTR;
p2 : DWORD): HResult of object;}

{_T47 = function (p0 : LPCWSTR;
var p1 : DWORD;
p2 : DWORD): HResult of object;}

{_T48 = function (p0 : LPCWSTR;
p1 : TQueryOption;
p2 : DWORD;
p3 : Pointer;
p4 : DWORD;
var p5 : DWORD;
p6 : DWORD): HResult of object;}

{_T49 = function (p0 : DWORD;
var p1 : IInternetSession;
p2 : DWORD): HResult of object;}

{_T50 = function (p0 : LPCWSTR;
var p1 : LPWSTR;
p2 : TPSUAction;
p3 : DWORD): HResult of object;}

{_T51 = function (p0 : LPCWSTR;
p1 : TParseAction;
p2 : DWORD;
p3 : LPWSTR;
p4 : DWORD;
var p5 : DWORD;
p6 : DWORD): HResult of object;}

{_T52 = function (p0 : LPCWSTR;
p1 : LPCWSTR;
p2 : DWORD;
p3 : LPWSTR;
p4 : DWORD;
var p5 : DWORD;
p6 : DWORD): HResult of object;}

{_T53 = function (p0 : LPCWSTR;
p1 : LPCWSTR;
p2 : DWORD): HResult of object;}

{_T54 = function (p0 : LPCWSTR;
var p1 : DWORD;
p2 : DWORD): HResult of object;}

{_T55 = function (p0 : LPCWSTR;
p1 : TQueryOption;
p2 : DWORD;
p3 : Pointer;
p4 : DWORD;
var p5 : DWORD;
p6 : DWORD): HResult of object;}

{_T56 = function (p0 : DWORD;
var p1 : IInternetSession;
p2 : DWORD): HResult of object;}

{_T57 = function (p0 : LPCWSTR;
var p1 : LPWSTR;
p2 : TPSUAction;
p3 : DWORD): HResult of object;}

_T58 = function (const p0 : IDispatch;
const p1 : IDispatch): HResult of object;

_T59 = _T58;

_T60 = procedure (const p0 : IDispatch) of object;

_T61 = function (p0 : DWORD): DWORD of object;

_T62 = function (p0 : DWORD;
p1 : DWORD): DWORD of object;

{_T63 = function (p0 : IServiceProvider;
var p1 : IInternetSecurityManager;
p2 : DWORD): HResult of object;}

{_T64 = function (p0 : IServiceProvider;
var p1 : IInternetZoneManager;
p2 : DWORD): HResult of object;}

{_T66 = function (p0 : LPCWSTR;
p1 : DWORD;
p2 : DWORD;
p3 : DWORD): HResult of object;}

{_T67 = function (p0 : PChar): BOOL of object;}

{_T68 = function (p0 : PAnsiChar): BOOL of object;}

{_T69 = function (p0 : PWideChar): BOOL of object;}

_T70 = function (const p0 : IDispatch): BOOL of object;

function ___REMSECURITY_ATTRIBUTES__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___REMSECURITY_ATTRIBUTES__Wrapper.setnLength(const val : DWORD);
begin
_REMSECURITY_ATTRIBUTES(GetRecordPtr^).nLength := val;
end;
function ___REMSECURITY_ATTRIBUTES__Wrapper.getnLength : DWORD;
begin
result := _REMSECURITY_ATTRIBUTES(GetRecordPtr^).nLength;
end;
procedure ___REMSECURITY_ATTRIBUTES__Wrapper.setlpSecurityDescriptor(const val : DWORD);
begin
_REMSECURITY_ATTRIBUTES(GetRecordPtr^).lpSecurityDescriptor := val;
end;
function ___REMSECURITY_ATTRIBUTES__Wrapper.getlpSecurityDescriptor : DWORD;
begin
result := _REMSECURITY_ATTRIBUTES(GetRecordPtr^).lpSecurityDescriptor;
end;
procedure ___REMSECURITY_ATTRIBUTES__Wrapper.setbInheritHandle(const val : BOOL);
begin
_REMSECURITY_ATTRIBUTES(GetRecordPtr^).bInheritHandle := val;
end;
function ___REMSECURITY_ATTRIBUTES__Wrapper.getbInheritHandle : BOOL;
begin
result := _REMSECURITY_ATTRIBUTES(GetRecordPtr^).bInheritHandle;
end;
function ___tagBINDINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagBINDINFO__Wrapper.setcbSize(const val : ULONG);
begin
_tagBINDINFO(GetRecordPtr^).cbSize := val;
end;
function ___tagBINDINFO__Wrapper.getcbSize : ULONG;
begin
result := _tagBINDINFO(GetRecordPtr^).cbSize;
end;
procedure ___tagBINDINFO__Wrapper.setgrfBindInfoF(const val : DWORD);
begin
_tagBINDINFO(GetRecordPtr^).grfBindInfoF := val;
end;
function ___tagBINDINFO__Wrapper.getgrfBindInfoF : DWORD;
begin
result := _tagBINDINFO(GetRecordPtr^).grfBindInfoF;
end;
procedure ___tagBINDINFO__Wrapper.setdwBindVerb(const val : DWORD);
begin
_tagBINDINFO(GetRecordPtr^).dwBindVerb := val;
end;
function ___tagBINDINFO__Wrapper.getdwBindVerb : DWORD;
begin
result := _tagBINDINFO(GetRecordPtr^).dwBindVerb;
end;
procedure ___tagBINDINFO__Wrapper.setcbstgmedData(const val : DWORD);
begin
_tagBINDINFO(GetRecordPtr^).cbstgmedData := val;
end;
function ___tagBINDINFO__Wrapper.getcbstgmedData : DWORD;
begin
result := _tagBINDINFO(GetRecordPtr^).cbstgmedData;
end;
procedure ___tagBINDINFO__Wrapper.setdwOptions(const val : DWORD);
begin
_tagBINDINFO(GetRecordPtr^).dwOptions := val;
end;
function ___tagBINDINFO__Wrapper.getdwOptions : DWORD;
begin
result := _tagBINDINFO(GetRecordPtr^).dwOptions;
end;
procedure ___tagBINDINFO__Wrapper.setdwOptionsFlags(const val : DWORD);
begin
_tagBINDINFO(GetRecordPtr^).dwOptionsFlags := val;
end;
function ___tagBINDINFO__Wrapper.getdwOptionsFlags : DWORD;
begin
result := _tagBINDINFO(GetRecordPtr^).dwOptionsFlags;
end;
procedure ___tagBINDINFO__Wrapper.setdwCodePage(const val : DWORD);
begin
_tagBINDINFO(GetRecordPtr^).dwCodePage := val;
end;
function ___tagBINDINFO__Wrapper.getdwCodePage : DWORD;
begin
result := _tagBINDINFO(GetRecordPtr^).dwCodePage;
end;
procedure ___tagBINDINFO__Wrapper.setdwReserved(const val : DWORD);
begin
_tagBINDINFO(GetRecordPtr^).dwReserved := val;
end;
function ___tagBINDINFO__Wrapper.getdwReserved : DWORD;
begin
result := _tagBINDINFO(GetRecordPtr^).dwReserved;
end;
function ___tagCODEBASEHOLD__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagCODEBASEHOLD__Wrapper.setcbSize(const val : ULONG);
begin
_tagCODEBASEHOLD(GetRecordPtr^).cbSize := val;
end;
function ___tagCODEBASEHOLD__Wrapper.getcbSize : ULONG;
begin
result := _tagCODEBASEHOLD(GetRecordPtr^).cbSize;
end;
procedure ___tagCODEBASEHOLD__Wrapper.setdwVersionMS(const val : DWORD);
begin
_tagCODEBASEHOLD(GetRecordPtr^).dwVersionMS := val;
end;
function ___tagCODEBASEHOLD__Wrapper.getdwVersionMS : DWORD;
begin
result := _tagCODEBASEHOLD(GetRecordPtr^).dwVersionMS;
end;
procedure ___tagCODEBASEHOLD__Wrapper.setdwVersionLS(const val : DWORD);
begin
_tagCODEBASEHOLD(GetRecordPtr^).dwVersionLS := val;
end;
function ___tagCODEBASEHOLD__Wrapper.getdwVersionLS : DWORD;
begin
result := _tagCODEBASEHOLD(GetRecordPtr^).dwVersionLS;
end;
procedure ___tagCODEBASEHOLD__Wrapper.setdwStyle(const val : DWORD);
begin
_tagCODEBASEHOLD(GetRecordPtr^).dwStyle := val;
end;
function ___tagCODEBASEHOLD__Wrapper.getdwStyle : DWORD;
begin
result := _tagCODEBASEHOLD(GetRecordPtr^).dwStyle;
end;
function ___tagDATAINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagDATAINFO__Wrapper.setulTotalSize(const val : ULONG);
begin
_tagDATAINFO(GetRecordPtr^).ulTotalSize := val;
end;
function ___tagDATAINFO__Wrapper.getulTotalSize : ULONG;
begin
result := _tagDATAINFO(GetRecordPtr^).ulTotalSize;
end;
procedure ___tagDATAINFO__Wrapper.setulavrPacketSize(const val : ULONG);
begin
_tagDATAINFO(GetRecordPtr^).ulavrPacketSize := val;
end;
function ___tagDATAINFO__Wrapper.getulavrPacketSize : ULONG;
begin
result := _tagDATAINFO(GetRecordPtr^).ulavrPacketSize;
end;
procedure ___tagDATAINFO__Wrapper.setulConnectSpeed(const val : ULONG);
begin
_tagDATAINFO(GetRecordPtr^).ulConnectSpeed := val;
end;
function ___tagDATAINFO__Wrapper.getulConnectSpeed : ULONG;
begin
result := _tagDATAINFO(GetRecordPtr^).ulConnectSpeed;
end;
procedure ___tagDATAINFO__Wrapper.setulProcessorSpeed(const val : ULONG);
begin
_tagDATAINFO(GetRecordPtr^).ulProcessorSpeed := val;
end;
function ___tagDATAINFO__Wrapper.getulProcessorSpeed : ULONG;
begin
result := _tagDATAINFO(GetRecordPtr^).ulProcessorSpeed;
end;
function ___tagHIT_LOGGING_INFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagHIT_LOGGING_INFO__Wrapper.setdwStructSize(const val : DWORD);
begin
_tagHIT_LOGGING_INFO(GetRecordPtr^).dwStructSize := val;
end;
function ___tagHIT_LOGGING_INFO__Wrapper.getdwStructSize : DWORD;
begin
result := _tagHIT_LOGGING_INFO(GetRecordPtr^).dwStructSize;
end;
function ___tagPROTOCOLDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagPROTOCOLDATA__Wrapper.setgrfFlags(const val : DWORD);
begin
_tagPROTOCOLDATA(GetRecordPtr^).grfFlags := val;
end;
function ___tagPROTOCOLDATA__Wrapper.getgrfFlags : DWORD;
begin
result := _tagPROTOCOLDATA(GetRecordPtr^).grfFlags;
end;
procedure ___tagPROTOCOLDATA__Wrapper.setdwState(const val : DWORD);
begin
_tagPROTOCOLDATA(GetRecordPtr^).dwState := val;
end;
function ___tagPROTOCOLDATA__Wrapper.getdwState : DWORD;
begin
result := _tagPROTOCOLDATA(GetRecordPtr^).dwState;
end;
procedure ___tagPROTOCOLDATA__Wrapper.setcbData(const val : ULONG);
begin
_tagPROTOCOLDATA(GetRecordPtr^).cbData := val;
end;
function ___tagPROTOCOLDATA__Wrapper.getcbData : ULONG;
begin
result := _tagPROTOCOLDATA(GetRecordPtr^).cbData;
end;
function ___tagPROTOCOLFILTERDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagPROTOCOLFILTERDATA__Wrapper.setcbSize(const val : DWORD);
begin
_tagPROTOCOLFILTERDATA(GetRecordPtr^).cbSize := val;
end;
function ___tagPROTOCOLFILTERDATA__Wrapper.getcbSize : DWORD;
begin
result := _tagPROTOCOLFILTERDATA(GetRecordPtr^).cbSize;
end;
procedure ___tagPROTOCOLFILTERDATA__Wrapper.setdwFilterFlags(const val : DWORD);
begin
_tagPROTOCOLFILTERDATA(GetRecordPtr^).dwFilterFlags := val;
end;
function ___tagPROTOCOLFILTERDATA__Wrapper.getdwFilterFlags : DWORD;
begin
result := _tagPROTOCOLFILTERDATA(GetRecordPtr^).dwFilterFlags;
end;
function ___tagRemBINDINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagRemBINDINFO__Wrapper.setcbSize(const val : ULONG);
begin
_tagRemBINDINFO(GetRecordPtr^).cbSize := val;
end;
function ___tagRemBINDINFO__Wrapper.getcbSize : ULONG;
begin
result := _tagRemBINDINFO(GetRecordPtr^).cbSize;
end;
procedure ___tagRemBINDINFO__Wrapper.setgrfBindInfoF(const val : DWORD);
begin
_tagRemBINDINFO(GetRecordPtr^).grfBindInfoF := val;
end;
function ___tagRemBINDINFO__Wrapper.getgrfBindInfoF : DWORD;
begin
result := _tagRemBINDINFO(GetRecordPtr^).grfBindInfoF;
end;
procedure ___tagRemBINDINFO__Wrapper.setdwBindVerb(const val : DWORD);
begin
_tagRemBINDINFO(GetRecordPtr^).dwBindVerb := val;
end;
function ___tagRemBINDINFO__Wrapper.getdwBindVerb : DWORD;
begin
result := _tagRemBINDINFO(GetRecordPtr^).dwBindVerb;
end;
procedure ___tagRemBINDINFO__Wrapper.setcbstgmedData(const val : DWORD);
begin
_tagRemBINDINFO(GetRecordPtr^).cbstgmedData := val;
end;
function ___tagRemBINDINFO__Wrapper.getcbstgmedData : DWORD;
begin
result := _tagRemBINDINFO(GetRecordPtr^).cbstgmedData;
end;
procedure ___tagRemBINDINFO__Wrapper.setdwOptions(const val : DWORD);
begin
_tagRemBINDINFO(GetRecordPtr^).dwOptions := val;
end;
function ___tagRemBINDINFO__Wrapper.getdwOptions : DWORD;
begin
result := _tagRemBINDINFO(GetRecordPtr^).dwOptions;
end;
procedure ___tagRemBINDINFO__Wrapper.setdwOptionsFlags(const val : DWORD);
begin
_tagRemBINDINFO(GetRecordPtr^).dwOptionsFlags := val;
end;
function ___tagRemBINDINFO__Wrapper.getdwOptionsFlags : DWORD;
begin
result := _tagRemBINDINFO(GetRecordPtr^).dwOptionsFlags;
end;
procedure ___tagRemBINDINFO__Wrapper.setdwCodePage(const val : DWORD);
begin
_tagRemBINDINFO(GetRecordPtr^).dwCodePage := val;
end;
function ___tagRemBINDINFO__Wrapper.getdwCodePage : DWORD;
begin
result := _tagRemBINDINFO(GetRecordPtr^).dwCodePage;
end;
procedure ___tagRemBINDINFO__Wrapper.setdwReserved(const val : DWORD);
begin
_tagRemBINDINFO(GetRecordPtr^).dwReserved := val;
end;
function ___tagRemBINDINFO__Wrapper.getdwReserved : DWORD;
begin
result := _tagRemBINDINFO(GetRecordPtr^).dwReserved;
end;
function ___tagSOFTDISTINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___tagSOFTDISTINFO__Wrapper.setcbSize(const val : ULONG);
begin
_tagSOFTDISTINFO(GetRecordPtr^).cbSize := val;
end;
function ___tagSOFTDISTINFO__Wrapper.getcbSize : ULONG;
begin
result := _tagSOFTDISTINFO(GetRecordPtr^).cbSize;
end;
procedure ___tagSOFTDISTINFO__Wrapper.setdwFlags(const val : DWORD);
begin
_tagSOFTDISTINFO(GetRecordPtr^).dwFlags := val;
end;
function ___tagSOFTDISTINFO__Wrapper.getdwFlags : DWORD;
begin
result := _tagSOFTDISTINFO(GetRecordPtr^).dwFlags;
end;
procedure ___tagSOFTDISTINFO__Wrapper.setdwAdState(const val : DWORD);
begin
_tagSOFTDISTINFO(GetRecordPtr^).dwAdState := val;
end;
function ___tagSOFTDISTINFO__Wrapper.getdwAdState : DWORD;
begin
result := _tagSOFTDISTINFO(GetRecordPtr^).dwAdState;
end;
procedure ___tagSOFTDISTINFO__Wrapper.setdwInstalledVersionMS(const val : DWORD);
begin
_tagSOFTDISTINFO(GetRecordPtr^).dwInstalledVersionMS := val;
end;
function ___tagSOFTDISTINFO__Wrapper.getdwInstalledVersionMS : DWORD;
begin
result := _tagSOFTDISTINFO(GetRecordPtr^).dwInstalledVersionMS;
end;
procedure ___tagSOFTDISTINFO__Wrapper.setdwInstalledVersionLS(const val : DWORD);
begin
_tagSOFTDISTINFO(GetRecordPtr^).dwInstalledVersionLS := val;
end;
function ___tagSOFTDISTINFO__Wrapper.getdwInstalledVersionLS : DWORD;
begin
result := _tagSOFTDISTINFO(GetRecordPtr^).dwInstalledVersionLS;
end;
procedure ___tagSOFTDISTINFO__Wrapper.setdwUpdateVersionMS(const val : DWORD);
begin
_tagSOFTDISTINFO(GetRecordPtr^).dwUpdateVersionMS := val;
end;
function ___tagSOFTDISTINFO__Wrapper.getdwUpdateVersionMS : DWORD;
begin
result := _tagSOFTDISTINFO(GetRecordPtr^).dwUpdateVersionMS;
end;
procedure ___tagSOFTDISTINFO__Wrapper.setdwUpdateVersionLS(const val : DWORD);
begin
_tagSOFTDISTINFO(GetRecordPtr^).dwUpdateVersionLS := val;
end;
function ___tagSOFTDISTINFO__Wrapper.getdwUpdateVersionLS : DWORD;
begin
result := _tagSOFTDISTINFO(GetRecordPtr^).dwUpdateVersionLS;
end;
procedure ___tagSOFTDISTINFO__Wrapper.setdwAdvertisedVersionMS(const val : DWORD);
begin
_tagSOFTDISTINFO(GetRecordPtr^).dwAdvertisedVersionMS := val;
end;
function ___tagSOFTDISTINFO__Wrapper.getdwAdvertisedVersionMS : DWORD;
begin
result := _tagSOFTDISTINFO(GetRecordPtr^).dwAdvertisedVersionMS;
end;
procedure ___tagSOFTDISTINFO__Wrapper.setdwAdvertisedVersionLS(const val : DWORD);
begin
_tagSOFTDISTINFO(GetRecordPtr^).dwAdvertisedVersionLS := val;
end;
function ___tagSOFTDISTINFO__Wrapper.getdwAdvertisedVersionLS : DWORD;
begin
result := _tagSOFTDISTINFO(GetRecordPtr^).dwAdvertisedVersionLS;
end;
procedure ___tagSOFTDISTINFO__Wrapper.setdwReserved(const val : DWORD);
begin
_tagSOFTDISTINFO(GetRecordPtr^).dwReserved := val;
end;
function ___tagSOFTDISTINFO__Wrapper.getdwReserved : DWORD;
begin
result := _tagSOFTDISTINFO(GetRecordPtr^).dwReserved;
end;
function ___ZONEATTRIBUTES__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure ___ZONEATTRIBUTES__Wrapper.setcbSize(const val : ULONG);
begin
_ZONEATTRIBUTES(GetRecordPtr^).cbSize := val;
end;
function ___ZONEATTRIBUTES__Wrapper.getcbSize : ULONG;
begin
result := _ZONEATTRIBUTES(GetRecordPtr^).cbSize;
end;
procedure ___ZONEATTRIBUTES__Wrapper.setdwTemplateMinLevel(const val : DWORD);
begin
_ZONEATTRIBUTES(GetRecordPtr^).dwTemplateMinLevel := val;
end;
function ___ZONEATTRIBUTES__Wrapper.getdwTemplateMinLevel : DWORD;
begin
result := _ZONEATTRIBUTES(GetRecordPtr^).dwTemplateMinLevel;
end;
procedure ___ZONEATTRIBUTES__Wrapper.setdwTemplateRecommended(const val : DWORD);
begin
_ZONEATTRIBUTES(GetRecordPtr^).dwTemplateRecommended := val;
end;
function ___ZONEATTRIBUTES__Wrapper.getdwTemplateRecommended : DWORD;
begin
result := _ZONEATTRIBUTES(GetRecordPtr^).dwTemplateRecommended;
end;
procedure ___ZONEATTRIBUTES__Wrapper.setdwTemplateCurrentLevel(const val : DWORD);
begin
_ZONEATTRIBUTES(GetRecordPtr^).dwTemplateCurrentLevel := val;
end;
function ___ZONEATTRIBUTES__Wrapper.getdwTemplateCurrentLevel : DWORD;
begin
result := _ZONEATTRIBUTES(GetRecordPtr^).dwTemplateCurrentLevel;
end;
procedure ___ZONEATTRIBUTES__Wrapper.setdwFlags(const val : DWORD);
begin
_ZONEATTRIBUTES(GetRecordPtr^).dwFlags := val;
end;
function ___ZONEATTRIBUTES__Wrapper.getdwFlags : DWORD;
begin
result := _ZONEATTRIBUTES(GetRecordPtr^).dwFlags;
end;
function __BINDINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __BINDINFO__Wrapper.setcbSize(const val : ULONG);
begin
BINDINFO(GetRecordPtr^).cbSize := val;
end;
function __BINDINFO__Wrapper.getcbSize : ULONG;
begin
result := BINDINFO(GetRecordPtr^).cbSize;
end;
procedure __BINDINFO__Wrapper.setgrfBindInfoF(const val : DWORD);
begin
BINDINFO(GetRecordPtr^).grfBindInfoF := val;
end;
function __BINDINFO__Wrapper.getgrfBindInfoF : DWORD;
begin
result := BINDINFO(GetRecordPtr^).grfBindInfoF;
end;
procedure __BINDINFO__Wrapper.setdwBindVerb(const val : DWORD);
begin
BINDINFO(GetRecordPtr^).dwBindVerb := val;
end;
function __BINDINFO__Wrapper.getdwBindVerb : DWORD;
begin
result := BINDINFO(GetRecordPtr^).dwBindVerb;
end;
procedure __BINDINFO__Wrapper.setcbstgmedData(const val : DWORD);
begin
BINDINFO(GetRecordPtr^).cbstgmedData := val;
end;
function __BINDINFO__Wrapper.getcbstgmedData : DWORD;
begin
result := BINDINFO(GetRecordPtr^).cbstgmedData;
end;
procedure __BINDINFO__Wrapper.setdwOptions(const val : DWORD);
begin
BINDINFO(GetRecordPtr^).dwOptions := val;
end;
function __BINDINFO__Wrapper.getdwOptions : DWORD;
begin
result := BINDINFO(GetRecordPtr^).dwOptions;
end;
procedure __BINDINFO__Wrapper.setdwOptionsFlags(const val : DWORD);
begin
BINDINFO(GetRecordPtr^).dwOptionsFlags := val;
end;
function __BINDINFO__Wrapper.getdwOptionsFlags : DWORD;
begin
result := BINDINFO(GetRecordPtr^).dwOptionsFlags;
end;
procedure __BINDINFO__Wrapper.setdwCodePage(const val : DWORD);
begin
BINDINFO(GetRecordPtr^).dwCodePage := val;
end;
function __BINDINFO__Wrapper.getdwCodePage : DWORD;
begin
result := BINDINFO(GetRecordPtr^).dwCodePage;
end;
procedure __BINDINFO__Wrapper.setdwReserved(const val : DWORD);
begin
BINDINFO(GetRecordPtr^).dwReserved := val;
end;
function __BINDINFO__Wrapper.getdwReserved : DWORD;
begin
result := BINDINFO(GetRecordPtr^).dwReserved;
end;
function __CODEBASEHOLD__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __CODEBASEHOLD__Wrapper.setcbSize(const val : ULONG);
begin
CODEBASEHOLD(GetRecordPtr^).cbSize := val;
end;
function __CODEBASEHOLD__Wrapper.getcbSize : ULONG;
begin
result := CODEBASEHOLD(GetRecordPtr^).cbSize;
end;
procedure __CODEBASEHOLD__Wrapper.setdwVersionMS(const val : DWORD);
begin
CODEBASEHOLD(GetRecordPtr^).dwVersionMS := val;
end;
function __CODEBASEHOLD__Wrapper.getdwVersionMS : DWORD;
begin
result := CODEBASEHOLD(GetRecordPtr^).dwVersionMS;
end;
procedure __CODEBASEHOLD__Wrapper.setdwVersionLS(const val : DWORD);
begin
CODEBASEHOLD(GetRecordPtr^).dwVersionLS := val;
end;
function __CODEBASEHOLD__Wrapper.getdwVersionLS : DWORD;
begin
result := CODEBASEHOLD(GetRecordPtr^).dwVersionLS;
end;
procedure __CODEBASEHOLD__Wrapper.setdwStyle(const val : DWORD);
begin
CODEBASEHOLD(GetRecordPtr^).dwStyle := val;
end;
function __CODEBASEHOLD__Wrapper.getdwStyle : DWORD;
begin
result := CODEBASEHOLD(GetRecordPtr^).dwStyle;
end;
function __DATAINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __DATAINFO__Wrapper.setulTotalSize(const val : ULONG);
begin
DATAINFO(GetRecordPtr^).ulTotalSize := val;
end;
function __DATAINFO__Wrapper.getulTotalSize : ULONG;
begin
result := DATAINFO(GetRecordPtr^).ulTotalSize;
end;
procedure __DATAINFO__Wrapper.setulavrPacketSize(const val : ULONG);
begin
DATAINFO(GetRecordPtr^).ulavrPacketSize := val;
end;
function __DATAINFO__Wrapper.getulavrPacketSize : ULONG;
begin
result := DATAINFO(GetRecordPtr^).ulavrPacketSize;
end;
procedure __DATAINFO__Wrapper.setulConnectSpeed(const val : ULONG);
begin
DATAINFO(GetRecordPtr^).ulConnectSpeed := val;
end;
function __DATAINFO__Wrapper.getulConnectSpeed : ULONG;
begin
result := DATAINFO(GetRecordPtr^).ulConnectSpeed;
end;
procedure __DATAINFO__Wrapper.setulProcessorSpeed(const val : ULONG);
begin
DATAINFO(GetRecordPtr^).ulProcessorSpeed := val;
end;
function __DATAINFO__Wrapper.getulProcessorSpeed : ULONG;
begin
result := DATAINFO(GetRecordPtr^).ulProcessorSpeed;
end;
function __HIT_LOGGING_INFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __HIT_LOGGING_INFO__Wrapper.setdwStructSize(const val : DWORD);
begin
HIT_LOGGING_INFO(GetRecordPtr^).dwStructSize := val;
end;
function __HIT_LOGGING_INFO__Wrapper.getdwStructSize : DWORD;
begin
result := HIT_LOGGING_INFO(GetRecordPtr^).dwStructSize;
end;
function __PROTOCOLDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PROTOCOLDATA__Wrapper.setgrfFlags(const val : DWORD);
begin
PROTOCOLDATA(GetRecordPtr^).grfFlags := val;
end;
function __PROTOCOLDATA__Wrapper.getgrfFlags : DWORD;
begin
result := PROTOCOLDATA(GetRecordPtr^).grfFlags;
end;
procedure __PROTOCOLDATA__Wrapper.setdwState(const val : DWORD);
begin
PROTOCOLDATA(GetRecordPtr^).dwState := val;
end;
function __PROTOCOLDATA__Wrapper.getdwState : DWORD;
begin
result := PROTOCOLDATA(GetRecordPtr^).dwState;
end;
procedure __PROTOCOLDATA__Wrapper.setcbData(const val : ULONG);
begin
PROTOCOLDATA(GetRecordPtr^).cbData := val;
end;
function __PROTOCOLDATA__Wrapper.getcbData : ULONG;
begin
result := PROTOCOLDATA(GetRecordPtr^).cbData;
end;
function __PROTOCOLFILTERDATA__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __PROTOCOLFILTERDATA__Wrapper.setcbSize(const val : DWORD);
begin
PROTOCOLFILTERDATA(GetRecordPtr^).cbSize := val;
end;
function __PROTOCOLFILTERDATA__Wrapper.getcbSize : DWORD;
begin
result := PROTOCOLFILTERDATA(GetRecordPtr^).cbSize;
end;
procedure __PROTOCOLFILTERDATA__Wrapper.setdwFilterFlags(const val : DWORD);
begin
PROTOCOLFILTERDATA(GetRecordPtr^).dwFilterFlags := val;
end;
function __PROTOCOLFILTERDATA__Wrapper.getdwFilterFlags : DWORD;
begin
result := PROTOCOLFILTERDATA(GetRecordPtr^).dwFilterFlags;
end;
function __RemBINDINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __RemBINDINFO__Wrapper.setcbSize(const val : ULONG);
begin
RemBINDINFO(GetRecordPtr^).cbSize := val;
end;
function __RemBINDINFO__Wrapper.getcbSize : ULONG;
begin
result := RemBINDINFO(GetRecordPtr^).cbSize;
end;
procedure __RemBINDINFO__Wrapper.setgrfBindInfoF(const val : DWORD);
begin
RemBINDINFO(GetRecordPtr^).grfBindInfoF := val;
end;
function __RemBINDINFO__Wrapper.getgrfBindInfoF : DWORD;
begin
result := RemBINDINFO(GetRecordPtr^).grfBindInfoF;
end;
procedure __RemBINDINFO__Wrapper.setdwBindVerb(const val : DWORD);
begin
RemBINDINFO(GetRecordPtr^).dwBindVerb := val;
end;
function __RemBINDINFO__Wrapper.getdwBindVerb : DWORD;
begin
result := RemBINDINFO(GetRecordPtr^).dwBindVerb;
end;
procedure __RemBINDINFO__Wrapper.setcbstgmedData(const val : DWORD);
begin
RemBINDINFO(GetRecordPtr^).cbstgmedData := val;
end;
function __RemBINDINFO__Wrapper.getcbstgmedData : DWORD;
begin
result := RemBINDINFO(GetRecordPtr^).cbstgmedData;
end;
procedure __RemBINDINFO__Wrapper.setdwOptions(const val : DWORD);
begin
RemBINDINFO(GetRecordPtr^).dwOptions := val;
end;
function __RemBINDINFO__Wrapper.getdwOptions : DWORD;
begin
result := RemBINDINFO(GetRecordPtr^).dwOptions;
end;
procedure __RemBINDINFO__Wrapper.setdwOptionsFlags(const val : DWORD);
begin
RemBINDINFO(GetRecordPtr^).dwOptionsFlags := val;
end;
function __RemBINDINFO__Wrapper.getdwOptionsFlags : DWORD;
begin
result := RemBINDINFO(GetRecordPtr^).dwOptionsFlags;
end;
procedure __RemBINDINFO__Wrapper.setdwCodePage(const val : DWORD);
begin
RemBINDINFO(GetRecordPtr^).dwCodePage := val;
end;
function __RemBINDINFO__Wrapper.getdwCodePage : DWORD;
begin
result := RemBINDINFO(GetRecordPtr^).dwCodePage;
end;
procedure __RemBINDINFO__Wrapper.setdwReserved(const val : DWORD);
begin
RemBINDINFO(GetRecordPtr^).dwReserved := val;
end;
function __RemBINDINFO__Wrapper.getdwReserved : DWORD;
begin
result := RemBINDINFO(GetRecordPtr^).dwReserved;
end;
function __RemFORMATETC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __RemFORMATETC__Wrapper.setcfFormat(const val : DWORD);
begin
RemFORMATETC(GetRecordPtr^).cfFormat := val;
end;
function __RemFORMATETC__Wrapper.getcfFormat : DWORD;
begin
result := RemFORMATETC(GetRecordPtr^).cfFormat;
end;
procedure __RemFORMATETC__Wrapper.setptd(const val : DWORD);
begin
RemFORMATETC(GetRecordPtr^).ptd := val;
end;
function __RemFORMATETC__Wrapper.getptd : DWORD;
begin
result := RemFORMATETC(GetRecordPtr^).ptd;
end;
procedure __RemFORMATETC__Wrapper.setdwAspect(const val : DWORD);
begin
RemFORMATETC(GetRecordPtr^).dwAspect := val;
end;
function __RemFORMATETC__Wrapper.getdwAspect : DWORD;
begin
result := RemFORMATETC(GetRecordPtr^).dwAspect;
end;
procedure __RemFORMATETC__Wrapper.setlindex(const val : Longint);
begin
RemFORMATETC(GetRecordPtr^).lindex := val;
end;
function __RemFORMATETC__Wrapper.getlindex : Longint;
begin
result := RemFORMATETC(GetRecordPtr^).lindex;
end;
procedure __RemFORMATETC__Wrapper.settymed(const val : DWORD);
begin
RemFORMATETC(GetRecordPtr^).tymed := val;
end;
function __RemFORMATETC__Wrapper.gettymed : DWORD;
begin
result := RemFORMATETC(GetRecordPtr^).tymed;
end;
function __REMSECURITY_ATTRIBUTES__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __REMSECURITY_ATTRIBUTES__Wrapper.setnLength(const val : DWORD);
begin
REMSECURITY_ATTRIBUTES(GetRecordPtr^).nLength := val;
end;
function __REMSECURITY_ATTRIBUTES__Wrapper.getnLength : DWORD;
begin
result := REMSECURITY_ATTRIBUTES(GetRecordPtr^).nLength;
end;
procedure __REMSECURITY_ATTRIBUTES__Wrapper.setlpSecurityDescriptor(const val : DWORD);
begin
REMSECURITY_ATTRIBUTES(GetRecordPtr^).lpSecurityDescriptor := val;
end;
function __REMSECURITY_ATTRIBUTES__Wrapper.getlpSecurityDescriptor : DWORD;
begin
result := REMSECURITY_ATTRIBUTES(GetRecordPtr^).lpSecurityDescriptor;
end;
procedure __REMSECURITY_ATTRIBUTES__Wrapper.setbInheritHandle(const val : BOOL);
begin
REMSECURITY_ATTRIBUTES(GetRecordPtr^).bInheritHandle := val;
end;
function __REMSECURITY_ATTRIBUTES__Wrapper.getbInheritHandle : BOOL;
begin
result := REMSECURITY_ATTRIBUTES(GetRecordPtr^).bInheritHandle;
end;
function __SOFTDISTINFO__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __SOFTDISTINFO__Wrapper.setcbSize(const val : ULONG);
begin
SOFTDISTINFO(GetRecordPtr^).cbSize := val;
end;
function __SOFTDISTINFO__Wrapper.getcbSize : ULONG;
begin
result := SOFTDISTINFO(GetRecordPtr^).cbSize;
end;
procedure __SOFTDISTINFO__Wrapper.setdwFlags(const val : DWORD);
begin
SOFTDISTINFO(GetRecordPtr^).dwFlags := val;
end;
function __SOFTDISTINFO__Wrapper.getdwFlags : DWORD;
begin
result := SOFTDISTINFO(GetRecordPtr^).dwFlags;
end;
procedure __SOFTDISTINFO__Wrapper.setdwAdState(const val : DWORD);
begin
SOFTDISTINFO(GetRecordPtr^).dwAdState := val;
end;
function __SOFTDISTINFO__Wrapper.getdwAdState : DWORD;
begin
result := SOFTDISTINFO(GetRecordPtr^).dwAdState;
end;
procedure __SOFTDISTINFO__Wrapper.setdwInstalledVersionMS(const val : DWORD);
begin
SOFTDISTINFO(GetRecordPtr^).dwInstalledVersionMS := val;
end;
function __SOFTDISTINFO__Wrapper.getdwInstalledVersionMS : DWORD;
begin
result := SOFTDISTINFO(GetRecordPtr^).dwInstalledVersionMS;
end;
procedure __SOFTDISTINFO__Wrapper.setdwInstalledVersionLS(const val : DWORD);
begin
SOFTDISTINFO(GetRecordPtr^).dwInstalledVersionLS := val;
end;
function __SOFTDISTINFO__Wrapper.getdwInstalledVersionLS : DWORD;
begin
result := SOFTDISTINFO(GetRecordPtr^).dwInstalledVersionLS;
end;
procedure __SOFTDISTINFO__Wrapper.setdwUpdateVersionMS(const val : DWORD);
begin
SOFTDISTINFO(GetRecordPtr^).dwUpdateVersionMS := val;
end;
function __SOFTDISTINFO__Wrapper.getdwUpdateVersionMS : DWORD;
begin
result := SOFTDISTINFO(GetRecordPtr^).dwUpdateVersionMS;
end;
procedure __SOFTDISTINFO__Wrapper.setdwUpdateVersionLS(const val : DWORD);
begin
SOFTDISTINFO(GetRecordPtr^).dwUpdateVersionLS := val;
end;
function __SOFTDISTINFO__Wrapper.getdwUpdateVersionLS : DWORD;
begin
result := SOFTDISTINFO(GetRecordPtr^).dwUpdateVersionLS;
end;
procedure __SOFTDISTINFO__Wrapper.setdwAdvertisedVersionMS(const val : DWORD);
begin
SOFTDISTINFO(GetRecordPtr^).dwAdvertisedVersionMS := val;
end;
function __SOFTDISTINFO__Wrapper.getdwAdvertisedVersionMS : DWORD;
begin
result := SOFTDISTINFO(GetRecordPtr^).dwAdvertisedVersionMS;
end;
procedure __SOFTDISTINFO__Wrapper.setdwAdvertisedVersionLS(const val : DWORD);
begin
SOFTDISTINFO(GetRecordPtr^).dwAdvertisedVersionLS := val;
end;
function __SOFTDISTINFO__Wrapper.getdwAdvertisedVersionLS : DWORD;
begin
result := SOFTDISTINFO(GetRecordPtr^).dwAdvertisedVersionLS;
end;
procedure __SOFTDISTINFO__Wrapper.setdwReserved(const val : DWORD);
begin
SOFTDISTINFO(GetRecordPtr^).dwReserved := val;
end;
function __SOFTDISTINFO__Wrapper.getdwReserved : DWORD;
begin
result := SOFTDISTINFO(GetRecordPtr^).dwReserved;
end;
function __tagRemFORMATETC__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __tagRemFORMATETC__Wrapper.setcfFormat(const val : DWORD);
begin
tagRemFORMATETC(GetRecordPtr^).cfFormat := val;
end;
function __tagRemFORMATETC__Wrapper.getcfFormat : DWORD;
begin
result := tagRemFORMATETC(GetRecordPtr^).cfFormat;
end;
procedure __tagRemFORMATETC__Wrapper.setptd(const val : DWORD);
begin
tagRemFORMATETC(GetRecordPtr^).ptd := val;
end;
function __tagRemFORMATETC__Wrapper.getptd : DWORD;
begin
result := tagRemFORMATETC(GetRecordPtr^).ptd;
end;
procedure __tagRemFORMATETC__Wrapper.setdwAspect(const val : DWORD);
begin
tagRemFORMATETC(GetRecordPtr^).dwAspect := val;
end;
function __tagRemFORMATETC__Wrapper.getdwAspect : DWORD;
begin
result := tagRemFORMATETC(GetRecordPtr^).dwAspect;
end;
procedure __tagRemFORMATETC__Wrapper.setlindex(const val : Longint);
begin
tagRemFORMATETC(GetRecordPtr^).lindex := val;
end;
function __tagRemFORMATETC__Wrapper.getlindex : Longint;
begin
result := tagRemFORMATETC(GetRecordPtr^).lindex;
end;
procedure __tagRemFORMATETC__Wrapper.settymed(const val : DWORD);
begin
tagRemFORMATETC(GetRecordPtr^).tymed := val;
end;
function __tagRemFORMATETC__Wrapper.gettymed : DWORD;
begin
result := tagRemFORMATETC(GetRecordPtr^).tymed;
end;
function __TBindInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TBindInfo__Wrapper.setcbSize(const val : ULONG);
begin
TBindInfo(GetRecordPtr^).cbSize := val;
end;
function __TBindInfo__Wrapper.getcbSize : ULONG;
begin
result := TBindInfo(GetRecordPtr^).cbSize;
end;
procedure __TBindInfo__Wrapper.setgrfBindInfoF(const val : DWORD);
begin
TBindInfo(GetRecordPtr^).grfBindInfoF := val;
end;
function __TBindInfo__Wrapper.getgrfBindInfoF : DWORD;
begin
result := TBindInfo(GetRecordPtr^).grfBindInfoF;
end;
procedure __TBindInfo__Wrapper.setdwBindVerb(const val : DWORD);
begin
TBindInfo(GetRecordPtr^).dwBindVerb := val;
end;
function __TBindInfo__Wrapper.getdwBindVerb : DWORD;
begin
result := TBindInfo(GetRecordPtr^).dwBindVerb;
end;
procedure __TBindInfo__Wrapper.setcbstgmedData(const val : DWORD);
begin
TBindInfo(GetRecordPtr^).cbstgmedData := val;
end;
function __TBindInfo__Wrapper.getcbstgmedData : DWORD;
begin
result := TBindInfo(GetRecordPtr^).cbstgmedData;
end;
procedure __TBindInfo__Wrapper.setdwOptions(const val : DWORD);
begin
TBindInfo(GetRecordPtr^).dwOptions := val;
end;
function __TBindInfo__Wrapper.getdwOptions : DWORD;
begin
result := TBindInfo(GetRecordPtr^).dwOptions;
end;
procedure __TBindInfo__Wrapper.setdwOptionsFlags(const val : DWORD);
begin
TBindInfo(GetRecordPtr^).dwOptionsFlags := val;
end;
function __TBindInfo__Wrapper.getdwOptionsFlags : DWORD;
begin
result := TBindInfo(GetRecordPtr^).dwOptionsFlags;
end;
procedure __TBindInfo__Wrapper.setdwCodePage(const val : DWORD);
begin
TBindInfo(GetRecordPtr^).dwCodePage := val;
end;
function __TBindInfo__Wrapper.getdwCodePage : DWORD;
begin
result := TBindInfo(GetRecordPtr^).dwCodePage;
end;
procedure __TBindInfo__Wrapper.setdwReserved(const val : DWORD);
begin
TBindInfo(GetRecordPtr^).dwReserved := val;
end;
function __TBindInfo__Wrapper.getdwReserved : DWORD;
begin
result := TBindInfo(GetRecordPtr^).dwReserved;
end;
function __TCodeBaseHold__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TCodeBaseHold__Wrapper.setcbSize(const val : ULONG);
begin
TCodeBaseHold(GetRecordPtr^).cbSize := val;
end;
function __TCodeBaseHold__Wrapper.getcbSize : ULONG;
begin
result := TCodeBaseHold(GetRecordPtr^).cbSize;
end;
procedure __TCodeBaseHold__Wrapper.setdwVersionMS(const val : DWORD);
begin
TCodeBaseHold(GetRecordPtr^).dwVersionMS := val;
end;
function __TCodeBaseHold__Wrapper.getdwVersionMS : DWORD;
begin
result := TCodeBaseHold(GetRecordPtr^).dwVersionMS;
end;
procedure __TCodeBaseHold__Wrapper.setdwVersionLS(const val : DWORD);
begin
TCodeBaseHold(GetRecordPtr^).dwVersionLS := val;
end;
function __TCodeBaseHold__Wrapper.getdwVersionLS : DWORD;
begin
result := TCodeBaseHold(GetRecordPtr^).dwVersionLS;
end;
procedure __TCodeBaseHold__Wrapper.setdwStyle(const val : DWORD);
begin
TCodeBaseHold(GetRecordPtr^).dwStyle := val;
end;
function __TCodeBaseHold__Wrapper.getdwStyle : DWORD;
begin
result := TCodeBaseHold(GetRecordPtr^).dwStyle;
end;
function __TDataInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TDataInfo__Wrapper.setulTotalSize(const val : ULONG);
begin
TDataInfo(GetRecordPtr^).ulTotalSize := val;
end;
function __TDataInfo__Wrapper.getulTotalSize : ULONG;
begin
result := TDataInfo(GetRecordPtr^).ulTotalSize;
end;
procedure __TDataInfo__Wrapper.setulavrPacketSize(const val : ULONG);
begin
TDataInfo(GetRecordPtr^).ulavrPacketSize := val;
end;
function __TDataInfo__Wrapper.getulavrPacketSize : ULONG;
begin
result := TDataInfo(GetRecordPtr^).ulavrPacketSize;
end;
procedure __TDataInfo__Wrapper.setulConnectSpeed(const val : ULONG);
begin
TDataInfo(GetRecordPtr^).ulConnectSpeed := val;
end;
function __TDataInfo__Wrapper.getulConnectSpeed : ULONG;
begin
result := TDataInfo(GetRecordPtr^).ulConnectSpeed;
end;
procedure __TDataInfo__Wrapper.setulProcessorSpeed(const val : ULONG);
begin
TDataInfo(GetRecordPtr^).ulProcessorSpeed := val;
end;
function __TDataInfo__Wrapper.getulProcessorSpeed : ULONG;
begin
result := TDataInfo(GetRecordPtr^).ulProcessorSpeed;
end;
function __THitLoggingInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __THitLoggingInfo__Wrapper.setdwStructSize(const val : DWORD);
begin
THitLoggingInfo(GetRecordPtr^).dwStructSize := val;
end;
function __THitLoggingInfo__Wrapper.getdwStructSize : DWORD;
begin
result := THitLoggingInfo(GetRecordPtr^).dwStructSize;
end;
function __TProtocolData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TProtocolData__Wrapper.setgrfFlags(const val : DWORD);
begin
TProtocolData(GetRecordPtr^).grfFlags := val;
end;
function __TProtocolData__Wrapper.getgrfFlags : DWORD;
begin
result := TProtocolData(GetRecordPtr^).grfFlags;
end;
procedure __TProtocolData__Wrapper.setdwState(const val : DWORD);
begin
TProtocolData(GetRecordPtr^).dwState := val;
end;
function __TProtocolData__Wrapper.getdwState : DWORD;
begin
result := TProtocolData(GetRecordPtr^).dwState;
end;
procedure __TProtocolData__Wrapper.setcbData(const val : ULONG);
begin
TProtocolData(GetRecordPtr^).cbData := val;
end;
function __TProtocolData__Wrapper.getcbData : ULONG;
begin
result := TProtocolData(GetRecordPtr^).cbData;
end;
function __TProtocolFilterData__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TProtocolFilterData__Wrapper.setcbSize(const val : DWORD);
begin
TProtocolFilterData(GetRecordPtr^).cbSize := val;
end;
function __TProtocolFilterData__Wrapper.getcbSize : DWORD;
begin
result := TProtocolFilterData(GetRecordPtr^).cbSize;
end;
procedure __TProtocolFilterData__Wrapper.setdwFilterFlags(const val : DWORD);
begin
TProtocolFilterData(GetRecordPtr^).dwFilterFlags := val;
end;
function __TProtocolFilterData__Wrapper.getdwFilterFlags : DWORD;
begin
result := TProtocolFilterData(GetRecordPtr^).dwFilterFlags;
end;
function __TRemBindInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRemBindInfo__Wrapper.setcbSize(const val : ULONG);
begin
TRemBindInfo(GetRecordPtr^).cbSize := val;
end;
function __TRemBindInfo__Wrapper.getcbSize : ULONG;
begin
result := TRemBindInfo(GetRecordPtr^).cbSize;
end;
procedure __TRemBindInfo__Wrapper.setgrfBindInfoF(const val : DWORD);
begin
TRemBindInfo(GetRecordPtr^).grfBindInfoF := val;
end;
function __TRemBindInfo__Wrapper.getgrfBindInfoF : DWORD;
begin
result := TRemBindInfo(GetRecordPtr^).grfBindInfoF;
end;
procedure __TRemBindInfo__Wrapper.setdwBindVerb(const val : DWORD);
begin
TRemBindInfo(GetRecordPtr^).dwBindVerb := val;
end;
function __TRemBindInfo__Wrapper.getdwBindVerb : DWORD;
begin
result := TRemBindInfo(GetRecordPtr^).dwBindVerb;
end;
procedure __TRemBindInfo__Wrapper.setcbstgmedData(const val : DWORD);
begin
TRemBindInfo(GetRecordPtr^).cbstgmedData := val;
end;
function __TRemBindInfo__Wrapper.getcbstgmedData : DWORD;
begin
result := TRemBindInfo(GetRecordPtr^).cbstgmedData;
end;
procedure __TRemBindInfo__Wrapper.setdwOptions(const val : DWORD);
begin
TRemBindInfo(GetRecordPtr^).dwOptions := val;
end;
function __TRemBindInfo__Wrapper.getdwOptions : DWORD;
begin
result := TRemBindInfo(GetRecordPtr^).dwOptions;
end;
procedure __TRemBindInfo__Wrapper.setdwOptionsFlags(const val : DWORD);
begin
TRemBindInfo(GetRecordPtr^).dwOptionsFlags := val;
end;
function __TRemBindInfo__Wrapper.getdwOptionsFlags : DWORD;
begin
result := TRemBindInfo(GetRecordPtr^).dwOptionsFlags;
end;
procedure __TRemBindInfo__Wrapper.setdwCodePage(const val : DWORD);
begin
TRemBindInfo(GetRecordPtr^).dwCodePage := val;
end;
function __TRemBindInfo__Wrapper.getdwCodePage : DWORD;
begin
result := TRemBindInfo(GetRecordPtr^).dwCodePage;
end;
procedure __TRemBindInfo__Wrapper.setdwReserved(const val : DWORD);
begin
TRemBindInfo(GetRecordPtr^).dwReserved := val;
end;
function __TRemBindInfo__Wrapper.getdwReserved : DWORD;
begin
result := TRemBindInfo(GetRecordPtr^).dwReserved;
end;
function __TRemFormatEtc__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRemFormatEtc__Wrapper.setcfFormat(const val : DWORD);
begin
TRemFormatEtc(GetRecordPtr^).cfFormat := val;
end;
function __TRemFormatEtc__Wrapper.getcfFormat : DWORD;
begin
result := TRemFormatEtc(GetRecordPtr^).cfFormat;
end;
procedure __TRemFormatEtc__Wrapper.setptd(const val : DWORD);
begin
TRemFormatEtc(GetRecordPtr^).ptd := val;
end;
function __TRemFormatEtc__Wrapper.getptd : DWORD;
begin
result := TRemFormatEtc(GetRecordPtr^).ptd;
end;
procedure __TRemFormatEtc__Wrapper.setdwAspect(const val : DWORD);
begin
TRemFormatEtc(GetRecordPtr^).dwAspect := val;
end;
function __TRemFormatEtc__Wrapper.getdwAspect : DWORD;
begin
result := TRemFormatEtc(GetRecordPtr^).dwAspect;
end;
procedure __TRemFormatEtc__Wrapper.setlindex(const val : Longint);
begin
TRemFormatEtc(GetRecordPtr^).lindex := val;
end;
function __TRemFormatEtc__Wrapper.getlindex : Longint;
begin
result := TRemFormatEtc(GetRecordPtr^).lindex;
end;
procedure __TRemFormatEtc__Wrapper.settymed(const val : DWORD);
begin
TRemFormatEtc(GetRecordPtr^).tymed := val;
end;
function __TRemFormatEtc__Wrapper.gettymed : DWORD;
begin
result := TRemFormatEtc(GetRecordPtr^).tymed;
end;
function __TRemSecurityAttributes__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TRemSecurityAttributes__Wrapper.setnLength(const val : DWORD);
begin
TRemSecurityAttributes(GetRecordPtr^).nLength := val;
end;
function __TRemSecurityAttributes__Wrapper.getnLength : DWORD;
begin
result := TRemSecurityAttributes(GetRecordPtr^).nLength;
end;
procedure __TRemSecurityAttributes__Wrapper.setlpSecurityDescriptor(const val : DWORD);
begin
TRemSecurityAttributes(GetRecordPtr^).lpSecurityDescriptor := val;
end;
function __TRemSecurityAttributes__Wrapper.getlpSecurityDescriptor : DWORD;
begin
result := TRemSecurityAttributes(GetRecordPtr^).lpSecurityDescriptor;
end;
procedure __TRemSecurityAttributes__Wrapper.setbInheritHandle(const val : BOOL);
begin
TRemSecurityAttributes(GetRecordPtr^).bInheritHandle := val;
end;
function __TRemSecurityAttributes__Wrapper.getbInheritHandle : BOOL;
begin
result := TRemSecurityAttributes(GetRecordPtr^).bInheritHandle;
end;
function __TSoftDistInfo__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TSoftDistInfo__Wrapper.setcbSize(const val : ULONG);
begin
TSoftDistInfo(GetRecordPtr^).cbSize := val;
end;
function __TSoftDistInfo__Wrapper.getcbSize : ULONG;
begin
result := TSoftDistInfo(GetRecordPtr^).cbSize;
end;
procedure __TSoftDistInfo__Wrapper.setdwFlags(const val : DWORD);
begin
TSoftDistInfo(GetRecordPtr^).dwFlags := val;
end;
function __TSoftDistInfo__Wrapper.getdwFlags : DWORD;
begin
result := TSoftDistInfo(GetRecordPtr^).dwFlags;
end;
procedure __TSoftDistInfo__Wrapper.setdwAdState(const val : DWORD);
begin
TSoftDistInfo(GetRecordPtr^).dwAdState := val;
end;
function __TSoftDistInfo__Wrapper.getdwAdState : DWORD;
begin
result := TSoftDistInfo(GetRecordPtr^).dwAdState;
end;
procedure __TSoftDistInfo__Wrapper.setdwInstalledVersionMS(const val : DWORD);
begin
TSoftDistInfo(GetRecordPtr^).dwInstalledVersionMS := val;
end;
function __TSoftDistInfo__Wrapper.getdwInstalledVersionMS : DWORD;
begin
result := TSoftDistInfo(GetRecordPtr^).dwInstalledVersionMS;
end;
procedure __TSoftDistInfo__Wrapper.setdwInstalledVersionLS(const val : DWORD);
begin
TSoftDistInfo(GetRecordPtr^).dwInstalledVersionLS := val;
end;
function __TSoftDistInfo__Wrapper.getdwInstalledVersionLS : DWORD;
begin
result := TSoftDistInfo(GetRecordPtr^).dwInstalledVersionLS;
end;
procedure __TSoftDistInfo__Wrapper.setdwUpdateVersionMS(const val : DWORD);
begin
TSoftDistInfo(GetRecordPtr^).dwUpdateVersionMS := val;
end;
function __TSoftDistInfo__Wrapper.getdwUpdateVersionMS : DWORD;
begin
result := TSoftDistInfo(GetRecordPtr^).dwUpdateVersionMS;
end;
procedure __TSoftDistInfo__Wrapper.setdwUpdateVersionLS(const val : DWORD);
begin
TSoftDistInfo(GetRecordPtr^).dwUpdateVersionLS := val;
end;
function __TSoftDistInfo__Wrapper.getdwUpdateVersionLS : DWORD;
begin
result := TSoftDistInfo(GetRecordPtr^).dwUpdateVersionLS;
end;
procedure __TSoftDistInfo__Wrapper.setdwAdvertisedVersionMS(const val : DWORD);
begin
TSoftDistInfo(GetRecordPtr^).dwAdvertisedVersionMS := val;
end;
function __TSoftDistInfo__Wrapper.getdwAdvertisedVersionMS : DWORD;
begin
result := TSoftDistInfo(GetRecordPtr^).dwAdvertisedVersionMS;
end;
procedure __TSoftDistInfo__Wrapper.setdwAdvertisedVersionLS(const val : DWORD);
begin
TSoftDistInfo(GetRecordPtr^).dwAdvertisedVersionLS := val;
end;
function __TSoftDistInfo__Wrapper.getdwAdvertisedVersionLS : DWORD;
begin
result := TSoftDistInfo(GetRecordPtr^).dwAdvertisedVersionLS;
end;
procedure __TSoftDistInfo__Wrapper.setdwReserved(const val : DWORD);
begin
TSoftDistInfo(GetRecordPtr^).dwReserved := val;
end;
function __TSoftDistInfo__Wrapper.getdwReserved : DWORD;
begin
result := TSoftDistInfo(GetRecordPtr^).dwReserved;
end;
function __TZoneAttributes__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TZoneAttributes__Wrapper.setcbSize(const val : ULONG);
begin
TZoneAttributes(GetRecordPtr^).cbSize := val;
end;
function __TZoneAttributes__Wrapper.getcbSize : ULONG;
begin
result := TZoneAttributes(GetRecordPtr^).cbSize;
end;
procedure __TZoneAttributes__Wrapper.setdwTemplateMinLevel(const val : DWORD);
begin
TZoneAttributes(GetRecordPtr^).dwTemplateMinLevel := val;
end;
function __TZoneAttributes__Wrapper.getdwTemplateMinLevel : DWORD;
begin
result := TZoneAttributes(GetRecordPtr^).dwTemplateMinLevel;
end;
procedure __TZoneAttributes__Wrapper.setdwTemplateRecommended(const val : DWORD);
begin
TZoneAttributes(GetRecordPtr^).dwTemplateRecommended := val;
end;
function __TZoneAttributes__Wrapper.getdwTemplateRecommended : DWORD;
begin
result := TZoneAttributes(GetRecordPtr^).dwTemplateRecommended;
end;
procedure __TZoneAttributes__Wrapper.setdwTemplateCurrentLevel(const val : DWORD);
begin
TZoneAttributes(GetRecordPtr^).dwTemplateCurrentLevel := val;
end;
function __TZoneAttributes__Wrapper.getdwTemplateCurrentLevel : DWORD;
begin
result := TZoneAttributes(GetRecordPtr^).dwTemplateCurrentLevel;
end;
procedure __TZoneAttributes__Wrapper.setdwFlags(const val : DWORD);
begin
TZoneAttributes(GetRecordPtr^).dwFlags := val;
end;
function __TZoneAttributes__Wrapper.getdwFlags : DWORD;
begin
result := TZoneAttributes(GetRecordPtr^).dwFlags;
end;
function __ZONEATTRIBUTES__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __ZONEATTRIBUTES__Wrapper.setcbSize(const val : ULONG);
begin
ZONEATTRIBUTES(GetRecordPtr^).cbSize := val;
end;
function __ZONEATTRIBUTES__Wrapper.getcbSize : ULONG;
begin
result := ZONEATTRIBUTES(GetRecordPtr^).cbSize;
end;
procedure __ZONEATTRIBUTES__Wrapper.setdwTemplateMinLevel(const val : DWORD);
begin
ZONEATTRIBUTES(GetRecordPtr^).dwTemplateMinLevel := val;
end;
function __ZONEATTRIBUTES__Wrapper.getdwTemplateMinLevel : DWORD;
begin
result := ZONEATTRIBUTES(GetRecordPtr^).dwTemplateMinLevel;
end;
procedure __ZONEATTRIBUTES__Wrapper.setdwTemplateRecommended(const val : DWORD);
begin
ZONEATTRIBUTES(GetRecordPtr^).dwTemplateRecommended := val;
end;
function __ZONEATTRIBUTES__Wrapper.getdwTemplateRecommended : DWORD;
begin
result := ZONEATTRIBUTES(GetRecordPtr^).dwTemplateRecommended;
end;
procedure __ZONEATTRIBUTES__Wrapper.setdwTemplateCurrentLevel(const val : DWORD);
begin
ZONEATTRIBUTES(GetRecordPtr^).dwTemplateCurrentLevel := val;
end;
function __ZONEATTRIBUTES__Wrapper.getdwTemplateCurrentLevel : DWORD;
begin
result := ZONEATTRIBUTES(GetRecordPtr^).dwTemplateCurrentLevel;
end;
procedure __ZONEATTRIBUTES__Wrapper.setdwFlags(const val : DWORD);
begin
ZONEATTRIBUTES(GetRecordPtr^).dwFlags := val;
end;
function __ZONEATTRIBUTES__Wrapper.getdwFlags : DWORD;
begin
result := ZONEATTRIBUTES(GetRecordPtr^).dwFlags;
end;
function __REMSECURITY_ATTRIBUTES_ : IDispatch;
begin
  result := ___REMSECURITY_ATTRIBUTES__Wrapper.Create;
end;
function __tagBINDINFO_ : IDispatch;
begin
  result := ___tagBINDINFO__Wrapper.Create;
end;
function __tagCODEBASEHOLD_ : IDispatch;
begin
  result := ___tagCODEBASEHOLD__Wrapper.Create;
end;
function __tagDATAINFO_ : IDispatch;
begin
  result := ___tagDATAINFO__Wrapper.Create;
end;
function __tagHIT_LOGGING_INFO_ : IDispatch;
begin
  result := ___tagHIT_LOGGING_INFO__Wrapper.Create;
end;
function __tagPROTOCOLDATA_ : IDispatch;
begin
  result := ___tagPROTOCOLDATA__Wrapper.Create;
end;
function __tagPROTOCOLFILTERDATA_ : IDispatch;
begin
  result := ___tagPROTOCOLFILTERDATA__Wrapper.Create;
end;
function __tagRemBINDINFO_ : IDispatch;
begin
  result := ___tagRemBINDINFO__Wrapper.Create;
end;
function __tagSOFTDISTINFO_ : IDispatch;
begin
  result := ___tagSOFTDISTINFO__Wrapper.Create;
end;
function __ZONEATTRIBUTES_ : IDispatch;
begin
  result := ___ZONEATTRIBUTES__Wrapper.Create;
end;
function _BINDINFO_ : IDispatch;
begin
  result := __BINDINFO__Wrapper.Create;
end;
function _CODEBASEHOLD_ : IDispatch;
begin
  result := __CODEBASEHOLD__Wrapper.Create;
end;
function _DATAINFO_ : IDispatch;
begin
  result := __DATAINFO__Wrapper.Create;
end;
function _HIT_LOGGING_INFO_ : IDispatch;
begin
  result := __HIT_LOGGING_INFO__Wrapper.Create;
end;
function _PROTOCOLDATA_ : IDispatch;
begin
  result := __PROTOCOLDATA__Wrapper.Create;
end;
function _PROTOCOLFILTERDATA_ : IDispatch;
begin
  result := __PROTOCOLFILTERDATA__Wrapper.Create;
end;
function _RemBINDINFO_ : IDispatch;
begin
  result := __RemBINDINFO__Wrapper.Create;
end;
function _RemFORMATETC_ : IDispatch;
begin
  result := __RemFORMATETC__Wrapper.Create;
end;
function _REMSECURITY_ATTRIBUTES_ : IDispatch;
begin
  result := __REMSECURITY_ATTRIBUTES__Wrapper.Create;
end;
function _SOFTDISTINFO_ : IDispatch;
begin
  result := __SOFTDISTINFO__Wrapper.Create;
end;
function _tagRemFORMATETC_ : IDispatch;
begin
  result := __tagRemFORMATETC__Wrapper.Create;
end;
function _TBindInfo_ : IDispatch;
begin
  result := __TBindInfo__Wrapper.Create;
end;
function _TCodeBaseHold_ : IDispatch;
begin
  result := __TCodeBaseHold__Wrapper.Create;
end;
function _TDataInfo_ : IDispatch;
begin
  result := __TDataInfo__Wrapper.Create;
end;
function _THitLoggingInfo_ : IDispatch;
begin
  result := __THitLoggingInfo__Wrapper.Create;
end;
function _TProtocolData_ : IDispatch;
begin
  result := __TProtocolData__Wrapper.Create;
end;
function _TProtocolFilterData_ : IDispatch;
begin
  result := __TProtocolFilterData__Wrapper.Create;
end;
function _TRemBindInfo_ : IDispatch;
begin
  result := __TRemBindInfo__Wrapper.Create;
end;
function _TRemFormatEtc_ : IDispatch;
begin
  result := __TRemFormatEtc__Wrapper.Create;
end;
function _TRemSecurityAttributes_ : IDispatch;
begin
  result := __TRemSecurityAttributes__Wrapper.Create;
end;
function _TSoftDistInfo_ : IDispatch;
begin
  result := __TSoftDistInfo__Wrapper.Create;
end;
function _TZoneAttributes_ : IDispatch;
begin
  result := __TZoneAttributes__Wrapper.Create;
end;
function _ZONEATTRIBUTES_ : IDispatch;
begin
  result := __ZONEATTRIBUTES__Wrapper.Create;
end;
function __TStgMedium__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TStgMedium__Wrapper.settymed(const val : Longint);
begin
TStgMedium(GetRecordPtr^).tymed := val;
end;
function __TStgMedium__Wrapper.gettymed : Longint;
begin
result := TStgMedium(GetRecordPtr^).tymed;
end;
procedure __TStgMedium__Wrapper.sethMetaFilePict(const val : THandle);
begin
TStgMedium(GetRecordPtr^).hMetaFilePict := val;
end;
function __TStgMedium__Wrapper.gethMetaFilePict : THandle;
begin
result := TStgMedium(GetRecordPtr^).hMetaFilePict;
end;
procedure __TStgMedium__Wrapper.sethEnhMetaFile(const val : THandle);
begin
TStgMedium(GetRecordPtr^).hEnhMetaFile := val;
end;
function __TStgMedium__Wrapper.gethEnhMetaFile : THandle;
begin
result := TStgMedium(GetRecordPtr^).hEnhMetaFile;
end;
procedure __TStgMedium__Wrapper.sethGlobal(const val : hGlobal);
begin
TStgMedium(GetRecordPtr^).hGlobal := val;
end;
function __TStgMedium__Wrapper.gethGlobal : hGlobal;
begin
result := TStgMedium(GetRecordPtr^).hGlobal;
end;
function ____CopyStgMedium__Wrapper(const p0 : IDispatch;
const p1 : IDispatch): HResult;
var
__p0 : ^TStgMedium;
__i0 : IDispatch;
__p1 : ^TStgMedium;
__i1 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := CopyStgMedium(__p0^,__p1^);
end;

function ____CopyBindInfo__Wrapper(const p0 : IDispatch;
const p1 : IDispatch): HResult;
var
__p0 : ^TBindInfo;
__i0 : IDispatch;
__p1 : ^TBindInfo;
__i1 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
if p1 = nil then exit;
__p1 := (p1 as IDCRecordWrapper).GetRecordPtr;
result := CopyBindInfo(__p0^,__p1^);
end;

procedure ____ReleaseBindInfo__Wrapper(const p0 : IDispatch);
var
__p0 : ^TBindInfo;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
ReleaseBindInfo(__p0^);
end;

function ____WriteHitLogging__Wrapper(const p0 : IDispatch): BOOL;
var
__p0 : ^THitLoggingInfo;
__i0 : IDispatch;
begin
if p0 = nil then exit;
__p0 := (p0 as IDCRecordWrapper).GetRecordPtr;
result := WriteHitLogging(__p0^);
end;


type ___REMSECURITY_ATTRIBUTES__Wrapper__ = class(___REMSECURITY_ATTRIBUTES__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___REMSECURITY_ATTRIBUTES__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_REMSECURITY_ATTRIBUTESToVariant(var R : _REMSECURITY_ATTRIBUTES) : OleVariant;
var
__rw : ___REMSECURITY_ATTRIBUTES__Wrapper__;
begin
__rw := ___REMSECURITY_ATTRIBUTES__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_REMSECURITY_ATTRIBUTES(const V : OleVariant) : _REMSECURITY_ATTRIBUTES;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _REMSECURITY_ATTRIBUTES((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagBINDINFO__Wrapper__ = class(___tagBINDINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagBINDINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagBINDINFOToVariant(var R : _tagBINDINFO) : OleVariant;
var
__rw : ___tagBINDINFO__Wrapper__;
begin
__rw := ___tagBINDINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagBINDINFO(const V : OleVariant) : _tagBINDINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagBINDINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagCODEBASEHOLD__Wrapper__ = class(___tagCODEBASEHOLD__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagCODEBASEHOLD__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagCODEBASEHOLDToVariant(var R : _tagCODEBASEHOLD) : OleVariant;
var
__rw : ___tagCODEBASEHOLD__Wrapper__;
begin
__rw := ___tagCODEBASEHOLD__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagCODEBASEHOLD(const V : OleVariant) : _tagCODEBASEHOLD;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagCODEBASEHOLD((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagDATAINFO__Wrapper__ = class(___tagDATAINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagDATAINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagDATAINFOToVariant(var R : _tagDATAINFO) : OleVariant;
var
__rw : ___tagDATAINFO__Wrapper__;
begin
__rw := ___tagDATAINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagDATAINFO(const V : OleVariant) : _tagDATAINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagDATAINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagHIT_LOGGING_INFO__Wrapper__ = class(___tagHIT_LOGGING_INFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagHIT_LOGGING_INFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagHIT_LOGGING_INFOToVariant(var R : _tagHIT_LOGGING_INFO) : OleVariant;
var
__rw : ___tagHIT_LOGGING_INFO__Wrapper__;
begin
__rw := ___tagHIT_LOGGING_INFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagHIT_LOGGING_INFO(const V : OleVariant) : _tagHIT_LOGGING_INFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagHIT_LOGGING_INFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagPROTOCOLDATA__Wrapper__ = class(___tagPROTOCOLDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagPROTOCOLDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagPROTOCOLDATAToVariant(var R : _tagPROTOCOLDATA) : OleVariant;
var
__rw : ___tagPROTOCOLDATA__Wrapper__;
begin
__rw := ___tagPROTOCOLDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagPROTOCOLDATA(const V : OleVariant) : _tagPROTOCOLDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagPROTOCOLDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagPROTOCOLFILTERDATA__Wrapper__ = class(___tagPROTOCOLFILTERDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagPROTOCOLFILTERDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagPROTOCOLFILTERDATAToVariant(var R : _tagPROTOCOLFILTERDATA) : OleVariant;
var
__rw : ___tagPROTOCOLFILTERDATA__Wrapper__;
begin
__rw := ___tagPROTOCOLFILTERDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagPROTOCOLFILTERDATA(const V : OleVariant) : _tagPROTOCOLFILTERDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagPROTOCOLFILTERDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagRemBINDINFO__Wrapper__ = class(___tagRemBINDINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagRemBINDINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagRemBINDINFOToVariant(var R : _tagRemBINDINFO) : OleVariant;
var
__rw : ___tagRemBINDINFO__Wrapper__;
begin
__rw := ___tagRemBINDINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagRemBINDINFO(const V : OleVariant) : _tagRemBINDINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagRemBINDINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___tagSOFTDISTINFO__Wrapper__ = class(___tagSOFTDISTINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___tagSOFTDISTINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_tagSOFTDISTINFOToVariant(var R : _tagSOFTDISTINFO) : OleVariant;
var
__rw : ___tagSOFTDISTINFO__Wrapper__;
begin
__rw := ___tagSOFTDISTINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_tagSOFTDISTINFO(const V : OleVariant) : _tagSOFTDISTINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _tagSOFTDISTINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type ___ZONEATTRIBUTES__Wrapper__ = class(___ZONEATTRIBUTES__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function ___ZONEATTRIBUTES__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function Convert_ZONEATTRIBUTESToVariant(var R : _ZONEATTRIBUTES) : OleVariant;
var
__rw : ___ZONEATTRIBUTES__Wrapper__;
begin
__rw := ___ZONEATTRIBUTES__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTo_ZONEATTRIBUTES(const V : OleVariant) : _ZONEATTRIBUTES;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := _ZONEATTRIBUTES((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __BINDINFO__Wrapper__ = class(__BINDINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __BINDINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertBINDINFOToVariant(var R : BINDINFO) : OleVariant;
var
__rw : __BINDINFO__Wrapper__;
begin
__rw := __BINDINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToBINDINFO(const V : OleVariant) : BINDINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := BINDINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __CODEBASEHOLD__Wrapper__ = class(__CODEBASEHOLD__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __CODEBASEHOLD__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertCODEBASEHOLDToVariant(var R : CODEBASEHOLD) : OleVariant;
var
__rw : __CODEBASEHOLD__Wrapper__;
begin
__rw := __CODEBASEHOLD__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToCODEBASEHOLD(const V : OleVariant) : CODEBASEHOLD;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := CODEBASEHOLD((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __DATAINFO__Wrapper__ = class(__DATAINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __DATAINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertDATAINFOToVariant(var R : DATAINFO) : OleVariant;
var
__rw : __DATAINFO__Wrapper__;
begin
__rw := __DATAINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToDATAINFO(const V : OleVariant) : DATAINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := DATAINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __HIT_LOGGING_INFO__Wrapper__ = class(__HIT_LOGGING_INFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __HIT_LOGGING_INFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertHIT_LOGGING_INFOToVariant(var R : HIT_LOGGING_INFO) : OleVariant;
var
__rw : __HIT_LOGGING_INFO__Wrapper__;
begin
__rw := __HIT_LOGGING_INFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToHIT_LOGGING_INFO(const V : OleVariant) : HIT_LOGGING_INFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := HIT_LOGGING_INFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PROTOCOLDATA__Wrapper__ = class(__PROTOCOLDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PROTOCOLDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPROTOCOLDATAToVariant(var R : PROTOCOLDATA) : OleVariant;
var
__rw : __PROTOCOLDATA__Wrapper__;
begin
__rw := __PROTOCOLDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPROTOCOLDATA(const V : OleVariant) : PROTOCOLDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PROTOCOLDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __PROTOCOLFILTERDATA__Wrapper__ = class(__PROTOCOLFILTERDATA__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __PROTOCOLFILTERDATA__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertPROTOCOLFILTERDATAToVariant(var R : PROTOCOLFILTERDATA) : OleVariant;
var
__rw : __PROTOCOLFILTERDATA__Wrapper__;
begin
__rw := __PROTOCOLFILTERDATA__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToPROTOCOLFILTERDATA(const V : OleVariant) : PROTOCOLFILTERDATA;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := PROTOCOLFILTERDATA((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __RemBINDINFO__Wrapper__ = class(__RemBINDINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __RemBINDINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertRemBINDINFOToVariant(var R : RemBINDINFO) : OleVariant;
var
__rw : __RemBINDINFO__Wrapper__;
begin
__rw := __RemBINDINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToRemBINDINFO(const V : OleVariant) : RemBINDINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := RemBINDINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __RemFORMATETC__Wrapper__ = class(__RemFORMATETC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __RemFORMATETC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertRemFORMATETCToVariant(var R : RemFORMATETC) : OleVariant;
var
__rw : __RemFORMATETC__Wrapper__;
begin
__rw := __RemFORMATETC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToRemFORMATETC(const V : OleVariant) : RemFORMATETC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := RemFORMATETC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __REMSECURITY_ATTRIBUTES__Wrapper__ = class(__REMSECURITY_ATTRIBUTES__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __REMSECURITY_ATTRIBUTES__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertREMSECURITY_ATTRIBUTESToVariant(var R : REMSECURITY_ATTRIBUTES) : OleVariant;
var
__rw : __REMSECURITY_ATTRIBUTES__Wrapper__;
begin
__rw := __REMSECURITY_ATTRIBUTES__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToREMSECURITY_ATTRIBUTES(const V : OleVariant) : REMSECURITY_ATTRIBUTES;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := REMSECURITY_ATTRIBUTES((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __SOFTDISTINFO__Wrapper__ = class(__SOFTDISTINFO__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __SOFTDISTINFO__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertSOFTDISTINFOToVariant(var R : SOFTDISTINFO) : OleVariant;
var
__rw : __SOFTDISTINFO__Wrapper__;
begin
__rw := __SOFTDISTINFO__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToSOFTDISTINFO(const V : OleVariant) : SOFTDISTINFO;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := SOFTDISTINFO((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __tagRemFORMATETC__Wrapper__ = class(__tagRemFORMATETC__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __tagRemFORMATETC__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConverttagRemFORMATETCToVariant(var R : tagRemFORMATETC) : OleVariant;
var
__rw : __tagRemFORMATETC__Wrapper__;
begin
__rw := __tagRemFORMATETC__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantTotagRemFORMATETC(const V : OleVariant) : tagRemFORMATETC;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := tagRemFORMATETC((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TBindInfo__Wrapper__ = class(__TBindInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TBindInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTBindInfoToVariant(var R : TBindInfo) : OleVariant;
var
__rw : __TBindInfo__Wrapper__;
begin
__rw := __TBindInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTBindInfo(const V : OleVariant) : TBindInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TBindInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TCodeBaseHold__Wrapper__ = class(__TCodeBaseHold__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TCodeBaseHold__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTCodeBaseHoldToVariant(var R : TCodeBaseHold) : OleVariant;
var
__rw : __TCodeBaseHold__Wrapper__;
begin
__rw := __TCodeBaseHold__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTCodeBaseHold(const V : OleVariant) : TCodeBaseHold;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TCodeBaseHold((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TDataInfo__Wrapper__ = class(__TDataInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TDataInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTDataInfoToVariant(var R : TDataInfo) : OleVariant;
var
__rw : __TDataInfo__Wrapper__;
begin
__rw := __TDataInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTDataInfo(const V : OleVariant) : TDataInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TDataInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __THitLoggingInfo__Wrapper__ = class(__THitLoggingInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __THitLoggingInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTHitLoggingInfoToVariant(var R : THitLoggingInfo) : OleVariant;
var
__rw : __THitLoggingInfo__Wrapper__;
begin
__rw := __THitLoggingInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTHitLoggingInfo(const V : OleVariant) : THitLoggingInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := THitLoggingInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TProtocolData__Wrapper__ = class(__TProtocolData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TProtocolData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTProtocolDataToVariant(var R : TProtocolData) : OleVariant;
var
__rw : __TProtocolData__Wrapper__;
begin
__rw := __TProtocolData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTProtocolData(const V : OleVariant) : TProtocolData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TProtocolData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TProtocolFilterData__Wrapper__ = class(__TProtocolFilterData__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TProtocolFilterData__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTProtocolFilterDataToVariant(var R : TProtocolFilterData) : OleVariant;
var
__rw : __TProtocolFilterData__Wrapper__;
begin
__rw := __TProtocolFilterData__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTProtocolFilterData(const V : OleVariant) : TProtocolFilterData;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TProtocolFilterData((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TRemBindInfo__Wrapper__ = class(__TRemBindInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRemBindInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRemBindInfoToVariant(var R : TRemBindInfo) : OleVariant;
var
__rw : __TRemBindInfo__Wrapper__;
begin
__rw := __TRemBindInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRemBindInfo(const V : OleVariant) : TRemBindInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRemBindInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TRemFormatEtc__Wrapper__ = class(__TRemFormatEtc__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRemFormatEtc__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRemFormatEtcToVariant(var R : TRemFormatEtc) : OleVariant;
var
__rw : __TRemFormatEtc__Wrapper__;
begin
__rw := __TRemFormatEtc__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRemFormatEtc(const V : OleVariant) : TRemFormatEtc;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRemFormatEtc((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TRemSecurityAttributes__Wrapper__ = class(__TRemSecurityAttributes__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TRemSecurityAttributes__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTRemSecurityAttributesToVariant(var R : TRemSecurityAttributes) : OleVariant;
var
__rw : __TRemSecurityAttributes__Wrapper__;
begin
__rw := __TRemSecurityAttributes__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTRemSecurityAttributes(const V : OleVariant) : TRemSecurityAttributes;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TRemSecurityAttributes((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TSoftDistInfo__Wrapper__ = class(__TSoftDistInfo__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TSoftDistInfo__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTSoftDistInfoToVariant(var R : TSoftDistInfo) : OleVariant;
var
__rw : __TSoftDistInfo__Wrapper__;
begin
__rw := __TSoftDistInfo__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTSoftDistInfo(const V : OleVariant) : TSoftDistInfo;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TSoftDistInfo((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TStgMedium__Wrapper__ = class(__TStgMedium__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TStgMedium__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTStgMediumToVariant(var R : TStgMedium) : OleVariant;
var
__rw : __TStgMedium__Wrapper__;
begin
__rw := __TStgMedium__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTStgMedium(const V : OleVariant) : TStgMedium;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TStgMedium((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TZoneAttributes__Wrapper__ = class(__TZoneAttributes__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TZoneAttributes__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTZoneAttributesToVariant(var R : TZoneAttributes) : OleVariant;
var
__rw : __TZoneAttributes__Wrapper__;
begin
__rw := __TZoneAttributes__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTZoneAttributes(const V : OleVariant) : TZoneAttributes;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TZoneAttributes((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __ZONEATTRIBUTES__Wrapper__ = class(__ZONEATTRIBUTES__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __ZONEATTRIBUTES__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertZONEATTRIBUTESToVariant(var R : ZONEATTRIBUTES) : OleVariant;
var
__rw : __ZONEATTRIBUTES__Wrapper__;
begin
__rw := __ZONEATTRIBUTES__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToZONEATTRIBUTES(const V : OleVariant) : ZONEATTRIBUTES;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := ZONEATTRIBUTES((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..392] of string = (
'MKSYS_URLMONIKER'
,'URLMON_OPTION_USERAGENT'
,'URLMON_OPTION_USERAGENT_REFRESH'
,'URLMON_OPTION_URL_ENCODING'
,'URLMON_OPTION_USE_BINDSTRINGCREDS'
,'CF_NULL'
,'CFSTR_MIME_NULL'
,'CFSTR_MIME_TEXT'
,'CFSTR_MIME_RICHTEXT'
,'CFSTR_MIME_X_BITMAP'
,'CFSTR_MIME_POSTSCRIPT'
,'CFSTR_MIME_AIFF'
,'CFSTR_MIME_BASICAUDIO'
,'CFSTR_MIME_WAV'
,'CFSTR_MIME_X_WAV'
,'CFSTR_MIME_GIF'
,'CFSTR_MIME_PJPEG'
,'CFSTR_MIME_JPEG'
,'CFSTR_MIME_TIFF'
,'CFSTR_MIME_X_PNG'
,'CFSTR_MIME_BMP'
,'CFSTR_MIME_X_ART'
,'CFSTR_MIME_X_EMF'
,'CFSTR_MIME_X_WMF'
,'CFSTR_MIME_AVI'
,'CFSTR_MIME_MPEG'
,'CFSTR_MIME_FRACTALS'
,'CFSTR_MIME_RAWDATA'
,'CFSTR_MIME_RAWDATASTRM'
,'CFSTR_MIME_PDF'
,'CFSTR_MIME_X_AIFF'
,'CFSTR_MIME_X_REALAUDIO'
,'CFSTR_MIME_XBM'
,'CFSTR_MIME_QUICKTIME'
,'CFSTR_MIME_X_MSVIDEO'
,'CFSTR_MIME_X_SGI_MOVIE'
,'CFSTR_MIME_HTML'
,'MK_S_ASYNCHRONOUS'
,'S_ASYNCHRONOUS'
,'E_PENDING'
,'INET_E_INVALID_URL'
,'INET_E_NO_SESSION'
,'INET_E_CANNOT_CONNECT'
,'INET_E_RESOURCE_NOT_FOUND'
,'INET_E_OBJECT_NOT_FOUND'
,'INET_E_DATA_NOT_AVAILABLE'
,'INET_E_DOWNLOAD_FAILURE'
,'INET_E_AUTHENTICATION_REQUIRED'
,'INET_E_NO_VALID_MEDIA'
,'INET_E_CONNECTION_TIMEOUT'
,'INET_E_INVALID_REQUEST'
,'INET_E_UNKNOWN_PROTOCOL'
,'INET_E_SECURITY_PROBLEM'
,'INET_E_CANNOT_LOAD_DATA'
,'INET_E_CANNOT_INSTANTIATE_OBJECT'
,'INET_E_REDIRECT_FAILED'
,'INET_E_REDIRECT_TO_DIR'
,'INET_E_CANNOT_LOCK_REQUEST'
,'INET_E_USE_EXTEND_BINDING'
,'INET_E_TERMINATED_BIND'
,'INET_E_CODE_DOWNLOAD_DECLINED'
,'INET_E_RESULT_DISPATCHED'
,'INET_E_CANNOT_REPLACE_SFP_FILE'
,'INET_E_CODE_INSTALL_SUPPRESSED'
,'INET_E_ERROR_FIRST'
,'BINDVERB_GET'
,'BINDVERB_POST'
,'BINDVERB_PUT'
,'BINDVERB_CUSTOM'
,'BINDINFOF_URLENCODESTGMEDDATA'
,'BINDINFOF_URLENCODEDEXTRAINFO'
,'BINDF_ASYNCHRONOUS'
,'BINDF_ASYNCSTORAGE'
,'BINDF_NOPROGRESSIVERENDERING'
,'BINDF_OFFLINEOPERATION'
,'BINDF_GETNEWESTVERSION'
,'BINDF_NOWRITECACHE'
,'BINDF_NEEDFILE'
,'BINDF_PULLDATA'
,'BINDF_IGNORESECURITYPROBLEM'
,'BINDF_RESYNCHRONIZE'
,'BINDF_HYPERLINK'
,'BINDF_NO_UI'
,'BINDF_SILENTOPERATION'
,'BINDF_PRAGMA_NO_CACHE'
,'BINDF_FREE_THREADED'
,'BINDF_DIRECT_READ'
,'BINDF_FORMS_SUBMIT'
,'BINDF_GETFROMCACHE_IF_NET_FAIL'
,'BINDF_DONTUSECACHE'
,'BINDF_DONTPUTINCACHE'
,'BINDF_NOCOPYDATA'
,'BSCF_FIRSTDATANOTIFICATION'
,'BSCF_INTERMEDIATEDATANOTIFICATION'
,'BSCF_LASTDATANOTIFICATION'
,'BSCF_DATAFULLYAVAILABLE'
,'BSCF_AVAILABLEDATASIZEUNKNOWN'
,'BINDSTATUS_FINDINGRESOURCE'
,'BINDSTATUS_CONNECTING'
,'BINDSTATUS_REDIRECTING'
,'BINDSTATUS_BEGINDOWNLOADDATA'
,'BINDSTATUS_DOWNLOADINGDATA'
,'BINDSTATUS_ENDDOWNLOADDATA'
,'BINDSTATUS_BEGINDOWNLOADCOMPONENTS'
,'BINDSTATUS_INSTALLINGCOMPONENTS'
,'BINDSTATUS_ENDDOWNLOADCOMPONENTS'
,'BINDSTATUS_USINGCACHEDCOPY'
,'BINDSTATUS_SENDINGREQUEST'
,'BINDSTATUS_CLASSIDAVAILABLE'
,'BINDSTATUS_MIMETYPEAVAILABLE'
,'BINDSTATUS_CACHEFILENAMEAVAILABLE'
,'BINDSTATUS_BEGINSYNCOPERATION'
,'BINDSTATUS_ENDSYNCOPERATION'
,'BINDSTATUS_BEGINUPLOADDATA'
,'BINDSTATUS_UPLOADINGDATA'
,'BINDSTATUS_ENDUPLOADDATA'
,'BINDSTATUS_PROTOCOLCLASSID'
,'BINDSTATUS_ENCODING'
,'BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE'
,'BINDSTATUS_CLASSINSTALLLOCATION'
,'BINDSTATUS_DECODING'
,'BINDSTATUS_LOADINGMIMEHANDLER'
,'BINDSTATUS_CONTENTDISPOSITIONATTACH'
,'BINDSTATUS_FILTERREPORTMIMETYPE'
,'BINDSTATUS_CLSIDCANINSTANTIATE'
,'BINDSTATUS_IUNKNOWNAVAILABLE'
,'BINDSTATUS_DIRECTBIND'
,'BINDSTATUS_RAWMIMETYPE'
,'BINDSTATUS_PROXYDETECTING'
,'BINDSTATUS_ACCEPTRANGES'
,'BINDSTATUS_COOKIE_SENT'
,'BINDSTATUS_COMPACT_POLICY_RECEIVED'
,'BINDSTATUS_COOKIE_SUPPRESSED'
,'BINDSTATUS_COOKIE_STATE_UNKNOWN'
,'BINDSTATUS_COOKIE_STATE_ACCEPT'
,'BINDSTATUS_COOKIE_STATE_REJECT'
,'BINDSTATUS_COOKIE_STATE_PROMPT'
,'BINDSTATUS_COOKIE_STATE_LEASH'
,'BINDSTATUS_COOKIE_STATE_DOWNGRADE'
,'BINDSTATUS_POLICY_HREF'
,'BINDSTATUS_P3P_HEADER'
,'BINDSTATUS_SESSION_COOKIE_RECEIVED'
,'BINDSTATUS_PERSISTENT_COOKIE_RECEIVED'
,'BINDSTATUS_SESSION_COOKIES_ALLOWED'
,'BINDSTATUS_CACHECONTROL'
,'BINDSTATUS_CONTENTDISPOSITIONFILENAME'
,'BINDSTATUS_MIMETEXTPLAINMISMATCH'
,'BINDSTATUS_PUBLISHERAVAILABLE'
,'BINDSTATUS_DISPLAYNAMEAVAILABLE'
,'CIP_DISK_FULL'
,'CIP_ACCESS_DENIED'
,'CIP_NEWER_VERSION_EXISTS'
,'CIP_OLDER_VERSION_EXISTS'
,'CIP_NAME_CONFLICT'
,'CIP_TRUST_VERIFICATION_COMPONENT_MISSING'
,'CIP_EXE_SELF_REGISTERATION_TIMEOUT'
,'CIP_UNSAFE_TO_ABORT'
,'CIP_NEED_REBOOT'
,'CIP_NEED_REBOOT_UI_PERMISSION'
,'WININETINFO_OPTION_LOCK_HANDLE'
,'URLOSTRM_USECACHEDCOPY_ONLY'
,'URLOSTRM_USECACHEDCOPY'
,'URLOSTRM_GETNEWESTVERSION'
,'BINDSTRING_HEADERS'
,'BINDSTRING_ACCEPT_MIMES'
,'BINDSTRING_EXTRA_URL'
,'BINDSTRING_LANGUAGE'
,'BINDSTRING_USERNAME'
,'BINDSTRING_PASSWORD'
,'BINDSTRING_UA_PIXELS'
,'BINDSTRING_UA_COLOR'
,'BINDSTRING_OS'
,'BINDSTRING_USER_AGENT'
,'BINDSTRING_ACCEPT_ENCODINGS'
,'BINDSTRING_POST_COOKIE'
,'BINDSTRING_POST_DATA_MIME'
,'BINDSTRING_URL'
,'PI_PARSE_URL'
,'PI_FILTER_MODE'
,'PI_FORCE_ASYNC'
,'PI_USE_WORKERTHREAD'
,'PI_MIMEVERIFICATION'
,'PI_CLSIDLOOKUP'
,'PI_DATAPROGRESS'
,'PI_SYNCHRONOUS'
,'PI_APARTMENTTHREADED'
,'PI_CLASSINSTALL'
,'PD_FORCE_SWITCH'
,'PI_DOCFILECLSIDLOOKUP'
,'OIBDG_APARTMENTTHREADED'
,'PARSE_CANONICALIZE'
,'PARSE_FRIENDLY'
,'PARSE_SECURITY_URL'
,'PARSE_ROOTDOCUMENT'
,'PARSE_DOCUMENT'
,'PARSE_ANCHOR'
,'PARSE_ENCODE'
,'PARSE_DECODE'
,'PARSE_PATH_FROM_URL'
,'PARSE_URL_FROM_PATH'
,'PARSE_MIME'
,'PARSE_SERVER'
,'PARSE_SCHEMA'
,'PARSE_SITE'
,'PARSE_DOMAIN'
,'PARSE_LOCATION'
,'PARSE_SECURITY_DOMAIN'
,'PSU_DEFAULT'
,'PSU_SECURITY_URL_ONLY'
,'QUERY_EXPIRATION_DATE'
,'QUERY_TIME_OF_LAST_CHANGE'
,'QUERY_CONTENT_ENCODING'
,'QUERY_CONTENT_TYPE'
,'QUERY_REFRESH'
,'QUERY_RECOMBINE'
,'QUERY_CAN_NAVIGATE'
,'QUERY_USES_NETWORK'
,'QUERY_IS_CACHED'
,'QUERY_IS_INSTALLEDENTRY'
,'QUERY_IS_CACHED_OR_MAPPED'
,'QUERY_USES_CACHE'
,'QUERY_IS_SECURE'
,'QUERY_IS_SAFE'
,'INET_E_USE_DEFAULT_PROTOCOLHANDLER'
,'INET_E_USE_DEFAULT_SETTING'
,'INET_E_DEFAULT_ACTION'
,'INET_E_QUERYOPTION_UNKNOWN'
,'INET_E_REDIRECTING'
,'PROTOCOLFLAG_NO_PICS_CHECK'
,'MUTZ_NOSAVEDFILECHECK'
,'MUTZ_ISFILE'
,'MUTZ_ACCEPT_WILDCARD_SCHEME'
,'MUTZ_ENFORCERESTRICTED'
,'MUTZ_REQUIRESAVEDFILECHECK'
,'MAX_SIZE_SECURITY_ID'
,'PUAF_DEFAULT'
,'PUAF_NOUI'
,'PUAF_ISFILE'
,'PUAF_WARN_IF_DENIED'
,'PUAF_FORCEUI_FOREGROUND'
,'PUAF_CHECK_TIFS'
,'PUAF_DONTCHECKBOXINDIALOG'
,'PUAF_TRUSTED'
,'PUAF_ACCEPT_WILDCARD_SCHEME'
,'PUAF_ENFORCERESTRICTED'
,'PUAF_NOSAVEDFILECHECK'
,'PUAF_REQUIRESAVEDFILECHECK'
,'PUAF_LMZ_UNLOCKED'
,'PUAF_LMZ_LOCKED'
,'PUAF_DEFAULTZONEPOL'
,'PUAF_NPL_USE_LOCKED_IF_RESTRICTED'
,'PUAF_NOUIIFLOCKED'
,'PUAFOUT_DEFAULT'
,'PUAFOUT_ISLOCKZONEPOLICY'
,'SZM_CREATE'
,'SZM_DELETE'
,'URLACTION_MIN'
,'URLACTION_DOWNLOAD_MIN'
,'URLACTION_DOWNLOAD_SIGNED_ACTIVEX'
,'URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX'
,'URLACTION_DOWNLOAD_CURR_MAX'
,'URLACTION_DOWNLOAD_MAX'
,'URLACTION_ACTIVEX_MIN'
,'URLACTION_ACTIVEX_RUN'
,'URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY'
,'URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY'
,'URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY'
,'URLACTION_SCRIPT_OVERRIDE_SAFETY'
,'URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY'
,'URLACTION_ACTIVEX_TREATASUNTRUSTED'
,'URLACTION_ACTIVEX_NO_WEBOC_SCRIPT'
,'URLACTION_ACTIVEX_CURR_MAX'
,'URLACTION_ACTIVEX_MAX'
,'URLACTION_SCRIPT_MIN'
,'URLACTION_SCRIPT_RUN'
,'URLACTION_SCRIPT_JAVA_USE'
,'URLACTION_SCRIPT_SAFE_ACTIVEX'
,'URLACTION_SCRIPT_CURR_MAX'
,'URLACTION_SCRIPT_MAX'
,'URLACTION_HTML_MIN'
,'URLACTION_HTML_SUBMIT_FORMS'
,'URLACTION_HTML_SUBMIT_FORMS_FROM'
,'URLACTION_HTML_SUBMIT_FORMS_TO'
,'URLACTION_HTML_FONT_DOWNLOAD'
,'URLACTION_HTML_JAVA_RUN'
,'URLACTION_HTML_CURR_MAX'
,'URLACTION_HTML_MAX'
,'URLACTION_SHELL_MIN'
,'URLACTION_SHELL_INSTALL_DTITEMS'
,'URLACTION_SHELL_MOVE_OR_COPY'
,'URLACTION_SHELL_FILE_DOWNLOAD'
,'URLACTION_SHELL_VERB'
,'URLACTION_SHELL_WEBVIEW_VERB'
,'URLACTION_SHELL_SHELLEXECUTE'
,'URLACTION_SHELL_EXECUTE_HIGHRISK'
,'URLACTION_SHELL_EXECUTE_MODRISK'
,'URLACTION_SHELL_EXECUTE_LOWRISK'
,'URLACTION_SHELL_POPUPMGR'
,'URLACTION_SHELL_CURR_MAX'
,'URLACTION_SHELL_MAX'
,'URLACTION_NETWORK_MIN'
,'URLACTION_CREDENTIALS_USE'
,'URLPOLICY_CREDENTIALS_SILENT_LOGON_OK'
,'URLPOLICY_CREDENTIALS_MUST_PROMPT_USER'
,'URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT'
,'URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY'
,'URLACTION_AUTHENTICATE_CLIENT'
,'URLPOLICY_AUTHENTICATE_CLEARTEXT_OK'
,'URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE'
,'URLPOLICY_AUTHENTICATE_MUTUAL_ONLY'
,'URLACTION_NETWORK_CURR_MAX'
,'URLACTION_NETWORK_MAX'
,'URLACTION_JAVA_MIN'
,'URLACTION_JAVA_PERMISSIONS'
,'URLPOLICY_JAVA_PROHIBIT'
,'URLPOLICY_JAVA_HIGH'
,'URLPOLICY_JAVA_MEDIUM'
,'URLPOLICY_JAVA_LOW'
,'URLPOLICY_JAVA_CUSTOM'
,'URLACTION_JAVA_CURR_MAX'
,'URLACTION_JAVA_MAX'
,'URLACTION_INFODELIVERY_MIN'
,'URLACTION_INFODELIVERY_NO_ADDING_CHANNELS'
,'URLACTION_INFODELIVERY_NO_EDITING_CHANNELS'
,'URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS'
,'URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS'
,'URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS'
,'URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS'
,'URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING'
,'URLACTION_INFODELIVERY_CURR_MAX'
,'URLACTION_INFODELIVERY_MAX'
,'URLACTION_CHANNEL_SOFTDIST_MIN'
,'URLACTION_CHANNEL_SOFTDIST_PERMISSIONS'
,'URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT'
,'URLPOLICY_CHANNEL_SOFTDIST_PRECACHE'
,'URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL'
,'URLACTION_CHANNEL_SOFTDIST_MAX'
,'URLACTION_BEHAVIOR_MIN'
,'URLACTION_BEHAVIOR_RUN'
,'URLPOLICY_BEHAVIOR_CHECK_LIST'
,'URLACTION_FEATURE_MIN'
,'URLACTION_FEATURE_MIME_SNIFFING'
,'URLACTION_FEATURE_ZONE_ELEVATION'
,'URLACTION_FEATURE_WINDOW_RESTRICTIONS'
,'URLACTION_AUTOMATIC_DOWNLOAD_UI_MIN'
,'URLACTION_AUTOMATIC_DOWNLOAD_UI'
,'URLACTION_AUTOMATIC_ACTIVEX_UI'
,'URLACTION_ALLOW_RESTRICTEDPROTOCOLS'
,'URLPOLICY_ALLOW'
,'URLPOLICY_QUERY'
,'URLPOLICY_DISALLOW'
,'URLPOLICY_NOTIFY_ON_ALLOW'
,'URLPOLICY_NOTIFY_ON_DISALLOW'
,'URLPOLICY_LOG_ON_ALLOW'
,'URLPOLICY_LOG_ON_DISALLOW'
,'URLPOLICY_MASK_PERMISSIONS'
,'URLZONE_PREDEFINED_MIN'
,'URLZONE_LOCAL_MACHINE'
,'URLZONE_INTRANET'
,'URLZONE_TRUSTED'
,'URLZONE_INTERNET'
,'URLZONE_UNTRUSTED'
,'URLZONE_PREDEFINED_MAX'
,'URLZONE_USER_MIN'
,'URLZONE_USER_MAX'
,'URLTEMPLATE_CUSTOM'
,'URLTEMPLATE_PREDEFINED_MIN'
,'URLTEMPLATE_LOW'
,'URLTEMPLATE_MEDIUM'
,'URLTEMPLATE_HIGH'
,'URLTEMPLATE_PREDEFINED_MAX'
,'MAX_ZONE_PATH'
,'MAX_ZONE_DESCRIPTION'
,'ZAFLAGS_CUSTOM_EDIT'
,'ZAFLAGS_ADD_SITES'
,'ZAFLAGS_REQUIRE_VERIFICATION'
,'ZAFLAGS_INCLUDE_PROXY_OVERRIDE'
,'ZAFLAGS_INCLUDE_INTRANET_SITES'
,'ZAFLAGS_NO_UI'
,'ZAFLAGS_SUPPORTS_VERIFICATION'
,'ZAFLAGS_UNC_AS_INTRANET'
,'ZAFLAGS_USE_LOCKED_ZONES'
,'URLZONEREG_DEFAULT'
,'URLZONEREG_HKLM'
,'URLZONEREG_HKCU'
,'SOFTDIST_FLAG_USAGE_EMAIL'
,'SOFTDIST_FLAG_USAGE_PRECACHE'
,'SOFTDIST_FLAG_USAGE_AUTOINSTALL'
,'SOFTDIST_FLAG_DELETE_SUBSCRIPTION'
,'SOFTDIST_ADSTATE_NONE'
,'SOFTDIST_ADSTATE_AVAILABLE'
,'SOFTDIST_ADSTATE_DOWNLOADED'
,'SOFTDIST_ADSTATE_INSTALLED'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,MKSYS_URLMONIKER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,URLMON_OPTION_USERAGENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,URLMON_OPTION_USERAGENT_REFRESH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,URLMON_OPTION_URL_ENCODING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,URLMON_OPTION_USE_BINDSTRINGCREDS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,CF_NULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,CFSTR_MIME_NULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,CFSTR_MIME_TEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,CFSTR_MIME_RICHTEXT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,CFSTR_MIME_X_BITMAP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,CFSTR_MIME_POSTSCRIPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,CFSTR_MIME_AIFF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,CFSTR_MIME_BASICAUDIO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,CFSTR_MIME_WAV));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,CFSTR_MIME_X_WAV));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,CFSTR_MIME_GIF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,CFSTR_MIME_PJPEG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,CFSTR_MIME_JPEG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,CFSTR_MIME_TIFF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,CFSTR_MIME_X_PNG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,CFSTR_MIME_BMP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,CFSTR_MIME_X_ART));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,CFSTR_MIME_X_EMF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,CFSTR_MIME_X_WMF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,CFSTR_MIME_AVI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,CFSTR_MIME_MPEG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,CFSTR_MIME_FRACTALS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,CFSTR_MIME_RAWDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,CFSTR_MIME_RAWDATASTRM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,CFSTR_MIME_PDF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,CFSTR_MIME_X_AIFF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,CFSTR_MIME_X_REALAUDIO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,CFSTR_MIME_XBM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,CFSTR_MIME_QUICKTIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,CFSTR_MIME_X_MSVIDEO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,CFSTR_MIME_X_SGI_MOVIE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,CFSTR_MIME_HTML));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,MK_S_ASYNCHRONOUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,S_ASYNCHRONOUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,E_PENDING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,INET_E_INVALID_URL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,INET_E_NO_SESSION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[42] ,INET_E_CANNOT_CONNECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[43] ,INET_E_RESOURCE_NOT_FOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[44] ,INET_E_OBJECT_NOT_FOUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[45] ,INET_E_DATA_NOT_AVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[46] ,INET_E_DOWNLOAD_FAILURE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[47] ,INET_E_AUTHENTICATION_REQUIRED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[48] ,INET_E_NO_VALID_MEDIA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[49] ,INET_E_CONNECTION_TIMEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[50] ,INET_E_INVALID_REQUEST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[51] ,INET_E_UNKNOWN_PROTOCOL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[52] ,INET_E_SECURITY_PROBLEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[53] ,INET_E_CANNOT_LOAD_DATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[54] ,INET_E_CANNOT_INSTANTIATE_OBJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[55] ,INET_E_REDIRECT_FAILED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[56] ,INET_E_REDIRECT_TO_DIR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[57] ,INET_E_CANNOT_LOCK_REQUEST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[58] ,INET_E_USE_EXTEND_BINDING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[59] ,INET_E_TERMINATED_BIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[60] ,INET_E_CODE_DOWNLOAD_DECLINED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[61] ,INET_E_RESULT_DISPATCHED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[62] ,INET_E_CANNOT_REPLACE_SFP_FILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[63] ,INET_E_CODE_INSTALL_SUPPRESSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[64] ,INET_E_ERROR_FIRST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[65] ,BINDVERB_GET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[66] ,BINDVERB_POST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[67] ,BINDVERB_PUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[68] ,BINDVERB_CUSTOM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[69] ,BINDINFOF_URLENCODESTGMEDDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[70] ,BINDINFOF_URLENCODEDEXTRAINFO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[71] ,BINDF_ASYNCHRONOUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[72] ,BINDF_ASYNCSTORAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[73] ,BINDF_NOPROGRESSIVERENDERING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[74] ,BINDF_OFFLINEOPERATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[75] ,BINDF_GETNEWESTVERSION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[76] ,BINDF_NOWRITECACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[77] ,BINDF_NEEDFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[78] ,BINDF_PULLDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[79] ,BINDF_IGNORESECURITYPROBLEM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[80] ,BINDF_RESYNCHRONIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[81] ,BINDF_HYPERLINK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[82] ,BINDF_NO_UI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[83] ,BINDF_SILENTOPERATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[84] ,BINDF_PRAGMA_NO_CACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[85] ,BINDF_FREE_THREADED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[86] ,BINDF_DIRECT_READ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[87] ,BINDF_FORMS_SUBMIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[88] ,BINDF_GETFROMCACHE_IF_NET_FAIL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[89] ,BINDF_DONTUSECACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[90] ,BINDF_DONTPUTINCACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[91] ,BINDF_NOCOPYDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[92] ,BSCF_FIRSTDATANOTIFICATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[93] ,BSCF_INTERMEDIATEDATANOTIFICATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[94] ,BSCF_LASTDATANOTIFICATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[95] ,BSCF_DATAFULLYAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[96] ,BSCF_AVAILABLEDATASIZEUNKNOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[97] ,BINDSTATUS_FINDINGRESOURCE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[98] ,BINDSTATUS_CONNECTING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[99] ,BINDSTATUS_REDIRECTING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[100] ,BINDSTATUS_BEGINDOWNLOADDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[101] ,BINDSTATUS_DOWNLOADINGDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[102] ,BINDSTATUS_ENDDOWNLOADDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[103] ,BINDSTATUS_BEGINDOWNLOADCOMPONENTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[104] ,BINDSTATUS_INSTALLINGCOMPONENTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[105] ,BINDSTATUS_ENDDOWNLOADCOMPONENTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[106] ,BINDSTATUS_USINGCACHEDCOPY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[107] ,BINDSTATUS_SENDINGREQUEST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[108] ,BINDSTATUS_CLASSIDAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[109] ,BINDSTATUS_MIMETYPEAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[110] ,BINDSTATUS_CACHEFILENAMEAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[111] ,BINDSTATUS_BEGINSYNCOPERATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[112] ,BINDSTATUS_ENDSYNCOPERATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[113] ,BINDSTATUS_BEGINUPLOADDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[114] ,BINDSTATUS_UPLOADINGDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[115] ,BINDSTATUS_ENDUPLOADDATA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[116] ,BINDSTATUS_PROTOCOLCLASSID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[117] ,BINDSTATUS_ENCODING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[118] ,BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[119] ,BINDSTATUS_CLASSINSTALLLOCATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[120] ,BINDSTATUS_DECODING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[121] ,BINDSTATUS_LOADINGMIMEHANDLER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[122] ,BINDSTATUS_CONTENTDISPOSITIONATTACH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[123] ,BINDSTATUS_FILTERREPORTMIMETYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[124] ,BINDSTATUS_CLSIDCANINSTANTIATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[125] ,BINDSTATUS_IUNKNOWNAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[126] ,BINDSTATUS_DIRECTBIND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[127] ,BINDSTATUS_RAWMIMETYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[128] ,BINDSTATUS_PROXYDETECTING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[129] ,BINDSTATUS_ACCEPTRANGES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[130] ,BINDSTATUS_COOKIE_SENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[131] ,BINDSTATUS_COMPACT_POLICY_RECEIVED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[132] ,BINDSTATUS_COOKIE_SUPPRESSED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[133] ,BINDSTATUS_COOKIE_STATE_UNKNOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[134] ,BINDSTATUS_COOKIE_STATE_ACCEPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[135] ,BINDSTATUS_COOKIE_STATE_REJECT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[136] ,BINDSTATUS_COOKIE_STATE_PROMPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[137] ,BINDSTATUS_COOKIE_STATE_LEASH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[138] ,BINDSTATUS_COOKIE_STATE_DOWNGRADE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[139] ,BINDSTATUS_POLICY_HREF));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[140] ,BINDSTATUS_P3P_HEADER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[141] ,BINDSTATUS_SESSION_COOKIE_RECEIVED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[142] ,BINDSTATUS_PERSISTENT_COOKIE_RECEIVED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[143] ,BINDSTATUS_SESSION_COOKIES_ALLOWED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[144] ,BINDSTATUS_CACHECONTROL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[145] ,BINDSTATUS_CONTENTDISPOSITIONFILENAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[146] ,BINDSTATUS_MIMETEXTPLAINMISMATCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[147] ,BINDSTATUS_PUBLISHERAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[148] ,BINDSTATUS_DISPLAYNAMEAVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[149] ,CIP_DISK_FULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[150] ,CIP_ACCESS_DENIED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[151] ,CIP_NEWER_VERSION_EXISTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[152] ,CIP_OLDER_VERSION_EXISTS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[153] ,CIP_NAME_CONFLICT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[154] ,CIP_TRUST_VERIFICATION_COMPONENT_MISSING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[155] ,CIP_EXE_SELF_REGISTERATION_TIMEOUT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[156] ,CIP_UNSAFE_TO_ABORT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[157] ,CIP_NEED_REBOOT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[158] ,CIP_NEED_REBOOT_UI_PERMISSION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[159] ,WININETINFO_OPTION_LOCK_HANDLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[160] ,URLOSTRM_USECACHEDCOPY_ONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[161] ,URLOSTRM_USECACHEDCOPY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[162] ,URLOSTRM_GETNEWESTVERSION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[163] ,BINDSTRING_HEADERS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[164] ,BINDSTRING_ACCEPT_MIMES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[165] ,BINDSTRING_EXTRA_URL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[166] ,BINDSTRING_LANGUAGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[167] ,BINDSTRING_USERNAME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[168] ,BINDSTRING_PASSWORD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[169] ,BINDSTRING_UA_PIXELS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[170] ,BINDSTRING_UA_COLOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[171] ,BINDSTRING_OS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[172] ,BINDSTRING_USER_AGENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[173] ,BINDSTRING_ACCEPT_ENCODINGS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[174] ,BINDSTRING_POST_COOKIE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[175] ,BINDSTRING_POST_DATA_MIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[176] ,BINDSTRING_URL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[177] ,PI_PARSE_URL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[178] ,PI_FILTER_MODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[179] ,PI_FORCE_ASYNC));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[180] ,PI_USE_WORKERTHREAD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[181] ,PI_MIMEVERIFICATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[182] ,PI_CLSIDLOOKUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[183] ,PI_DATAPROGRESS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[184] ,PI_SYNCHRONOUS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[185] ,PI_APARTMENTTHREADED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[186] ,PI_CLASSINSTALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[187] ,PD_FORCE_SWITCH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[188] ,PI_DOCFILECLSIDLOOKUP));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[189] ,OIBDG_APARTMENTTHREADED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[190] ,PARSE_CANONICALIZE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[191] ,PARSE_FRIENDLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[192] ,PARSE_SECURITY_URL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[193] ,PARSE_ROOTDOCUMENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[194] ,PARSE_DOCUMENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[195] ,PARSE_ANCHOR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[196] ,PARSE_ENCODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[197] ,PARSE_DECODE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[198] ,PARSE_PATH_FROM_URL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[199] ,PARSE_URL_FROM_PATH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[200] ,PARSE_MIME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[201] ,PARSE_SERVER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[202] ,PARSE_SCHEMA));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[203] ,PARSE_SITE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[204] ,PARSE_DOMAIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[205] ,PARSE_LOCATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[206] ,PARSE_SECURITY_DOMAIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[207] ,PSU_DEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[208] ,PSU_SECURITY_URL_ONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[209] ,QUERY_EXPIRATION_DATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[210] ,QUERY_TIME_OF_LAST_CHANGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[211] ,QUERY_CONTENT_ENCODING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[212] ,QUERY_CONTENT_TYPE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[213] ,QUERY_REFRESH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[214] ,QUERY_RECOMBINE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[215] ,QUERY_CAN_NAVIGATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[216] ,QUERY_USES_NETWORK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[217] ,QUERY_IS_CACHED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[218] ,QUERY_IS_INSTALLEDENTRY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[219] ,QUERY_IS_CACHED_OR_MAPPED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[220] ,QUERY_USES_CACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[221] ,QUERY_IS_SECURE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[222] ,QUERY_IS_SAFE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[223] ,INET_E_USE_DEFAULT_PROTOCOLHANDLER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[224] ,INET_E_USE_DEFAULT_SETTING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[225] ,INET_E_DEFAULT_ACTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[226] ,INET_E_QUERYOPTION_UNKNOWN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[227] ,INET_E_REDIRECTING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[228] ,PROTOCOLFLAG_NO_PICS_CHECK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[229] ,MUTZ_NOSAVEDFILECHECK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[230] ,MUTZ_ISFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[231] ,MUTZ_ACCEPT_WILDCARD_SCHEME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[232] ,MUTZ_ENFORCERESTRICTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[233] ,MUTZ_REQUIRESAVEDFILECHECK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[234] ,MAX_SIZE_SECURITY_ID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[235] ,PUAF_DEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[236] ,PUAF_NOUI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[237] ,PUAF_ISFILE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[238] ,PUAF_WARN_IF_DENIED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[239] ,PUAF_FORCEUI_FOREGROUND));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[240] ,PUAF_CHECK_TIFS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[241] ,PUAF_DONTCHECKBOXINDIALOG));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[242] ,PUAF_TRUSTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[243] ,PUAF_ACCEPT_WILDCARD_SCHEME));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[244] ,PUAF_ENFORCERESTRICTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[245] ,PUAF_NOSAVEDFILECHECK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[246] ,PUAF_REQUIRESAVEDFILECHECK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[247] ,PUAF_LMZ_UNLOCKED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[248] ,PUAF_LMZ_LOCKED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[249] ,PUAF_DEFAULTZONEPOL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[250] ,PUAF_NPL_USE_LOCKED_IF_RESTRICTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[251] ,PUAF_NOUIIFLOCKED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[252] ,PUAFOUT_DEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[253] ,PUAFOUT_ISLOCKZONEPOLICY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[254] ,SZM_CREATE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[255] ,SZM_DELETE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[256] ,URLACTION_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[257] ,URLACTION_DOWNLOAD_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[258] ,URLACTION_DOWNLOAD_SIGNED_ACTIVEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[259] ,URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[260] ,URLACTION_DOWNLOAD_CURR_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[261] ,URLACTION_DOWNLOAD_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[262] ,URLACTION_ACTIVEX_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[263] ,URLACTION_ACTIVEX_RUN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[264] ,URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[265] ,URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[266] ,URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[267] ,URLACTION_SCRIPT_OVERRIDE_SAFETY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[268] ,URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[269] ,URLACTION_ACTIVEX_TREATASUNTRUSTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[270] ,URLACTION_ACTIVEX_NO_WEBOC_SCRIPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[271] ,URLACTION_ACTIVEX_CURR_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[272] ,URLACTION_ACTIVEX_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[273] ,URLACTION_SCRIPT_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[274] ,URLACTION_SCRIPT_RUN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[275] ,URLACTION_SCRIPT_JAVA_USE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[276] ,URLACTION_SCRIPT_SAFE_ACTIVEX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[277] ,URLACTION_SCRIPT_CURR_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[278] ,URLACTION_SCRIPT_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[279] ,URLACTION_HTML_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[280] ,URLACTION_HTML_SUBMIT_FORMS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[281] ,URLACTION_HTML_SUBMIT_FORMS_FROM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[282] ,URLACTION_HTML_SUBMIT_FORMS_TO));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[283] ,URLACTION_HTML_FONT_DOWNLOAD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[284] ,URLACTION_HTML_JAVA_RUN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[285] ,URLACTION_HTML_CURR_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[286] ,URLACTION_HTML_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[287] ,URLACTION_SHELL_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[288] ,URLACTION_SHELL_INSTALL_DTITEMS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[289] ,URLACTION_SHELL_MOVE_OR_COPY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[290] ,URLACTION_SHELL_FILE_DOWNLOAD));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[291] ,URLACTION_SHELL_VERB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[292] ,URLACTION_SHELL_WEBVIEW_VERB));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[293] ,URLACTION_SHELL_SHELLEXECUTE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[294] ,URLACTION_SHELL_EXECUTE_HIGHRISK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[295] ,URLACTION_SHELL_EXECUTE_MODRISK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[296] ,URLACTION_SHELL_EXECUTE_LOWRISK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[297] ,URLACTION_SHELL_POPUPMGR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[298] ,URLACTION_SHELL_CURR_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[299] ,URLACTION_SHELL_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[300] ,URLACTION_NETWORK_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[301] ,URLACTION_CREDENTIALS_USE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[302] ,URLPOLICY_CREDENTIALS_SILENT_LOGON_OK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[303] ,URLPOLICY_CREDENTIALS_MUST_PROMPT_USER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[304] ,URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[305] ,URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[306] ,URLACTION_AUTHENTICATE_CLIENT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[307] ,URLPOLICY_AUTHENTICATE_CLEARTEXT_OK));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[308] ,URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[309] ,URLPOLICY_AUTHENTICATE_MUTUAL_ONLY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[310] ,URLACTION_NETWORK_CURR_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[311] ,URLACTION_NETWORK_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[312] ,URLACTION_JAVA_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[313] ,URLACTION_JAVA_PERMISSIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[314] ,URLPOLICY_JAVA_PROHIBIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[315] ,URLPOLICY_JAVA_HIGH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[316] ,URLPOLICY_JAVA_MEDIUM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[317] ,URLPOLICY_JAVA_LOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[318] ,URLPOLICY_JAVA_CUSTOM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[319] ,URLACTION_JAVA_CURR_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[320] ,URLACTION_JAVA_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[321] ,URLACTION_INFODELIVERY_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[322] ,URLACTION_INFODELIVERY_NO_ADDING_CHANNELS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[323] ,URLACTION_INFODELIVERY_NO_EDITING_CHANNELS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[324] ,URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[325] ,URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[326] ,URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[327] ,URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[328] ,URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[329] ,URLACTION_INFODELIVERY_CURR_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[330] ,URLACTION_INFODELIVERY_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[331] ,URLACTION_CHANNEL_SOFTDIST_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[332] ,URLACTION_CHANNEL_SOFTDIST_PERMISSIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[333] ,URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[334] ,URLPOLICY_CHANNEL_SOFTDIST_PRECACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[335] ,URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[336] ,URLACTION_CHANNEL_SOFTDIST_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[337] ,URLACTION_BEHAVIOR_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[338] ,URLACTION_BEHAVIOR_RUN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[339] ,URLPOLICY_BEHAVIOR_CHECK_LIST));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[340] ,URLACTION_FEATURE_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[341] ,URLACTION_FEATURE_MIME_SNIFFING));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[342] ,URLACTION_FEATURE_ZONE_ELEVATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[343] ,URLACTION_FEATURE_WINDOW_RESTRICTIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[344] ,URLACTION_AUTOMATIC_DOWNLOAD_UI_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[345] ,URLACTION_AUTOMATIC_DOWNLOAD_UI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[346] ,URLACTION_AUTOMATIC_ACTIVEX_UI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[347] ,URLACTION_ALLOW_RESTRICTEDPROTOCOLS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[348] ,URLPOLICY_ALLOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[349] ,URLPOLICY_QUERY));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[350] ,URLPOLICY_DISALLOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[351] ,URLPOLICY_NOTIFY_ON_ALLOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[352] ,URLPOLICY_NOTIFY_ON_DISALLOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[353] ,URLPOLICY_LOG_ON_ALLOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[354] ,URLPOLICY_LOG_ON_DISALLOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[355] ,URLPOLICY_MASK_PERMISSIONS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[356] ,URLZONE_PREDEFINED_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[357] ,URLZONE_LOCAL_MACHINE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[358] ,URLZONE_INTRANET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[359] ,URLZONE_TRUSTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[360] ,URLZONE_INTERNET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[361] ,URLZONE_UNTRUSTED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[362] ,URLZONE_PREDEFINED_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[363] ,URLZONE_USER_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[364] ,URLZONE_USER_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[365] ,URLTEMPLATE_CUSTOM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[366] ,URLTEMPLATE_PREDEFINED_MIN));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[367] ,URLTEMPLATE_LOW));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[368] ,URLTEMPLATE_MEDIUM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[369] ,URLTEMPLATE_HIGH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[370] ,URLTEMPLATE_PREDEFINED_MAX));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[371] ,MAX_ZONE_PATH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[372] ,MAX_ZONE_DESCRIPTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[373] ,ZAFLAGS_CUSTOM_EDIT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[374] ,ZAFLAGS_ADD_SITES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[375] ,ZAFLAGS_REQUIRE_VERIFICATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[376] ,ZAFLAGS_INCLUDE_PROXY_OVERRIDE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[377] ,ZAFLAGS_INCLUDE_INTRANET_SITES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[378] ,ZAFLAGS_NO_UI));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[379] ,ZAFLAGS_SUPPORTS_VERIFICATION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[380] ,ZAFLAGS_UNC_AS_INTRANET));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[381] ,ZAFLAGS_USE_LOCKED_ZONES));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[382] ,URLZONEREG_DEFAULT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[383] ,URLZONEREG_HKLM));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[384] ,URLZONEREG_HKCU));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[385] ,SOFTDIST_FLAG_USAGE_EMAIL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[386] ,SOFTDIST_FLAG_USAGE_PRECACHE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[387] ,SOFTDIST_FLAG_USAGE_AUTOINSTALL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[388] ,SOFTDIST_FLAG_DELETE_SUBSCRIPTION));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[389] ,SOFTDIST_ADSTATE_NONE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[390] ,SOFTDIST_ADSTATE_AVAILABLE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[391] ,SOFTDIST_ADSTATE_DOWNLOADED));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[392] ,SOFTDIST_ADSTATE_INSTALLED));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..40] of string = (
'_REMSECURITY_ATTRIBUTES'
,'_tagBINDINFO'
,'_tagCODEBASEHOLD'
,'_tagDATAINFO'
,'_tagHIT_LOGGING_INFO'
,'_tagPROTOCOLDATA'
,'_tagPROTOCOLFILTERDATA'
,'_tagRemBINDINFO'
,'_tagSOFTDISTINFO'
,'_ZONEATTRIBUTES'
,'BINDINFO'
,'CODEBASEHOLD'
,'DATAINFO'
,'HIT_LOGGING_INFO'
,'PROTOCOLDATA'
,'PROTOCOLFILTERDATA'
,'RemBINDINFO'
,'RemFORMATETC'
,'REMSECURITY_ATTRIBUTES'
,'SOFTDISTINFO'
,'tagRemFORMATETC'
,'TBindInfo'
,'TCodeBaseHold'
,'TDataInfo'
,'THitLoggingInfo'
,'TProtocolData'
,'TProtocolFilterData'
,'TRemBindInfo'
,'TRemFormatEtc'
,'TRemSecurityAttributes'
,'TSoftDistInfo'
,'TZoneAttributes'
,'ZONEATTRIBUTES'
,'UrlMkSetSessionOption'
,'UrlMkGetSessionOption'
,'CopyStgMedium'
,'CopyBindInfo'
,'ReleaseBindInfo'
,'GetUrlPolicyPermissions'
,'SetUrlPolicyPermissions'
,'WriteHitLogging'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(__REMSECURITY_ATTRIBUTES_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(__tagBINDINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[2],Addr(__tagCODEBASEHOLD_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[3],Addr(__tagDATAINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[4],Addr(__tagHIT_LOGGING_INFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[5],Addr(__tagPROTOCOLDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[6],Addr(__tagPROTOCOLFILTERDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[7],Addr(__tagRemBINDINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[8],Addr(__tagSOFTDISTINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[9],Addr(__ZONEATTRIBUTES_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[10],Addr(_BINDINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[11],Addr(_CODEBASEHOLD_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[12],Addr(_DATAINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[13],Addr(_HIT_LOGGING_INFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[14],Addr(_PROTOCOLDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[15],Addr(_PROTOCOLFILTERDATA_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[16],Addr(_RemBINDINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[17],Addr(_RemFORMATETC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[18],Addr(_REMSECURITY_ATTRIBUTES_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[19],Addr(_SOFTDISTINFO_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[20],Addr(_tagRemFORMATETC_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[21],Addr(_TBindInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[22],Addr(_TCodeBaseHold_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[23],Addr(_TDataInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[24],Addr(_THitLoggingInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[25],Addr(_TProtocolData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[26],Addr(_TProtocolFilterData_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[27],Addr(_TRemBindInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[28],Addr(_TRemFormatEtc_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[29],Addr(_TRemSecurityAttributes_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[30],Addr(_TSoftDistInfo_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[31],Addr(_TZoneAttributes_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[32],Addr(_ZONEATTRIBUTES_)));
RegisterProc(nil,MethodNames[33],mtProc,TypeInfo(_T21),[
TypeInfo(DWORD),
TypeInfoPointer,
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(UrlMkSetSessionOption),cStdCall);

RegisterProc(nil,MethodNames[34],mtProc,TypeInfo(_T22),[
TypeInfo(DWORD),
TypeInfoPointer,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(UrlMkGetSessionOption),cStdCall);

RegisterProc(nil,MethodNames[35],mtProc,TypeInfo(_T58),[
TypeInfo(IDispatch),
TypeInfo(IDispatch),TypeInfo(HResult)],Addr(____CopyStgMedium__Wrapper),cRegister);

RegisterProc(nil,MethodNames[36],mtProc,TypeInfo(_T59),[
TypeInfo(IDispatch),
TypeInfo(IDispatch),TypeInfo(HResult)],Addr(____CopyBindInfo__Wrapper),cRegister);

RegisterProc(nil,MethodNames[37],mtProc,TypeInfo(_T60),[
TypeInfo(IDispatch)],Addr(____ReleaseBindInfo__Wrapper),cRegister);

RegisterProc(nil,MethodNames[38],mtProc,TypeInfo(_T61),[
TypeInfo(DWORD),TypeInfo(DWORD)],Addr(GetUrlPolicyPermissions),cRegister);

RegisterProc(nil,MethodNames[39],mtProc,TypeInfo(_T62),[
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(DWORD)],Addr(SetUrlPolicyPermissions),cRegister);

RegisterProc(nil,MethodNames[40],mtProc,TypeInfo(_T70),[
TypeInfo(IDispatch),TypeInfo(BOOL)],Addr(____WriteHitLogging__Wrapper),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
{RegisterProc(nil,'HlinkSimpleNavigateToString',mtProc,TypeInfo(_T0),[
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(IUnknown),
TypeInfo(IBindCtx),
TypeInfo(IBindStatusCallback),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(HlinkSimpleNavigateToString),cStdCall)}

{RegisterProc(nil,'HlinkSimpleNavigateToMoniker',mtProc,TypeInfo(_T1),[
TypeInfo(IMoniker),
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(IUnknown),
TypeInfo(IBindCtx),
TypeInfo(IBindStatusCallback),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(HlinkSimpleNavigateToMoniker),cStdCall)}

{RegisterProc(nil,'CreateURLMoniker',mtProc,TypeInfo(_T2),[
TypeInfo(IMoniker),
TypeInfoPWideChar,
TypeInfo(IMoniker),TypeInfo(HResult)],Addr(CreateURLMoniker),cStdCall)}

{RegisterProc(nil,'CreateAsyncBindCtx',mtProc,TypeInfo(_T4),[
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),
TypeInfo(IEnumFORMATETC),
TypeInfo(IBindCtx),TypeInfo(HResult)],Addr(CreateAsyncBindCtx),cStdCall)}

{RegisterProc(nil,'CreateAsyncBindCtxEx',mtProc,TypeInfo(_T5),[
TypeInfo(IBindCtx),
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),
TypeInfo(IEnumFORMATETC),
TypeInfo(IBindCtx),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(CreateAsyncBindCtxEx),cStdCall)}

{RegisterProc(nil,'MkParseDisplayNameEx',mtProc,TypeInfo(_T6),[
TypeInfo(IBindCtx),
TypeInfoPWideChar,
TypeInfo(ULONG),
TypeInfo(IMoniker),TypeInfo(HResult)],Addr(MkParseDisplayNameEx),cStdCall)}

{RegisterProc(nil,'RegisterBindStatusCallback',mtProc,TypeInfo(_T7),[
TypeInfo(IBindCtx),
TypeInfo(IBindStatusCallback),
TypeInfo(IBindStatusCallback),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(RegisterBindStatusCallback),cStdCall)}

{RegisterProc(nil,'RevokeBindStatusCallback',mtProc,TypeInfo(_T8),[
TypeInfo(IBindCtx),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(RevokeBindStatusCallback),cStdCall)}

{RegisterProc(nil,'IsValidURL',mtProc,TypeInfo(_T10),[
TypeInfo(IBindCtx),
TypeInfoPWideChar,
TypeInfo(DWORD),TypeInfo(HResult)],Addr(IsValidURL),cStdCall)}

{RegisterProc(nil,'IsAsyncMoniker',mtProc,TypeInfo(_T12),[
TypeInfo(IMoniker),TypeInfo(HResult)],Addr(IsAsyncMoniker),cStdCall)}

{RegisterProc(nil,'CreateURLBinding',mtProc,TypeInfo(_T13),[
TypeInfoPWideChar,
TypeInfo(IBindCtx),
TypeInfo(IBinding),TypeInfo(HResult)],Addr(CreateURLBinding),cStdCall)}

{RegisterProc(nil,'RegisterMediaTypes',mtProc,TypeInfo(_T14),[
TypeInfo(UINT),
TypeInfoPChar,
TypeInfo(TClipFormat),TypeInfo(HResult)],Addr(RegisterMediaTypes),cStdCall)}

{RegisterProc(nil,'FindMediaType',mtProc,TypeInfo(_T15),[
TypeInfoPChar,
TypeInfoPointer,TypeInfo(HResult)],Addr(FindMediaType),cStdCall)}

{RegisterProc(nil,'RegisterFormatEnumerator',mtProc,TypeInfo(_T17),[
TypeInfo(IBindCtx),
TypeInfo(IEnumFORMATETC),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(RegisterFormatEnumerator),cStdCall)}

{RegisterProc(nil,'RevokeFormatEnumerator',mtProc,TypeInfo(_T18),[
TypeInfo(IBindCtx),
TypeInfo(IEnumFORMATETC),TypeInfo(HResult)],Addr(RevokeFormatEnumerator),cStdCall)}

{RegisterProc(nil,'RegisterMediaTypeClass',mtProc,TypeInfo(_T19),[
TypeInfo(IBindCtx),
TypeInfo(UINT),
TypeInfoPChar,
TypeInfoPointer,
TypeInfo(DWORD),TypeInfo(HResult)],Addr(RegisterMediaTypeClass),cStdCall)}

{RegisterProc(nil,'FindMimeFromData',mtProc,TypeInfo(_T23),[
TypeInfo(IBindCtx),
TypeInfoPWideChar,
TypeInfoPointer,
TypeInfo(DWORD),
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfoPWideChar,
TypeInfo(DWORD),TypeInfo(HResult)],Addr(FindMimeFromData),cStdCall)}

{RegisterProc(nil,'ObtainUserAgentString',mtProc,TypeInfo(_T24),[
TypeInfo(DWORD),
TypeInfoPChar,
TypeInfo(DWORD),TypeInfo(HResult)],Addr(ObtainUserAgentString),cStdCall)}

{RegisterProc(nil,'URLOpenStream',mtProc,TypeInfo(_T25),[
TypeInfo(IUnknown),
TypeInfoPChar,
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLOpenStream),cStdCall)}

{RegisterProc(nil,'URLOpenStreamA',mtProc,TypeInfo(_T26),[
TypeInfo(IUnknown),
TypeInfoPChar,
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLOpenStreamA),cStdCall)}

{RegisterProc(nil,'URLOpenStreamW',mtProc,TypeInfo(_T27),[
TypeInfo(IUnknown),
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLOpenStreamW),cStdCall)}

{RegisterProc(nil,'URLOpenPullStream',mtProc,TypeInfo(_T28),[
TypeInfo(IUnknown),
TypeInfoPChar,
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLOpenPullStream),cStdCall)}

{RegisterProc(nil,'URLOpenPullStreamA',mtProc,TypeInfo(_T29),[
TypeInfo(IUnknown),
TypeInfoPChar,
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLOpenPullStreamA),cStdCall)}

{RegisterProc(nil,'URLOpenPullStreamW',mtProc,TypeInfo(_T30),[
TypeInfo(IUnknown),
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLOpenPullStreamW),cStdCall)}

{RegisterProc(nil,'URLDownloadToFile',mtProc,TypeInfo(_T31),[
TypeInfo(IUnknown),
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLDownloadToFile),cStdCall)}

{RegisterProc(nil,'URLDownloadToFileA',mtProc,TypeInfo(_T32),[
TypeInfo(IUnknown),
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLDownloadToFileA),cStdCall)}

{RegisterProc(nil,'URLDownloadToFileW',mtProc,TypeInfo(_T33),[
TypeInfo(IUnknown),
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLDownloadToFileW),cStdCall)}

{RegisterProc(nil,'URLDownloadToCacheFile',mtProc,TypeInfo(_T34),[
TypeInfo(IUnknown),
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLDownloadToCacheFile),cStdCall)}

{RegisterProc(nil,'URLDownloadToCacheFileA',mtProc,TypeInfo(_T35),[
TypeInfo(IUnknown),
TypeInfoPChar,
TypeInfoPChar,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLDownloadToCacheFileA),cStdCall)}

{RegisterProc(nil,'URLDownloadToCacheFileW',mtProc,TypeInfo(_T36),[
TypeInfo(IUnknown),
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLDownloadToCacheFileW),cStdCall)}

{RegisterProc(nil,'URLOpenBlockingStream',mtProc,TypeInfo(_T37),[
TypeInfo(IUnknown),
TypeInfoPChar,
TypeInfo(IStream),
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLOpenBlockingStream),cStdCall)}

{RegisterProc(nil,'URLOpenBlockingStreamA',mtProc,TypeInfo(_T38),[
TypeInfo(IUnknown),
TypeInfoPChar,
TypeInfo(IStream),
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLOpenBlockingStreamA),cStdCall)}

{RegisterProc(nil,'URLOpenBlockingStreamW',mtProc,TypeInfo(_T39),[
TypeInfo(IUnknown),
TypeInfoPWideChar,
TypeInfo(IStream),
TypeInfo(DWORD),
TypeInfo(IBindStatusCallback),TypeInfo(HResult)],Addr(URLOpenBlockingStreamW),cStdCall)}

{RegisterProc(nil,'HlinkGoBack',mtProc,TypeInfo(_T40),[
TypeInfo(IUnknown),TypeInfo(HResult)],Addr(HlinkGoBack),cStdCall)}

{RegisterProc(nil,'HlinkGoForward',mtProc,TypeInfo(_T41),[
TypeInfo(IUnknown),TypeInfo(HResult)],Addr(HlinkGoForward),cStdCall)}

{RegisterProc(nil,'HlinkNavigateString',mtProc,TypeInfo(_T42),[
TypeInfo(IUnknown),
TypeInfoPWideChar,TypeInfo(HResult)],Addr(HlinkNavigateString),cStdCall)}

{RegisterProc(nil,'HlinkNavigateMoniker',mtProc,TypeInfo(_T43),[
TypeInfo(IUnknown),
TypeInfo(IMoniker),TypeInfo(HResult)],Addr(HlinkNavigateMoniker),cStdCall)}

{RegisterProc(nil,'CoInternetParseUrl',mtProc,TypeInfo(_T44),[
TypeInfoPWideChar,
TypeInfo(TParseAction),
TypeInfo(DWORD),
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(CoInternetParseUrl),cStdCall)}

{RegisterProc(nil,'CoInternetCombineUrl',mtProc,TypeInfo(_T45),[
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(CoInternetCombineUrl),cStdCall)}

{RegisterProc(nil,'CoInternetCompareUrl',mtProc,TypeInfo(_T46),[
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(DWORD),TypeInfo(HResult)],Addr(CoInternetCompareUrl),cStdCall)}

{RegisterProc(nil,'CoInternetGetProtocolFlags',mtProc,TypeInfo(_T47),[
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(CoInternetGetProtocolFlags),cStdCall)}

{RegisterProc(nil,'CoInternetQueryInfo',mtProc,TypeInfo(_T48),[
TypeInfoPWideChar,
TypeInfo(TQueryOption),
TypeInfo(DWORD),
TypeInfoPointer,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(CoInternetQueryInfo),cStdCall)}

{RegisterProc(nil,'CoInternetGetSession',mtProc,TypeInfo(_T49),[
TypeInfo(DWORD),
TypeInfo(IInternetSession),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(CoInternetGetSession),cStdCall)}

{RegisterProc(nil,'CoInternetGetSecurityUrl',mtProc,TypeInfo(_T50),[
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(TPSUAction),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(CoInternetGetSecurityUrl),cStdCall)}

{RegisterProc(nil,'OInetParseUrl',mtProc,TypeInfo(_T51),[
TypeInfoPWideChar,
TypeInfo(TParseAction),
TypeInfo(DWORD),
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(OInetParseUrl),cStdCall)}

{RegisterProc(nil,'OInetCombineUrl',mtProc,TypeInfo(_T52),[
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(OInetCombineUrl),cStdCall)}

{RegisterProc(nil,'OInetCompareUrl',mtProc,TypeInfo(_T53),[
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(DWORD),TypeInfo(HResult)],Addr(OInetCompareUrl),cStdCall)}

{RegisterProc(nil,'OInetGetProtocolFlags',mtProc,TypeInfo(_T54),[
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(OInetGetProtocolFlags),cStdCall)}

{RegisterProc(nil,'OInetQueryInfo',mtProc,TypeInfo(_T55),[
TypeInfoPWideChar,
TypeInfo(TQueryOption),
TypeInfo(DWORD),
TypeInfoPointer,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(OInetQueryInfo),cStdCall)}

{RegisterProc(nil,'OInetGetSession',mtProc,TypeInfo(_T56),[
TypeInfo(DWORD),
TypeInfo(IInternetSession),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(OInetGetSession),cStdCall)}

{RegisterProc(nil,'OInetGetSecurityUrl',mtProc,TypeInfo(_T57),[
TypeInfoPWideChar,
TypeInfoPWideChar,
TypeInfo(TPSUAction),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(OInetGetSecurityUrl),cStdCall)}

{RegisterProc(nil,'CoInternetCreateSecurityManager',mtProc,TypeInfo(_T63),[
TypeInfo(IServiceProvider),
TypeInfo(IInternetSecurityManager),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(CoInternetCreateSecurityManager),cStdCall)}

{RegisterProc(nil,'CoInternetCreateZoneManager',mtProc,TypeInfo(_T64),[
TypeInfo(IServiceProvider),
TypeInfo(IInternetZoneManager),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(CoInternetCreateZoneManager),cStdCall)}

{RegisterProc(nil,'SetSoftwareUpdateAdvertisementState',mtProc,TypeInfo(_T66),[
TypeInfoPWideChar,
TypeInfo(DWORD),
TypeInfo(DWORD),
TypeInfo(DWORD),TypeInfo(HResult)],Addr(SetSoftwareUpdateAdvertisementState),cStdCall)}

{RegisterProc(nil,'IsLoggingEnabled',mtProc,TypeInfo(_T67),[
TypeInfoPChar,TypeInfo(BOOL)],Addr(IsLoggingEnabled),cStdCall)}

{RegisterProc(nil,'IsLoggingEnabledA',mtProc,TypeInfo(_T68),[
TypeInfoPChar,TypeInfo(BOOL)],Addr(IsLoggingEnabledA),cStdCall)}

{RegisterProc(nil,'IsLoggingEnabledW',mtProc,TypeInfo(_T69),[
TypeInfoPWideChar,TypeInfo(BOOL)],Addr(IsLoggingEnabledW),cStdCall)}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
