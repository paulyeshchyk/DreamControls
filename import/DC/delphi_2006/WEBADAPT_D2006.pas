{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit WEBADAPT_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  HTTPApp,
  WebComp,
  DB,
  SiteComp,
  SysUtils,
  WebContnrs,
  Contnrs,
  AdaptReq,
  HTTPProd,
  WebCntxt,
  WebSnapObjs,
  WebAdapt;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = procedure (p0 : TStrings;
p1 : TWebComponentList) of object;

_T1 = _T0;

_T2 = function (p0 : TWebComponentList;
const p1 : string): TComponent of object;

_T3 = _T2;

_T4 = function (p0 : TComponent): TComponent of object;

_T5 = procedure (p0 : string) of object;

_T6 = _T5;

_T7 = _T5;

_T8 = function (p0 : TComponent): string of object;

_T9 = function (const p0 : string): string of object;

_T10 = procedure (const p0 : string;
p1 : Integer;
p2 : Integer) of object;

_T11 = procedure (const p0 : string;
const p1 : string;
p2 : Integer) of object;

{_T12 = function : TComponentClass of object;}

_T13 = function : TObject of object;

_T14 = function : Integer of object;

_T15 = procedure  of object;

_T16 = _T15;

_T17 = procedure (p0 : TAdapterErrorsList;
p1 : Integer) of object;

_T18 = procedure (p0 : TObject) of object;

_T19 = procedure (p0 : TAdapterHiddenFieldsList;
p1 : Integer) of object;

_T20 = _T15;

_T21 = _T15;

_T22 = procedure (const p0 : string;
const p1 : string) of object;

_T23 = function (const p0 : string): TAdapterDisplayHTMLElementType of object;

_T24 = function (const p0 : string): TAdapterInputHTMLElementType of object;

_T25 = function (const p0 : string): TAdapterDisplayViewModeType of object;

_T26 = function : string of object;

_T27 = function : Boolean of object;

_T28 = _T26;

_T29 = _T27;

_T30 = _T27;

_T31 = _T27;

_T32 = _T27;

{_T33 = function : TObjectScripterClass of object;}

_T34 = _T14;

_T35 = _T26;

_T36 = _T14;

_T37 = procedure (const p0 : string) of object;

_T38 = _T26;

_T39 = _T26;

_T40 = function : Variant of object;

_T41 = procedure (p0 : Boolean) of object;

_T42 = _T27;

_T43 = _T26;

{_T44 = procedure (p0 : IActionRequest;
p1 : Integer) of object;}

_T45 = procedure (p0 : TAdapterErrorsList;
const p1 : string) of object;

_T46 = function (const p0 : string): TComponent of object;

_T47 = _T26;

{_T48 = function (p0 : TComponent;
p1 : TClass): Boolean of object;}

_T49 = procedure (const p0 : TComponent) of object;

_T50 = function : TWebComponentList of object;

_T51 = _T14;

_T52 = function (p0 : Integer): Variant of object;

{_T53 = procedure (p0 : IActionFieldValue;
var p1 : Boolean) of object;}

_T54 = _T27;

{_T55 = function (p0 : IActionFieldValue;
p1 : Integer): Variant of object;}

{_T56 = function (p0 : IActionFieldValue): Variant of object;}

{_T57 = function (p0 : IActionFieldValue): Integer of object;}

{_T58 = function (p0 : IActionRequest;
p1 : Integer): Boolean of object;}

{_T59 = procedure (p0 : IActionRequest;
p1 : Integer) of object;}

{_T60 = procedure (p0 : IActionRequest;
p1 : Integer) of object;}

_T61 = _T26;

{_T62 = procedure (p0 : IActionRequest;
p1 : IActionResponse) of object;}

{_T63 = procedure (p0 : IActionRequest;
p1 : IActionResponse) of object;}

{_T64 = procedure (p0 : IActionRequest;
p1 : IActionResponse) of object;}

{_T65 = procedure (p0 : IActionRequest;
p1 : IActionResponse) of object;}

{_T66 = procedure (p0 : IActionRequest;
p1 : IActionResponse) of object;}

{_T67 = procedure (p0 : IActionRequest;
p1 : IActionResponse) of object;}

_T68 = _T14;

_T69 = _T14;

_T70 = _T27;

_T71 = function (p0 : TObject): Boolean of object;

_T72 = _T27;

_T73 = _T27;

_T74 = function (const p0 : string): TAdapterActionHTMLElementType of object;

_T75 = _T25;

_T76 = function : TAdapterActionRedirectOptions of object;

_T77 = _T76;

{_T78 = function (p0 : IAdapterDispatchParams): Boolean of object;}

_T79 = _T27;

{_T80 = function : TObjectScripterClass of object;}

_T81 = _T26;

{_T82 = procedure (var p0 : string;
p1 : IAdapterItemRequestParams) of object;}

_T83 = _T27;

_T84 = _T26;

_T85 = _T26;

_T86 = _T15;

_T87 = _T14;

{_T88 = function (p0 : Integer): IAdapterError of object;}

_T89 = function (const p0 : string): Boolean of object;

_T90 = function (const p0 : string): TObject of object;

_T91 = _T22;

_T92 = _T22;

_T93 = _T15;

_T94 = procedure (p0 : Exception;
const p1 : string) of object;

_T95 = _T40;

_T96 = function (const p0 : Variant): Boolean of object;

_T97 = function : TComponent of object;

_T98 = _T40;

_T99 = _T15;

_T100 = _T27;

_T101 = _T15;

_T102 = _T27;

_T103 = procedure (p0 : Variant) of object;

_T104 = _T27;

_T105 = _T26;

_T106 = _T27;

{_T107 = function (p0 : TEndUserRightsEvent;
const p1 : string): Boolean of object;}

_T108 = _T26;

_T109 = _T27;

_T110 = _T97;

_T111 = _T97;

_T112 = _T103;

_T113 = _T27;

_T114 = function (p0 : string): Boolean of object;

_T115 = _T114;

_T116 = _T114;

{_T117 = function : TComponentClass of object;}

{_T118 = function : TComponentClass of object;}

_T119 = _T40;

_T120 = _T26;

_T121 = function (p0 : Variant): TComponent of object;

_T122 = _T97;

_T123 = function (p0 : Variant): string of object;

_T124 = function : TBaseAdapterErrorsList of object;

{_T125 = procedure (p0 : IUnknown) of object;}

{_T126 = procedure (p0 : IAdapterItemRequestParams) of object;}

{_T127 = procedure (p0 : IActionRequest;
p1 : TObjectList) of object;}

{_T128 = procedure (p0 : IActionRequest;
p1 : TObjectList) of object;}

{_T129 = function (p0 : IActionRequest;
p1 : TObjectList): Boolean of object;}

{_T130 = function (p0 : IActionRequest;
p1 : TObjectList): Boolean of object;}

{_T131 = procedure (p0 : IActionRequest;
p1 : TObjectList) of object;}

{_T132 = procedure (p0 : IActionRequest;
p1 : TObjectList) of object;}

{_T133 = procedure (p0 : IActionRequest;
p1 : TObjectList) of object;}

_T134 = function : TAdapterHiddenFieldOptions of object;

{_T135 = function : TAdapterActionsClass of object;}

{_T136 = function : TAdapterFieldsClass of object;}

_T137 = _T27;

_T138 = _T27;

_T139 = _T27;

_T140 = _T41;

_T141 = _T27;

_T142 = procedure (const p0 : TAdapterSubComponent) of object;

_T143 = _T142;

_T144 = _T142;

_T145 = _T15;

_T146 = _T14;

_T147 = _T27;

_T148 = function (var p0 : Pointer): Boolean of object;

_T149 = _T148;

_T150 = procedure (p0 : Pointer) of object;

{_T151 = function (p0 : TComponent;
p1 : TClass): Boolean of object;}

{_T152 = function (p0 : TComponent;
p1 : TClass): Boolean of object;}

_T153 = _T15;

_T154 = _T15;

_T155 = _T26;

_T156 = _T46;

_T157 = _T46;

_T158 = _T46;

_T159 = _T14;

_T160 = function (p0 : Integer): TComponent of object;

_T161 = procedure (p0 : TStrings) of object;

_T162 = _T50;

{_T163 = function : TObjectScripterClass of object;}

_T164 = _T161;

_T165 = _T50;

_T167 = _T96;

{_T168 = procedure (p0 : IImageRequest;
p1 : IImageResponse) of object;}

{_T169 = function (p0 : IAdapterDispatchParams): Boolean of object;}

_T170 = function (var p0 : string): Boolean of object;

_T171 = function (var p0 : Integer): Boolean of object;

_T172 = _T26;

_T173 = _T15;

_T174 = procedure (p0 : TWebComponentList) of object;

_T175 = _T174;

_T176 = _T27;

_T177 = _T27;

_T178 = _T27;

_T179 = _T14;

_T180 = _T14;

_T181 = procedure (p0 : TComponent;
p1 : TObject) of object;

_T182 = _T26;

{_T183 = procedure (p0 : IActionFieldValue) of object;}

procedure __TBaseAdapterErrorsList__AddError__Wrapper(__Instance : TBaseAdapterErrorsList;
p0 : Exception;
const p1 : string);
begin
TBaseAdapterErrorsList(__Instance).AddError(p0,p1);
end;

function __DC__GetEAdapterException__ID(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := EAdapterException(Instance).ID;
end;

procedure __DC__SetEAdapterException__ID(Instance : TObject; Params : PVariantArgList);
begin
EAdapterException(Instance).ID:=OleVariant(Params^[0]);
end;

function __DC__GetEAdapterFieldException__FieldName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := EAdapterFieldException(Instance).FieldName;
end;

procedure __DC__SetEAdapterFieldException__FieldName(Instance : TObject; Params : PVariantArgList);
begin
EAdapterFieldException(Instance).FieldName:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterActions__WebActions(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAdapterActions(Instance).WebActions);
end;

function __DC__GetTAdapterDefaultActions__DefaultWebComponents(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAdapterDefaultActions(Instance).DefaultWebComponents);
end;

function __DC__GetTAdapterDefaultFields__DefaultWebComponents(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAdapterDefaultFields(Instance).DefaultWebComponents);
end;

function __DC__GetTAdapterErrorsList__Messages(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterErrorsList(Instance).Messages[OleVariant(Params^[0])];
end;

function __DC__GetTAdapterErrorsList__IDs(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterErrorsList(Instance).IDs[OleVariant(Params^[0])];
end;

function __DC__GetTAdapterErrorsList__FieldNames(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterErrorsList(Instance).FieldNames[OleVariant(Params^[0])];
end;

function __DC__GetTAdapterFields__WebFields(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAdapterFields(Instance).WebFields);
end;

function __DC__GetTAdapterLoginField__Adapter(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAdapterLoginField(Instance).Adapter);
end;

function __DC__GetTAdapterNamedDisplayField__DisplayLabel(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterNamedDisplayField(Instance).DisplayLabel;
end;

procedure __DC__SetTAdapterNamedDisplayField__DisplayLabel(Instance : TObject; Params : PVariantArgList);
begin
TAdapterNamedDisplayField(Instance).DisplayLabel:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterNamedDisplayField__DisplayWidth(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterNamedDisplayField(Instance).DisplayWidth;
end;

procedure __DC__SetTAdapterNamedDisplayField__DisplayWidth(Instance : TObject; Params : PVariantArgList);
begin
TAdapterNamedDisplayField(Instance).DisplayWidth:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterNamedDisplayField__Required(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterNamedDisplayField(Instance).Required;
end;

procedure __DC__SetTAdapterNamedDisplayField__Required(Instance : TObject; Params : PVariantArgList);
begin
TAdapterNamedDisplayField(Instance).Required:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterNamedDisplayField__ReadOnly(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterNamedDisplayField(Instance).ReadOnly;
end;

procedure __DC__SetTAdapterNamedDisplayField__ReadOnly(Instance : TObject; Params : PVariantArgList);
begin
TAdapterNamedDisplayField(Instance).ReadOnly:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterNamedField__FieldName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterNamedField(Instance).FieldName;
end;

procedure __DC__SetTAdapterNamedField__FieldName(Instance : TObject; Params : PVariantArgList);
begin
TAdapterNamedField(Instance).FieldName:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterNamedField__Value(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterNamedField(Instance).Value;
end;

function __DC__GetTAdapterNamedField__ViewAccess(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterNamedField(Instance).ViewAccess;
end;

procedure __DC__SetTAdapterNamedField__ViewAccess(Instance : TObject; Params : PVariantArgList);
begin
TAdapterNamedField(Instance).ViewAccess:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterNamedField__ModifyAccess(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterNamedField(Instance).ModifyAccess;
end;

procedure __DC__SetTAdapterNamedField__ModifyAccess(Instance : TObject; Params : PVariantArgList);
begin
TAdapterNamedField(Instance).ModifyAccess:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterNamedField__EchoActionFieldValue(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterNamedField(Instance).EchoActionFieldValue;
end;

procedure __DC__SetTAdapterNamedField__EchoActionFieldValue(Instance : TObject; Params : PVariantArgList);
begin
TAdapterNamedField(Instance).EchoActionFieldValue:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterUpdateField__Value(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterUpdateField(Instance).Value;
end;

function __DC__GetTBaseAdapterAction__ActionName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TBaseAdapterAction(Instance).ActionName;
end;

function __DC__GetTBaseAdapterAction__ExecuteAccess(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TBaseAdapterAction(Instance).ExecuteAccess;
end;

procedure __DC__SetTBaseAdapterAction__ExecuteAccess(Instance : TObject; Params : PVariantArgList);
begin
TBaseAdapterAction(Instance).ExecuteAccess:=OleVariant(Params^[0]);
end;

function __DC__GetTBaseAdapterAction__DisplayLabel(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TBaseAdapterAction(Instance).DisplayLabel;
end;

procedure __DC__SetTBaseAdapterAction__DisplayLabel(Instance : TObject; Params : PVariantArgList);
begin
TBaseAdapterAction(Instance).DisplayLabel:=OleVariant(Params^[0]);
end;

function __DC__GetTBaseAdapterAction__RedirectOptions(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
  tmp : TAdapterActionRedirectOptions;
begin
tmp := TBaseAdapterAction(Instance).RedirectOptions;
result := VarFromSet(tmp, sizeof(tmp));
end;

procedure __DC__SetTBaseAdapterAction__RedirectOptions(Instance : TObject; Params : PVariantArgList);
var
  tmp : TAdapterActionRedirectOptions;
begin
VarToSet(tmp, sizeof(tmp), Variant(Params^[0]));
TBaseAdapterAction(Instance).RedirectOptions:=tmp;
end;

function __DC__GetTBaseAdapterAction__ItemCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TBaseAdapterAction(Instance).ItemCount;
end;

function __DC__GetTBaseAdapterAction__ItemIndex(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TBaseAdapterAction(Instance).ItemIndex;
end;

function __DC__GetTBaseAdapterErrorsList__ErrorCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TBaseAdapterErrorsList(Instance).ErrorCount;
end;

function __DC__GetTBaseEndUserAdapter__LoginPage(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TBaseEndUserAdapter(Instance).LoginPage;
end;

procedure __DC__SetTBaseEndUserAdapter__LoginPage(Instance : TObject; Params : PVariantArgList);
begin
TBaseEndUserAdapter(Instance).LoginPage:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapter__Data(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomAdapter(Instance).Data);
end;

function __DC__GetTCustomAdapter__Actions(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomAdapter(Instance).Actions);
end;

function __DC__GetTCustomAdapter__Errors(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomAdapter(Instance).Errors);
end;

function __DC__GetTCustomAdapter__EchoActionFieldValues(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapter(Instance).EchoActionFieldValues;
end;

procedure __DC__SetTCustomAdapter__EchoActionFieldValues(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapter(Instance).EchoActionFieldValues:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapter__ViewAccess(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapter(Instance).ViewAccess;
end;

procedure __DC__SetTCustomAdapter__ViewAccess(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapter(Instance).ViewAccess:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapter__ModifyAccess(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapter(Instance).ModifyAccess;
end;

procedure __DC__SetTCustomAdapter__ModifyAccess(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapter(Instance).ModifyAccess:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapter__ExecuteAccess(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapter(Instance).ExecuteAccess;
end;

procedure __DC__SetTCustomAdapter__ExecuteAccess(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapter(Instance).ExecuteAccess:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterAction__ActionName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterAction(Instance).ActionName;
end;

procedure __DC__SetTCustomAdapterAction__ActionName(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterAction(Instance).ActionName:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterFileField__FileCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterFileField(Instance).FileCount;
end;

function __DC__GetTCustomAdapterFileField__FileNames(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterFileField(Instance).FileNames[OleVariant(Params^[0])];
end;

function __DC__GetTCustomAdapterImageField__HREF(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterImageField(Instance).HREF;
end;

procedure __DC__SetTCustomAdapterImageField__HREF(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterImageField(Instance).HREF:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterImageField__ReadOnly(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterImageField(Instance).ReadOnly;
end;

procedure __DC__SetTCustomAdapterImageField__ReadOnly(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterImageField(Instance).ReadOnly:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterMultiValueField__ValueCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterMultiValueField(Instance).ValueCount;
end;

function __DC__GetTCustomAdapterMultiValueField__Values(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterMultiValueField(Instance).Values[OleVariant(Params^[0])];
end;

function __DC__GetTCustomApplicationAdapter__ApplicationTitle(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomApplicationAdapter(Instance).ApplicationTitle;
end;

procedure __DC__SetTCustomApplicationAdapter__ApplicationTitle(Instance : TObject; Params : PVariantArgList);
begin
TCustomApplicationAdapter(Instance).ApplicationTitle:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomEndUserSessionAdapter__UserID(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomEndUserSessionAdapter(Instance).UserID;
end;

procedure __DC__SetTCustomEndUserSessionAdapter__UserID(Instance : TObject; Params : PVariantArgList);
begin
TCustomEndUserSessionAdapter(Instance).UserID:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomLoginFormAdapter__NextPage(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomLoginFormAdapter(Instance).NextPage;
end;

procedure __DC__SetTCustomLoginFormAdapter__NextPage(Instance : TObject; Params : PVariantArgList);
begin
TCustomLoginFormAdapter(Instance).NextPage:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomLoginFormAdapter__PasswordRequired(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomLoginFormAdapter(Instance).PasswordRequired;
end;

procedure __DC__SetTCustomLoginFormAdapter__PasswordRequired(Instance : TObject; Params : PVariantArgList);
begin
TCustomLoginFormAdapter(Instance).PasswordRequired:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomLoginFormAdapter__Password(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomLoginFormAdapter(Instance).Password;
end;

function __DC__GetTCustomLoginFormAdapter__UserName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomLoginFormAdapter(Instance).UserName;
end;

function __DC__GetTCustomStringsValuesList__Strings(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomStringsValuesList(Instance).Strings);
end;

procedure __DC__SetTCustomStringsValuesList__Strings(Instance : TObject; Params : PVariantArgList);
begin
TCustomStringsValuesList(Instance).Strings:=TStrings(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTDefaultFieldsAdapter__Data(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDefaultFieldsAdapter(Instance).Data);
end;

function __DC__GetTDefaultFieldsAdapter__Actions(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDefaultFieldsAdapter(Instance).Actions);
end;

function __DC__GetTDefaultFieldsPagedAdapter__PageSize(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDefaultFieldsPagedAdapter(Instance).PageSize;
end;

procedure __DC__SetTDefaultFieldsPagedAdapter__PageSize(Instance : TObject; Params : PVariantArgList);
begin
TDefaultFieldsPagedAdapter(Instance).PageSize:=OleVariant(Params^[0]);
end;

function __DC__GetTDefaultFieldsPagedAdapter__PageCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDefaultFieldsPagedAdapter(Instance).PageCount;
end;

function __DC__GetTDefaultFieldsPagedAdapter__CurrentPage(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDefaultFieldsPagedAdapter(Instance).CurrentPage;
end;

procedure __DC__SetTDefaultFieldsPagedAdapter__CurrentPage(Instance : TObject; Params : PVariantArgList);
begin
TDefaultFieldsPagedAdapter(Instance).CurrentPage:=OleVariant(Params^[0]);
end;

function __DC__GetTDefaultFieldsPagedAdapter__RecordIndex(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDefaultFieldsPagedAdapter(Instance).RecordIndex;
end;

function __DC__GetTDefaultFieldsPagedAdapter__RecordCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TDefaultFieldsPagedAdapter(Instance).RecordCount;
end;

function __DC__GetTUpdateFileList__Count(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TUpdateFileList(Instance).Count;
end;

function __DC__GetTUpdateFileList__Files(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TUpdateFileList(Instance).Files[OleVariant(Params^[0])]);
end;

procedure __RegisterProps;
begin
RegisterProperty(EAdapterException,'ID',__DC__GetEAdapterException__ID,__DC__SetEAdapterException__ID);
RegisterProperty(EAdapterFieldException,'FieldName',__DC__GetEAdapterFieldException__FieldName,__DC__SetEAdapterFieldException__FieldName);
RegisterProperty(TAdapterActions,'WebActions',__DC__GetTAdapterActions__WebActions,nil);
RegisterProperty(TAdapterDefaultActions,'DefaultWebComponents',__DC__GetTAdapterDefaultActions__DefaultWebComponents,nil);
RegisterProperty(TAdapterDefaultFields,'DefaultWebComponents',__DC__GetTAdapterDefaultFields__DefaultWebComponents,nil);
RegisterIndexedProperty(TAdapterErrorsList,'Messages',1,False,__DC__GetTAdapterErrorsList__Messages,nil);
RegisterIndexedProperty(TAdapterErrorsList,'IDs',1,False,__DC__GetTAdapterErrorsList__IDs,nil);
RegisterIndexedProperty(TAdapterErrorsList,'FieldNames',1,False,__DC__GetTAdapterErrorsList__FieldNames,nil);
RegisterProperty(TAdapterFields,'WebFields',__DC__GetTAdapterFields__WebFields,nil);
RegisterProperty(TAdapterLoginField,'Adapter',__DC__GetTAdapterLoginField__Adapter,nil);
RegisterProperty(TAdapterNamedDisplayField,'DisplayLabel',__DC__GetTAdapterNamedDisplayField__DisplayLabel,__DC__SetTAdapterNamedDisplayField__DisplayLabel);
RegisterProperty(TAdapterNamedDisplayField,'DisplayWidth',__DC__GetTAdapterNamedDisplayField__DisplayWidth,__DC__SetTAdapterNamedDisplayField__DisplayWidth);
RegisterProperty(TAdapterNamedDisplayField,'Required',__DC__GetTAdapterNamedDisplayField__Required,__DC__SetTAdapterNamedDisplayField__Required);
RegisterProperty(TAdapterNamedDisplayField,'ReadOnly',__DC__GetTAdapterNamedDisplayField__ReadOnly,__DC__SetTAdapterNamedDisplayField__ReadOnly);
RegisterProperty(TAdapterNamedField,'FieldName',__DC__GetTAdapterNamedField__FieldName,__DC__SetTAdapterNamedField__FieldName);
RegisterProperty(TAdapterNamedField,'Value',__DC__GetTAdapterNamedField__Value,nil);
RegisterProperty(TAdapterNamedField,'ViewAccess',__DC__GetTAdapterNamedField__ViewAccess,__DC__SetTAdapterNamedField__ViewAccess);
RegisterProperty(TAdapterNamedField,'ModifyAccess',__DC__GetTAdapterNamedField__ModifyAccess,__DC__SetTAdapterNamedField__ModifyAccess);
RegisterProperty(TAdapterNamedField,'EchoActionFieldValue',__DC__GetTAdapterNamedField__EchoActionFieldValue,__DC__SetTAdapterNamedField__EchoActionFieldValue);
RegisterProperty(TAdapterUpdateField,'Value',__DC__GetTAdapterUpdateField__Value,nil);
RegisterProperty(TBaseAdapterAction,'ActionName',__DC__GetTBaseAdapterAction__ActionName,nil);
RegisterProperty(TBaseAdapterAction,'ExecuteAccess',__DC__GetTBaseAdapterAction__ExecuteAccess,__DC__SetTBaseAdapterAction__ExecuteAccess);
RegisterProperty(TBaseAdapterAction,'DisplayLabel',__DC__GetTBaseAdapterAction__DisplayLabel,__DC__SetTBaseAdapterAction__DisplayLabel);
RegisterProperty(TBaseAdapterAction,'RedirectOptions',__DC__GetTBaseAdapterAction__RedirectOptions,__DC__SetTBaseAdapterAction__RedirectOptions);
RegisterProperty(TBaseAdapterAction,'ItemCount',__DC__GetTBaseAdapterAction__ItemCount,nil);
RegisterProperty(TBaseAdapterAction,'ItemIndex',__DC__GetTBaseAdapterAction__ItemIndex,nil);
RegisterProperty(TBaseAdapterErrorsList,'ErrorCount',__DC__GetTBaseAdapterErrorsList__ErrorCount,nil);
RegisterProperty(TBaseEndUserAdapter,'LoginPage',__DC__GetTBaseEndUserAdapter__LoginPage,__DC__SetTBaseEndUserAdapter__LoginPage);
RegisterProperty(TCustomAdapter,'Data',__DC__GetTCustomAdapter__Data,nil);
RegisterProperty(TCustomAdapter,'Actions',__DC__GetTCustomAdapter__Actions,nil);
RegisterProperty(TCustomAdapter,'Errors',__DC__GetTCustomAdapter__Errors,nil);
RegisterProperty(TCustomAdapter,'EchoActionFieldValues',__DC__GetTCustomAdapter__EchoActionFieldValues,__DC__SetTCustomAdapter__EchoActionFieldValues);
RegisterProperty(TCustomAdapter,'ViewAccess',__DC__GetTCustomAdapter__ViewAccess,__DC__SetTCustomAdapter__ViewAccess);
RegisterProperty(TCustomAdapter,'ModifyAccess',__DC__GetTCustomAdapter__ModifyAccess,__DC__SetTCustomAdapter__ModifyAccess);
RegisterProperty(TCustomAdapter,'ExecuteAccess',__DC__GetTCustomAdapter__ExecuteAccess,__DC__SetTCustomAdapter__ExecuteAccess);
RegisterProperty(TCustomAdapterAction,'ActionName',__DC__GetTCustomAdapterAction__ActionName,__DC__SetTCustomAdapterAction__ActionName);
RegisterProperty(TCustomAdapterFileField,'FileCount',__DC__GetTCustomAdapterFileField__FileCount,nil);
RegisterIndexedProperty(TCustomAdapterFileField,'FileNames',1,False,__DC__GetTCustomAdapterFileField__FileNames,nil);
RegisterProperty(TCustomAdapterImageField,'HREF',__DC__GetTCustomAdapterImageField__HREF,__DC__SetTCustomAdapterImageField__HREF);
RegisterProperty(TCustomAdapterImageField,'ReadOnly',__DC__GetTCustomAdapterImageField__ReadOnly,__DC__SetTCustomAdapterImageField__ReadOnly);
RegisterProperty(TCustomAdapterMultiValueField,'ValueCount',__DC__GetTCustomAdapterMultiValueField__ValueCount,nil);
RegisterIndexedProperty(TCustomAdapterMultiValueField,'Values',1,False,__DC__GetTCustomAdapterMultiValueField__Values,nil);
RegisterProperty(TCustomApplicationAdapter,'ApplicationTitle',__DC__GetTCustomApplicationAdapter__ApplicationTitle,__DC__SetTCustomApplicationAdapter__ApplicationTitle);
RegisterProperty(TCustomEndUserSessionAdapter,'UserID',__DC__GetTCustomEndUserSessionAdapter__UserID,__DC__SetTCustomEndUserSessionAdapter__UserID);
RegisterProperty(TCustomLoginFormAdapter,'NextPage',__DC__GetTCustomLoginFormAdapter__NextPage,__DC__SetTCustomLoginFormAdapter__NextPage);
RegisterProperty(TCustomLoginFormAdapter,'PasswordRequired',__DC__GetTCustomLoginFormAdapter__PasswordRequired,__DC__SetTCustomLoginFormAdapter__PasswordRequired);
RegisterProperty(TCustomLoginFormAdapter,'Password',__DC__GetTCustomLoginFormAdapter__Password,nil);
RegisterProperty(TCustomLoginFormAdapter,'UserName',__DC__GetTCustomLoginFormAdapter__UserName,nil);
RegisterProperty(TCustomStringsValuesList,'Strings',__DC__GetTCustomStringsValuesList__Strings,__DC__SetTCustomStringsValuesList__Strings);
RegisterProperty(TDefaultFieldsAdapter,'Data',__DC__GetTDefaultFieldsAdapter__Data,nil);
RegisterProperty(TDefaultFieldsAdapter,'Actions',__DC__GetTDefaultFieldsAdapter__Actions,nil);
RegisterProperty(TDefaultFieldsPagedAdapter,'PageSize',__DC__GetTDefaultFieldsPagedAdapter__PageSize,__DC__SetTDefaultFieldsPagedAdapter__PageSize);
RegisterProperty(TDefaultFieldsPagedAdapter,'PageCount',__DC__GetTDefaultFieldsPagedAdapter__PageCount,nil);
RegisterProperty(TDefaultFieldsPagedAdapter,'CurrentPage',__DC__GetTDefaultFieldsPagedAdapter__CurrentPage,__DC__SetTDefaultFieldsPagedAdapter__CurrentPage);
RegisterProperty(TDefaultFieldsPagedAdapter,'RecordIndex',__DC__GetTDefaultFieldsPagedAdapter__RecordIndex,nil);
RegisterProperty(TDefaultFieldsPagedAdapter,'RecordCount',__DC__GetTDefaultFieldsPagedAdapter__RecordCount,nil);
RegisterProperty(TUpdateFileList,'Count',__DC__GetTUpdateFileList__Count,nil);
RegisterIndexedProperty(TUpdateFileList,'Files',1,False,__DC__GetTUpdateFileList__Files,nil);
end;

const __ConstNames0 : array[0..13] of string = (
'itStart'
,'itNext'
,'itEnd'
,'hoOrigValues'
,'hoMode'
,'hoRecordKeys'
,'sImageRequest'
,'sActionRequestLong'
,'sCurrentPage'
,'sNextPageAction'
,'sPrevPageAction'
,'sGotoPageAction'
,'sLoginUserName'
,'sLoginPassword'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,itStart));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,itNext));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,itEnd));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,hoOrigValues));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,hoMode));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,hoRecordKeys));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,sImageRequest));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,sActionRequestLong));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,sCurrentPage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,sNextPageAction));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,sPrevPageAction));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,sGotoPageAction));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,sLoginUserName));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,sLoginPassword));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..81] of TClass = (
EAdapterException,
EAdapterFieldException,
TAbstractFieldValuesAdapter,
TAbstractWebRequestFile,
TAdapter,
TAdapterAction,
TAdapterActions,
TAdapterApplicationField,
TAdapterApplicationTitleField,
TAdapterBooleanField,
TAdapterDefaultActions,
TAdapterDefaultFields,
TAdapterEndUserDisplayNameField,
TAdapterEndUserField,
TAdapterEndUserLoggedInField,
TAdapterError,
TAdapterErrorsList,
TAdapterField,
TAdapterFields,
TAdapterFileField,
TAdapterGotoPageAction,
TAdapterHiddenField,
TAdapterHiddenFieldsList,
TAdapterImageField,
TAdapterLoginField,
TAdapterMemoField,
TAdapterMultiValueField,
TAdapterNamedDisplayField,
TAdapterNamedField,
TAdapterNextPageAction,
TAdapterNextPageField,
TAdapterObjectErrorsList,
TAdapterPasswordField,
TAdapterPrevPageAction,
TAdapterSubComponent,
TAdapterUpdateField,
TAdapterUserNameField,
TApplicationAdapter,
TBaseAdapterAction,
TBaseAdapterErrorsList,
TBaseAdapterMultiValueField,
TBaseEndUserAdapter,
TBaseValuesListAdapter,
TBaseValuesListField,
TCustomAdapter,
TCustomAdapterAction,
TCustomAdapterBooleanField,
TCustomAdapterField,
TCustomAdapterFileField,
TCustomAdapterGotoPageAction,
TCustomAdapterImageField,
TCustomAdapterMemoField,
TCustomAdapterMultiValueField,
TCustomAdapterPageAction,
TCustomApplicationAdapter,
TCustomApplicationAdapterAction,
TCustomEndUserAdapter,
TCustomEndUserAdapterAction,
TCustomEndUserSessionAdapter,
TCustomLoginFormAdapter,
TCustomLoginFormAdapterAction,
TCustomPagedAdapter,
TCustomPagedAdapterAction,
TCustomStringsValuesList,
TDefaultFieldsAdapter,
TDefaultFieldsPagedAdapter,
TEndUserAdapter,
TEndUserAdapterLoginFormAction,
TEndUserAdapterLogoutAction,
TEndUserSessionAdapter,
TFieldValuesAdapter,
TFieldValuesValueField,
TImplementedAdapterAction,
TLogicalPageList,
TLoginFormAdapter,
TLoginFormAdapterLoginAction,
TObjectList,
TPagedAdapter,
TStringsValuesList,
TUpdateFileList,
TValuesListNameField,
TValuesListValueField
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..9] of string = (
'AddDefaultActions'
,'AddDefaultFields'
,'FindAdapterField'
,'FindAdapterAction'
,'FindAdapterInParent'
,'RaiseMultipleFilesException'
,'RaiseFileUploadNotSupported'
,'RaiseMultipleValuesException'
,'MakeAdapterRequestIdentifier'
,'MakeValidAdapterFieldName'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TStrings),
TypeInfo(TWebComponentList)],Addr(AddDefaultActions),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(TStrings),
TypeInfo(TWebComponentList)],Addr(AddDefaultFields),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(TWebComponentList),
TypeInfo(string),TypeInfo(TComponent)],Addr(FindAdapterField),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),[
TypeInfo(TWebComponentList),
TypeInfo(string),TypeInfo(TComponent)],Addr(FindAdapterAction),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T4),[
TypeInfo(TComponent),TypeInfo(TComponent)],Addr(FindAdapterInParent),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T5),[
TypeInfo(string)],Addr(RaiseMultipleFilesException),cRegister);

RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T6),[
TypeInfo(string)],Addr(RaiseFileUploadNotSupported),cRegister);

RegisterProc(nil,MethodNames[7],mtProc,TypeInfo(_T7),[
TypeInfo(string)],Addr(RaiseMultipleValuesException),cRegister);

RegisterProc(nil,MethodNames[8],mtProc,TypeInfo(_T8),[
TypeInfo(TComponent),TypeInfo(string)],Addr(MakeAdapterRequestIdentifier),cRegister);

RegisterProc(nil,MethodNames[9],mtProc,TypeInfo(_T9),[
TypeInfo(string),TypeInfo(string)],Addr(MakeValidAdapterFieldName),cRegister);

RegisterProc(EAdapterException,'CreateID',mtConstructor,TypeInfo(_T10),[
TypeInfo(string),
TypeInfo(Integer),
TypeInfo(Integer)],Addr(EAdapterException.CreateID),cRegister);

RegisterProc(EAdapterFieldException,'Create',mtConstructor,TypeInfo(_T11),[
TypeInfo(string),
TypeInfo(string),
TypeInfo(Integer)],Addr(EAdapterFieldException.Create),cRegister);

//RegRegisterMethod(TAbstractFieldValuesAdapter,'ImplGetField',TypeInfo(_T13),[TypeInfo(TObject)], pointer(232));
RegRegisterMethod(TAbstractFieldValuesAdapter,'ImplGetField',TypeInfo(_T13),[TypeInfo(TObject)],  getVMTProcAddr('TAbstractFieldValuesAdapter','ImplGetField',232));


//RegRegisterMethod(TAbstractFieldValuesAdapter,'ImplGetValueIndex',TypeInfo(_T14),[TypeInfo(Integer)], pointer(236));
RegRegisterMethod(TAbstractFieldValuesAdapter,'ImplGetValueIndex',TypeInfo(_T14),[TypeInfo(Integer)],  getVMTProcAddr('TAbstractFieldValuesAdapter','ImplGetValueIndex',236));


//RegRegisterMethod(TAdapterDefaultActions,'ClearDefaultComponents',TypeInfo(_T15),NoParams, pointer(80));
RegRegisterMethod(TAdapterDefaultActions,'ClearDefaultComponents',TypeInfo(_T15),NoParams,  getVMTProcAddr('TAdapterDefaultActions','ClearDefaultComponents',80));


//RegRegisterMethod(TAdapterDefaultFields,'ClearDefaultComponents',TypeInfo(_T16),NoParams, pointer(80));
RegRegisterMethod(TAdapterDefaultFields,'ClearDefaultComponents',TypeInfo(_T16),NoParams,  getVMTProcAddr('TAdapterDefaultFields','ClearDefaultComponents',80));


RegisterProc(TAdapterError,'Create',mtConstructor,TypeInfo(_T17),[
TypeInfo(TAdapterErrorsList),
TypeInfo(Integer)],Addr(TAdapterError.Create),cRegister);

RegisterProc(TAdapterErrorsList,'Create',mtConstructor,TypeInfo(_T18),[
TypeInfo(TObject)],Addr(TAdapterErrorsList.Create),cRegister);

RegisterProc(TAdapterHiddenField,'Create',mtConstructor,TypeInfo(_T19),[
TypeInfo(TAdapterHiddenFieldsList),
TypeInfo(Integer)],Addr(TAdapterHiddenField.Create),cRegister);

RegisterProc(TAdapterHiddenFieldsList,'Create',mtConstructor,TypeInfo(_T20),NoParams,Addr(TAdapterHiddenFieldsList.Create),cRegister);

RegRegisterMethod(TAdapterHiddenFieldsList,'Clear',TypeInfo(_T21),NoParams,Addr(TAdapterHiddenFieldsList.Clear));

RegRegisterMethod(TAdapterHiddenFieldsList,'Add',TypeInfo(_T22),[
TypeInfo(string),
TypeInfo(string)],Addr(TAdapterHiddenFieldsList.Add));

//RegRegisterMethod(TAdapterNamedDisplayField,'GetDisplayStyleType',TypeInfo(_T23),[TypeInfo(string),TypeInfo(TAdapterDisplayHTMLElementType)], pointer(128));
RegRegisterMethod(TAdapterNamedDisplayField,'GetDisplayStyleType',TypeInfo(_T23),[TypeInfo(string),TypeInfo(TAdapterDisplayHTMLElementType)],  getVMTProcAddr('TAdapterNamedDisplayField','GetDisplayStyleType',128));


//RegRegisterMethod(TAdapterNamedDisplayField,'GetInputStyleType',TypeInfo(_T24),[TypeInfo(string),TypeInfo(TAdapterInputHTMLElementType)], pointer(132));
RegRegisterMethod(TAdapterNamedDisplayField,'GetInputStyleType',TypeInfo(_T24),[TypeInfo(string),TypeInfo(TAdapterInputHTMLElementType)],  getVMTProcAddr('TAdapterNamedDisplayField','GetInputStyleType',132));


//RegRegisterMethod(TAdapterNamedDisplayField,'GetViewModeType',TypeInfo(_T25),[TypeInfo(string),TypeInfo(TAdapterDisplayViewModeType)], pointer(136));
RegRegisterMethod(TAdapterNamedDisplayField,'GetViewModeType',TypeInfo(_T25),[TypeInfo(string),TypeInfo(TAdapterDisplayViewModeType)],  getVMTProcAddr('TAdapterNamedDisplayField','GetViewModeType',136));


//RegRegisterMethod(TAdapterNamedField,'GetDefaultDisplayLabel',TypeInfo(_T26),[TypeInfo(string)], pointer(56));
RegRegisterMethod(TAdapterNamedField,'GetDefaultDisplayLabel',TypeInfo(_T26),[TypeInfo(string)],  getVMTProcAddr('TAdapterNamedField','GetDefaultDisplayLabel',56));


//RegRegisterMethod(TAdapterNamedField,'FullyQualifyInputName',TypeInfo(_T27),[TypeInfo(Boolean)], pointer(60));
RegRegisterMethod(TAdapterNamedField,'FullyQualifyInputName',TypeInfo(_T27),[TypeInfo(Boolean)],  getVMTProcAddr('TAdapterNamedField','FullyQualifyInputName',60));


//RegRegisterMethod(TAdapterNamedField,'ImplGetInputName',TypeInfo(_T28),[TypeInfo(string)], pointer(64));
RegRegisterMethod(TAdapterNamedField,'ImplGetInputName',TypeInfo(_T28),[TypeInfo(string)],  getVMTProcAddr('TAdapterNamedField','ImplGetInputName',64));


//RegRegisterMethod(TAdapterNamedField,'ImplGetVisible',TypeInfo(_T29),[TypeInfo(Boolean)], pointer(68));
RegRegisterMethod(TAdapterNamedField,'ImplGetVisible',TypeInfo(_T29),[TypeInfo(Boolean)],  getVMTProcAddr('TAdapterNamedField','ImplGetVisible',68));


//RegRegisterMethod(TAdapterNamedField,'ImplGetRequired',TypeInfo(_T30),[TypeInfo(Boolean)], pointer(72));
RegRegisterMethod(TAdapterNamedField,'ImplGetRequired',TypeInfo(_T30),[TypeInfo(Boolean)],  getVMTProcAddr('TAdapterNamedField','ImplGetRequired',72));


//RegRegisterMethod(TAdapterNamedField,'ImplHasViewAccess',TypeInfo(_T31),[TypeInfo(Boolean)], pointer(76));
RegRegisterMethod(TAdapterNamedField,'ImplHasViewAccess',TypeInfo(_T31),[TypeInfo(Boolean)],  getVMTProcAddr('TAdapterNamedField','ImplHasViewAccess',76));


//RegRegisterMethod(TAdapterNamedField,'ImplHasModifyAccess',TypeInfo(_T32),[TypeInfo(Boolean)], pointer(80));
RegRegisterMethod(TAdapterNamedField,'ImplHasModifyAccess',TypeInfo(_T32),[TypeInfo(Boolean)],  getVMTProcAddr('TAdapterNamedField','ImplHasModifyAccess',80));


//RegRegisterMethod(TAdapterNamedField,'ImplGetDisplayWidth',TypeInfo(_T34),[TypeInfo(Integer)], pointer(88));
RegRegisterMethod(TAdapterNamedField,'ImplGetDisplayWidth',TypeInfo(_T34),[TypeInfo(Integer)],  getVMTProcAddr('TAdapterNamedField','ImplGetDisplayWidth',88));


//RegRegisterMethod(TAdapterNamedField,'ImplGetDisplayLabel',TypeInfo(_T35),[TypeInfo(string)], pointer(92));
RegRegisterMethod(TAdapterNamedField,'ImplGetDisplayLabel',TypeInfo(_T35),[TypeInfo(string)],  getVMTProcAddr('TAdapterNamedField','ImplGetDisplayLabel',92));


//RegRegisterMethod(TAdapterNamedField,'ImplGetMaxLength',TypeInfo(_T36),[TypeInfo(Integer)], pointer(96));
RegRegisterMethod(TAdapterNamedField,'ImplGetMaxLength',TypeInfo(_T36),[TypeInfo(Integer)],  getVMTProcAddr('TAdapterNamedField','ImplGetMaxLength',96));


//RegRegisterMethod(TAdapterNamedField,'ImplSetFieldName',TypeInfo(_T37),[TypeInfo(string)], pointer(100));
RegRegisterMethod(TAdapterNamedField,'ImplSetFieldName',TypeInfo(_T37),[TypeInfo(string)],  getVMTProcAddr('TAdapterNamedField','ImplSetFieldName',100));


//RegRegisterMethod(TAdapterNamedField,'ImplGetVariableName',TypeInfo(_T38),[TypeInfo(string)], pointer(104));
RegRegisterMethod(TAdapterNamedField,'ImplGetVariableName',TypeInfo(_T38),[TypeInfo(string)],  getVMTProcAddr('TAdapterNamedField','ImplGetVariableName',104));


//RegRegisterMethod(TAdapterNamedField,'GetDefaultFieldName',TypeInfo(_T39),[TypeInfo(string)], pointer(108));
RegRegisterMethod(TAdapterNamedField,'GetDefaultFieldName',TypeInfo(_T39),[TypeInfo(string)],  getVMTProcAddr('TAdapterNamedField','GetDefaultFieldName',108));


//RegRegisterMethod(TAdapterNamedField,'ImplGetValue',TypeInfo(_T40),[TypeInfo(Variant)], pointer(112));
RegRegisterMethod(TAdapterNamedField,'ImplGetValue',TypeInfo(_T40),[TypeInfo(Variant)],  getVMTProcAddr('TAdapterNamedField','ImplGetValue',112));


//RegRegisterMethod(TAdapterNamedField,'ImplSetEchoActionFieldValue',TypeInfo(_T41),[TypeInfo(Boolean)], pointer(116));
RegRegisterMethod(TAdapterNamedField,'ImplSetEchoActionFieldValue',TypeInfo(_T41),[TypeInfo(Boolean)],  getVMTProcAddr('TAdapterNamedField','ImplSetEchoActionFieldValue',116));


//RegRegisterMethod(TAdapterNamedField,'ImplGetEchoActionFieldValue',TypeInfo(_T42),[TypeInfo(Boolean)], pointer(120));
RegRegisterMethod(TAdapterNamedField,'ImplGetEchoActionFieldValue',TypeInfo(_T42),[TypeInfo(Boolean)],  getVMTProcAddr('TAdapterNamedField','ImplGetEchoActionFieldValue',120));


//RegRegisterMethod(TAdapterNamedField,'ImplAsFormatted',TypeInfo(_T43),[TypeInfo(string)], pointer(124));
RegRegisterMethod(TAdapterNamedField,'ImplAsFormatted',TypeInfo(_T43),[TypeInfo(string)],  getVMTProcAddr('TAdapterNamedField','ImplAsFormatted',124));


RegisterProc(TAdapterObjectErrorsList,'Create',mtConstructor,TypeInfo(_T45),[
TypeInfo(TAdapterErrorsList),
TypeInfo(string)],Addr(TAdapterObjectErrorsList.Create),cRegister);

//RegRegisterMethod(TAdapterSubComponent,'FindNamedVariable',TypeInfo(_T46),[TypeInfo(string),TypeInfo(TComponent)], pointer(60));
RegRegisterMethod(TAdapterSubComponent,'FindNamedVariable',TypeInfo(_T46),[TypeInfo(string),TypeInfo(TComponent)],  getVMTProcAddr('TAdapterSubComponent','FindNamedVariable',60));


//RegRegisterMethod(TAdapterSubComponent,'ImplGetWebComponentNodeName',TypeInfo(_T47),[TypeInfo(string)], pointer(64));
RegRegisterMethod(TAdapterSubComponent,'ImplGetWebComponentNodeName',TypeInfo(_T47),[TypeInfo(string)],  getVMTProcAddr('TAdapterSubComponent','ImplGetWebComponentNodeName',64));


//RegRegisterMethod(TAdapterSubComponent,'SetWebParent',TypeInfo(_T49),[TypeInfo(TComponent)], pointer(72));
RegRegisterMethod(TAdapterSubComponent,'SetWebParent',TypeInfo(_T49),[TypeInfo(TComponent)],  getVMTProcAddr('TAdapterSubComponent','SetWebParent',72));


//RegRegisterMethod(TAdapterSubComponent,'GetVariablesInUse',TypeInfo(_T50),[TypeInfo(TWebComponentList)], pointer(76));
RegRegisterMethod(TAdapterSubComponent,'GetVariablesInUse',TypeInfo(_T50),[TypeInfo(TWebComponentList)],  getVMTProcAddr('TAdapterSubComponent','GetVariablesInUse',76));


//RegRegisterMethod(TAdapterUpdateField,'GetValueCount',TypeInfo(_T51),[TypeInfo(Integer)], pointer(140));
RegRegisterMethod(TAdapterUpdateField,'GetValueCount',TypeInfo(_T51),[TypeInfo(Integer)],  getVMTProcAddr('TAdapterUpdateField','GetValueCount',140));


//RegRegisterMethod(TAdapterUpdateField,'GetValues',TypeInfo(_T52),[TypeInfo(Integer),TypeInfo(Variant)], pointer(144));
RegRegisterMethod(TAdapterUpdateField,'GetValues',TypeInfo(_T52),[TypeInfo(Integer),TypeInfo(Variant)],  getVMTProcAddr('TAdapterUpdateField','GetValues',144));


//RegRegisterMethod(TAdapterUpdateField,'IsMultiValueField',TypeInfo(_T54),[TypeInfo(Boolean)], pointer(152));
RegRegisterMethod(TAdapterUpdateField,'IsMultiValueField',TypeInfo(_T54),[TypeInfo(Boolean)],  getVMTProcAddr('TAdapterUpdateField','IsMultiValueField',152));


//RegRegisterMethod(TBaseAdapterAction,'GetDefaultDisplayLabel',TypeInfo(_T61),[TypeInfo(string)], pointer(56));
RegRegisterMethod(TBaseAdapterAction,'GetDefaultDisplayLabel',TypeInfo(_T61),[TypeInfo(string)],  getVMTProcAddr('TBaseAdapterAction','GetDefaultDisplayLabel',56));


//RegRegisterMethod(TBaseAdapterAction,'GetItemCount',TypeInfo(_T68),[TypeInfo(Integer)], pointer(84));
RegRegisterMethod(TBaseAdapterAction,'GetItemCount',TypeInfo(_T68),[TypeInfo(Integer)],  getVMTProcAddr('TBaseAdapterAction','GetItemCount',84));


//RegRegisterMethod(TBaseAdapterAction,'ImplGetIteratorIndex',TypeInfo(_T69),[TypeInfo(Integer)], pointer(88));
RegRegisterMethod(TBaseAdapterAction,'ImplGetIteratorIndex',TypeInfo(_T69),[TypeInfo(Integer)],  getVMTProcAddr('TBaseAdapterAction','ImplGetIteratorIndex',88));


//RegRegisterMethod(TBaseAdapterAction,'ImplInIterator',TypeInfo(_T70),[TypeInfo(Boolean)], pointer(92));
RegRegisterMethod(TBaseAdapterAction,'ImplInIterator',TypeInfo(_T70),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseAdapterAction','ImplInIterator',92));


//RegRegisterMethod(TBaseAdapterAction,'ImplIsDefaultAction',TypeInfo(_T71),[TypeInfo(TObject),TypeInfo(Boolean)], pointer(96));
RegRegisterMethod(TBaseAdapterAction,'ImplIsDefaultAction',TypeInfo(_T71),[TypeInfo(TObject),TypeInfo(Boolean)],  getVMTProcAddr('TBaseAdapterAction','ImplIsDefaultAction',96));


//RegRegisterMethod(TBaseAdapterAction,'ImplGetIsAdapterActionList',TypeInfo(_T72),[TypeInfo(Boolean)], pointer(100));
RegRegisterMethod(TBaseAdapterAction,'ImplGetIsAdapterActionList',TypeInfo(_T72),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseAdapterAction','ImplGetIsAdapterActionList',100));


//RegRegisterMethod(TBaseAdapterAction,'ImplGetVisible',TypeInfo(_T73),[TypeInfo(Boolean)], pointer(104));
RegRegisterMethod(TBaseAdapterAction,'ImplGetVisible',TypeInfo(_T73),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseAdapterAction','ImplGetVisible',104));


//RegRegisterMethod(TBaseAdapterAction,'GetDisplayStyleType',TypeInfo(_T74),[TypeInfo(string),TypeInfo(TAdapterActionHTMLElementType)], pointer(108));
RegRegisterMethod(TBaseAdapterAction,'GetDisplayStyleType',TypeInfo(_T74),[TypeInfo(string),TypeInfo(TAdapterActionHTMLElementType)],  getVMTProcAddr('TBaseAdapterAction','GetDisplayStyleType',108));


//RegRegisterMethod(TBaseAdapterAction,'GetViewModeType',TypeInfo(_T75),[TypeInfo(string),TypeInfo(TAdapterDisplayViewModeType)], pointer(112));
RegRegisterMethod(TBaseAdapterAction,'GetViewModeType',TypeInfo(_T75),[TypeInfo(string),TypeInfo(TAdapterDisplayViewModeType)],  getVMTProcAddr('TBaseAdapterAction','GetViewModeType',112));


//RegRegisterMethod(TBaseAdapterAction,'ImplGetFailureOptions',TypeInfo(_T76),[TypeInfo(TAdapterActionRedirectOptions)], pointer(116));
RegRegisterMethod(TBaseAdapterAction,'ImplGetFailureOptions',TypeInfo(_T76),[TypeInfo(TAdapterActionRedirectOptions)],  getVMTProcAddr('TBaseAdapterAction','ImplGetFailureOptions',116));


//RegRegisterMethod(TBaseAdapterAction,'ImplGetSuccessOptions',TypeInfo(_T77),[TypeInfo(TAdapterActionRedirectOptions)], pointer(120));
RegRegisterMethod(TBaseAdapterAction,'ImplGetSuccessOptions',TypeInfo(_T77),[TypeInfo(TAdapterActionRedirectOptions)],  getVMTProcAddr('TBaseAdapterAction','ImplGetSuccessOptions',120));


//RegRegisterMethod(TBaseAdapterAction,'ImplHasExecuteAccess',TypeInfo(_T79),[TypeInfo(Boolean)], pointer(128));
RegRegisterMethod(TBaseAdapterAction,'ImplHasExecuteAccess',TypeInfo(_T79),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseAdapterAction','ImplHasExecuteAccess',128));


//RegRegisterMethod(TBaseAdapterAction,'ImplGetDisplayLabel',TypeInfo(_T81),[TypeInfo(string)], pointer(136));
RegRegisterMethod(TBaseAdapterAction,'ImplGetDisplayLabel',TypeInfo(_T81),[TypeInfo(string)],  getVMTProcAddr('TBaseAdapterAction','ImplGetDisplayLabel',136));


//RegRegisterMethod(TBaseAdapterAction,'ImplWebEnabled',TypeInfo(_T83),[TypeInfo(Boolean)], pointer(144));
RegRegisterMethod(TBaseAdapterAction,'ImplWebEnabled',TypeInfo(_T83),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseAdapterAction','ImplWebEnabled',144));


//RegRegisterMethod(TBaseAdapterAction,'ImplGetActionName',TypeInfo(_T84),[TypeInfo(string)], pointer(148));
RegRegisterMethod(TBaseAdapterAction,'ImplGetActionName',TypeInfo(_T84),[TypeInfo(string)],  getVMTProcAddr('TBaseAdapterAction','ImplGetActionName',148));


//RegRegisterMethod(TBaseAdapterAction,'GetDefaultActionName',TypeInfo(_T85),[TypeInfo(string)], pointer(152));
RegRegisterMethod(TBaseAdapterAction,'GetDefaultActionName',TypeInfo(_T85),[TypeInfo(string)],  getVMTProcAddr('TBaseAdapterAction','GetDefaultActionName',152));


//RegRegisterMethod(TBaseAdapterErrorsList,'ImplClearErrors',TypeInfo(_T86),NoParams, pointer(0));
RegRegisterMethod(TBaseAdapterErrorsList,'ImplClearErrors',TypeInfo(_T86),NoParams,  getVMTProcAddr('TBaseAdapterErrorsList','ImplClearErrors',0));


//RegRegisterMethod(TBaseAdapterErrorsList,'ImplGetErrorCount',TypeInfo(_T87),[TypeInfo(Integer)], pointer(4));
RegRegisterMethod(TBaseAdapterErrorsList,'ImplGetErrorCount',TypeInfo(_T87),[TypeInfo(Integer)],  getVMTProcAddr('TBaseAdapterErrorsList','ImplGetErrorCount',4));


//RegRegisterMethod(TBaseAdapterErrorsList,'ImplHasObjectErrors',TypeInfo(_T89),[TypeInfo(string),TypeInfo(Boolean)], pointer(12));
RegRegisterMethod(TBaseAdapterErrorsList,'ImplHasObjectErrors',TypeInfo(_T89),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TBaseAdapterErrorsList','ImplHasObjectErrors',12));


//RegRegisterMethod(TBaseAdapterErrorsList,'ImplGetObjectErrors',TypeInfo(_T90),[TypeInfo(string),TypeInfo(TObject)], pointer(16));
RegRegisterMethod(TBaseAdapterErrorsList,'ImplGetObjectErrors',TypeInfo(_T90),[TypeInfo(string),TypeInfo(TObject)],  getVMTProcAddr('TBaseAdapterErrorsList','ImplGetObjectErrors',16));


//RegRegisterMethod(TBaseAdapterErrorsList,'ImplDefineLabel',TypeInfo(_T91),[TypeInfo(string),TypeInfo(string)], pointer(20));
RegRegisterMethod(TBaseAdapterErrorsList,'ImplDefineLabel',TypeInfo(_T91),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TBaseAdapterErrorsList','ImplDefineLabel',20));


RegRegisterMethod(TBaseAdapterErrorsList,'DefineLabel',TypeInfo(_T92),[
TypeInfo(string),
TypeInfo(string)],Addr(TBaseAdapterErrorsList.DefineLabel));

RegRegisterMethod(TBaseAdapterErrorsList,'ClearErrors',TypeInfo(_T93),NoParams,Addr(TBaseAdapterErrorsList.ClearErrors));

//RegRegisterMethod(TBaseAdapterErrorsList,'AddError',TypeInfo(_T94),[TypeInfo(Exception),TypeInfo(string)], pointer(24));
RegRegisterMethod(TBaseAdapterErrorsList,'AddError',TypeInfo(_T94),[TypeInfo(Exception),TypeInfo(string)],  getVMTProcAddr('TBaseAdapterErrorsList','AddError',24));


//RegRegisterMethod(TBaseAdapterMultiValueField,'ImplGetCurrentValue',TypeInfo(_T95),[TypeInfo(Variant)], pointer(180));
RegRegisterMethod(TBaseAdapterMultiValueField,'ImplGetCurrentValue',TypeInfo(_T95),[TypeInfo(Variant)],  getVMTProcAddr('TBaseAdapterMultiValueField','ImplGetCurrentValue',180));


//RegRegisterMethod(TBaseAdapterMultiValueField,'ImplHasValue',TypeInfo(_T96),[TypeInfo(Variant),TypeInfo(Boolean)], pointer(184));
RegRegisterMethod(TBaseAdapterMultiValueField,'ImplHasValue',TypeInfo(_T96),[TypeInfo(Variant),TypeInfo(Boolean)],  getVMTProcAddr('TBaseAdapterMultiValueField','ImplHasValue',184));


//RegRegisterMethod(TBaseAdapterMultiValueField,'ImplGetFieldValuesAdapter',TypeInfo(_T97),[TypeInfo(TComponent)], pointer(188));
RegRegisterMethod(TBaseAdapterMultiValueField,'ImplGetFieldValuesAdapter',TypeInfo(_T97),[TypeInfo(TComponent)],  getVMTProcAddr('TBaseAdapterMultiValueField','ImplGetFieldValuesAdapter',188));


//RegRegisterMethod(TBaseEndUserAdapter,'GetUserID',TypeInfo(_T98),[TypeInfo(Variant)], pointer(228));
RegRegisterMethod(TBaseEndUserAdapter,'GetUserID',TypeInfo(_T98),[TypeInfo(Variant)],  getVMTProcAddr('TBaseEndUserAdapter','GetUserID',228));


//RegRegisterMethod(TBaseEndUserAdapter,'ExecuteLoginForm',TypeInfo(_T99),NoParams, pointer(232));
RegRegisterMethod(TBaseEndUserAdapter,'ExecuteLoginForm',TypeInfo(_T99),NoParams,  getVMTProcAddr('TBaseEndUserAdapter','ExecuteLoginForm',232));


//RegRegisterMethod(TBaseEndUserAdapter,'CanExecuteLoginForm',TypeInfo(_T100),[TypeInfo(Boolean)], pointer(236));
RegRegisterMethod(TBaseEndUserAdapter,'CanExecuteLoginForm',TypeInfo(_T100),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseEndUserAdapter','CanExecuteLoginForm',236));


//RegRegisterMethod(TBaseEndUserAdapter,'ExecuteLogout',TypeInfo(_T101),NoParams, pointer(240));
RegRegisterMethod(TBaseEndUserAdapter,'ExecuteLogout',TypeInfo(_T101),NoParams,  getVMTProcAddr('TBaseEndUserAdapter','ExecuteLogout',240));


//RegRegisterMethod(TBaseEndUserAdapter,'CanExecuteLogout',TypeInfo(_T102),[TypeInfo(Boolean)], pointer(244));
RegRegisterMethod(TBaseEndUserAdapter,'CanExecuteLogout',TypeInfo(_T102),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseEndUserAdapter','CanExecuteLogout',244));


//RegRegisterMethod(TBaseEndUserAdapter,'ExecuteLogin',TypeInfo(_T103),[TypeInfo(Variant)], pointer(248));
RegRegisterMethod(TBaseEndUserAdapter,'ExecuteLogin',TypeInfo(_T103),[TypeInfo(Variant)],  getVMTProcAddr('TBaseEndUserAdapter','ExecuteLogin',248));


//RegRegisterMethod(TBaseEndUserAdapter,'GetLoggedInValue',TypeInfo(_T104),[TypeInfo(Boolean)], pointer(252));
RegRegisterMethod(TBaseEndUserAdapter,'GetLoggedInValue',TypeInfo(_T104),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseEndUserAdapter','GetLoggedInValue',252));


//RegRegisterMethod(TBaseEndUserAdapter,'GetDisplayNameValue',TypeInfo(_T105),[TypeInfo(string)], pointer(256));
RegRegisterMethod(TBaseEndUserAdapter,'GetDisplayNameValue',TypeInfo(_T105),[TypeInfo(string)],  getVMTProcAddr('TBaseEndUserAdapter','GetDisplayNameValue',256));


//RegRegisterMethod(TBaseEndUserAdapter,'CanProduceLoginPage',TypeInfo(_T106),[TypeInfo(Boolean)], pointer(260));
RegRegisterMethod(TBaseEndUserAdapter,'CanProduceLoginPage',TypeInfo(_T106),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseEndUserAdapter','CanProduceLoginPage',260));


//RegRegisterMethod(TBaseEndUserAdapter,'ImplGetDisplayName',TypeInfo(_T108),[TypeInfo(string)], pointer(268));
RegRegisterMethod(TBaseEndUserAdapter,'ImplGetDisplayName',TypeInfo(_T108),[TypeInfo(string)],  getVMTProcAddr('TBaseEndUserAdapter','ImplGetDisplayName',268));


//RegRegisterMethod(TBaseEndUserAdapter,'ImplGetLoggedIn',TypeInfo(_T109),[TypeInfo(Boolean)], pointer(272));
RegRegisterMethod(TBaseEndUserAdapter,'ImplGetLoggedIn',TypeInfo(_T109),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseEndUserAdapter','ImplGetLoggedIn',272));


//RegRegisterMethod(TBaseEndUserAdapter,'ImplGetLogoutAction',TypeInfo(_T110),[TypeInfo(TComponent)], pointer(276));
RegRegisterMethod(TBaseEndUserAdapter,'ImplGetLogoutAction',TypeInfo(_T110),[TypeInfo(TComponent)],  getVMTProcAddr('TBaseEndUserAdapter','ImplGetLogoutAction',276));


//RegRegisterMethod(TBaseEndUserAdapter,'ImplGetEndUserAdapter',TypeInfo(_T111),[TypeInfo(TComponent)], pointer(280));
RegRegisterMethod(TBaseEndUserAdapter,'ImplGetEndUserAdapter',TypeInfo(_T111),[TypeInfo(TComponent)],  getVMTProcAddr('TBaseEndUserAdapter','ImplGetEndUserAdapter',280));


//RegRegisterMethod(TBaseEndUserAdapter,'ImplLogIn',TypeInfo(_T112),[TypeInfo(Variant)], pointer(284));
RegRegisterMethod(TBaseEndUserAdapter,'ImplLogIn',TypeInfo(_T112),[TypeInfo(Variant)],  getVMTProcAddr('TBaseEndUserAdapter','ImplLogIn',284));


//RegRegisterMethod(TBaseEndUserAdapter,'ImplProduceLoginPage',TypeInfo(_T113),[TypeInfo(Boolean)], pointer(288));
RegRegisterMethod(TBaseEndUserAdapter,'ImplProduceLoginPage',TypeInfo(_T113),[TypeInfo(Boolean)],  getVMTProcAddr('TBaseEndUserAdapter','ImplProduceLoginPage',288));


//RegRegisterMethod(TBaseEndUserAdapter,'ImplHasExecuteRights',TypeInfo(_T114),[TypeInfo(string),TypeInfo(Boolean)], pointer(292));
RegRegisterMethod(TBaseEndUserAdapter,'ImplHasExecuteRights',TypeInfo(_T114),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TBaseEndUserAdapter','ImplHasExecuteRights',292));


//RegRegisterMethod(TBaseEndUserAdapter,'ImplHasViewRights',TypeInfo(_T115),[TypeInfo(string),TypeInfo(Boolean)], pointer(296));
RegRegisterMethod(TBaseEndUserAdapter,'ImplHasViewRights',TypeInfo(_T115),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TBaseEndUserAdapter','ImplHasViewRights',296));


//RegRegisterMethod(TBaseEndUserAdapter,'ImplHasModifyRights',TypeInfo(_T116),[TypeInfo(string),TypeInfo(Boolean)], pointer(300));
RegRegisterMethod(TBaseEndUserAdapter,'ImplHasModifyRights',TypeInfo(_T116),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TBaseEndUserAdapter','ImplHasModifyRights',300));


//RegRegisterMethod(TBaseValuesListAdapter,'ImplGetListValue',TypeInfo(_T119),[TypeInfo(Variant)], pointer(236));
RegRegisterMethod(TBaseValuesListAdapter,'ImplGetListValue',TypeInfo(_T119),[TypeInfo(Variant)],  getVMTProcAddr('TBaseValuesListAdapter','ImplGetListValue',236));


//RegRegisterMethod(TBaseValuesListAdapter,'ImplGetListName',TypeInfo(_T120),[TypeInfo(string)], pointer(240));
RegRegisterMethod(TBaseValuesListAdapter,'ImplGetListName',TypeInfo(_T120),[TypeInfo(string)],  getVMTProcAddr('TBaseValuesListAdapter','ImplGetListName',240));


//RegRegisterMethod(TBaseValuesListAdapter,'ImplGetListImageOfValue',TypeInfo(_T121),[TypeInfo(Variant),TypeInfo(TComponent)], pointer(244));
RegRegisterMethod(TBaseValuesListAdapter,'ImplGetListImageOfValue',TypeInfo(_T121),[TypeInfo(Variant),TypeInfo(TComponent)],  getVMTProcAddr('TBaseValuesListAdapter','ImplGetListImageOfValue',244));


//RegRegisterMethod(TBaseValuesListAdapter,'ImplGetListImage',TypeInfo(_T122),[TypeInfo(TComponent)], pointer(248));
RegRegisterMethod(TBaseValuesListAdapter,'ImplGetListImage',TypeInfo(_T122),[TypeInfo(TComponent)],  getVMTProcAddr('TBaseValuesListAdapter','ImplGetListImage',248));


//RegRegisterMethod(TBaseValuesListAdapter,'ImplGetListNameOfValue',TypeInfo(_T123),[TypeInfo(Variant),TypeInfo(string)], pointer(252));
RegRegisterMethod(TBaseValuesListAdapter,'ImplGetListNameOfValue',TypeInfo(_T123),[TypeInfo(Variant),TypeInfo(string)],  getVMTProcAddr('TBaseValuesListAdapter','ImplGetListNameOfValue',252));


//RegRegisterMethod(TCustomAdapter,'CreateErrorsList',TypeInfo(_T124),[TypeInfo(TBaseAdapterErrorsList)], pointer(48));
RegRegisterMethod(TCustomAdapter,'CreateErrorsList',TypeInfo(_T124),[TypeInfo(TBaseAdapterErrorsList)],  getVMTProcAddr('TCustomAdapter','CreateErrorsList',48));


//RegRegisterMethod(TCustomAdapter,'GetHiddenFieldOptions',TypeInfo(_T134),[TypeInfo(TAdapterHiddenFieldOptions)], pointer(88));
RegRegisterMethod(TCustomAdapter,'GetHiddenFieldOptions',TypeInfo(_T134),[TypeInfo(TAdapterHiddenFieldOptions)],  getVMTProcAddr('TCustomAdapter','GetHiddenFieldOptions',88));


//RegRegisterMethod(TCustomAdapter,'ImplHasViewAccess',TypeInfo(_T137),[TypeInfo(Boolean)], pointer(100));
RegRegisterMethod(TCustomAdapter,'ImplHasViewAccess',TypeInfo(_T137),[TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapter','ImplHasViewAccess',100));


//RegRegisterMethod(TCustomAdapter,'ImplHasModifyAccess',TypeInfo(_T138),[TypeInfo(Boolean)], pointer(104));
RegRegisterMethod(TCustomAdapter,'ImplHasModifyAccess',TypeInfo(_T138),[TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapter','ImplHasModifyAccess',104));


//RegRegisterMethod(TCustomAdapter,'ImplHasExecuteAccess',TypeInfo(_T139),[TypeInfo(Boolean)], pointer(108));
RegRegisterMethod(TCustomAdapter,'ImplHasExecuteAccess',TypeInfo(_T139),[TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapter','ImplHasExecuteAccess',108));


//RegRegisterMethod(TCustomAdapter,'ImplSetEchoActionFieldValues',TypeInfo(_T140),[TypeInfo(Boolean)], pointer(112));
RegRegisterMethod(TCustomAdapter,'ImplSetEchoActionFieldValues',TypeInfo(_T140),[TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapter','ImplSetEchoActionFieldValues',112));


//RegRegisterMethod(TCustomAdapter,'ImplGetEchoActionFieldValues',TypeInfo(_T141),[TypeInfo(Boolean)], pointer(116));
RegRegisterMethod(TCustomAdapter,'ImplGetEchoActionFieldValues',TypeInfo(_T141),[TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapter','ImplGetEchoActionFieldValues',116));


//RegRegisterMethod(TCustomAdapter,'ImplSetActions',TypeInfo(_T142),[TypeInfo(TAdapterSubComponent)], pointer(120));
RegRegisterMethod(TCustomAdapter,'ImplSetActions',TypeInfo(_T142),[TypeInfo(TAdapterSubComponent)],  getVMTProcAddr('TCustomAdapter','ImplSetActions',120));


//RegRegisterMethod(TCustomAdapter,'SetData',TypeInfo(_T143),[TypeInfo(TAdapterSubComponent)], pointer(124));
RegRegisterMethod(TCustomAdapter,'SetData',TypeInfo(_T143),[TypeInfo(TAdapterSubComponent)],  getVMTProcAddr('TCustomAdapter','SetData',124));


//RegRegisterMethod(TCustomAdapter,'ImplSetData',TypeInfo(_T144),[TypeInfo(TAdapterSubComponent)], pointer(128));
RegRegisterMethod(TCustomAdapter,'ImplSetData',TypeInfo(_T144),[TypeInfo(TAdapterSubComponent)],  getVMTProcAddr('TCustomAdapter','ImplSetData',128));


//RegRegisterMethod(TCustomAdapter,'ImplClearAdapterValues',TypeInfo(_T145),NoParams, pointer(132));
RegRegisterMethod(TCustomAdapter,'ImplClearAdapterValues',TypeInfo(_T145),NoParams,  getVMTProcAddr('TCustomAdapter','ImplClearAdapterValues',132));


//RegRegisterMethod(TCustomAdapter,'ImplGetIteratorIndex',TypeInfo(_T146),[TypeInfo(Integer)], pointer(136));
RegRegisterMethod(TCustomAdapter,'ImplGetIteratorIndex',TypeInfo(_T146),[TypeInfo(Integer)],  getVMTProcAddr('TCustomAdapter','ImplGetIteratorIndex',136));


//RegRegisterMethod(TCustomAdapter,'ImplInIterator',TypeInfo(_T147),[TypeInfo(Boolean)], pointer(140));
RegRegisterMethod(TCustomAdapter,'ImplInIterator',TypeInfo(_T147),[TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapter','ImplInIterator',140));


//RegRegisterMethod(TCustomAdapter,'ImplStartIterator',TypeInfo(_T148),[TypeInfoPointer,TypeInfo(Boolean)], pointer(144));
RegRegisterMethod(TCustomAdapter,'ImplStartIterator',TypeInfo(_T148),[TypeInfoPointer,TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapter','ImplStartIterator',144));


//RegRegisterMethod(TCustomAdapter,'ImplNextIteration',TypeInfo(_T149),[TypeInfoPointer,TypeInfo(Boolean)], pointer(148));
RegRegisterMethod(TCustomAdapter,'ImplNextIteration',TypeInfo(_T149),[TypeInfoPointer,TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapter','ImplNextIteration',148));


//RegRegisterMethod(TCustomAdapter,'ImplEndIterator',TypeInfo(_T150),[TypeInfoPointer], pointer(152));
RegRegisterMethod(TCustomAdapter,'ImplEndIterator',TypeInfo(_T150),[TypeInfoPointer],  getVMTProcAddr('TCustomAdapter','ImplEndIterator',152));


//RegRegisterMethod(TCustomAdapter,'ImplNotifyActivate',TypeInfo(_T153),NoParams, pointer(164));
RegRegisterMethod(TCustomAdapter,'ImplNotifyActivate',TypeInfo(_T153),NoParams,  getVMTProcAddr('TCustomAdapter','ImplNotifyActivate',164));


//RegRegisterMethod(TCustomAdapter,'ImplNotifyDeactivate',TypeInfo(_T154),NoParams, pointer(168));
RegRegisterMethod(TCustomAdapter,'ImplNotifyDeactivate',TypeInfo(_T154),NoParams,  getVMTProcAddr('TCustomAdapter','ImplNotifyDeactivate',168));


//RegRegisterMethod(TCustomAdapter,'ImplGetVariableName',TypeInfo(_T155),[TypeInfo(string)], pointer(172));
RegRegisterMethod(TCustomAdapter,'ImplGetVariableName',TypeInfo(_T155),[TypeInfo(string)],  getVMTProcAddr('TCustomAdapter','ImplGetVariableName',172));


//RegRegisterMethod(TCustomAdapter,'FindNamedVariable',TypeInfo(_T156),[TypeInfo(string),TypeInfo(TComponent)], pointer(176));
RegRegisterMethod(TCustomAdapter,'FindNamedVariable',TypeInfo(_T156),[TypeInfo(string),TypeInfo(TComponent)],  getVMTProcAddr('TCustomAdapter','FindNamedVariable',176));


//RegRegisterMethod(TCustomAdapter,'ImplFindVariable',TypeInfo(_T157),[TypeInfo(string),TypeInfo(TComponent)], pointer(180));
RegRegisterMethod(TCustomAdapter,'ImplFindVariable',TypeInfo(_T157),[TypeInfo(string),TypeInfo(TComponent)],  getVMTProcAddr('TCustomAdapter','ImplFindVariable',180));


//RegRegisterMethod(TCustomAdapter,'ImplFindVariableContainer',TypeInfo(_T158),[TypeInfo(string),TypeInfo(TComponent)], pointer(184));
RegRegisterMethod(TCustomAdapter,'ImplFindVariableContainer',TypeInfo(_T158),[TypeInfo(string),TypeInfo(TComponent)],  getVMTProcAddr('TCustomAdapter','ImplFindVariableContainer',184));


//RegRegisterMethod(TCustomAdapter,'ImplGetVariableCount',TypeInfo(_T159),[TypeInfo(Integer)], pointer(188));
RegRegisterMethod(TCustomAdapter,'ImplGetVariableCount',TypeInfo(_T159),[TypeInfo(Integer)],  getVMTProcAddr('TCustomAdapter','ImplGetVariableCount',188));


//RegRegisterMethod(TCustomAdapter,'ImplGetVariable',TypeInfo(_T160),[TypeInfo(Integer),TypeInfo(TComponent)], pointer(192));
RegRegisterMethod(TCustomAdapter,'ImplGetVariable',TypeInfo(_T160),[TypeInfo(Integer),TypeInfo(TComponent)],  getVMTProcAddr('TCustomAdapter','ImplGetVariable',192));


//RegRegisterMethod(TCustomAdapter,'ImplGetFieldsList',TypeInfo(_T161),[TypeInfo(TStrings)], pointer(196));
RegRegisterMethod(TCustomAdapter,'ImplGetFieldsList',TypeInfo(_T161),[TypeInfo(TStrings)],  getVMTProcAddr('TCustomAdapter','ImplGetFieldsList',196));


//RegRegisterMethod(TCustomAdapter,'ImplGetVisibleFields',TypeInfo(_T162),[TypeInfo(TWebComponentList)], pointer(200));
RegRegisterMethod(TCustomAdapter,'ImplGetVisibleFields',TypeInfo(_T162),[TypeInfo(TWebComponentList)],  getVMTProcAddr('TCustomAdapter','ImplGetVisibleFields',200));


//RegRegisterMethod(TCustomAdapter,'ImplGetActionsList',TypeInfo(_T164),[TypeInfo(TStrings)], pointer(208));
RegRegisterMethod(TCustomAdapter,'ImplGetActionsList',TypeInfo(_T164),[TypeInfo(TStrings)],  getVMTProcAddr('TCustomAdapter','ImplGetActionsList',208));


//RegRegisterMethod(TCustomAdapter,'ImplGetVisibleActions',TypeInfo(_T165),[TypeInfo(TWebComponentList)], pointer(212));
RegRegisterMethod(TCustomAdapter,'ImplGetVisibleActions',TypeInfo(_T165),[TypeInfo(TWebComponentList)],  getVMTProcAddr('TCustomAdapter','ImplGetVisibleActions',212));


//RegRegisterMethod(TCustomAdapterBooleanField,'ImplIsEqual',TypeInfo(_T167),[TypeInfo(Variant),TypeInfo(Boolean)], pointer(180));
RegRegisterMethod(TCustomAdapterBooleanField,'ImplIsEqual',TypeInfo(_T167),[TypeInfo(Variant),TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapterBooleanField','ImplIsEqual',180));


//RegRegisterMethod(TCustomAdapterImageField,'ImplWebImageHREF',TypeInfo(_T170),[TypeInfo(string),TypeInfo(Boolean)], pointer(188));
RegRegisterMethod(TCustomAdapterImageField,'ImplWebImageHREF',TypeInfo(_T170),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapterImageField','ImplWebImageHREF',188));


//RegRegisterMethod(TCustomAdapterPageAction,'GetNewPage',TypeInfo(_T171),[TypeInfo(Integer),TypeInfo(Boolean)], pointer(156));
RegRegisterMethod(TCustomAdapterPageAction,'GetNewPage',TypeInfo(_T171),[TypeInfo(Integer),TypeInfo(Boolean)],  getVMTProcAddr('TCustomAdapterPageAction','GetNewPage',156));


//RegRegisterMethod(TCustomLoginFormAdapter,'GetNextPage',TypeInfo(_T172),[TypeInfo(string)], pointer(228));
RegRegisterMethod(TCustomLoginFormAdapter,'GetNextPage',TypeInfo(_T172),[TypeInfo(string)],  getVMTProcAddr('TCustomLoginFormAdapter','GetNextPage',228));


//RegRegisterMethod(TCustomStringsValuesList,'PrepareStrings',TypeInfo(_T173),NoParams, pointer(256));
RegRegisterMethod(TCustomStringsValuesList,'PrepareStrings',TypeInfo(_T173),NoParams,  getVMTProcAddr('TCustomStringsValuesList','PrepareStrings',256));


//RegRegisterMethod(TDefaultFieldsAdapter,'AddDefaultFields',TypeInfo(_T174),[TypeInfo(TWebComponentList)], pointer(220));
RegRegisterMethod(TDefaultFieldsAdapter,'AddDefaultFields',TypeInfo(_T174),[TypeInfo(TWebComponentList)],  getVMTProcAddr('TDefaultFieldsAdapter','AddDefaultFields',220));


//RegRegisterMethod(TDefaultFieldsAdapter,'AddDefaultActions',TypeInfo(_T175),[TypeInfo(TWebComponentList)], pointer(224));
RegRegisterMethod(TDefaultFieldsAdapter,'AddDefaultActions',TypeInfo(_T175),[TypeInfo(TWebComponentList)],  getVMTProcAddr('TDefaultFieldsAdapter','AddDefaultActions',224));


//RegRegisterMethod(TDefaultFieldsPagedAdapter,'GetNextRecord',TypeInfo(_T176),[TypeInfo(Boolean)], pointer(228));
RegRegisterMethod(TDefaultFieldsPagedAdapter,'GetNextRecord',TypeInfo(_T176),[TypeInfo(Boolean)],  getVMTProcAddr('TDefaultFieldsPagedAdapter','GetNextRecord',228));


//RegRegisterMethod(TDefaultFieldsPagedAdapter,'GetFirstRecord',TypeInfo(_T177),[TypeInfo(Boolean)], pointer(232));
RegRegisterMethod(TDefaultFieldsPagedAdapter,'GetFirstRecord',TypeInfo(_T177),[TypeInfo(Boolean)],  getVMTProcAddr('TDefaultFieldsPagedAdapter','GetFirstRecord',232));


//RegRegisterMethod(TDefaultFieldsPagedAdapter,'GetEOF',TypeInfo(_T178),[TypeInfo(Boolean)], pointer(236));
RegRegisterMethod(TDefaultFieldsPagedAdapter,'GetEOF',TypeInfo(_T178),[TypeInfo(Boolean)],  getVMTProcAddr('TDefaultFieldsPagedAdapter','GetEOF',236));


//RegRegisterMethod(TDefaultFieldsPagedAdapter,'GetRecordIndex',TypeInfo(_T179),[TypeInfo(Integer)], pointer(240));
RegRegisterMethod(TDefaultFieldsPagedAdapter,'GetRecordIndex',TypeInfo(_T179),[TypeInfo(Integer)],  getVMTProcAddr('TDefaultFieldsPagedAdapter','GetRecordIndex',240));


//RegRegisterMethod(TDefaultFieldsPagedAdapter,'GetRecordCount',TypeInfo(_T180),[TypeInfo(Integer)], pointer(244));
RegRegisterMethod(TDefaultFieldsPagedAdapter,'GetRecordCount',TypeInfo(_T180),[TypeInfo(Integer)],  getVMTProcAddr('TDefaultFieldsPagedAdapter','GetRecordCount',244));


RegisterProc(TFieldValuesAdapter,'Create',mtConstructor,TypeInfo(_T181),[
TypeInfo(TComponent),
TypeInfo(TObject)], pointer(240),cRegister);

//RegRegisterMethod(TLoginFormAdapterLoginAction,'NextPage',TypeInfo(_T182),[TypeInfo(string)], pointer(156));
RegRegisterMethod(TLoginFormAdapterLoginAction,'NextPage',TypeInfo(_T182),[TypeInfo(string)],  getVMTProcAddr('TLoginFormAdapterLoginAction','NextPage',156));


end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegRegisterMethod(TAbstractFieldValuesAdapter,'GetValueFieldClass',TypeInfo(_T12),[TypeInfo(TComponentClass)], pointer(228))}

{RegRegisterMethod(TAdapterNamedField,'GetWebSnapObjClass',TypeInfo(_T33),[TypeInfo(TObjectScripterClass)], pointer(84))}

{RegRegisterMethod(TAdapterNextPageField,'UpdateValue',TypeInfo(_T44),[
TypeInfo(IActionRequest),
TypeInfo(Integer)], pointer(140))}

{RegRegisterMethod(TAdapterSubComponent,'ImplCanAddClass',TypeInfo(_T48),[
TypeInfo(TComponent),
TypeInfo(TClass),TypeInfo(Boolean)], pointer(68))}

{RegRegisterMethod(TAdapterUpdateField,'DoOnValidateValue',TypeInfo(_T53),[
TypeInfo(IActionFieldValue),
TypeInfo(Boolean)], pointer(148))}

{RegRegisterMethod(TAdapterUpdateField,'ConvertValues',TypeInfo(_T55),[
TypeInfo(IActionFieldValue),
TypeInfo(Integer),TypeInfo(Variant)], pointer(156))}

{RegRegisterMethod(TAdapterUpdateField,'ConvertValue',TypeInfo(_T56),[
TypeInfo(IActionFieldValue),TypeInfo(Variant)], pointer(160))}

{RegRegisterMethod(TAdapterUpdateField,'ConvertValueCount',TypeInfo(_T57),[
TypeInfo(IActionFieldValue),TypeInfo(Integer)], pointer(164))}

{RegRegisterMethod(TAdapterUpdateField,'ImplCheckValueChange',TypeInfo(_T58),[
TypeInfo(IActionRequest),
TypeInfo(Integer),TypeInfo(Boolean)], pointer(168))}

{RegRegisterMethod(TAdapterUpdateField,'ImplValidateValue',TypeInfo(_T59),[
TypeInfo(IActionRequest),
TypeInfo(Integer)], pointer(172))}

{RegRegisterMethod(TAdapterUpdateField,'ImplUpdateValue',TypeInfo(_T60),[
TypeInfo(IActionRequest),
TypeInfo(Integer)], pointer(176))}

{RegRegisterMethod(TBaseAdapterAction,'DoBeforeExecuteActionRequest',TypeInfo(_T62),[
TypeInfo(IActionRequest),
TypeInfo(IActionResponse)], pointer(60))}

{RegRegisterMethod(TBaseAdapterAction,'DoAfterExecuteActionRequest',TypeInfo(_T63),[
TypeInfo(IActionRequest),
TypeInfo(IActionResponse)], pointer(64))}

{RegRegisterMethod(TBaseAdapterAction,'DoBeforeGetExecuteActionResponse',TypeInfo(_T64),[
TypeInfo(IActionRequest),
TypeInfo(IActionResponse)], pointer(68))}

{RegRegisterMethod(TBaseAdapterAction,'DoAfterGetExecuteActionResponse',TypeInfo(_T65),[
TypeInfo(IActionRequest),
TypeInfo(IActionResponse)], pointer(72))}

{RegRegisterMethod(TBaseAdapterAction,'ImplGetExecuteActionResponse',TypeInfo(_T66),[
TypeInfo(IActionRequest),
TypeInfo(IActionResponse)], pointer(76))}

{RegRegisterMethod(TBaseAdapterAction,'ImplExecuteActionRequest',TypeInfo(_T67),[
TypeInfo(IActionRequest),
TypeInfo(IActionResponse)], pointer(80))}

{RegRegisterMethod(TBaseAdapterAction,'ImplHandleRequest',TypeInfo(_T78),[
TypeInfo(IAdapterDispatchParams),TypeInfo(Boolean)], pointer(124))}

{RegRegisterMethod(TBaseAdapterAction,'GetWebSnapObjClass',TypeInfo(_T80),[TypeInfo(TObjectScripterClass)], pointer(132))}

{RegRegisterMethod(TBaseAdapterAction,'ImplGetAdapterItemRequestParams',TypeInfo(_T82),[
TypeInfo(string),
TypeInfo(IAdapterItemRequestParams)], pointer(140))}

{RegRegisterMethod(TBaseAdapterErrorsList,'ImplGetError',TypeInfo(_T88),[
TypeInfo(Integer),TypeInfo(IAdapterError)], pointer(8))}

{RegRegisterMethod(TBaseEndUserAdapter,'DoOnHasRights',TypeInfo(_T107),[
TypeInfo(TEndUserRightsEvent),
TypeInfo(string),TypeInfo(Boolean)], pointer(264))}

{RegRegisterMethod(TBaseValuesListAdapter,'GetNameFieldClass',TypeInfo(_T117),[TypeInfo(TComponentClass)], pointer(228))}

{RegRegisterMethod(TBaseValuesListAdapter,'GetValueFieldClass',TypeInfo(_T118),[TypeInfo(TComponentClass)], pointer(232))}

{RegRegisterMethod(TCustomAdapter,'ExtractRequestParams',TypeInfo(_T125),[
TypeInfo(IUnknown)], pointer(52))}

{RegRegisterMethod(TCustomAdapter,'EncodeActionParams',TypeInfo(_T126),[
TypeInfo(IAdapterItemRequestParams)], pointer(56))}

{RegRegisterMethod(TCustomAdapter,'UpdateFieldsValidateValues',TypeInfo(_T127),[
TypeInfo(IActionRequest),
TypeInfo(TObjectList)], pointer(60))}

{RegRegisterMethod(TCustomAdapter,'UpdateRecordsValidateValues',TypeInfo(_T128),[
TypeInfo(IActionRequest),
TypeInfo(TObjectList)], pointer(64))}

{RegRegisterMethod(TCustomAdapter,'UpdateRecordsGetAnyChanges',TypeInfo(_T129),[
TypeInfo(IActionRequest),
TypeInfo(TObjectList),TypeInfo(Boolean)], pointer(68))}

{RegRegisterMethod(TCustomAdapter,'UpdateFieldsGetAnyChanges',TypeInfo(_T130),[
TypeInfo(IActionRequest),
TypeInfo(TObjectList),TypeInfo(Boolean)], pointer(72))}

{RegRegisterMethod(TCustomAdapter,'UpdateFieldsUpdateValues',TypeInfo(_T131),[
TypeInfo(IActionRequest),
TypeInfo(TObjectList)], pointer(76))}

{RegRegisterMethod(TCustomAdapter,'UpdateFieldsExecuteValues',TypeInfo(_T132),[
TypeInfo(IActionRequest),
TypeInfo(TObjectList)], pointer(80))}

{RegRegisterMethod(TCustomAdapter,'UpdateRecordsUpdateValues',TypeInfo(_T133),[
TypeInfo(IActionRequest),
TypeInfo(TObjectList)], pointer(84))}

{RegRegisterMethod(TCustomAdapter,'GetActionsClass',TypeInfo(_T135),[TypeInfo(TAdapterActionsClass)], pointer(92))}

{RegRegisterMethod(TCustomAdapter,'GetDataClass',TypeInfo(_T136),[TypeInfo(TAdapterFieldsClass)], pointer(96))}

{RegRegisterMethod(TCustomAdapter,'ImplCanAddFieldClass',TypeInfo(_T151),[
TypeInfo(TComponent),
TypeInfo(TClass),TypeInfo(Boolean)], pointer(156))}

{RegRegisterMethod(TCustomAdapter,'ImplCanAddActionClass',TypeInfo(_T152),[
TypeInfo(TComponent),
TypeInfo(TClass),TypeInfo(Boolean)], pointer(160))}

{RegRegisterMethod(TCustomAdapter,'GetWebSnapObjClass',TypeInfo(_T163),[TypeInfo(TObjectScripterClass)], pointer(204))}

{RegRegisterMethod(TCustomAdapterImageField,'RenderAdapterImage',TypeInfo(_T168),[
TypeInfo(IImageRequest),
TypeInfo(IImageResponse)], pointer(180))}

{RegRegisterMethod(TCustomAdapterImageField,'ImplHandleRequest',TypeInfo(_T169),[
TypeInfo(IAdapterDispatchParams),TypeInfo(Boolean)], pointer(184))}

{RegisterProc(TUpdateFileList,'Create',mtConstructor,TypeInfo(_T183),[
TypeInfo(IActionFieldValue)],Addr(TUpdateFileList.Create),cRegister)}

RegisterEvent(TypeInfo(TActionExecuteEvent),[
TypeInfo(TObject),
TypeInfo(TStrings)]);

RegisterEvent(TypeInfo(TActionExecuteHandledEvent),[
TypeInfo(TObject),
TypeInfo(TStrings),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TActionGetEnabledEvent),[
TypeInfo(TObject),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TActionGetParamsEvent),[
TypeInfo(TObject),
TypeInfo(TStrings)]);

{RegisterEvent(TypeInfo(TActionRequestFieldsEvent),[
TypeInfo(TObject),
TypeInfo(IActionRequest),
TypeInfo(TObjectList)]);}

{RegisterEvent(TypeInfo(TActionRequestFieldsHandledEvent),[
TypeInfo(TObject),
TypeInfo(IActionRequest),
TypeInfo(TObjectList),
TypeInfo(Boolean)]);}

RegisterEvent(TypeInfo(TAdapterActionExecuteEvent),[
TypeInfo(TObject),
TypeInfo(TObject),
TypeInfo(TStrings)]);

RegisterEvent(TypeInfo(TAdapterActionExecuteHandledEvent),[
TypeInfo(TObject),
TypeInfo(TObject),
TypeInfo(TStrings),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TAdapterActionGetParamsEvent),[
TypeInfo(TObject),
TypeInfo(TObject),
TypeInfo(TStrings)]);

RegisterEvent(TypeInfo(TAdapterFieldBooleanValueEvent),[
TypeInfo(TObject),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TAdapterFieldFileEvent),[
TypeInfo(TObject),
TypeInfo(TAbstractWebRequestFile)]);

RegisterEvent(TypeInfo(TAdapterFieldFileListEvent),[
TypeInfo(TObject),
TypeInfo(TUpdateFileList)]);

RegisterEvent(TypeInfo(TAdapterFieldGetBooleanEvent),[
TypeInfo(TObject),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TAdapterFieldGetMultiValueEvent),[
TypeInfo(TObject),
TypeInfo(Integer),
TypeInfo(Variant)]);

RegisterEvent(TypeInfo(TAdapterFieldGetMultiValueStringEvent),[
TypeInfo(TObject),
TypeInfo(Integer),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TAdapterFieldGetStringEvent),[
TypeInfo(TObject),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TAdapterFieldGetValueCountEvent),[
TypeInfo(TObject),
TypeInfo(Integer)]);

RegisterEvent(TypeInfo(TAdapterFieldGetValueEvent),[
TypeInfo(TObject),
TypeInfo(Variant)]);

RegisterEvent(TypeInfo(TAdapterFieldHasValueEvent),[
TypeInfo(TObject),
TypeInfo(Variant),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TAdapterFieldStringEvent),[
TypeInfo(TObject),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TAdapterFieldStringsEvent),[
TypeInfo(TObject),
TypeInfo(TStrings)]);

{RegisterEvent(TypeInfo(TAdapterFieldValidateValueEvent),[
TypeInfo(TObject),
TypeInfo(IActionFieldValue),
TypeInfo(Boolean)]);}

RegisterEvent(TypeInfo(TAdapterFieldValueEvent),[
TypeInfo(TObject),
TypeInfo(Variant)]);

RegisterEvent(TypeInfo(TEndUserGetNameEvent),[
TypeInfo(TObject),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TEndUserGetUserIDEvent),[
TypeInfo(TObject),
TypeInfo(Variant)]);

RegisterEvent(TypeInfo(TEndUserHandledEvent),[
TypeInfo(TObject),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TEndUserIsLoggedInEvent),[
TypeInfo(TObject),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TEndUserRightsEvent),[
TypeInfo(TObject),
TypeInfo(TStrings),
TypeInfo(Boolean),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TEndUserUserIDEvent),[
TypeInfo(TObject),
TypeInfo(Variant)]);

RegisterEvent(TypeInfo(TGetEOFEvent),[
TypeInfo(TObject),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TGetRecordCountEvent),[
TypeInfo(TObject),
TypeInfo(Integer)]);

RegisterEvent(TypeInfo(TGetRecordEvent),[
TypeInfo(TObject),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TGetRecordIndexEvent),[
TypeInfo(TObject),
TypeInfo(Integer)]);

RegisterEvent(TypeInfo(THandledEvent),[
TypeInfo(TObject),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TImageFieldGetHREFEvent),[
TypeInfo(TObject),
TypeInfo(string)]);

RegisterEvent(TypeInfo(TImageFieldGetImageEvent),[
TypeInfo(TObject),
TypeInfo(TStrings),
TypeInfo(string),
TypeInfo(TStream),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TImageFieldGetParamsEvent),[
TypeInfo(TObject),
TypeInfo(TStrings)]);

RegisterEvent(TypeInfo(TIterateRecordsEvent),[
TypeInfo(TObject),
TypeInfo(TIteratorMethod),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TLoginUserIDEvent),[
TypeInfo(TObject),
TypeInfo(Variant)]);

RegisterEvent(TypeInfo(TValidateAdapterFieldEvent),[
TypeInfo(TObject),
TypeInfo(Variant),
TypeInfo(Boolean)]);

RegisterEvent(TypeInfo(TWebFormGetPageNameEvent),[
TypeInfo(TObject),
TypeInfo(Integer),
TypeInfo(string)]);

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
