{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit WEBFORM_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses rtti, 
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  Messages,
  HTTPApp,
  HTTPProd,
  WebComp,
  DB,
  SiteComp,
  WebModu,
  MidItems,
  Contnrs,
  WebForm;
implementation
  var vmtMethodList:TStringList; 
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (p0 : TComponent): TComponent of object;

_T1 = _T0;

_T2 = function (p0 : TComponent;
const p1 : string;
p2 : TDisplayFieldHTMLElementType;
var p3 : TDisplayFieldHTMLElementType): Boolean of object;

_T3 = function (p0 : TComponent;
const p1 : string;
p2 : TDisplayFieldViewMode;
var p3 : TDisplayFieldViewMode): Boolean of object;

_T4 = function (p0 : TComponent): string of object;

_T5 = _T4;

_T6 = function (p0 : string): string of object;

_T7 = procedure  of object;

_T8 = function (const p0 : string): Boolean of object;

_T9 = procedure (const p0 : string;
const p1 : string) of object;

_T10 = procedure (const p0 : string;
const p1 : string;
p2 : Boolean) of object;

_T11 = _T8;

_T12 = _T8;

_T13 = _T9;

_T14 = _T8;

_T15 = _T9;

_T16 = procedure (p0 : TComponent;
p1 : TWebContainerComponentHelper) of object;

_T17 = procedure (p0 : TAbstractControlRequirements) of object;

_T18 = _T7;

_T19 = function (p0 : TWebContentOptions): string of object;

_T20 = _T19;

_T21 = function (const p0 : string;
p1 : TWebContentOptions): string of object;

_T22 = _T17;

_T23 = _T7;

_T24 = _T7;

_T25 = _T7;

_T26 = procedure (p0 : TLayout) of object;

_T27 = function : string of object;

_T28 = _T7;

_T29 = _T17;

_T30 = _T7;

{_T31 = function (p0 : TComponent;
p1 : TClass): Boolean of object;}

_T32 = function (p0 : TWebContentOptions;
p1 : TLayout): string of object;

_T33 = _T7;

_T34 = _T7;

_T35 = _T9;

_T36 = _T8;

function __DC__GetTAdapterActionsListHelper__AddDefaultActions(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterActionsListHelper(Instance).AddDefaultActions;
end;

procedure __DC__SetTAdapterActionsListHelper__AddDefaultActions(Instance : TObject; Params : PVariantArgList);
begin
TAdapterActionsListHelper(Instance).AddDefaultActions:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterControlGroup__AddDefaultFields(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterControlGroup(Instance).AddDefaultFields;
end;

procedure __DC__SetTAdapterControlGroup__AddDefaultFields(Instance : TObject; Params : PVariantArgList);
begin
TAdapterControlGroup(Instance).AddDefaultFields:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterControlGroup__VisibleFields(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAdapterControlGroup(Instance).VisibleFields);
end;

function __DC__GetTAdapterControlGroup__Adapter(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAdapterControlGroup(Instance).Adapter);
end;

procedure __DC__SetTAdapterControlGroup__Adapter(Instance : TObject; Params : PVariantArgList);
begin
TAdapterControlGroup(Instance).Adapter:=TComponent(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTAdapterControlGroup__AdapterMode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterControlGroup(Instance).AdapterMode;
end;

procedure __DC__SetTAdapterControlGroup__AdapterMode(Instance : TObject; Params : PVariantArgList);
begin
TAdapterControlGroup(Instance).AdapterMode:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterDataDisplay__FieldName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterDataDisplay(Instance).FieldName;
end;

procedure __DC__SetTAdapterDataDisplay__FieldName(Instance : TObject; Params : PVariantArgList);
begin
TAdapterDataDisplay(Instance).FieldName:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterDataDisplay__HideOptions(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
  tmp : TDisplayFieldHideOptions;
begin
tmp := TAdapterDataDisplay(Instance).HideOptions;
result := VarFromSet(tmp, sizeof(tmp));
end;

procedure __DC__SetTAdapterDataDisplay__HideOptions(Instance : TObject; Params : PVariantArgList);
var
  tmp : TDisplayFieldHideOptions;
begin
VarToSet(tmp, sizeof(tmp), Variant(Params^[0]));
TAdapterDataDisplay(Instance).HideOptions:=tmp;
end;

function __DC__GetTAdapterDataDisplay__Align(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterDataDisplay(Instance).Align;
end;

procedure __DC__SetTAdapterDataDisplay__Align(Instance : TObject; Params : PVariantArgList);
begin
TAdapterDataDisplay(Instance).Align:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterDataDisplay__VAlign(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterDataDisplay(Instance).VAlign;
end;

procedure __DC__SetTAdapterDataDisplay__VAlign(Instance : TObject; Params : PVariantArgList);
begin
TAdapterDataDisplay(Instance).VAlign:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterDisplayReferenceGroup__DisplayComponent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TAdapterDisplayReferenceGroup(Instance).DisplayComponent);
end;

procedure __DC__SetTAdapterDisplayReferenceGroup__DisplayComponent(Instance : TObject; Params : PVariantArgList);
begin
TAdapterDisplayReferenceGroup(Instance).DisplayComponent:=TComponent(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTAdapterFormLayout__ColumnCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterFormLayout(Instance).ColumnCount;
end;

procedure __DC__SetTAdapterFormLayout__ColumnCount(Instance : TObject; Params : PVariantArgList);
begin
TAdapterFormLayout(Instance).ColumnCount:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterFormLayout__BreakButtons(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterFormLayout(Instance).BreakButtons;
end;

procedure __DC__SetTAdapterFormLayout__BreakButtons(Instance : TObject; Params : PVariantArgList);
begin
TAdapterFormLayout(Instance).BreakButtons:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterFormLayout__TableHeader(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterFormLayout(Instance).TableHeader;
end;

procedure __DC__SetTAdapterFormLayout__TableHeader(Instance : TObject; Params : PVariantArgList);
begin
TAdapterFormLayout(Instance).TableHeader:=OleVariant(Params^[0]);
end;

function __DC__GetTAdapterFormLayout__FieldIndent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterFormLayout(Instance).FieldIndent;
end;

function __DC__GetTAdapterFormLayout__TableIndent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterFormLayout(Instance).TableIndent;
end;

function __DC__GetTAdapterFormLayout__ChildTableIndent(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TAdapterFormLayout(Instance).ChildTableIndent;
end;

function __DC__GetTControlRequirements__NeedMultipartForm(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TControlRequirements(Instance).NeedMultipartForm;
end;

function __DC__GetTCustomAdapterActionButton__ActionName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterActionButton(Instance).ActionName;
end;

procedure __DC__SetTCustomAdapterActionButton__ActionName(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterActionButton(Instance).ActionName:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterActionButton__PageName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterActionButton(Instance).PageName;
end;

procedure __DC__SetTCustomAdapterActionButton__PageName(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterActionButton(Instance).PageName:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterActionButton__ErrorPageName(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterActionButton(Instance).ErrorPageName;
end;

procedure __DC__SetTCustomAdapterActionButton__ErrorPageName(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterActionButton(Instance).ErrorPageName:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterActionButton__DisplayType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterActionButton(Instance).DisplayType;
end;

procedure __DC__SetTCustomAdapterActionButton__DisplayType(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterActionButton(Instance).DisplayType:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterActionButton__ImageWidth(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterActionButton(Instance).ImageWidth;
end;

procedure __DC__SetTCustomAdapterActionButton__ImageWidth(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterActionButton(Instance).ImageWidth:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterActionButton__ImageHeight(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterActionButton(Instance).ImageHeight;
end;

procedure __DC__SetTCustomAdapterActionButton__ImageHeight(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterActionButton(Instance).ImageHeight:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterActionButton__HideOptions(Instance : TObject; Params : PVariantArgList) : OleVariant;
var
  tmp : TActionButtonHideOptions;
begin
tmp := TCustomAdapterActionButton(Instance).HideOptions;
result := VarFromSet(tmp, sizeof(tmp));
end;

procedure __DC__SetTCustomAdapterActionButton__HideOptions(Instance : TObject; Params : PVariantArgList);
var
  tmp : TActionButtonHideOptions;
begin
VarToSet(tmp, sizeof(tmp), Variant(Params^[0]));
TCustomAdapterActionButton(Instance).HideOptions:=tmp;
end;

function __DC__GetTCustomAdapterActionButton__DisplayColumns(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterActionButton(Instance).DisplayColumns;
end;

procedure __DC__SetTCustomAdapterActionButton__DisplayColumns(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterActionButton(Instance).DisplayColumns:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterActionButton__Align(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterActionButton(Instance).Align;
end;

procedure __DC__SetTCustomAdapterActionButton__Align(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterActionButton(Instance).Align:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterActionButton__VAlign(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterActionButton(Instance).VAlign;
end;

procedure __DC__SetTCustomAdapterActionButton__VAlign(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterActionButton(Instance).VAlign:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandColumn__VisibleCommands(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomAdapterCommandColumn(Instance).VisibleCommands);
end;

function __DC__GetTCustomAdapterCommandColumn__DisplayColumns(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandColumn(Instance).DisplayColumns;
end;

procedure __DC__SetTCustomAdapterCommandColumn__DisplayColumns(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandColumn(Instance).DisplayColumns:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandColumn__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandColumn(Instance).Style;
end;

procedure __DC__SetTCustomAdapterCommandColumn__Style(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandColumn(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandColumn__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandColumn(Instance).Custom;
end;

procedure __DC__SetTCustomAdapterCommandColumn__Custom(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandColumn(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandColumn__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandColumn(Instance).StyleRule;
end;

procedure __DC__SetTCustomAdapterCommandColumn__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandColumn(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandColumn__CaptionAttributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomAdapterCommandColumn(Instance).CaptionAttributes);
end;

procedure __DC__SetTCustomAdapterCommandColumn__CaptionAttributes(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandColumn(Instance).CaptionAttributes:=TCaptionAttributes(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomAdapterCommandColumn__Caption(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandColumn(Instance).Caption;
end;

procedure __DC__SetTCustomAdapterCommandColumn__Caption(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandColumn(Instance).Caption:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandColumn__AddDefaultCommands(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandColumn(Instance).AddDefaultCommands;
end;

procedure __DC__SetTCustomAdapterCommandColumn__AddDefaultCommands(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandColumn(Instance).AddDefaultCommands:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandColumn__Align(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandColumn(Instance).Align;
end;

procedure __DC__SetTCustomAdapterCommandColumn__Align(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandColumn(Instance).Align:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandColumn__VAlign(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandColumn(Instance).VAlign;
end;

procedure __DC__SetTCustomAdapterCommandColumn__VAlign(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandColumn(Instance).VAlign:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandGroup__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandGroup(Instance).Custom;
end;

procedure __DC__SetTCustomAdapterCommandGroup__Custom(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandGroup(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandGroup__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandGroup(Instance).Style;
end;

procedure __DC__SetTCustomAdapterCommandGroup__Style(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandGroup(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandGroup__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandGroup(Instance).StyleRule;
end;

procedure __DC__SetTCustomAdapterCommandGroup__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandGroup(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterCommandGroup__VisibleCommands(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomAdapterCommandGroup(Instance).VisibleCommands);
end;

function __DC__GetTCustomAdapterCommandGroup__AddDefaultCommands(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterCommandGroup(Instance).AddDefaultCommands;
end;

procedure __DC__SetTCustomAdapterCommandGroup__AddDefaultCommands(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterCommandGroup(Instance).AddDefaultCommands:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayColumn__DisplayType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayColumn(Instance).DisplayType;
end;

procedure __DC__SetTCustomAdapterDisplayColumn__DisplayType(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayColumn(Instance).DisplayType:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayColumn__ImageWidth(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayColumn(Instance).ImageWidth;
end;

procedure __DC__SetTCustomAdapterDisplayColumn__ImageWidth(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayColumn(Instance).ImageWidth:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayColumn__ImageHeight(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayColumn(Instance).ImageHeight;
end;

procedure __DC__SetTCustomAdapterDisplayColumn__ImageHeight(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayColumn(Instance).ImageHeight:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__DisplayWidth(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).DisplayWidth;
end;

procedure __DC__SetTCustomAdapterDisplayField__DisplayWidth(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).DisplayWidth:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__ViewMode(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).ViewMode;
end;

procedure __DC__SetTCustomAdapterDisplayField__ViewMode(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).ViewMode:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__DisplayType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).DisplayType;
end;

procedure __DC__SetTCustomAdapterDisplayField__DisplayType(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).DisplayType:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__InputType(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).InputType;
end;

procedure __DC__SetTCustomAdapterDisplayField__InputType(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).InputType:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__ImageWidth(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).ImageWidth;
end;

procedure __DC__SetTCustomAdapterDisplayField__ImageWidth(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).ImageWidth:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__ImageHeight(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).ImageHeight;
end;

procedure __DC__SetTCustomAdapterDisplayField__ImageHeight(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).ImageHeight:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__SelectRows(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).SelectRows;
end;

procedure __DC__SetTCustomAdapterDisplayField__SelectRows(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).SelectRows:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__MaxLength(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).MaxLength;
end;

procedure __DC__SetTCustomAdapterDisplayField__MaxLength(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).MaxLength:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__TextAreaWrap(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).TextAreaWrap;
end;

procedure __DC__SetTCustomAdapterDisplayField__TextAreaWrap(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).TextAreaWrap:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__DisplayRows(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).DisplayRows;
end;

procedure __DC__SetTCustomAdapterDisplayField__DisplayRows(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).DisplayRows:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterDisplayField__DisplayColumns(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterDisplayField(Instance).DisplayColumns;
end;

procedure __DC__SetTCustomAdapterDisplayField__DisplayColumns(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterDisplayField(Instance).DisplayColumns:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterErrorList__Adapter(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomAdapterErrorList(Instance).Adapter);
end;

procedure __DC__SetTCustomAdapterErrorList__Adapter(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterErrorList(Instance).Adapter:=TComponent(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomAdapterFieldGroup__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterFieldGroup(Instance).Style;
end;

procedure __DC__SetTCustomAdapterFieldGroup__Style(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterFieldGroup(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterFieldGroup__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterFieldGroup(Instance).Custom;
end;

procedure __DC__SetTCustomAdapterFieldGroup__Custom(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterFieldGroup(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterFieldGroup__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterFieldGroup(Instance).StyleRule;
end;

procedure __DC__SetTCustomAdapterFieldGroup__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterFieldGroup(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterForm__Style(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterForm(Instance).Style;
end;

procedure __DC__SetTCustomAdapterForm__Style(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterForm(Instance).Style:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterForm__Custom(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterForm(Instance).Custom;
end;

procedure __DC__SetTCustomAdapterForm__Custom(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterForm(Instance).Custom:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterForm__StyleRule(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterForm(Instance).StyleRule;
end;

procedure __DC__SetTCustomAdapterForm__StyleRule(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterForm(Instance).StyleRule:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterForm__FormMethod(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCustomAdapterForm(Instance).FormMethod;
end;

procedure __DC__SetTCustomAdapterForm__FormMethod(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterForm(Instance).FormMethod:=OleVariant(Params^[0]);
end;

function __DC__GetTCustomAdapterGrid__TableAttributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomAdapterGrid(Instance).TableAttributes);
end;

procedure __DC__SetTCustomAdapterGrid__TableAttributes(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterGrid(Instance).TableAttributes:=TGridAttributes(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomAdapterGrid__HeadingAttributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomAdapterGrid(Instance).HeadingAttributes);
end;

procedure __DC__SetTCustomAdapterGrid__HeadingAttributes(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterGrid(Instance).HeadingAttributes:=TGridRowAttributes(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTCustomAdapterGrid__RowAttributes(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TCustomAdapterGrid(Instance).RowAttributes);
end;

procedure __DC__SetTCustomAdapterGrid__RowAttributes(Instance : TObject; Params : PVariantArgList);
begin
TCustomAdapterGrid(Instance).RowAttributes:=TGridRowAttributes(VarToObject(OleVariant(Params^[0])));
end;

function __DC__GetTDesigntimeWarnings__Strings(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(TDesigntimeWarnings(Instance).Strings);
end;

function __DC__GetTGeneratedFunctions__Script(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TGeneratedFunctions(Instance).Script[OleVariant(Params^[0])];
end;

function __DC__GetTGeneratedFunctions__ItemCount(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TGeneratedFunctions(Instance).ItemCount;
end;

function __DC__GetTGeneratedFunctions__Names(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TGeneratedFunctions(Instance).Names[OleVariant(Params^[0])];
end;

procedure __RegisterProps;
begin
RegisterProperty(TAdapterActionsListHelper,'AddDefaultActions',__DC__GetTAdapterActionsListHelper__AddDefaultActions,__DC__SetTAdapterActionsListHelper__AddDefaultActions);
RegisterProperty(TAdapterControlGroup,'AddDefaultFields',__DC__GetTAdapterControlGroup__AddDefaultFields,__DC__SetTAdapterControlGroup__AddDefaultFields);
RegisterProperty(TAdapterControlGroup,'VisibleFields',__DC__GetTAdapterControlGroup__VisibleFields,nil);
RegisterProperty(TAdapterControlGroup,'Adapter',__DC__GetTAdapterControlGroup__Adapter,__DC__SetTAdapterControlGroup__Adapter);
RegisterProperty(TAdapterControlGroup,'AdapterMode',__DC__GetTAdapterControlGroup__AdapterMode,__DC__SetTAdapterControlGroup__AdapterMode);
RegisterProperty(TAdapterDataDisplay,'FieldName',__DC__GetTAdapterDataDisplay__FieldName,__DC__SetTAdapterDataDisplay__FieldName);
RegisterProperty(TAdapterDataDisplay,'HideOptions',__DC__GetTAdapterDataDisplay__HideOptions,__DC__SetTAdapterDataDisplay__HideOptions);
RegisterProperty(TAdapterDataDisplay,'Align',__DC__GetTAdapterDataDisplay__Align,__DC__SetTAdapterDataDisplay__Align);
RegisterProperty(TAdapterDataDisplay,'VAlign',__DC__GetTAdapterDataDisplay__VAlign,__DC__SetTAdapterDataDisplay__VAlign);
RegisterProperty(TAdapterDisplayReferenceGroup,'DisplayComponent',__DC__GetTAdapterDisplayReferenceGroup__DisplayComponent,__DC__SetTAdapterDisplayReferenceGroup__DisplayComponent);
RegisterProperty(TAdapterFormLayout,'ColumnCount',__DC__GetTAdapterFormLayout__ColumnCount,__DC__SetTAdapterFormLayout__ColumnCount);
RegisterProperty(TAdapterFormLayout,'BreakButtons',__DC__GetTAdapterFormLayout__BreakButtons,__DC__SetTAdapterFormLayout__BreakButtons);
RegisterProperty(TAdapterFormLayout,'TableHeader',__DC__GetTAdapterFormLayout__TableHeader,__DC__SetTAdapterFormLayout__TableHeader);
RegisterProperty(TAdapterFormLayout,'FieldIndent',__DC__GetTAdapterFormLayout__FieldIndent,nil);
RegisterProperty(TAdapterFormLayout,'TableIndent',__DC__GetTAdapterFormLayout__TableIndent,nil);
RegisterProperty(TAdapterFormLayout,'ChildTableIndent',__DC__GetTAdapterFormLayout__ChildTableIndent,nil);
RegisterProperty(TControlRequirements,'NeedMultipartForm',__DC__GetTControlRequirements__NeedMultipartForm,nil);
RegisterProperty(TCustomAdapterActionButton,'ActionName',__DC__GetTCustomAdapterActionButton__ActionName,__DC__SetTCustomAdapterActionButton__ActionName);
RegisterProperty(TCustomAdapterActionButton,'PageName',__DC__GetTCustomAdapterActionButton__PageName,__DC__SetTCustomAdapterActionButton__PageName);
RegisterProperty(TCustomAdapterActionButton,'ErrorPageName',__DC__GetTCustomAdapterActionButton__ErrorPageName,__DC__SetTCustomAdapterActionButton__ErrorPageName);
RegisterProperty(TCustomAdapterActionButton,'DisplayType',__DC__GetTCustomAdapterActionButton__DisplayType,__DC__SetTCustomAdapterActionButton__DisplayType);
RegisterProperty(TCustomAdapterActionButton,'ImageWidth',__DC__GetTCustomAdapterActionButton__ImageWidth,__DC__SetTCustomAdapterActionButton__ImageWidth);
RegisterProperty(TCustomAdapterActionButton,'ImageHeight',__DC__GetTCustomAdapterActionButton__ImageHeight,__DC__SetTCustomAdapterActionButton__ImageHeight);
RegisterProperty(TCustomAdapterActionButton,'HideOptions',__DC__GetTCustomAdapterActionButton__HideOptions,__DC__SetTCustomAdapterActionButton__HideOptions);
RegisterProperty(TCustomAdapterActionButton,'DisplayColumns',__DC__GetTCustomAdapterActionButton__DisplayColumns,__DC__SetTCustomAdapterActionButton__DisplayColumns);
RegisterProperty(TCustomAdapterActionButton,'Align',__DC__GetTCustomAdapterActionButton__Align,__DC__SetTCustomAdapterActionButton__Align);
RegisterProperty(TCustomAdapterActionButton,'VAlign',__DC__GetTCustomAdapterActionButton__VAlign,__DC__SetTCustomAdapterActionButton__VAlign);
RegisterProperty(TCustomAdapterCommandColumn,'VisibleCommands',__DC__GetTCustomAdapterCommandColumn__VisibleCommands,nil);
RegisterProperty(TCustomAdapterCommandColumn,'DisplayColumns',__DC__GetTCustomAdapterCommandColumn__DisplayColumns,__DC__SetTCustomAdapterCommandColumn__DisplayColumns);
RegisterProperty(TCustomAdapterCommandColumn,'Style',__DC__GetTCustomAdapterCommandColumn__Style,__DC__SetTCustomAdapterCommandColumn__Style);
RegisterProperty(TCustomAdapterCommandColumn,'Custom',__DC__GetTCustomAdapterCommandColumn__Custom,__DC__SetTCustomAdapterCommandColumn__Custom);
RegisterProperty(TCustomAdapterCommandColumn,'StyleRule',__DC__GetTCustomAdapterCommandColumn__StyleRule,__DC__SetTCustomAdapterCommandColumn__StyleRule);
RegisterProperty(TCustomAdapterCommandColumn,'CaptionAttributes',__DC__GetTCustomAdapterCommandColumn__CaptionAttributes,__DC__SetTCustomAdapterCommandColumn__CaptionAttributes);
RegisterProperty(TCustomAdapterCommandColumn,'Caption',__DC__GetTCustomAdapterCommandColumn__Caption,__DC__SetTCustomAdapterCommandColumn__Caption);
RegisterProperty(TCustomAdapterCommandColumn,'AddDefaultCommands',__DC__GetTCustomAdapterCommandColumn__AddDefaultCommands,__DC__SetTCustomAdapterCommandColumn__AddDefaultCommands);
RegisterProperty(TCustomAdapterCommandColumn,'Align',__DC__GetTCustomAdapterCommandColumn__Align,__DC__SetTCustomAdapterCommandColumn__Align);
RegisterProperty(TCustomAdapterCommandColumn,'VAlign',__DC__GetTCustomAdapterCommandColumn__VAlign,__DC__SetTCustomAdapterCommandColumn__VAlign);
RegisterProperty(TCustomAdapterCommandGroup,'Custom',__DC__GetTCustomAdapterCommandGroup__Custom,__DC__SetTCustomAdapterCommandGroup__Custom);
RegisterProperty(TCustomAdapterCommandGroup,'Style',__DC__GetTCustomAdapterCommandGroup__Style,__DC__SetTCustomAdapterCommandGroup__Style);
RegisterProperty(TCustomAdapterCommandGroup,'StyleRule',__DC__GetTCustomAdapterCommandGroup__StyleRule,__DC__SetTCustomAdapterCommandGroup__StyleRule);
RegisterProperty(TCustomAdapterCommandGroup,'VisibleCommands',__DC__GetTCustomAdapterCommandGroup__VisibleCommands,nil);
RegisterProperty(TCustomAdapterCommandGroup,'AddDefaultCommands',__DC__GetTCustomAdapterCommandGroup__AddDefaultCommands,__DC__SetTCustomAdapterCommandGroup__AddDefaultCommands);
RegisterProperty(TCustomAdapterDisplayColumn,'DisplayType',__DC__GetTCustomAdapterDisplayColumn__DisplayType,__DC__SetTCustomAdapterDisplayColumn__DisplayType);
RegisterProperty(TCustomAdapterDisplayColumn,'ImageWidth',__DC__GetTCustomAdapterDisplayColumn__ImageWidth,__DC__SetTCustomAdapterDisplayColumn__ImageWidth);
RegisterProperty(TCustomAdapterDisplayColumn,'ImageHeight',__DC__GetTCustomAdapterDisplayColumn__ImageHeight,__DC__SetTCustomAdapterDisplayColumn__ImageHeight);
RegisterProperty(TCustomAdapterDisplayField,'DisplayWidth',__DC__GetTCustomAdapterDisplayField__DisplayWidth,__DC__SetTCustomAdapterDisplayField__DisplayWidth);
RegisterProperty(TCustomAdapterDisplayField,'ViewMode',__DC__GetTCustomAdapterDisplayField__ViewMode,__DC__SetTCustomAdapterDisplayField__ViewMode);
RegisterProperty(TCustomAdapterDisplayField,'DisplayType',__DC__GetTCustomAdapterDisplayField__DisplayType,__DC__SetTCustomAdapterDisplayField__DisplayType);
RegisterProperty(TCustomAdapterDisplayField,'InputType',__DC__GetTCustomAdapterDisplayField__InputType,__DC__SetTCustomAdapterDisplayField__InputType);
RegisterProperty(TCustomAdapterDisplayField,'ImageWidth',__DC__GetTCustomAdapterDisplayField__ImageWidth,__DC__SetTCustomAdapterDisplayField__ImageWidth);
RegisterProperty(TCustomAdapterDisplayField,'ImageHeight',__DC__GetTCustomAdapterDisplayField__ImageHeight,__DC__SetTCustomAdapterDisplayField__ImageHeight);
RegisterProperty(TCustomAdapterDisplayField,'SelectRows',__DC__GetTCustomAdapterDisplayField__SelectRows,__DC__SetTCustomAdapterDisplayField__SelectRows);
RegisterProperty(TCustomAdapterDisplayField,'MaxLength',__DC__GetTCustomAdapterDisplayField__MaxLength,__DC__SetTCustomAdapterDisplayField__MaxLength);
RegisterProperty(TCustomAdapterDisplayField,'TextAreaWrap',__DC__GetTCustomAdapterDisplayField__TextAreaWrap,__DC__SetTCustomAdapterDisplayField__TextAreaWrap);
RegisterProperty(TCustomAdapterDisplayField,'DisplayRows',__DC__GetTCustomAdapterDisplayField__DisplayRows,__DC__SetTCustomAdapterDisplayField__DisplayRows);
RegisterProperty(TCustomAdapterDisplayField,'DisplayColumns',__DC__GetTCustomAdapterDisplayField__DisplayColumns,__DC__SetTCustomAdapterDisplayField__DisplayColumns);
RegisterProperty(TCustomAdapterErrorList,'Adapter',__DC__GetTCustomAdapterErrorList__Adapter,__DC__SetTCustomAdapterErrorList__Adapter);
RegisterProperty(TCustomAdapterFieldGroup,'Style',__DC__GetTCustomAdapterFieldGroup__Style,__DC__SetTCustomAdapterFieldGroup__Style);
RegisterProperty(TCustomAdapterFieldGroup,'Custom',__DC__GetTCustomAdapterFieldGroup__Custom,__DC__SetTCustomAdapterFieldGroup__Custom);
RegisterProperty(TCustomAdapterFieldGroup,'StyleRule',__DC__GetTCustomAdapterFieldGroup__StyleRule,__DC__SetTCustomAdapterFieldGroup__StyleRule);
RegisterProperty(TCustomAdapterForm,'Style',__DC__GetTCustomAdapterForm__Style,__DC__SetTCustomAdapterForm__Style);
RegisterProperty(TCustomAdapterForm,'Custom',__DC__GetTCustomAdapterForm__Custom,__DC__SetTCustomAdapterForm__Custom);
RegisterProperty(TCustomAdapterForm,'StyleRule',__DC__GetTCustomAdapterForm__StyleRule,__DC__SetTCustomAdapterForm__StyleRule);
RegisterProperty(TCustomAdapterForm,'FormMethod',__DC__GetTCustomAdapterForm__FormMethod,__DC__SetTCustomAdapterForm__FormMethod);
RegisterProperty(TCustomAdapterGrid,'TableAttributes',__DC__GetTCustomAdapterGrid__TableAttributes,__DC__SetTCustomAdapterGrid__TableAttributes);
RegisterProperty(TCustomAdapterGrid,'HeadingAttributes',__DC__GetTCustomAdapterGrid__HeadingAttributes,__DC__SetTCustomAdapterGrid__HeadingAttributes);
RegisterProperty(TCustomAdapterGrid,'RowAttributes',__DC__GetTCustomAdapterGrid__RowAttributes,__DC__SetTCustomAdapterGrid__RowAttributes);
RegisterProperty(TDesigntimeWarnings,'Strings',__DC__GetTDesigntimeWarnings__Strings,nil);
RegisterIndexedProperty(TGeneratedFunctions,'Script',1,False,__DC__GetTGeneratedFunctions__Script,nil);
RegisterProperty(TGeneratedFunctions,'ItemCount',__DC__GetTGeneratedFunctions__ItemCount,nil);
RegisterIndexedProperty(TGeneratedFunctions,'Names',1,False,__DC__GetTGeneratedFunctions__Names,nil);
end;

const __ConstNames0 : array[0..41] of string = (
'hoHideOnNoInputAccess'
,'hoHideOnNoDisplayAccess'
,'hoHideOnFieldNotVisible'
,'hoHideAlways'
,'coltDefault'
,'coltText'
,'coltImage'
,'coltList'
,'iftDefault'
,'iftTextInput'
,'iftPasswordInput'
,'iftSelect'
,'iftSelectMultiple'
,'iftRadio'
,'iftCheckBox'
,'iftTextArea'
,'iftFile'
,'dftDefault'
,'dftText'
,'dftImage'
,'dftList'
,'vmDefault'
,'vmInput'
,'vmDisplay'
,'vmToggleOnAccess'
,'bhoHideOnNoExecuteAccess'
,'bhoHideOnActionNotVisible'
,'bhoHideOnDisabledAction'
,'bhoHideAlways'
,'ctDefault'
,'ctButton'
,'ctImage'
,'ctAnchor'
,'ctEventImages'
,'lsUnknown'
,'lsFields'
,'lsButtons'
,'sMultipartForm'
,'sFormPost'
,'sFormGet'
,'sDisplayText'
,'sFieldText'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,hoHideOnNoInputAccess));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,hoHideOnNoDisplayAccess));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,hoHideOnFieldNotVisible));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,hoHideAlways));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,coltDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,coltText));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,coltImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,coltList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,iftDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,iftTextInput));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[10] ,iftPasswordInput));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[11] ,iftSelect));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[12] ,iftSelectMultiple));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[13] ,iftRadio));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[14] ,iftCheckBox));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[15] ,iftTextArea));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[16] ,iftFile));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[17] ,dftDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[18] ,dftText));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[19] ,dftImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[20] ,dftList));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[21] ,vmDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[22] ,vmInput));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[23] ,vmDisplay));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[24] ,vmToggleOnAccess));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[25] ,bhoHideOnNoExecuteAccess));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[26] ,bhoHideOnActionNotVisible));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[27] ,bhoHideOnDisabledAction));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[28] ,bhoHideAlways));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[29] ,ctDefault));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[30] ,ctButton));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[31] ,ctImage));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[32] ,ctAnchor));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[33] ,ctEventImages));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[34] ,lsUnknown));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[35] ,lsFields));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[36] ,lsButtons));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[37] ,sMultipartForm));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[38] ,sFormPost));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[39] ,sFormGet));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[40] ,sDisplayText));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[41] ,sFieldText));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..29] of TClass = (
TAbstractControlRequirements,
TAbstractFormRequirements,
TAdapterActionButton,
TAdapterActionsListHelper,
TAdapterCommandColumn,
TAdapterCommandGroup,
TAdapterControlGroup,
TAdapterDataDisplay,
TAdapterDisplayColumn,
TAdapterDisplayField,
TAdapterDisplayReferenceGroup,
TAdapterEditColumn,
TAdapterErrorList,
TAdapterFieldGroup,
TAdapterForm,
TAdapterFormLayout,
TAdapterGrid,
TControlRequirements,
TCustomAdapterActionButton,
TCustomAdapterCommandColumn,
TCustomAdapterCommandGroup,
TCustomAdapterDisplayColumn,
TCustomAdapterDisplayField,
TCustomAdapterEditColumn,
TCustomAdapterErrorList,
TCustomAdapterFieldGroup,
TCustomAdapterForm,
TCustomAdapterGrid,
TDesigntimeWarnings,
TGeneratedFunctions
);
 function __getFullMethodName(sclassName, smethodName:String):String; 
 begin 
   result := format('%s.%s',[sClassName, sMethodName]) 
 end; 
procedure fillVMTProcs();
var
  ctx : TRttiContext;
  t:TRttiType;
  m:TRttiMethod;
  i:Integer;
begin
  ctx := TRttiContext.Create;
  try
    for i := 0 to length(classList) - 1 do
    begin
      t:=ctx.GetType(classList[i].ClassInfo);
      for m in t.GetMethods  do
      begin
        if m.DispatchKind = dkVtable then
        vmtMethodList.addObject(__getFullMethodName(classList[i].className,m.Name), pointer(m.VirtualIndex*4));
      end;
      t.free;
    end;
  finally
    ctx.free;
  end;
end;
function getVMTProcAddr(className, MethodName:String;oldAddr:Integer):Pointer;
var i:Integer;
begin
  i:=vmtMethodList.indexOf(__getFullMethodName(className,methodName));
  if i>-1 then 
    result:=pointer(vmtMethodList.Objects[i])
  else 
  result:=pointer(oldAddr);
end;  
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..6] of string = (
'FindVariablesContainer'
,'FindVariablesContainerInParent'
,'CalcDisplayFieldHTMLElementType'
,'CalcDisplayFieldViewMode'
,'GetAdapterModeOfAdapterInParent'
,'MakeAdapterVariableName'
,'MakeAdapterHTMLName'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(TComponent),TypeInfo(TComponent)],Addr(FindVariablesContainer),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(TComponent),TypeInfo(TComponent)],Addr(FindVariablesContainerInParent),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(TComponent),
TypeInfo(string),
TypeInfo(TDisplayFieldHTMLElementType),
TypeInfo(TDisplayFieldHTMLElementType),TypeInfo(Boolean)],Addr(CalcDisplayFieldHTMLElementType),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),[
TypeInfo(TComponent),
TypeInfo(string),
TypeInfo(TDisplayFieldViewMode),
TypeInfo(TDisplayFieldViewMode),TypeInfo(Boolean)],Addr(CalcDisplayFieldViewMode),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T4),[
TypeInfo(TComponent),TypeInfo(string)],Addr(GetAdapterModeOfAdapterInParent),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T5),[
TypeInfo(TComponent),TypeInfo(string)],Addr(MakeAdapterVariableName),cRegister);

RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T6),[
TypeInfo(string),TypeInfo(string)],Addr(MakeAdapterHTMLName),cRegister);

//RegRegisterMethod(TAbstractControlRequirements,'RequiresMultipartForm',TypeInfo(_T7),NoParams, pointer(0));
RegRegisterMethod(TAbstractControlRequirements,'RequiresMultipartForm',TypeInfo(_T7),NoParams,  getVMTProcAddr('TAbstractControlRequirements','RequiresMultipartForm',0));


//RegRegisterMethod(TAbstractControlRequirements,'IsFunctionDefined',TypeInfo(_T8),[TypeInfo(string),TypeInfo(Boolean)], pointer(4));
RegRegisterMethod(TAbstractControlRequirements,'IsFunctionDefined',TypeInfo(_T8),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TAbstractControlRequirements','IsFunctionDefined',4));


//RegRegisterMethod(TAbstractControlRequirements,'DefineFunction',TypeInfo(_T9),[TypeInfo(string),TypeInfo(string)], pointer(8));
RegRegisterMethod(TAbstractControlRequirements,'DefineFunction',TypeInfo(_T9),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TAbstractControlRequirements','DefineFunction',8));


//RegRegisterMethod(TAbstractControlRequirements,'DefineVariable',TypeInfo(_T10),[TypeInfo(string),TypeInfo(string),TypeInfo(Boolean)], pointer(12));
RegRegisterMethod(TAbstractControlRequirements,'DefineVariable',TypeInfo(_T10),[TypeInfo(string),TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TAbstractControlRequirements','DefineVariable',12));


//RegRegisterMethod(TAbstractControlRequirements,'IsVariableDefined',TypeInfo(_T11),[TypeInfo(string),TypeInfo(Boolean)], pointer(16));
RegRegisterMethod(TAbstractControlRequirements,'IsVariableDefined',TypeInfo(_T11),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TAbstractControlRequirements','IsVariableDefined',16));


//RegRegisterMethod(TAbstractFormRequirements,'IsFunctionDefined',TypeInfo(_T12),[TypeInfo(string),TypeInfo(Boolean)], pointer(0));
RegRegisterMethod(TAbstractFormRequirements,'IsFunctionDefined',TypeInfo(_T12),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TAbstractFormRequirements','IsFunctionDefined',0));


//RegRegisterMethod(TAbstractFormRequirements,'DefineFunction',TypeInfo(_T13),[TypeInfo(string),TypeInfo(string)], pointer(4));
RegRegisterMethod(TAbstractFormRequirements,'DefineFunction',TypeInfo(_T13),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TAbstractFormRequirements','DefineFunction',4));


//RegRegisterMethod(TAbstractFormRequirements,'IsVariableDefined',TypeInfo(_T14),[TypeInfo(string),TypeInfo(Boolean)], pointer(8));
RegRegisterMethod(TAbstractFormRequirements,'IsVariableDefined',TypeInfo(_T14),[TypeInfo(string),TypeInfo(Boolean)],  getVMTProcAddr('TAbstractFormRequirements','IsVariableDefined',8));


//RegRegisterMethod(TAbstractFormRequirements,'DefineVariable',TypeInfo(_T15),[TypeInfo(string),TypeInfo(string)], pointer(12));
RegRegisterMethod(TAbstractFormRequirements,'DefineVariable',TypeInfo(_T15),[TypeInfo(string),TypeInfo(string)],  getVMTProcAddr('TAbstractFormRequirements','DefineVariable',12));


RegisterProc(TAdapterActionsListHelper,'Create',mtConstructor,TypeInfo(_T16),[
TypeInfo(TComponent),
TypeInfo(TWebContainerComponentHelper)],Addr(TAdapterActionsListHelper.Create),cRegister);

//RegRegisterMethod(TAdapterControlGroup,'ImplGetControlRequirements',TypeInfo(_T17),[TypeInfo(TAbstractControlRequirements)], pointer(88));
RegRegisterMethod(TAdapterControlGroup,'ImplGetControlRequirements',TypeInfo(_T17),[TypeInfo(TAbstractControlRequirements)],  getVMTProcAddr('TAdapterControlGroup','ImplGetControlRequirements',88));


//RegRegisterMethod(TAdapterControlGroup,'AdapterChange',TypeInfo(_T18),NoParams, pointer(92));
RegRegisterMethod(TAdapterControlGroup,'AdapterChange',TypeInfo(_T18),NoParams,  getVMTProcAddr('TAdapterControlGroup','AdapterChange',92));


//RegRegisterMethod(TAdapterDataDisplay,'FieldConditions',TypeInfo(_T19),[TypeInfo(TWebContentOptions),TypeInfo(string)], pointer(100));
RegRegisterMethod(TAdapterDataDisplay,'FieldConditions',TypeInfo(_T19),[TypeInfo(TWebContentOptions),TypeInfo(string)],  getVMTProcAddr('TAdapterDataDisplay','FieldConditions',100));


//RegRegisterMethod(TAdapterDataDisplay,'ImplFormatColumnHeading',TypeInfo(_T20),[TypeInfo(TWebContentOptions),TypeInfo(string)], pointer(104));
RegRegisterMethod(TAdapterDataDisplay,'ImplFormatColumnHeading',TypeInfo(_T20),[TypeInfo(TWebContentOptions),TypeInfo(string)],  getVMTProcAddr('TAdapterDataDisplay','ImplFormatColumnHeading',104));


//RegRegisterMethod(TAdapterDataDisplay,'ImplFormatColumnData',TypeInfo(_T21),[TypeInfo(string),TypeInfo(TWebContentOptions),TypeInfo(string)], pointer(108));
RegRegisterMethod(TAdapterDataDisplay,'ImplFormatColumnData',TypeInfo(_T21),[TypeInfo(string),TypeInfo(TWebContentOptions),TypeInfo(string)],  getVMTProcAddr('TAdapterDataDisplay','ImplFormatColumnData',108));


//RegRegisterMethod(TAdapterDataDisplay,'ImplGetControlRequirements',TypeInfo(_T22),[TypeInfo(TAbstractControlRequirements)], pointer(112));
RegRegisterMethod(TAdapterDataDisplay,'ImplGetControlRequirements',TypeInfo(_T22),[TypeInfo(TAbstractControlRequirements)],  getVMTProcAddr('TAdapterDataDisplay','ImplGetControlRequirements',112));


//RegRegisterMethod(TAdapterDataDisplay,'ImplRestoreDefaults',TypeInfo(_T23),NoParams, pointer(116));
RegRegisterMethod(TAdapterDataDisplay,'ImplRestoreDefaults',TypeInfo(_T23),NoParams,  getVMTProcAddr('TAdapterDataDisplay','ImplRestoreDefaults',116));


//RegRegisterMethod(TAdapterDisplayReferenceGroup,'DisplayComponentChange',TypeInfo(_T24),NoParams, pointer(92));
RegRegisterMethod(TAdapterDisplayReferenceGroup,'DisplayComponentChange',TypeInfo(_T24),NoParams,  getVMTProcAddr('TAdapterDisplayReferenceGroup','DisplayComponentChange',92));


//RegRegisterMethod(TAdapterDisplayReferenceGroup,'AdapterChange',TypeInfo(_T25),NoParams, pointer(96));
RegRegisterMethod(TAdapterDisplayReferenceGroup,'AdapterChange',TypeInfo(_T25),NoParams,  getVMTProcAddr('TAdapterDisplayReferenceGroup','AdapterChange',96));


RegisterProc(TAdapterFormLayout,'Create',mtConstructor,TypeInfo(_T26),[
TypeInfo(TLayout)],Addr(TAdapterFormLayout.Create),cRegister);

RegRegisterMethod(TAdapterFormLayout,'EndLayout',TypeInfo(_T27),[TypeInfo(string)],Addr(TAdapterFormLayout.EndLayout));

RegisterProc(TControlRequirements,'Create',mtConstructor,TypeInfo(_T28),NoParams,Addr(TControlRequirements.Create),cRegister);

//RegRegisterMethod(TCustomAdapterActionButton,'ImplGetControlRequirements',TypeInfo(_T29),[TypeInfo(TAbstractControlRequirements)], pointer(72));
RegRegisterMethod(TCustomAdapterActionButton,'ImplGetControlRequirements',TypeInfo(_T29),[TypeInfo(TAbstractControlRequirements)],  getVMTProcAddr('TCustomAdapterActionButton','ImplGetControlRequirements',72));


//RegRegisterMethod(TCustomAdapterActionButton,'ImplRestoreDefaults',TypeInfo(_T30),NoParams, pointer(76));
RegRegisterMethod(TCustomAdapterActionButton,'ImplRestoreDefaults',TypeInfo(_T30),NoParams,  getVMTProcAddr('TCustomAdapterActionButton','ImplRestoreDefaults',76));


//RegRegisterMethod(TCustomAdapterErrorList,'ImplContent',TypeInfo(_T32),[TypeInfo(TWebContentOptions),TypeInfo(TLayout),TypeInfo(string)], pointer(56));
RegRegisterMethod(TCustomAdapterErrorList,'ImplContent',TypeInfo(_T32),[TypeInfo(TWebContentOptions),TypeInfo(TLayout),TypeInfo(string)],  getVMTProcAddr('TCustomAdapterErrorList','ImplContent',56));


RegisterProc(TDesigntimeWarnings,'Create',mtConstructor,TypeInfo(_T33),NoParams,Addr(TDesigntimeWarnings.Create),cRegister);

RegisterProc(TGeneratedFunctions,'Create',mtConstructor,TypeInfo(_T34),NoParams,Addr(TGeneratedFunctions.Create),cRegister);

RegRegisterMethod(TGeneratedFunctions,'Add',TypeInfo(_T35),[
TypeInfo(string),
TypeInfo(string)],Addr(TGeneratedFunctions.Add));

RegRegisterMethod(TGeneratedFunctions,'Exists',TypeInfo(_T36),[
TypeInfo(string),TypeInfo(Boolean)],Addr(TGeneratedFunctions.Exists));

end;
initialization
 vmtMethodList:=TStringList.Create;
vmtMethodList.sorted:=true;
vmtMethodList.duplicates:=dupIgnore;
fillVMTProcs;
__RegisteredMethods := TList.Create;
_mreg_0;
{RegRegisterMethod(TCustomAdapterDisplayColumn,'ImplCanAddClass',TypeInfo(_T31),[
TypeInfo(TComponent),
TypeInfo(TClass),TypeInfo(Boolean)], pointer(120))}

__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
vmtMethodList.free

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
