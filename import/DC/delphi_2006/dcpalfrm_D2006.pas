{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit dcpalfrm_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  Windows,
  Messages,
  SysUtils,
  Classes,
  Graphics,
  Controls,
  Forms,
  Dialogs,
  ComCtrls,
  dcpalet,
  dcgen,
  dccommon,
  dcsystem,
  dcconsts,
  Menus,
  dcdreamlib,
  dcstdctl,
  dcenvopt,
  DCPalette,
  dcPalettePropUnit,
  dcpalfrm;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function : TCompPalFrm of object;

_T1 = function : TDCCompPalette of object;

_T2 = procedure (p0 : TObject) of object;

_T3 = _T2;

_T4 = procedure (p0 : TObject;
var p1 : TCloseAction) of object;

_T5 = _T2;

function __DC__GetTCompPalFrm__UseActiveX(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := TCompPalFrm(Instance).UseActiveX;
end;

procedure __DC__SetTCompPalFrm__UseActiveX(Instance : TObject; Params : PVariantArgList);
begin
TCompPalFrm(Instance).UseActiveX:=OleVariant(Params^[0]);
end;

procedure __RegisterProps;
begin
RegisterProperty(TCompPalFrm,'UseActiveX',__DC__GetTCompPalFrm__UseActiveX,__DC__SetTCompPalFrm__UseActiveX);
end;

function __DC__Getdcpalfrm__CompPalFrm(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(dcpalfrm.CompPalFrm);
end;

procedure __DC__Setdcpalfrm__CompPalFrm(Instance : TObject; Params : PVariantArgList);
begin
TObject(dcpalfrm.CompPalFrm):=(VarToObject(OleVariant(Params^[0])));
end;

function __DC__Getdcpalfrm__PalMessageAnswer(Instance : TObject; Params : PVariantArgList) : OleVariant;
begin
result := VarFromObject(dcpalfrm.PalMessageAnswer);
end;

procedure __DC__Setdcpalfrm__PalMessageAnswer(Instance : TObject; Params : PVariantArgList);
begin
TObject(dcpalfrm.PalMessageAnswer):=(VarToObject(OleVariant(Params^[0])));
end;

var __RegisteredVars : TList;
procedure __RegisterVars;
begin
__RegisteredVars := TList.Create;
__RegisteredVars.Add(RegisterVar('CompPalFrm',__DC__Getdcpalfrm__CompPalFrm,__DC__Setdcpalfrm__CompPalFrm));
__RegisteredVars.Add(RegisterVar('PalMessageAnswer',__DC__Getdcpalfrm__PalMessageAnswer,__DC__Setdcpalfrm__PalMessageAnswer));
end;

procedure __UnregisterVars;
begin
__RegisteredVars.Free;
end;

procedure __RegisterConsts0;
begin
end;

procedure __UnregisterConsts0;
begin
end;

const ClassList : array[0..0] of TClass = (
TCompPalFrm
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..1] of string = (
'GetPalForm'
,'GetPalette'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[TypeInfo(TCompPalFrm)],Addr(GetPalForm),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[TypeInfo(TDCCompPalette)],Addr(GetPalette),cRegister);

RegRegisterMethod(TCompPalFrm,'FormCreate',TypeInfo(_T2),[
TypeInfo(TObject)],Addr(TCompPalFrm.FormCreate));

RegRegisterMethod(TCompPalFrm,'FormDestroy',TypeInfo(_T3),[
TypeInfo(TObject)],Addr(TCompPalFrm.FormDestroy));

RegRegisterMethod(TCompPalFrm,'FormClose',TypeInfo(_T4),[
TypeInfo(TObject),
TypeInfo(TCloseAction)],Addr(TCompPalFrm.FormClose));

RegRegisterMethod(TCompPalFrm,'Properties1Click',TypeInfo(_T5),[
TypeInfo(TObject)],Addr(TCompPalFrm.Properties1Click));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;
__RegisterVars;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnRegisterVars;
__UnregisterProcs;
end.
