{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IDASN1UTIL_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  classes,
  dcscript,
  dcsystem,
  dcdreamlib,
  SysUtils,
  IdASN1Util;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type
_T0 = function (p0 : Integer): string of object;

_T1 = function (var p0 : Integer;
const p1 : string): Integer of object;

_T2 = _T0;

_T3 = _T1;

_T4 = _T0;

_T5 = _T0;

_T6 = function (const p0 : string;
p1 : Integer): string of object;

_T7 = function (var p0 : Integer;
const p1 : string;
var p2 : Integer): string of object;

_T8 = function (p0 : string): string of object;

_T9 = function (const p0 : string): string of object;

_T10 = _T9;

procedure __RegisterProps;
begin
end;

const __ConstNames0 : array[0..9] of string = (
'ASN1_INT'
,'ASN1_OCTSTR'
,'ASN1_NULL'
,'ASN1_OBJID'
,'ASN1_SEQ'
,'ASN1_IPADDR'
,'ASN1_COUNTER'
,'ASN1_GAUGE'
,'ASN1_TIMETICKS'
,'ASN1_OPAQUE'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,ASN1_INT));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,ASN1_OCTSTR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,ASN1_NULL));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,ASN1_OBJID));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,ASN1_SEQ));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,ASN1_IPADDR));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,ASN1_COUNTER));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,ASN1_GAUGE));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[8] ,ASN1_TIMETICKS));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[9] ,ASN1_OPAQUE));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

procedure __RegisterClasses;
begin
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..10] of string = (
'ASNEncOIDItem'
,'ASNDecOIDItem'
,'ASNEncLen'
,'ASNDecLen'
,'ASNEncInt'
,'ASNEncUInt'
,'ASNObject'
,'ASNItem'
,'MibToId'
,'IdToMib'
,'IntMibToStr'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
RegisterProc(nil,MethodNames[0],mtProc,TypeInfo(_T0),[
TypeInfo(Integer),TypeInfo(string)],Addr(ASNEncOIDItem),cRegister);

RegisterProc(nil,MethodNames[1],mtProc,TypeInfo(_T1),[
TypeInfo(Integer),
TypeInfo(string),TypeInfo(Integer)],Addr(ASNDecOIDItem),cRegister);

RegisterProc(nil,MethodNames[2],mtProc,TypeInfo(_T2),[
TypeInfo(Integer),TypeInfo(string)],Addr(ASNEncLen),cRegister);

RegisterProc(nil,MethodNames[3],mtProc,TypeInfo(_T3),[
TypeInfo(Integer),
TypeInfo(string),TypeInfo(Integer)],Addr(ASNDecLen),cRegister);

RegisterProc(nil,MethodNames[4],mtProc,TypeInfo(_T4),[
TypeInfo(Integer),TypeInfo(string)],Addr(ASNEncInt),cRegister);

RegisterProc(nil,MethodNames[5],mtProc,TypeInfo(_T5),[
TypeInfo(Integer),TypeInfo(string)],Addr(ASNEncUInt),cRegister);

RegisterProc(nil,MethodNames[6],mtProc,TypeInfo(_T6),[
TypeInfo(string),
TypeInfo(Integer),TypeInfo(string)],Addr(ASNObject),cRegister);

RegisterProc(nil,MethodNames[7],mtProc,TypeInfo(_T7),[
TypeInfo(Integer),
TypeInfo(string),
TypeInfo(Integer),TypeInfo(string)],Addr(ASNItem),cRegister);

RegisterProc(nil,MethodNames[8],mtProc,TypeInfo(_T8),[
TypeInfo(string),TypeInfo(string)],Addr(MibToId),cRegister);

RegisterProc(nil,MethodNames[9],mtProc,TypeInfo(_T9),[
TypeInfo(string),TypeInfo(string)],Addr(IdToMib),cRegister);

RegisterProc(nil,MethodNames[10],mtProc,TypeInfo(_T10),[
TypeInfo(string),TypeInfo(string)],Addr(IntMibToStr),cRegister);

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
