{*******************************************************}
{                                                       }
{ Import  unit generated by UNITIMPORTER program         }
{                                                       }
{*******************************************************}

{} unit IDSOCKS_D2006;
interface
{$I dc.inc}
{$D-,L-,Y-}
{$HINTS OFF}
{$WARNINGS OFF}
uses
  activex,
  dcscript,
  dcsystem,
  dcdreamlib,
  Classes,
  IdAssignedNumbers,
  IdIOHandler,
  IdComponent,
  IdStack,
  IdSocks;
function ConvertTIdSocksRequestToVariant(var R : TIdSocksRequest) : OleVariant;
function ConvertVariantToTIdSocksRequest(const V : OleVariant) : TIdSocksRequest;
function ConvertTIdSocksResponseToVariant(var R : TIdSocksResponse) : OleVariant;
function ConvertVariantToTIdSocksResponse(const V : OleVariant) : TIdSocksResponse;
implementation
{$IFDEF D3}
{$ELSE}
uses ole2;
type
  OleVariant = Variant;
{$ENDIF}
type __TIdSocksRequest__Wrapper = class(TDCRecordWrapper)
private
fR : TIdSocksRequest;
public
function GetRecordPtr : pointer; override;
published
procedure setVersion(const val : Byte);
function getVersion : Byte;
property Version : Byte read getVersion write setVersion;
procedure setOpCode(const val : Byte);
function getOpCode : Byte;
property OpCode : Byte read getOpCode write setOpCode;
procedure setPort(const val : Word);
function getPort : Word;
property Port : Word read getPort write setPort;
end;
type __TIdSocksResponse__Wrapper = class(TDCRecordWrapper)
private
fR : TIdSocksResponse;
public
function GetRecordPtr : pointer; override;
published
procedure setVersion(const val : Byte);
function getVersion : Byte;
property Version : Byte read getVersion write setVersion;
procedure setOpCode(const val : Byte);
function getOpCode : Byte;
property OpCode : Byte read getOpCode write setOpCode;
procedure setPort(const val : Word);
function getPort : Word;
property Port : Word read getPort write setPort;
end;
type
_T0 = procedure (const p0 : string;
const p1 : Integer) of object;

_T1 = _T0;

_T2 = _T0;

function __TIdSocksRequest__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TIdSocksRequest__Wrapper.setVersion(const val : Byte);
begin
TIdSocksRequest(GetRecordPtr^).Version := val;
end;
function __TIdSocksRequest__Wrapper.getVersion : Byte;
begin
result := TIdSocksRequest(GetRecordPtr^).Version;
end;
procedure __TIdSocksRequest__Wrapper.setOpCode(const val : Byte);
begin
TIdSocksRequest(GetRecordPtr^).OpCode := val;
end;
function __TIdSocksRequest__Wrapper.getOpCode : Byte;
begin
result := TIdSocksRequest(GetRecordPtr^).OpCode;
end;
procedure __TIdSocksRequest__Wrapper.setPort(const val : Word);
begin
TIdSocksRequest(GetRecordPtr^).Port := val;
end;
function __TIdSocksRequest__Wrapper.getPort : Word;
begin
result := TIdSocksRequest(GetRecordPtr^).Port;
end;
function __TIdSocksResponse__Wrapper.GetRecordPtr : pointer;
begin
result := @fR;
end;
procedure __TIdSocksResponse__Wrapper.setVersion(const val : Byte);
begin
TIdSocksResponse(GetRecordPtr^).Version := val;
end;
function __TIdSocksResponse__Wrapper.getVersion : Byte;
begin
result := TIdSocksResponse(GetRecordPtr^).Version;
end;
procedure __TIdSocksResponse__Wrapper.setOpCode(const val : Byte);
begin
TIdSocksResponse(GetRecordPtr^).OpCode := val;
end;
function __TIdSocksResponse__Wrapper.getOpCode : Byte;
begin
result := TIdSocksResponse(GetRecordPtr^).OpCode;
end;
procedure __TIdSocksResponse__Wrapper.setPort(const val : Word);
begin
TIdSocksResponse(GetRecordPtr^).Port := val;
end;
function __TIdSocksResponse__Wrapper.getPort : Word;
begin
result := TIdSocksResponse(GetRecordPtr^).Port;
end;
function _TIdSocksRequest_ : IDispatch;
begin
  result := __TIdSocksRequest__Wrapper.Create;
end;
function _TIdSocksResponse_ : IDispatch;
begin
  result := __TIdSocksResponse__Wrapper.Create;
end;

type __TIdSocksRequest__Wrapper__ = class(__TIdSocksRequest__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TIdSocksRequest__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTIdSocksRequestToVariant(var R : TIdSocksRequest) : OleVariant;
var
__rw : __TIdSocksRequest__Wrapper__;
begin
__rw := __TIdSocksRequest__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTIdSocksRequest(const V : OleVariant) : TIdSocksRequest;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TIdSocksRequest((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;

type __TIdSocksResponse__Wrapper__ = class(__TIdSocksResponse__Wrapper)
private
fRPtr : pointer;
function GetRecordPtr : pointer; override;
end;
function __TIdSocksResponse__Wrapper__.GetRecordPtr : pointer;
begin
result := fRPtr;
end;
function ConvertTIdSocksResponseToVariant(var R : TIdSocksResponse) : OleVariant;
var
__rw : __TIdSocksResponse__Wrapper__;
begin
__rw := __TIdSocksResponse__Wrapper__.Create;
__rw.fRPtr := @R;
result := IDispatch(__rw);
end;
function ConvertVariantToTIdSocksResponse(const V : OleVariant) : TIdSocksResponse;
var
_idisp : IDispatch;
begin
_idisp := VarToInterface(v);
if _idisp = nil then exit;
result := TIdSocksResponse((_idisp as IDCRecordWrapper).GetRecordPtr^);
end;
procedure __DC__SetTIdSocksInfo__IOHandler(Instance : TObject; Params : PVariantArgList);
begin
TIdSocksInfo(Instance).IOHandler:=TIdIOHandler(VarToObject(OleVariant(Params^[0])));
end;

procedure __RegisterProps;
begin
RegisterProperty(TIdSocksInfo,'IOHandler',nil,__DC__SetTIdSocksInfo__IOHandler);
end;

const __ConstNames0 : array[0..7] of string = (
'svNoSocks'
,'svSocks4'
,'svSocks4A'
,'svSocks5'
,'saNoAuthentication'
,'saUsernamePassword'
,'ID_SOCKS_AUTH'
,'ID_SOCKS_VER'
);
var __RegisteredConstsList0 : TList;
procedure __RegisterConsts0;
begin
__RegisteredConstsList0 := TList.Create;
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[0] ,svNoSocks));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[1] ,svSocks4));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[2] ,svSocks4A));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[3] ,svSocks5));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[4] ,saNoAuthentication));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[5] ,saUsernamePassword));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[6] ,ID_SOCKS_AUTH));
__RegisteredConstsList0.Add(RegisterConst(__ConstNames0[7] ,ID_SOCKS_VER));
end;

procedure __UnregisterConsts0;
var i : integer;
begin
__RegisteredConstsList0.Free
end;

const ClassList : array[0..0] of TClass = (
TIdSocksInfo
);
procedure __RegisterClasses;
begin
RegisterClassesInScript(ClassList);
end;

procedure __UnRegisterClasses;
begin
end;

var __RegisteredMethods : TList;
const MethodNames : array[0..1] of string = (
'TIdSocksRequest'
,'TIdSocksResponse'
);

procedure __UnregisterProcs;
var i : integer;
begin
__RegisteredMethods.Free;
end;

procedure _mreg_0;
begin
__RegisteredMethods.Add(RegisterRWProc(MethodNames[0],Addr(_TIdSocksRequest_)));
__RegisteredMethods.Add(RegisterRWProc(MethodNames[1],Addr(_TIdSocksResponse_)));
RegRegisterMethod(TIdSocksInfo,'MakeSocksConnection',TypeInfo(_T0),[
TypeInfo(string),
TypeInfo(Integer)],Addr(TIdSocksInfo.MakeSocksConnection));

RegRegisterMethod(TIdSocksInfo,'MakeSocks4Connection',TypeInfo(_T1),[
TypeInfo(string),
TypeInfo(Integer)],Addr(TIdSocksInfo.MakeSocks4Connection));

RegRegisterMethod(TIdSocksInfo,'MakeSocks5Connection',TypeInfo(_T2),[
TypeInfo(string),
TypeInfo(Integer)],Addr(TIdSocksInfo.MakeSocks5Connection));

end;
initialization
__RegisteredMethods := TList.Create;
_mreg_0;
__RegisterClasses;
__RegisterConsts0;
__RegisterProps;

finalization
__UnRegisterClasses;
__UnregisterConsts0;
__UnregisterProcs;
end.
